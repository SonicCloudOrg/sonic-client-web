{"version":3,"file":"RelatedIssue.test.js","sourceRoot":"","sources":["../../../../../../front_end/models/issues_manager/RelatedIssue.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport {StubIssue} from '../../testing/StubIssue.js';\nimport * as IssuesManager from '../issues_manager/issues_manager.js';\n\ndescribe('issuesAssociatedWith', () => {\n  const requestId1 = 'r0' as Protocol.Network.RequestId;\n  const requestId2 = 'r1' as Protocol.Network.RequestId;\n\n  it('should return no issues if no issues exist', () => {\n    const request = SDK.NetworkRequest.NetworkRequest.create(\n        requestId1, Platform.DevToolsPath.EmptyUrlString, Platform.DevToolsPath.EmptyUrlString, null, null, null);\n    assert.strictEqual(IssuesManager.RelatedIssue.issuesAssociatedWith([], request).length, 0);\n  });\n\n  it('should return no issues if issues dont affect any resources', () => {\n    const issue = new StubIssue('code', [], []);\n    const request = SDK.NetworkRequest.NetworkRequest.create(\n        requestId1, Platform.DevToolsPath.EmptyUrlString, Platform.DevToolsPath.EmptyUrlString, null, null, null);\n\n    assert.strictEqual(IssuesManager.RelatedIssue.issuesAssociatedWith([issue], request).length, 0);\n  });\n\n  it('should correctly filter issues associated with a given request id', () => {\n    const issue1 = StubIssue.createFromRequestIds([requestId1, requestId2]);\n    const issue2 = StubIssue.createFromRequestIds([requestId1]);\n    const issues = [issue1, issue2];\n\n    const request1 = SDK.NetworkRequest.NetworkRequest.create(\n        requestId1, Platform.DevToolsPath.EmptyUrlString, Platform.DevToolsPath.EmptyUrlString, null, null, null);\n    const request2 = SDK.NetworkRequest.NetworkRequest.create(\n        requestId2, Platform.DevToolsPath.EmptyUrlString, Platform.DevToolsPath.EmptyUrlString, null, null, null);\n\n    assert.deepStrictEqual(IssuesManager.RelatedIssue.issuesAssociatedWith(issues, request1), issues);\n    assert.deepStrictEqual(IssuesManager.RelatedIssue.issuesAssociatedWith(issues, request2), [issue1]);\n  });\n\n  function createTestCookie(name: string): SDK.Cookie.Cookie {\n    const cookie = new SDK.Cookie.Cookie(name, '');\n    cookie.addAttribute(SDK.Cookie.Attribute.Domain, '');\n    cookie.addAttribute(SDK.Cookie.Attribute.Path, '');\n    return cookie;\n  }\n\n  it('should correctly filter issues associated with a cookie', () => {\n    const issue1 = StubIssue.createFromCookieNames(['c1', 'c2']);\n    const issue2 = StubIssue.createFromCookieNames(['c3']);\n    const issue3 = StubIssue.createFromCookieNames(['c1']);\n    const issues = [issue1, issue2, issue3];\n\n    const cookie1 = createTestCookie('c1');\n    const cookie2 = createTestCookie('c2');\n    const cookie3 = createTestCookie('c3');\n\n    assert.deepStrictEqual(IssuesManager.RelatedIssue.issuesAssociatedWith(issues, cookie1), [issue1, issue3]);\n    assert.deepStrictEqual(IssuesManager.RelatedIssue.issuesAssociatedWith(issues, cookie2), [issue1]);\n    assert.deepStrictEqual(IssuesManager.RelatedIssue.issuesAssociatedWith(issues, cookie3), [issue2]);\n  });\n});\n"]}