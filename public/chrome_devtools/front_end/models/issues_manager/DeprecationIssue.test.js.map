{"version":3,"file":"DeprecationIssue.test.js","sourceRoot":"","sources":["../../../../../../front_end/models/issues_manager/DeprecationIssue.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport * as Issues from '../../panels/issues/issues.js';\nimport {describeWithLocale} from '../../testing/EnvironmentHelpers.js';\nimport {MockIssuesManager} from '../../testing/MockIssuesManager.js';\nimport {MockIssuesModel} from '../../testing/MockIssuesModel.js';\nimport * as IssuesManager from '../issues_manager/issues_manager.js';\n\ndescribeWithLocale('DeprecationIssue', () => {\n  const mockModel = new MockIssuesModel([]) as unknown as SDK.IssuesModel.IssuesModel;\n  const mockManager = new MockIssuesManager([]) as unknown as IssuesManager.IssuesManager.IssuesManager;\n\n  function createDeprecationIssue(type: string): IssuesManager.DeprecationIssue.DeprecationIssue {\n    return new IssuesManager.DeprecationIssue.DeprecationIssue(\n        {\n          sourceCodeLocation: {\n            url: 'empty.html',\n            lineNumber: 1,\n            columnNumber: 1,\n          },\n          type,\n        },\n        mockModel);\n  }\n\n  function createDeprecationIssueDetails(type: string): Protocol.Audits.InspectorIssue {\n    return {\n      code: Protocol.Audits.InspectorIssueCode.DeprecationIssue,\n      details: {\n        deprecationIssueDetails: {\n          sourceCodeLocation: {\n            url: 'empty.html',\n            lineNumber: 1,\n            columnNumber: 1,\n          },\n          type,\n        },\n      },\n    };\n  }\n\n  it('normal deprecation issue works', () => {\n    const details = createDeprecationIssueDetails('DeprecationExample');\n    const issue = IssuesManager.DeprecationIssue.DeprecationIssue.fromInspectorIssue(mockModel, details);\n    assert.isNotEmpty(issue);\n  });\n\n  it('aggregates issues with the same type', () => {\n    const issues = [\n      createDeprecationIssue('DeprecationExample'),\n      createDeprecationIssue('DeprecationExample'),\n    ];\n    const aggregator = new Issues.IssueAggregator.IssueAggregator(mockManager);\n    for (const issue of issues) {\n      mockManager.dispatchEventToListeners(\n          IssuesManager.IssuesManager.Events.IssueAdded, {issuesModel: mockModel, issue});\n    }\n    const aggregatedIssues = Array.from(aggregator.aggregatedIssues());\n    assert.strictEqual(aggregatedIssues.length, 1);\n    const deprecationIssues = Array.from(aggregatedIssues[0].getDeprecationIssues());\n    assert.strictEqual(deprecationIssues.length, 2);\n  });\n\n  it('does not aggregate issues with different types', () => {\n    const issues = [\n      createDeprecationIssue('DeprecationExample'),\n      createDeprecationIssue('CrossOriginWindowAlert'),\n    ];\n    const aggregator = new Issues.IssueAggregator.IssueAggregator(mockManager);\n    for (const issue of issues) {\n      mockManager.dispatchEventToListeners(\n          IssuesManager.IssuesManager.Events.IssueAdded, {issuesModel: mockModel, issue});\n    }\n    const aggregatedIssues = Array.from(aggregator.aggregatedIssues());\n    assert.strictEqual(aggregatedIssues.length, 2);\n  });\n});\n"]}