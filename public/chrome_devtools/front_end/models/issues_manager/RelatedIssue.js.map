{"version":3,"file":"RelatedIssue.js","sourceRoot":"","sources":["../../../../../../front_end/models/issues_manager/RelatedIssue.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as SDK from '../../core/sdk/sdk.js';\n\nimport {CookieIssue, CookieIssueSubCategory} from './CookieIssue.js';\nimport {type Issue, type IssueCategory} from './Issue.js';\nimport {IssuesManager} from './IssuesManager.js';\n\nexport type IssuesAssociatable = Readonly<SDK.NetworkRequest.NetworkRequest>|SDK.Cookie.Cookie|string;\n\nfunction issuesAssociatedWithNetworkRequest(issues: Issue[], request: SDK.NetworkRequest.NetworkRequest): Issue[] {\n  return issues.filter(issue => {\n    for (const affectedRequest of issue.requests()) {\n      if (affectedRequest.requestId === request.requestId()) {\n        return true;\n      }\n    }\n    return false;\n  });\n}\n\nfunction issuesAssociatedWithCookie(issues: Issue[], domain: string, name: string, path: string): Issue[] {\n  return issues.filter(issue => {\n    for (const cookie of issue.cookies()) {\n      if (cookie.domain === domain && cookie.name === name && cookie.path === path) {\n        return true;\n      }\n    }\n    return false;\n  });\n}\n\n/**\n * @throws In case obj has an unsupported type (i.e. not part of the IssuesAssociatble union).\n */\nexport function issuesAssociatedWith(issues: Issue[], obj: IssuesAssociatable): Issue[] {\n  if (obj instanceof SDK.NetworkRequest.NetworkRequest) {\n    return issuesAssociatedWithNetworkRequest(issues, obj);\n  }\n  if (obj instanceof SDK.Cookie.Cookie) {\n    return issuesAssociatedWithCookie(issues, obj.domain(), obj.name(), obj.path());\n  }\n  throw new Error(`issues can not be associated with ${JSON.stringify(obj)}`);\n}\n\nexport function hasIssues(obj: IssuesAssociatable): boolean {\n  const issues = Array.from(IssuesManager.instance().issues());\n  return issuesAssociatedWith(issues, obj).length > 0;\n}\n\nexport function hasIssueOfCategory(obj: IssuesAssociatable, category: IssueCategory): boolean {\n  const issues = Array.from(IssuesManager.instance().issues());\n  return issuesAssociatedWith(issues, obj).some(issue => issue.getCategory() === category);\n}\n\nexport function hasThirdPartyPhaseoutCookieIssue(obj: IssuesAssociatable): boolean {\n  const issues = Array.from(IssuesManager.instance().issues());\n  return issuesAssociatedWith(issues, obj)\n      .some(issue => CookieIssue.getSubCategory(issue.code()) === CookieIssueSubCategory.ThirdPartyPhaseoutCookie);\n}\n\nexport function hasThirdPartyPhaseoutCookieIssueForDomain(domain: string): boolean {\n  const issues = Array.from(IssuesManager.instance().issues());\n  const issuesForDomain = issues.filter(issue => Array.from(issue.cookies()).some(cookie => cookie.domain === domain));\n  return issuesForDomain.some(\n      issue => CookieIssue.getSubCategory(issue.code()) === CookieIssueSubCategory.ThirdPartyPhaseoutCookie);\n}\n\nexport async function reveal(obj: IssuesAssociatable, category?: IssueCategory): Promise<void|undefined> {\n  if (typeof obj === 'string') {\n    const issue = IssuesManager.instance().getIssueById(obj);\n    if (issue) {\n      return Common.Revealer.reveal(issue);\n    }\n  }\n  const issues = Array.from(IssuesManager.instance().issues());\n  const candidates = issuesAssociatedWith(issues, obj).filter(issue => !category || issue.getCategory() === category);\n  if (candidates.length > 0) {\n    return Common.Revealer.reveal(candidates[0]);\n  }\n}\n"]}