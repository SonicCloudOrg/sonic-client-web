{"version":3,"file":"SourceFrameIssuesManager.js","sourceRoot":"","sources":["../../../../../../front_end/models/issues_manager/SourceFrameIssuesManager.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as Bindings from '../../models/bindings/bindings.js';\nimport * as Workspace from '../../models/workspace/workspace.js';\n\nimport {\n  ContentSecurityPolicyIssue,\n  trustedTypesPolicyViolationCode,\n  trustedTypesSinkViolationCode,\n} from './ContentSecurityPolicyIssue.js';\nimport {type Issue, type IssueKind, toZeroBasedLocation} from './Issue.js';\nimport {type IssueAddedEvent, type IssuesManager} from './IssuesManager.js';\nimport {Events} from './IssuesManagerEvents.js';\nimport {getIssueTitleFromMarkdownDescription} from './MarkdownIssueDescription.js';\nimport {PropertyRuleIssue} from './PropertyRuleIssue.js';\nimport {lateImportStylesheetLoadingCode, type StylesheetLoadingIssue} from './StylesheetLoadingIssue.js';\n\nexport class SourceFrameIssuesManager {\n  #sourceFrameMessageManager = new Bindings.PresentationConsoleMessageHelper.PresentationSourceFrameMessageManager();\n  constructor(private readonly issuesManager: IssuesManager) {\n    this.issuesManager.addEventListener(Events.IssueAdded, this.#onIssueAdded, this);\n    this.issuesManager.addEventListener(Events.FullUpdateRequired, this.#onFullUpdateRequired, this);\n  }\n\n  #onIssueAdded(event: Common.EventTarget.EventTargetEvent<IssueAddedEvent>): void {\n    const {issue} = event.data;\n    void this.#addIssue(issue);\n  }\n\n  async #addIssue(issue: Issue): Promise<void> {\n    if (!this.#isTrustedTypeIssue(issue) && !this.#isLateImportIssue(issue) && !this.#isPropertyRuleIssue(issue)) {\n      return;\n    }\n    const issuesModel = issue.model();\n    if (!issuesModel) {\n      return;\n    }\n    const srcLocation = toZeroBasedLocation(issue.details().sourceCodeLocation);\n    const description = issue.getDescription();\n    if (!description || !srcLocation) {\n      return;\n    }\n    const messageText = await getIssueTitleFromMarkdownDescription(description);\n    if (!messageText) {\n      return;\n    }\n    const clickHandler = (): void => {\n      void Common.Revealer.reveal(issue);\n    };\n    this.#sourceFrameMessageManager.addMessage(\n        new IssueMessage(messageText, issue.getKind(), clickHandler), {\n          line: srcLocation.lineNumber,\n          column: srcLocation.columnNumber ?? -1,\n          url: srcLocation.url,\n          scriptId: srcLocation.scriptId,\n        },\n        issuesModel.target());\n  }\n\n  #onFullUpdateRequired(): void {\n    this.#resetMessages();\n    const issues = this.issuesManager.issues();\n    for (const issue of issues) {\n      void this.#addIssue(issue);\n    }\n  }\n\n  #isTrustedTypeIssue(issue: Issue): issue is ContentSecurityPolicyIssue {\n    return issue instanceof ContentSecurityPolicyIssue && issue.code() === trustedTypesSinkViolationCode ||\n        issue.code() === trustedTypesPolicyViolationCode;\n  }\n\n  #isPropertyRuleIssue(issue: Issue): issue is PropertyRuleIssue {\n    return issue instanceof PropertyRuleIssue;\n  }\n\n  #isLateImportIssue(issue: Issue): issue is StylesheetLoadingIssue {\n    return issue.code() === lateImportStylesheetLoadingCode;\n  }\n\n  #resetMessages(): void {\n    this.#sourceFrameMessageManager.clear();\n  }\n}\n\nexport class IssueMessage extends Workspace.UISourceCode.Message {\n  #kind: IssueKind;\n  constructor(title: string, kind: IssueKind, clickHandler: () => void) {\n    super(Workspace.UISourceCode.Message.Level.Issue, title, clickHandler);\n    this.#kind = kind;\n  }\n\n  getIssueKind(): IssueKind {\n    return this.#kind;\n  }\n}\n"]}