{"version":3,"file":"Log.js","sourceRoot":"","sources":["../../../../../../front_end/models/har/Log.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2012 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n// See http://www.softwareishard.com/blog/har-12-spec/\n// for HAR specification.\n\n// FIXME: Some fields are not yet supported due to back-end limitations.\n// See https://bugs.webkit.org/show_bug.cgi?id=58127 for details.\n\nimport * as Common from '../../core/common/common.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as Protocol from '../../generated/protocol.js';\n\nexport class Log {\n  static pseudoWallTime(request: SDK.NetworkRequest.NetworkRequest, monotonicTime: number): Date {\n    return new Date(request.pseudoWallTime(monotonicTime) * 1000);\n  }\n\n  static async build(requests: SDK.NetworkRequest.NetworkRequest[]): Promise<LogDTO> {\n    const log = new Log();\n    const entryPromises = [];\n    for (const request of requests) {\n      entryPromises.push(Entry.build(request));\n    }\n    const entries = await Promise.all(entryPromises);\n    return {version: '1.2', creator: log.creator(), pages: log.buildPages(requests), entries};\n  }\n\n  private creator(): Creator {\n    const webKitVersion = /AppleWebKit\\/([^ ]+)/.exec(window.navigator.userAgent);\n\n    return {name: 'WebInspector', version: webKitVersion ? webKitVersion[1] : 'n/a'};\n  }\n\n  private buildPages(requests: SDK.NetworkRequest.NetworkRequest[]): Page[] {\n    const seenIdentifiers = new Set<number>();\n    const pages = [];\n    for (let i = 0; i < requests.length; ++i) {\n      const request = requests[i];\n      const page = SDK.PageLoad.PageLoad.forRequest(request);\n      if (!page || seenIdentifiers.has(page.id)) {\n        continue;\n      }\n      seenIdentifiers.add(page.id);\n      pages.push(this.convertPage(page, request));\n    }\n    return pages;\n  }\n\n  private convertPage(page: SDK.PageLoad.PageLoad, request: SDK.NetworkRequest.NetworkRequest): Page {\n    return {\n      startedDateTime: Log.pseudoWallTime(request, page.startTime).toJSON(),\n      id: 'page_' + page.id,\n      title: page.url,\n      pageTimings: {\n        onContentLoad: this.pageEventTime(page, page.contentLoadTime),\n        onLoad: this.pageEventTime(page, page.loadTime),\n      },\n    };\n  }\n\n  private pageEventTime(page: SDK.PageLoad.PageLoad, time: number): number {\n    const startTime = page.startTime;\n    if (time === -1 || startTime === -1) {\n      return -1;\n    }\n    return Entry.toMilliseconds(time - startTime);\n  }\n}\n\nexport class Entry {\n  private request: SDK.NetworkRequest.NetworkRequest;\n  constructor(request: SDK.NetworkRequest.NetworkRequest) {\n    this.request = request;\n  }\n\n  static toMilliseconds(time: number): number {\n    return time === -1 ? -1 : time * 1000;\n  }\n\n  static async build(request: SDK.NetworkRequest.NetworkRequest): Promise<EntryDTO> {\n    const harEntry = new Entry(request);\n    let ipAddress = harEntry.request.remoteAddress();\n    const portPositionInString = ipAddress.lastIndexOf(':');\n    if (portPositionInString !== -1) {\n      ipAddress = ipAddress.substr(0, portPositionInString);\n    }\n\n    const timings = harEntry.buildTimings();\n    let time = 0;\n    // \"ssl\" is included in the connect field, so do not double count it.\n    for (const t of [timings.blocked, timings.dns, timings.connect, timings.send, timings.wait, timings.receive]) {\n      time += Math.max(t, 0);\n    }\n\n    const initiator = harEntry.request.initiator();\n    let exportedInitiator: Protocol.Network.Initiator|null = null;\n    if (initiator) {\n      exportedInitiator = {\n        type: initiator.type,\n      };\n      if (initiator.url !== undefined) {\n        exportedInitiator.url = initiator.url;\n      }\n      if (initiator.requestId !== undefined) {\n        exportedInitiator.requestId = initiator.requestId;\n      }\n      if (initiator.lineNumber !== undefined) {\n        exportedInitiator.lineNumber = initiator.lineNumber;\n      }\n      if (initiator.stack) {\n        exportedInitiator.stack = initiator.stack;\n      }\n    }\n\n    const entry: EntryDTO = {\n      _fromCache: undefined,\n      _initiator: exportedInitiator,\n      _priority: harEntry.request.priority(),\n      _resourceType: harEntry.request.resourceType().name(),\n      _webSocketMessages: undefined,\n      cache: {},\n      connection: undefined,\n      pageref: undefined,\n      request: await harEntry.buildRequest(),\n      response: harEntry.buildResponse(),\n      // IPv6 address should not have square brackets per (https://tools.ietf.org/html/rfc2373#section-2.2).\n      serverIPAddress: ipAddress.replace(/\\[\\]/g, ''),\n      startedDateTime: Log.pseudoWallTime(harEntry.request, harEntry.request.issueTime()).toJSON(),\n      time: time,\n      timings: timings,\n    };\n\n    // Chrome specific.\n\n    if (harEntry.request.cached()) {\n      entry._fromCache = harEntry.request.cachedInMemory() ? 'memory' : 'disk';\n    } else {\n      delete entry._fromCache;\n    }\n\n    if (harEntry.request.connectionId !== '0') {\n      entry.connection = harEntry.request.connectionId;\n    } else {\n      delete entry.connection;\n    }\n\n    const page = SDK.PageLoad.PageLoad.forRequest(harEntry.request);\n    if (page) {\n      entry.pageref = 'page_' + page.id;\n    } else {\n      delete entry.pageref;\n    }\n\n    if (harEntry.request.resourceType() === Common.ResourceType.resourceTypes.WebSocket) {\n      const messages = [];\n      for (const message of harEntry.request.frames()) {\n        messages.push({type: message.type, time: message.time, opcode: message.opCode, data: message.text});\n      }\n      entry._webSocketMessages = messages;\n    } else {\n      delete entry._webSocketMessages;\n    }\n\n    return entry;\n  }\n\n  private async buildRequest(): Promise<Request> {\n    const headersText = this.request.requestHeadersText();\n    const res: Request = {\n      method: this.request.requestMethod,\n      url: this.buildRequestURL(this.request.url()),\n      httpVersion: this.request.requestHttpVersion(),\n      headers: this.request.requestHeaders(),\n      queryString: this.buildParameters(this.request.queryParameters || []),\n      cookies: this.buildCookies(\n          this.request.includedRequestCookies().map(includedRequestCookie => includedRequestCookie.cookie)),\n      headersSize: headersText ? headersText.length : -1,\n      bodySize: await this.requestBodySize(),\n      postData: undefined,\n    };\n    const postData = await this.buildPostData();\n    if (postData) {\n      res.postData = postData;\n    } else {\n      delete res.postData;\n    }\n\n    return res;\n  }\n\n  private buildResponse(): Response {\n    const headersText = this.request.responseHeadersText;\n    return {\n      status: this.request.statusCode,\n      statusText: this.request.statusText,\n      httpVersion: this.request.responseHttpVersion(),\n      headers: this.request.responseHeaders,\n      cookies: this.buildCookies(this.request.responseCookies),\n      content: this.buildContent(),\n      redirectURL: this.request.responseHeaderValue('Location') || '',\n      headersSize: headersText ? headersText.length : -1,\n      bodySize: this.responseBodySize,\n      _transferSize: this.request.transferSize,\n      _error: this.request.localizedFailDescription,\n      _fetchedViaServiceWorker: this.request.fetchedViaServiceWorker,\n      _responseCacheStorageCacheName: this.request.getResponseCacheStorageCacheName(),\n      _serviceWorkerResponseSource: this.request.serviceWorkerResponseSource(),\n    };\n  }\n\n  private buildContent(): Content {\n    const content = ({\n      size: this.request.resourceSize,\n      mimeType: this.request.mimeType || 'x-unknown',\n      compression: undefined,\n    } as Content);\n    const compression = this.responseCompression;\n    if (typeof compression === 'number') {\n      content.compression = compression;\n    } else {\n      delete content.compression;\n    }\n    return content;\n  }\n\n  private buildTimings(): Timing {\n    // Order of events: request_start = 0, [proxy], [dns], [connect [ssl]], [send], duration\n    const timing = this.request.timing;\n    const issueTime = this.request.issueTime();\n    const startTime = this.request.startTime;\n\n    const result: Timing = {\n      blocked: -1,\n      dns: -1,\n      ssl: -1,\n      connect: -1,\n      send: 0,\n      wait: 0,\n      receive: 0,\n      _blocked_queueing: -1,\n      _blocked_proxy: undefined,\n    };\n\n    const queuedTime = (issueTime < startTime) ? startTime - issueTime : -1;\n    result.blocked = Entry.toMilliseconds(queuedTime);\n    result._blocked_queueing = Entry.toMilliseconds(queuedTime);\n\n    let highestTime = 0;\n    if (timing) {\n      // \"blocked\" here represents both queued + blocked/stalled + proxy (ie: anything before request was started).\n      // We pick the better of when the network request start was reported and pref timing.\n      const blockedStart = leastNonNegative([timing.dnsStart, timing.connectStart, timing.sendStart]);\n      if (blockedStart !== Infinity) {\n        result.blocked += blockedStart;\n      }\n\n      // Proxy is part of blocked but sometimes (like quic) blocked is -1 but has proxy timings.\n      if (timing.proxyEnd !== -1) {\n        result._blocked_proxy = timing.proxyEnd - timing.proxyStart;\n      }\n      if (result._blocked_proxy && result._blocked_proxy > result.blocked) {\n        result.blocked = result._blocked_proxy;\n      }\n\n      const dnsStart = timing.dnsEnd >= 0 ? blockedStart : 0;\n      const dnsEnd = timing.dnsEnd >= 0 ? timing.dnsEnd : -1;\n      result.dns = dnsEnd - dnsStart;\n\n      // SSL timing is included in connection timing.\n      const sslStart = timing.sslEnd > 0 ? timing.sslStart : 0;\n      const sslEnd = timing.sslEnd > 0 ? timing.sslEnd : -1;\n      result.ssl = sslEnd - sslStart;\n\n      const connectStart = timing.connectEnd >= 0 ? leastNonNegative([dnsEnd, blockedStart]) : 0;\n      const connectEnd = timing.connectEnd >= 0 ? timing.connectEnd : -1;\n      result.connect = connectEnd - connectStart;\n\n      // Send should not be -1 for legacy reasons even if it is served from cache.\n      const sendStart = timing.sendEnd >= 0 ? Math.max(connectEnd, dnsEnd, blockedStart) : 0;\n      const sendEnd = timing.sendEnd >= 0 ? timing.sendEnd : 0;\n      result.send = sendEnd - sendStart;\n      // Quic sometimes says that sendStart is before connectionEnd (see: crbug.com/740792)\n      if (result.send < 0) {\n        result.send = 0;\n      }\n      highestTime = Math.max(sendEnd, connectEnd, sslEnd, dnsEnd, blockedStart, 0);\n\n      // Custom fields for service worker timings.\n      result._workerStart = timing.workerStart;\n      result._workerReady = timing.workerReady;\n      result._workerFetchStart = timing.workerFetchStart;\n      result._workerRespondWithSettled = timing.workerRespondWithSettled;\n    } else if (this.request.responseReceivedTime === -1) {\n      // Means that we don't have any more details after blocked, so attribute all to blocked.\n      result.blocked = Entry.toMilliseconds(this.request.endTime - issueTime);\n      return result;\n    }\n\n    const requestTime = timing ? timing.requestTime : startTime;\n    const waitStart = highestTime;\n    const waitEnd = Entry.toMilliseconds(this.request.responseReceivedTime - requestTime);\n    result.wait = waitEnd - waitStart;\n\n    const receiveStart = waitEnd;\n    const receiveEnd = Entry.toMilliseconds(this.request.endTime - requestTime);\n    result.receive = Math.max(receiveEnd - receiveStart, 0);\n\n    return result;\n\n    function leastNonNegative(values: number[]): number {\n      return values.reduce((best, value) => (value >= 0 && value < best) ? value : best, Infinity);\n    }\n  }\n\n  private async buildPostData(): Promise<PostData|null> {\n    const postData = await this.request.requestFormData();\n    if (!postData) {\n      return null;\n    }\n    const res: PostData = {mimeType: this.request.requestContentType() || '', text: postData, params: undefined};\n    const formParameters = await this.request.formParameters();\n    if (formParameters) {\n      res.params = this.buildParameters(formParameters);\n    } else {\n      delete res.params;\n    }\n    return res;\n  }\n\n  private buildParameters(parameters: Parameter[]): Parameter[] {\n    return parameters.slice();\n  }\n\n  private buildRequestURL(url: Platform.DevToolsPath.UrlString): Platform.DevToolsPath.UrlString {\n    return Common.ParsedURL.ParsedURL.split(url, '#', 2)[0];\n  }\n\n  private buildCookies(cookies: SDK.Cookie.Cookie[]): CookieDTO[] {\n    return cookies.map(this.buildCookie.bind(this));\n  }\n\n  private buildCookie(cookie: SDK.Cookie.Cookie): CookieDTO {\n    const c: CookieDTO = {\n      name: cookie.name(),\n      value: cookie.value(),\n      path: cookie.path(),\n      domain: cookie.domain(),\n      expires: cookie.expiresDate(Log.pseudoWallTime(this.request, this.request.startTime)),\n      httpOnly: cookie.httpOnly(),\n      secure: cookie.secure(),\n      sameSite: undefined,\n      partitionKey: undefined,\n    };\n    if (cookie.sameSite()) {\n      c.sameSite = cookie.sameSite();\n    } else {\n      delete c.sameSite;\n    }\n    if (cookie.partitionKey()) {\n      c.partitionKey = cookie.partitionKey();\n    } else {\n      delete c.partitionKey;\n    }\n    return c;\n  }\n\n  private async requestBodySize(): Promise<number> {\n    const postData = await this.request.requestFormData();\n    if (!postData) {\n      return 0;\n    }\n\n    // As per the har spec, returns the length in bytes of the posted data.\n    // TODO(jarhar): This will be wrong if the underlying encoding is not UTF-8. SDK.NetworkRequest.NetworkRequest.requestFormData is\n    //   assumed to be UTF-8 because the backend decodes post data to a UTF-8 string regardless of the provided\n    //   content-type/charset in InspectorNetworkAgent::FormDataToString\n    return new TextEncoder().encode(postData).length;\n  }\n\n  get responseBodySize(): number {\n    if (this.request.cached() || this.request.statusCode === 304) {\n      return 0;\n    }\n    if (!this.request.responseHeadersText) {\n      return -1;\n    }\n    return this.request.transferSize - this.request.responseHeadersText.length;\n  }\n\n  get responseCompression(): number|undefined {\n    if (this.request.cached() || this.request.statusCode === 304 || this.request.statusCode === 206) {\n      return;\n    }\n    if (!this.request.responseHeadersText) {\n      return;\n    }\n    return this.request.resourceSize - this.responseBodySize;\n  }\n}\n\nexport interface Timing {\n  blocked: number;\n  dns: number;\n  ssl: number;\n  connect: number;\n  send: number;\n  wait: number;\n  receive: number;\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  _blocked_queueing: number;\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  _blocked_proxy?: number;\n\n  // Custom fields for service workers.\n  _workerStart?: number;\n  _workerReady?: number;\n  _workerFetchStart?: number;\n  _workerRespondWithSettled?: number;\n}\n\nexport interface Parameter {\n  name: string;\n  value: string;\n}\n\nexport interface Content {\n  size: number;\n  mimeType: string;\n  compression?: number;\n  text?: string;\n  encoding?: string;\n}\n\nexport interface Request {\n  method: string;\n  url: Platform.DevToolsPath.UrlString;\n  httpVersion: string;\n  headers: Object;\n  queryString: Parameter[];\n  cookies: CookieDTO[];\n  headersSize: number;\n  bodySize: number;\n  postData?: PostData;\n}\n\nexport interface Response {\n  status: number;\n  statusText: string;\n  httpVersion: string;\n  headers: Object;\n  cookies: CookieDTO[];\n  content: Content;\n  redirectURL: string;\n  headersSize: number;\n  bodySize: number;\n  _transferSize: number;\n  _error: string|null;\n  _fetchedViaServiceWorker: boolean;\n  _responseCacheStorageCacheName: string|undefined;\n  _serviceWorkerResponseSource: Protocol.Network.ServiceWorkerResponseSource|undefined;\n}\n\nexport interface EntryDTO {\n  _fromCache?: string;\n  _initiator: Protocol.Network.Initiator|null;\n  _priority: Protocol.Network.ResourcePriority|null;\n  _resourceType: string;\n  _webSocketMessages?: Object[];\n  cache: Object;\n  connection?: string;\n  pageref?: string;\n  request: Request;\n  response: Response;\n  serverIPAddress: string;\n  startedDateTime: string|Object;\n  time: number;\n  timings: Timing;\n}\n\nexport interface PostData {\n  mimeType: string;\n  params?: Parameter[];\n  text: string;\n}\n\nexport interface CookieDTO {\n  name: string;\n  value: string;\n  path: string;\n  domain: string;\n  expires: Date|null;\n  httpOnly: boolean;\n  secure: boolean;\n  sameSite?: Protocol.Network.CookieSameSite;\n  partitionKey?: Protocol.Network.CookiePartitionKey;\n}\n\nexport interface Page {\n  startedDateTime: string|Object;\n  id: string;\n  title: string;\n  pageTimings: {\n    onContentLoad: number,\n    onLoad: number,\n  };\n}\n\nexport interface Creator {\n  version: string;\n  name: string;\n}\n\nexport interface LogDTO {\n  version: string;\n  creator: Creator;\n  pages: Page[];\n  entries: EntryDTO[];\n}\n"]}