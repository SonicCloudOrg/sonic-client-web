{"version":3,"file":"TracingLayerTree.js","sourceRoot":"","sources":["../../../../../../front_end/models/timeline_model/TracingLayerTree.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2016 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable @typescript-eslint/naming-convention */\n\nimport * as Common from '../../core/common/common.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport type * as TraceEngine from '../trace/trace.js';\n\nexport class TracingLayerTree extends SDK.LayerTreeBase.LayerTreeBase {\n  private tileById: Map<string, TracingLayerTile>;\n  private paintProfilerModel: SDK.PaintProfiler.PaintProfilerModel|null;\n\n  constructor(target: SDK.Target.Target|null) {\n    super(target);\n    this.tileById = new Map();\n    this.paintProfilerModel = target && target.model(SDK.PaintProfiler.PaintProfilerModel);\n  }\n\n  async setLayers(\n      root: TracingLayerPayload|null, layers: TracingLayerPayload[]|null,\n      paints: TraceEngine.Handlers.ModelHandlers.Frames.LayerPaintEvent[]): Promise<void> {\n    const idsToResolve = new Set<Protocol.DOM.BackendNodeId>();\n    if (root) {\n      // This is a legacy code path for compatibility, as cc is removing\n      // layer tree hierarchy, this code will eventually be removed.\n      this.extractNodeIdsToResolve(idsToResolve, {}, root);\n    } else if (layers) {\n      for (let i = 0; i < layers.length; ++i) {\n        this.extractNodeIdsToResolve(idsToResolve, {}, layers[i]);\n      }\n    }\n\n    await this.resolveBackendNodeIds(idsToResolve);\n\n    const oldLayersById = this.layersById;\n    this.layersById = new Map();\n    this.setContentRoot(null);\n    if (root) {\n      const convertedLayers = this.innerSetLayers(oldLayersById, root);\n      this.setRoot(convertedLayers);\n    } else if (layers) {\n      const processedLayers = layers.map(this.innerSetLayers.bind(this, oldLayersById));\n      const contentRoot = this.contentRoot();\n      if (!contentRoot) {\n        throw new Error('Content root is not set.');\n      }\n      this.setRoot(contentRoot);\n      for (let i = 0; i < processedLayers.length; ++i) {\n        if (processedLayers[i].id() !== contentRoot.id()) {\n          contentRoot.addChild(processedLayers[i]);\n        }\n      }\n    }\n    this.setPaints(paints);\n  }\n\n  setTiles(tiles: TracingLayerTile[]): void {\n    this.tileById = new Map();\n    for (const tile of tiles) {\n      this.tileById.set(tile.id, tile);\n    }\n  }\n\n  pictureForRasterTile(tileId: string): Promise<SDK.PaintProfiler.SnapshotWithRect|null> {\n    const tile = this.tileById.get('cc::Tile/' + tileId);\n    if (!tile) {\n      Common.Console.Console.instance().error(`Tile ${tileId} is missing`);\n      return Promise.resolve(null) as Promise<SDK.PaintProfiler.SnapshotWithRect|null>;\n    }\n    const layer = (this.layerById(tile.layer_id) as TracingLayer | null);\n    if (!layer) {\n      Common.Console.Console.instance().error(`Layer ${tile.layer_id} for tile ${tileId} is not found`);\n      return Promise.resolve(null) as Promise<SDK.PaintProfiler.SnapshotWithRect|null>;\n    }\n    return layer.pictureForRect(tile.content_rect);\n  }\n\n  private setPaints(paints: TraceEngine.Handlers.ModelHandlers.Frames.LayerPaintEvent[]): void {\n    for (let i = 0; i < paints.length; ++i) {\n      const layer = (this.layersById.get(paints[i].layerId()) as TracingLayer | null);\n      if (layer) {\n        layer.addPaintEvent(paints[i]);\n      }\n    }\n  }\n\n  private innerSetLayers(oldLayersById: Map<string|number, SDK.LayerTreeBase.Layer>, payload: TracingLayerPayload):\n      TracingLayer {\n    let layer = (oldLayersById.get(payload.layer_id) as TracingLayer | null);\n    if (layer) {\n      layer.reset(payload);\n    } else {\n      layer = new TracingLayer(this.paintProfilerModel, payload);\n    }\n    this.layersById.set(payload.layer_id, layer);\n    if (payload.owner_node) {\n      layer.setNode(this.backendNodeIdToNode().get(payload.owner_node) || null);\n    }\n    if (!this.contentRoot() && layer.drawsContent()) {\n      this.setContentRoot(layer);\n    }\n    for (let i = 0; payload.children && i < payload.children.length; ++i) {\n      layer.addChild(this.innerSetLayers(oldLayersById, payload.children[i]));\n    }\n    return layer;\n  }\n\n  private extractNodeIdsToResolve(\n      nodeIdsToResolve: Set<Protocol.DOM.BackendNodeId>, seenNodeIds: Object, payload: TracingLayerPayload): void {\n    const backendNodeId = payload.owner_node;\n    if (backendNodeId && !this.backendNodeIdToNode().has(backendNodeId)) {\n      nodeIdsToResolve.add(backendNodeId);\n    }\n    for (let i = 0; payload.children && i < payload.children.length; ++i) {\n      this.extractNodeIdsToResolve(nodeIdsToResolve, seenNodeIds, payload.children[i]);\n    }\n  }\n}\nexport class TracingFrameLayerTree {\n  readonly #target: SDK.Target.Target|null;\n  readonly #snapshot: TraceEngine.Types.TraceEvents.TraceEventLayerTreeHostImplSnapshot;\n  readonly #paints: TraceEngine.Handlers.ModelHandlers.Frames.LayerPaintEvent[] = [];\n\n  constructor(target: SDK.Target.Target|null, data: TraceEngine.Handlers.ModelHandlers.Frames.FrameLayerTreeData) {\n    this.#target = target;\n    this.#snapshot = data.entry;\n    this.#paints = data.paints;\n  }\n\n  async layerTreePromise(): Promise<TracingLayerTree|null> {\n    const data = this.#snapshot.args.snapshot;\n    const viewport = data['device_viewport_size'];\n    const tiles = data['active_tiles'];\n    const rootLayer = data['active_tree']['root_layer'];\n    const layers = data['active_tree']['layers'];\n    const layerTree = new TracingLayerTree(this.#target);\n    layerTree.setViewportSize(viewport);\n    layerTree.setTiles(tiles);\n    await layerTree.setLayers(rootLayer, layers, this.#paints || []);\n    return layerTree;\n  }\n\n  paints(): TraceEngine.Handlers.ModelHandlers.Frames.LayerPaintEvent[] {\n    return this.#paints;\n  }\n}\n\nexport class TracingLayer implements SDK.LayerTreeBase.Layer {\n  private parentLayerId: string|null;\n  private parentInternal: SDK.LayerTreeBase.Layer|null;\n  private layerId: string;\n  private nodeInternal: SDK.DOMModel.DOMNode|null;\n  private offsetXInternal: number;\n  private offsetYInternal: number;\n  private widthInternal: number;\n  private heightInternal: number;\n  private childrenInternal: SDK.LayerTreeBase.Layer[];\n  private quadInternal: number[];\n  private scrollRectsInternal: Protocol.LayerTree.ScrollRect[];\n  private gpuMemoryUsageInternal: number;\n  private paints: TraceEngine.Handlers.ModelHandlers.Frames.LayerPaintEvent[];\n  private compositingReasons: string[];\n  private compositingReasonIds: string[];\n  private drawsContentInternal: boolean;\n  private paintProfilerModel: SDK.PaintProfiler.PaintProfilerModel|null;\n  constructor(paintProfilerModel: SDK.PaintProfiler.PaintProfilerModel|null, payload: TracingLayerPayload) {\n    this.parentLayerId = null;\n    this.parentInternal = null;\n    this.layerId = '';\n    this.nodeInternal = null;\n    this.offsetXInternal = -1;\n    this.offsetYInternal = -1;\n    this.widthInternal = -1;\n    this.heightInternal = -1;\n    this.childrenInternal = [];\n    this.quadInternal = [];\n    this.scrollRectsInternal = [];\n    this.gpuMemoryUsageInternal = -1;\n    this.paints = [];\n    this.compositingReasons = [];\n    this.compositingReasonIds = [];\n    this.drawsContentInternal = false;\n\n    this.paintProfilerModel = paintProfilerModel;\n    this.reset(payload);\n  }\n\n  reset(payload: TracingLayerPayload): void {\n    this.nodeInternal = null;\n    this.layerId = String(payload.layer_id);\n    this.offsetXInternal = payload.position[0];\n    this.offsetYInternal = payload.position[1];\n    this.widthInternal = payload.bounds.width;\n    this.heightInternal = payload.bounds.height;\n    this.childrenInternal = [];\n    this.parentLayerId = null;\n    this.parentInternal = null;\n    this.quadInternal = payload.layer_quad || [];\n    this.createScrollRects(payload);\n\n    this.compositingReasons = payload.compositing_reasons || [];\n    this.compositingReasonIds = payload.compositing_reason_ids || [];\n    this.drawsContentInternal = Boolean(payload.draws_content);\n    this.gpuMemoryUsageInternal = payload.gpu_memory_usage;\n    this.paints = [];\n  }\n\n  id(): string {\n    return this.layerId;\n  }\n\n  parentId(): string|null {\n    return this.parentLayerId;\n  }\n\n  parent(): SDK.LayerTreeBase.Layer|null {\n    return this.parentInternal;\n  }\n\n  isRoot(): boolean {\n    return !this.parentId();\n  }\n\n  children(): SDK.LayerTreeBase.Layer[] {\n    return this.childrenInternal;\n  }\n\n  addChild(childParam: SDK.LayerTreeBase.Layer): void {\n    const child = (childParam as TracingLayer);\n    if (child.parentInternal) {\n      console.assert(false, 'Child already has a parent');\n    }\n    this.childrenInternal.push(child);\n    child.parentInternal = this;\n    child.parentLayerId = this.layerId;\n  }\n\n  setNode(node: SDK.DOMModel.DOMNode|null): void {\n    this.nodeInternal = node;\n  }\n\n  node(): SDK.DOMModel.DOMNode|null {\n    return this.nodeInternal;\n  }\n\n  nodeForSelfOrAncestor(): SDK.DOMModel.DOMNode|null {\n    let layer: (SDK.LayerTreeBase.Layer|null)|this = this;\n    for (; layer; layer = layer.parent()) {\n      if (layer.node()) {\n        return layer.node();\n      }\n    }\n    return null;\n  }\n\n  offsetX(): number {\n    return this.offsetXInternal;\n  }\n\n  offsetY(): number {\n    return this.offsetYInternal;\n  }\n\n  width(): number {\n    return this.widthInternal;\n  }\n\n  height(): number {\n    return this.heightInternal;\n  }\n\n  transform(): number[]|null {\n    return null;\n  }\n\n  quad(): number[] {\n    return this.quadInternal;\n  }\n\n  anchorPoint(): number[] {\n    return [0.5, 0.5, 0];\n  }\n\n  invisible(): boolean {\n    return false;\n  }\n\n  paintCount(): number {\n    return 0;\n  }\n\n  lastPaintRect(): Protocol.DOM.Rect|null {\n    return null;\n  }\n\n  scrollRects(): Protocol.LayerTree.ScrollRect[] {\n    return this.scrollRectsInternal;\n  }\n\n  stickyPositionConstraint(): SDK.LayerTreeBase.StickyPositionConstraint|null {\n    // TODO(smcgruer): Provide sticky layer information in traces.\n    return null;\n  }\n\n  gpuMemoryUsage(): number {\n    return this.gpuMemoryUsageInternal;\n  }\n\n  snapshots(): Promise<SDK.PaintProfiler.SnapshotWithRect|null>[] {\n    return this.paints.map(async paint => {\n      if (!this.paintProfilerModel) {\n        return null;\n      }\n\n      const snapshot = await getPaintProfilerSnapshot(\n          this.paintProfilerModel,\n          paint,\n      );\n      if (!snapshot) {\n        return null;\n      }\n      const rect = {x: snapshot.rect[0], y: snapshot.rect[1], width: snapshot.rect[2], height: snapshot.rect[3]};\n      return {rect: rect, snapshot: snapshot.snapshot};\n    });\n  }\n\n  async pictureForRect(targetRect: number[]): Promise<SDK.PaintProfiler.SnapshotWithRect|null> {\n    return Promise.all(this.paints.map(paint => paint.picture())).then(pictures => {\n      const filteredPictures = (pictures.filter(picture => picture && rectsOverlap(picture.rect, targetRect)) as {\n        rect: Array<number>,\n        serializedPicture: string,\n      }[]);\n\n      const fragments = filteredPictures.map(\n          picture => ({x: picture.rect[0], y: picture.rect[1], picture: picture.serializedPicture}));\n\n      if (!fragments.length || !this.paintProfilerModel) {\n        return null;\n      }\n      const x0 = fragments.reduce((min, item) => Math.min(min, item.x), Infinity);\n      const y0 = fragments.reduce((min, item) => Math.min(min, item.y), Infinity);\n      // Rect is in layer content coordinates, make it relative to picture by offsetting to the top left corner.\n      const rect = {x: targetRect[0] - x0, y: targetRect[1] - y0, width: targetRect[2], height: targetRect[3]};\n      return this.paintProfilerModel.loadSnapshotFromFragments(fragments).then(\n          snapshot => snapshot ? {rect: rect, snapshot: snapshot} : null);\n    });\n\n    function segmentsOverlap(a1: number, a2: number, b1: number, b2: number): boolean {\n      console.assert(a1 <= a2 && b1 <= b2, 'segments should be specified as ordered pairs');\n      return a2 > b1 && a1 < b2;\n    }\n\n    function rectsOverlap(a: number[], b: number[]): boolean {\n      return segmentsOverlap(a[0], a[0] + a[2], b[0], b[0] + b[2]) &&\n          segmentsOverlap(a[1], a[1] + a[3], b[1], b[1] + b[3]);\n    }\n  }\n\n  private scrollRectsFromParams(params: number[], type: Protocol.LayerTree.ScrollRectType):\n      Protocol.LayerTree.ScrollRect {\n    return {rect: {x: params[0], y: params[1], width: params[2], height: params[3]}, type: type};\n  }\n\n  private createScrollRects(payload: TracingLayerPayload): void {\n    const nonPayloadScrollRects: Protocol.LayerTree.ScrollRect[] = [];\n    if (payload.non_fast_scrollable_region) {\n      nonPayloadScrollRects.push(this.scrollRectsFromParams(\n          payload.non_fast_scrollable_region, 'NonFastScrollable' as Protocol.LayerTree.ScrollRectType));\n    }\n    if (payload.touch_event_handler_region) {\n      nonPayloadScrollRects.push(this.scrollRectsFromParams(\n          payload.touch_event_handler_region, Protocol.LayerTree.ScrollRectType.TouchEventHandler));\n    }\n    if (payload.wheel_event_handler_region) {\n      nonPayloadScrollRects.push(this.scrollRectsFromParams(\n          payload.wheel_event_handler_region, Protocol.LayerTree.ScrollRectType.WheelEventHandler));\n    }\n    if (payload.scroll_event_handler_region) {\n      nonPayloadScrollRects.push(this.scrollRectsFromParams(\n          payload.scroll_event_handler_region, Protocol.LayerTree.ScrollRectType.RepaintsOnScroll));\n    }\n\n    // SDK.LayerBaseTree.Layer.ScrollRectType and Protocol.LayerTree.ScrollRectType are the\n    // same type, but we need to use the indirection of the nonPayloadScrollRects since\n    // the ScrollRectType is defined as a string in SDK.LayerBaseTree.Layer.ScrollRectType.\n    this.scrollRectsInternal = nonPayloadScrollRects;\n  }\n\n  addPaintEvent(paint: TraceEngine.Handlers.ModelHandlers.Frames.LayerPaintEvent): void {\n    this.paints.push(paint);\n  }\n\n  requestCompositingReasons(): Promise<string[]> {\n    return Promise.resolve(this.compositingReasons);\n  }\n\n  requestCompositingReasonIds(): Promise<string[]> {\n    return Promise.resolve(this.compositingReasonIds);\n  }\n\n  drawsContent(): boolean {\n    return this.drawsContentInternal;\n  }\n}\n\nexport interface TracingLayerPayload {\n  bounds: {height: number, width: number};\n  children: TracingLayerPayload[];\n  layer_id: number;\n  position: number[];\n  scroll_offset: number[];\n  layer_quad: number[];\n  draws_content: number;\n  gpu_memory_usage: number;\n  transform: number[];\n  owner_node: Protocol.DOM.BackendNodeId;\n  compositing_reasons: string[];\n  compositing_reason_ids: string[];\n  non_fast_scrollable_region: number[];\n  touch_event_handler_region: number[];\n  wheel_event_handler_region: number[];\n  scroll_event_handler_region: number[];\n}\n\nexport interface TracingLayerTile {\n  id: string;\n  layer_id: string;\n  gpu_memory_usage: number;\n  content_rect: number[];\n}\n\nasync function getPaintProfilerSnapshot(\n    paintProfilerModel: SDK.PaintProfiler.PaintProfilerModel,\n    paint: TraceEngine.Handlers.ModelHandlers.Frames.LayerPaintEvent): Promise<{\n  rect: number[],\n  snapshot: SDK.PaintProfiler.PaintProfilerSnapshot,\n}|null> {\n  const picture = paint.picture();\n  if (!picture || !paintProfilerModel) {\n    return null;\n  }\n  const snapshot = await paintProfilerModel.loadSnapshot(picture.serializedPicture);\n  return snapshot ? {rect: picture.rect, snapshot: snapshot} : null;\n}\n"]}