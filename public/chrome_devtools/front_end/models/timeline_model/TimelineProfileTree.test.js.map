{"version":3,"file":"TimelineProfileTree.test.js","sourceRoot":"","sources":["../../../../../../front_end/models/timeline_model/TimelineProfileTree.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Protocol from '../../generated/protocol.js';\nimport * as Timeline from '../../panels/timeline/timeline.js';\nimport {describeWithEnvironment} from '../../testing/EnvironmentHelpers.js';\nimport {\n  getMainThread,\n  makeCompleteEvent,\n  makeProfileCall,\n} from '../../testing/TraceHelpers.js';\nimport {TraceLoader} from '../../testing/TraceLoader.js';\nimport * as TimelineModel from '../timeline_model/timeline_model.js';\nimport * as TraceEngine from '../trace/trace.js';\n\ndescribeWithEnvironment('TimelineProfileTree', () => {\n  describe('TopDownRootNode', () => {\n    it('builds the root node and its children properly from an event tree', () => {\n      // This builds the following tree:\n      // |------------------ROOT---------------------------|\n      // |-----A----| |-----B-----| |----------C---------|\n      const eventA = makeCompleteEvent('Event A', 0, 40_000);\n      const eventB = makeCompleteEvent('Event B', 50_000, 50_000);\n      const eventC = makeCompleteEvent('Event C', 150_000, 100_000);\n      const events = [\n        eventA,\n        eventB,\n        eventC,\n      ];\n      const root = new TimelineModel.TimelineProfileTree.TopDownRootNode(\n          events, [], TraceEngine.Types.Timing.MilliSeconds(0), TraceEngine.Types.Timing.MilliSeconds(200_000));\n\n      const children = root.children();\n      assert.strictEqual(children.size, 3);\n\n      const nodesIterator = children.values();\n      assert.strictEqual(nodesIterator.next().value.event, eventA);\n      assert.strictEqual(nodesIterator.next().value.event, eventB);\n      assert.strictEqual(nodesIterator.next().value.event, eventC);\n    });\n\n    it('builds a top-down tree from an event tree with multiple levels 1', () => {\n      // This builds the following tree:\n      // |------------ROOT-----------|\n      // |-----A----| |-----B-----|\n      // |-C-| |-D-|\n      const eventA = makeCompleteEvent('Event A', 0, 40_000);\n      const eventC = makeCompleteEvent('Event C', 0, 10_000);\n      const eventD = makeCompleteEvent('Event D', 10_000, 10_000);\n      const eventB = makeCompleteEvent('Event B', 50_000, 50_000);\n      // Events must be in order.\n      const events = [\n        eventA,\n        eventC,\n        eventD,\n        eventB,\n      ];\n      const root = new TimelineModel.TimelineProfileTree.TopDownRootNode(\n          events, [], TraceEngine.Types.Timing.MilliSeconds(0), TraceEngine.Types.Timing.MilliSeconds(200_000));\n\n      const rootChildren = root.children();\n      assert.strictEqual(rootChildren.size, 2);\n\n      const rootChildIterator = rootChildren.values();\n      const nodeA = rootChildIterator.next().value as TimelineModel.TimelineProfileTree.TopDownNode;\n      assert.strictEqual(nodeA.event, eventA);\n      assert.strictEqual(rootChildIterator.next().value.event, eventB);\n\n      const nodeAChildren = nodeA.children();\n      assert.strictEqual(nodeAChildren.size, 2);\n\n      const nodeAChildIterator = nodeAChildren.values();\n      assert.strictEqual(nodeAChildIterator.next().value.event, eventC);\n      assert.strictEqual(nodeAChildIterator.next().value.event, eventD);\n    });\n\n    it('builds a top-down tree from an event tree with multiple levels 2', () => {\n      // This builds the following tree:\n      // |------------ROOT-----------|\n      // |-----A----| |-----B-----|\n      //               |-C-| |-D-|\n      const eventA = makeCompleteEvent('Event A', 0, 40_000);\n      const eventB = makeCompleteEvent('Event B', 50_000, 50_000);\n      const eventC = makeCompleteEvent('Event C', 50_000, 10_000);\n      const eventD = makeCompleteEvent('Event D', 60_000, 10_000);\n      // Events must be in order.\n      const events = [\n        eventA,\n        eventB,\n        eventC,\n        eventD,\n      ];\n      const root = new TimelineModel.TimelineProfileTree.TopDownRootNode(\n          events, [], TraceEngine.Types.Timing.MilliSeconds(0), TraceEngine.Types.Timing.MilliSeconds(200_000));\n\n      const rootChildren = root.children();\n      assert.strictEqual(rootChildren.size, 2);\n\n      const rootChildIterator = rootChildren.values();\n      assert.strictEqual(rootChildIterator.next().value.event, eventA);\n      const nodeB = rootChildIterator.next().value as TimelineModel.TimelineProfileTree.TopDownNode;\n      assert.strictEqual(nodeB.event, eventB);\n\n      const nodeBChildren = nodeB.children();\n      assert.strictEqual(nodeBChildren.size, 2);\n\n      const nodeBChildIterator = nodeBChildren.values();\n      assert.strictEqual(nodeBChildIterator.next().value.event, eventC);\n      assert.strictEqual(nodeBChildIterator.next().value.event, eventD);\n    });\n\n    it('calculates the self time for each node in an event tree correctly', () => {\n      // This builds the following tree:\n      // |------------ROOT-----------|\n      // |-----A----| |-------B------|\n      //               |-C-| |--D--|\n      //                     |-E-|\n      const eventA = makeCompleteEvent('Event A', 0, 40_000);\n      const eventB = makeCompleteEvent('Event B', 50_000, 50_000);\n      const eventC = makeCompleteEvent('Event C', 50_000, 10_000);\n      const eventD = makeCompleteEvent('Event D', 60_000, 10_000);\n      const eventE = makeCompleteEvent('Event E', 60_000, 5_000);\n      // Events must be in order.\n      const events = [\n        eventA,\n        eventB,\n        eventC,\n        eventD,\n        eventE,\n      ];\n      const root = new TimelineModel.TimelineProfileTree.TopDownRootNode(\n          events, [], TraceEngine.Types.Timing.MilliSeconds(0), TraceEngine.Types.Timing.MilliSeconds(200_000));\n\n      const rootChildren = root.children();\n      assert.strictEqual(rootChildren.size, 2);\n\n      const rootChildIterator = rootChildren.values();\n      assert.strictEqual(\n          rootChildIterator.next().value.selfTime, TraceEngine.Helpers.Timing.microSecondsToMilliseconds(eventA.dur));\n\n      const nodeB = rootChildIterator.next().value as TimelineModel.TimelineProfileTree.TopDownNode;\n      const nodeBSelfTime = TraceEngine.Types.Timing.MicroSeconds(eventB.dur - eventC.dur - eventD.dur);\n      assert.strictEqual(nodeB.selfTime, TraceEngine.Helpers.Timing.microSecondsToMilliseconds(nodeBSelfTime));\n\n      const nodeBChildren = nodeB.children();\n      assert.strictEqual(nodeBChildren.size, 2);\n\n      const nodeBChildIterator = nodeBChildren.values();\n      assert.strictEqual(\n          nodeBChildIterator.next().value.selfTime, TraceEngine.Helpers.Timing.microSecondsToMilliseconds(eventC.dur));\n\n      const nodeD = nodeBChildIterator.next().value;\n      const nodeDSelfTime = TraceEngine.Types.Timing.MicroSeconds(eventD.dur - eventE.dur);\n      assert.strictEqual(nodeD.selfTime, TraceEngine.Helpers.Timing.microSecondsToMilliseconds(nodeDSelfTime));\n\n      const nodeDChildren = nodeD.children();\n      assert.strictEqual(nodeDChildren.size, 1);\n\n      const nodeDChildIterator = nodeDChildren.values();\n      const nodeE = nodeDChildIterator.next().value;\n      assert.strictEqual(nodeE.selfTime, TraceEngine.Helpers.Timing.microSecondsToMilliseconds(eventE.dur));\n    });\n  });\n\n  describe('BottomUpRootNode', () => {\n    it('builds the root node and its children properly from an event tree', () => {\n      // This builds the following tree:\n      // |------------------ROOT---------------------------|\n      // |-----A----| |-----B-----| |----------C---------|\n      const eventA = makeCompleteEvent('Event A', 0, 40_000);\n      const eventB = makeCompleteEvent('Event B', 50_000, 50_000);\n      const eventC = makeCompleteEvent('Event C', 150_000, 100_000);\n      const events = [\n        eventA,\n        eventB,\n        eventC,\n      ];\n      const root = new TimelineModel.TimelineProfileTree.TopDownRootNode(\n          events, [], TraceEngine.Types.Timing.MilliSeconds(0), TraceEngine.Types.Timing.MilliSeconds(200_000));\n\n      const children = root.children();\n      assert.strictEqual(children.size, 3);\n\n      const nodesIterator = children.values();\n      assert.strictEqual(nodesIterator.next().value.event, eventA);\n      assert.strictEqual(nodesIterator.next().value.event, eventB);\n      assert.strictEqual(nodesIterator.next().value.event, eventC);\n    });\n\n    it('builds a bottom up tree from an event tree with multiple levels 1', () => {\n      // This builds the following tree:\n      // |------------ROOT-----------|\n      // |-C-||-D-|\n      // |-----A----| |-----B-----|\n      const eventA = makeCompleteEvent('Event A', 0, 40_000);\n      const eventC = makeCompleteEvent('Event C', 0, 10_000);\n      const eventD = makeCompleteEvent('Event D', 10_000, 10_000);\n      const eventB = makeCompleteEvent('Event B', 50_000, 50_000);\n      // Events must be in order.\n      const events = [\n        eventA,\n        eventC,\n        eventD,\n        eventB,\n      ];\n      const root = new TimelineModel.TimelineProfileTree.BottomUpRootNode(\n          events, new TimelineModel.TimelineModelFilter.TimelineInvisibleEventsFilter([]), [],\n          TraceEngine.Types.Timing.MilliSeconds(0), TraceEngine.Types.Timing.MilliSeconds(200_000), null);\n      const rootChildren = root.children();\n      assert.strictEqual(rootChildren.size, 4);\n\n      const rootChildIterator = rootChildren.values();\n\n      const nodeC = rootChildIterator.next().value as TimelineModel.TimelineProfileTree.TopDownNode;\n      assert.strictEqual(nodeC.event, eventC);\n\n      const nodeD = rootChildIterator.next().value as TimelineModel.TimelineProfileTree.TopDownNode;\n      assert.strictEqual(nodeD.event, eventD);\n\n      const nodeA = rootChildIterator.next().value as TimelineModel.TimelineProfileTree.TopDownNode;\n      assert.strictEqual(nodeA.event, eventA);\n\n      const nodeB = rootChildIterator.next().value as TimelineModel.TimelineProfileTree.TopDownNode;\n      assert.strictEqual(nodeB.event, eventB);\n\n      const nodeCChildren = nodeC.children();\n      assert.strictEqual(nodeCChildren.size, 1);\n      const nodeCChildIterator = nodeCChildren.values();\n      assert.strictEqual(nodeCChildIterator.next().value.event, eventA);\n\n      const nodeDChildren = nodeC.children();\n      assert.strictEqual(nodeDChildren.size, 1);\n      const nodeDChildIterator = nodeDChildren.values();\n      assert.strictEqual(nodeDChildIterator.next().value.event, eventA);\n\n      const nodeAChildren = nodeA.children();\n      assert.strictEqual(nodeAChildren.size, 0);\n\n      const nodeBChildren = nodeB.children();\n      assert.strictEqual(nodeBChildren.size, 0);\n    });\n\n    it('builds a tree from an event tree with multiple levels 2', () => {\n      // This builds the following tree:\n      // |------------ROOT-----------|\n      //              |-C-||-D-|\n      // |-----A----| |-----B-----|\n      const eventA = makeCompleteEvent('Event A', 0, 40_000);\n      const eventB = makeCompleteEvent('Event B', 50_000, 50_000);\n      const eventC = makeCompleteEvent('Event C', 50_000, 10_000);\n      const eventD = makeCompleteEvent('Event D', 60_000, 10_000);\n      // Events must be in order.\n      const events = [\n        eventA,\n        eventB,\n        eventC,\n        eventD,\n      ];\n\n      const root = new TimelineModel.TimelineProfileTree.BottomUpRootNode(\n          events, new TimelineModel.TimelineModelFilter.TimelineInvisibleEventsFilter([]), [],\n          TraceEngine.Types.Timing.MilliSeconds(0), TraceEngine.Types.Timing.MilliSeconds(200_000), null);\n      const rootChildren = root.children();\n      assert.strictEqual(rootChildren.size, 4);\n\n      const rootChildIterator = rootChildren.values();\n\n      const nodeA = rootChildIterator.next().value as TimelineModel.TimelineProfileTree.TopDownNode;\n      assert.strictEqual(nodeA.event, eventA);\n\n      const nodeC = rootChildIterator.next().value as TimelineModel.TimelineProfileTree.TopDownNode;\n      assert.strictEqual(nodeC.event, eventC);\n\n      const nodeD = rootChildIterator.next().value as TimelineModel.TimelineProfileTree.TopDownNode;\n      assert.strictEqual(nodeD.event, eventD);\n\n      const nodeB = rootChildIterator.next().value as TimelineModel.TimelineProfileTree.TopDownNode;\n      assert.strictEqual(nodeB.event, eventB);\n\n      const nodeCChildren = nodeC.children();\n      assert.strictEqual(nodeCChildren.size, 1);\n      const nodeCChildIterator = nodeCChildren.values();\n      assert.strictEqual(nodeCChildIterator.next().value.event, eventB);\n\n      const nodeDChildren = nodeC.children();\n      assert.strictEqual(nodeDChildren.size, 1);\n      const nodeDChildIterator = nodeDChildren.values();\n      assert.strictEqual(nodeDChildIterator.next().value.event, eventB);\n\n      const nodeAChildren = nodeA.children();\n      assert.strictEqual(nodeAChildren.size, 0);\n\n      const nodeBChildren = nodeB.children();\n      assert.strictEqual(nodeBChildren.size, 0);\n    });\n\n    it('calculates the self time for each node in an event tree correctly', () => {\n      // This builds the following tree:\n      // |------------ROOT-----------|\n      //                   |-E-|\n      //              |-C-||--D--|\n      // |-----A----| |-------B------|\n      const eventA = makeCompleteEvent('Event A', 0, 40_000);\n      const eventB = makeCompleteEvent('Event B', 50_000, 50_000);\n      const eventC = makeCompleteEvent('Event C', 50_000, 10_000);\n      const eventD = makeCompleteEvent('Event D', 60_000, 10_000);\n      const eventE = makeCompleteEvent('Event E', 60_000, 5_000);\n      // Events must be in order.\n      const events = [\n        eventA,\n        eventB,\n        eventC,\n        eventD,\n        eventE,\n      ];\n      const root = new TimelineModel.TimelineProfileTree.BottomUpRootNode(\n          events, new TimelineModel.TimelineModelFilter.TimelineInvisibleEventsFilter([]), [],\n          TraceEngine.Types.Timing.MilliSeconds(0), TraceEngine.Types.Timing.MilliSeconds(200_000), null);\n\n      const rootChildren = root.children();\n      assert.strictEqual(rootChildren.size, 5);\n\n      const rootChildIterator = rootChildren.values();\n      assert.strictEqual(\n          rootChildIterator.next().value.selfTime, TraceEngine.Helpers.Timing.microSecondsToMilliseconds(eventA.dur));\n\n      const nodeC = rootChildIterator.next().value as TimelineModel.TimelineProfileTree.TopDownNode;\n      assert.strictEqual(nodeC.selfTime, TraceEngine.Helpers.Timing.microSecondsToMilliseconds(eventC.dur));\n\n      const nodeE = rootChildIterator.next().value as TimelineModel.TimelineProfileTree.TopDownNode;\n      assert.strictEqual(nodeE.selfTime, TraceEngine.Helpers.Timing.microSecondsToMilliseconds(eventE.dur));\n\n      const nodeD = rootChildIterator.next().value as TimelineModel.TimelineProfileTree.TopDownNode;\n      const nodeDSelfTime = TraceEngine.Types.Timing.MicroSeconds(eventD.dur - eventE.dur);\n      assert.strictEqual(nodeD.selfTime, TraceEngine.Helpers.Timing.microSecondsToMilliseconds(nodeDSelfTime));\n\n      const nodeB = rootChildIterator.next().value as TimelineModel.TimelineProfileTree.TopDownNode;\n      const nodeBSelfTime = TraceEngine.Types.Timing.MicroSeconds(eventB.dur - eventC.dur - eventD.dur);\n      assert.strictEqual(nodeB.selfTime, TraceEngine.Helpers.Timing.microSecondsToMilliseconds(nodeBSelfTime));\n    });\n\n    it('correctly keeps ProfileCall nodes and uses them to build up the tree', async function() {\n      const traceParsedData = await TraceLoader.traceEngine(this, 'mainWasm_profile.json.gz');\n      const mainThread = getMainThread(traceParsedData.Renderer);\n      const bounds = TraceEngine.Helpers.Timing.traceWindowMilliSeconds(traceParsedData.Meta.traceBounds);\n\n      // Replicate the filters as they would be when renderering in the actual panel.\n      const textFilter = new Timeline.TimelineFilters.TimelineRegExp();\n      const modelFilters = [\n        Timeline.TimelineUIUtils.TimelineUIUtils.visibleEventsFilter(),\n        new TimelineModel.TimelineModelFilter.ExclusiveNameFilter([\n          TraceEngine.Types.TraceEvents.KnownEventName.RunTask,\n        ]),\n      ];\n      const root = new TimelineModel.TimelineProfileTree.BottomUpRootNode(\n          mainThread.entries, textFilter, modelFilters, bounds.min, bounds.max, null);\n      const rootChildren = root.children();\n      const values = Array.from(rootChildren.values());\n      // Find the list of profile calls that have been calculated as the top level rows in the Bottom Up table.\n      const profileCalls = values\n                               .filter(\n                                   node => node.event && TraceEngine.Types.TraceEvents.isProfileCall(node.event) &&\n                                       node.event.callFrame.functionName.length > 0)\n                               .map(n => n.event as TraceEngine.Types.TraceEvents.SyntheticProfileCall);\n      const functionNames = profileCalls.map(entry => entry.callFrame.functionName);\n      assert.deepEqual(\n          functionNames, ['fetch', 'getTime', 'wasm-to-js::l-imports.getTime', 'mainWasm', 'js-to-wasm::i']);\n    });\n  });\n\n  describe('generateEventID', () => {\n    it('generates the right ID for new engine profile call events', async function() {\n      const traceParsedData = await TraceLoader.traceEngine(this, 'react-hello-world.json.gz');\n      const mainThread = getMainThread(traceParsedData.Renderer);\n      const profileCallEntry = mainThread.entries.find(entry => {\n        return TraceEngine.Types.TraceEvents.isProfileCall(entry) &&\n            entry.callFrame.functionName === 'performConcurrentWorkOnRoot';\n      });\n      if (!profileCallEntry) {\n        throw new Error('Could not find a profile call');\n      }\n      const eventId = TimelineModel.TimelineProfileTree.generateEventID(profileCallEntry);\n      assert.strictEqual(eventId, 'f:performConcurrentWorkOnRoot@7');\n    });\n\n    it('generates the right ID for new engine native profile call events', async function() {\n      const traceParsedData = await TraceLoader.traceEngine(\n          this, 'invalid-animation-events.json.gz', {\n            initTraceBounds: false,\n          },\n          {\n            ...TraceEngine.Types.Configuration.defaults(),\n            includeRuntimeCallStats: true,\n          });\n\n      const mainThread = getMainThread(traceParsedData.Renderer);\n      const profileCallEntry = mainThread.entries.find(entry => {\n        return TraceEngine.Types.TraceEvents.isProfileCall(entry) && entry.callFrame.url === 'native V8Runtime';\n      });\n      if (!profileCallEntry) {\n        throw new Error('Could not find a profile call');\n      }\n      const eventId = TimelineModel.TimelineProfileTree.generateEventID(profileCallEntry);\n      assert.strictEqual(eventId, 'f:Compile@0');\n    });\n  });\n\n  describe('eventStackFrame', () => {\n    it('extracts the stackFrame for ProfileCalls', async function() {\n      const event = makeProfileCall('somefunc', 100, 10, undefined, undefined, undefined, 'https://x.com/file.mjs');\n      const stackFrame = TimelineModel.TimelineProfileTree.eventStackFrame(event) as Protocol.Runtime.CallFrame;\n      assert.strictEqual(stackFrame.functionName, 'somefunc');\n      assert.strictEqual(stackFrame.url, 'https://x.com/file.mjs');\n    });\n  });\n});\n"]}