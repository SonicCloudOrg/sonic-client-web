{"version":3,"file":"ContentProvider.js","sourceRoot":"","sources":["../../../../../../front_end/models/text_utils/ContentProvider.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA4BG;AAkBH,MAAM,OAAO,WAAW;IAET;IAA6B;IAA8B;IAC3D;IAFb,YACa,UAAkB,EAAW,WAAmB,EAAW,YAAoB,EAC/E,WAAmB;QADnB,eAAU,GAAV,UAAU,CAAQ;QAAW,gBAAW,GAAX,WAAW,CAAQ;QAAW,iBAAY,GAAZ,YAAY,CAAQ;QAC/E,gBAAW,GAAX,WAAW,CAAQ;IAChC,CAAC;IAED,MAAM,CAAC,UAAU,CAAC,CAAc,EAAE,CAAc;QAC9C,OAAO,CAAC,CAAC,UAAU,GAAG,CAAC,CAAC,UAAU,IAAI,CAAC,CAAC,YAAY,GAAG,CAAC,CAAC,YAAY,CAAC;IACxE,CAAC;CACF;AAED,MAAM,CAAC,MAAM,gBAAgB,GAAG,UAC5B,OAAoB,EAAE,QAAgB,EAAE,cAAuB,EAAE,OAAqB,EACtF,YAAqB,IAAI;IAC3B,MAAM,cAAc,GAAG,IAAI,GAAG,IAAI,CAAC;IACnC,IAAI,OAAO,KAAK,SAAS,IAAI,OAAO,KAAK,IAAI,IAAI,CAAC,SAAS,IAAI,OAAO,CAAC,MAAM,GAAG,cAAc,CAAC,EAAE,CAAC;QAChG,OAAO,IAAI,CAAC;IACd,CAAC;IAED,OAAO,GAAG,cAAc,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC;IACjE,OAAO,OAAO,GAAG,QAAQ,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,WAAW,GAAG,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG;QACxG,OAAO,CAAC;AACd,CAAC,CAAC;AAuBF,MAAM,CAAC,MAAM,0BAA0B,GAAG,UAAS,QAAyB;IAC1E,OAAO,yBAAyB,IAAI,QAAQ,CAAC;AAC/C,CAAC,CAAC","sourcesContent":["/*\n * Copyright (C) 2012 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport type * as Common from '../../core/common/common.js';\nimport type * as Platform from '../../core/platform/platform.js';\n\nimport {type ContentDataOrError} from './ContentData.js';\nimport {type StreamingContentDataOrError} from './StreamingContentData.js';\nimport {type WasmDisassembly} from './WasmDisassembly.js';\n\nexport interface ContentProvider {\n  contentURL(): Platform.DevToolsPath.UrlString;\n  contentType(): Common.ResourceType.ResourceType;\n  /** @deprecated Prefer {@link requestContentData} instead */\n  requestContent(): Promise<DeferredContent>;\n  requestContentData(): Promise<ContentDataOrError>;\n  searchInContent(query: string, caseSensitive: boolean, isRegex: boolean): Promise<SearchMatch[]>;\n}\n\nexport class SearchMatch {\n  constructor(\n      readonly lineNumber: number, readonly lineContent: string, readonly columnNumber: number,\n      readonly matchLength: number) {\n  }\n\n  static comparator(a: SearchMatch, b: SearchMatch): number {\n    return a.lineNumber - b.lineNumber || a.columnNumber - b.columnNumber;\n  }\n}\n\nexport const contentAsDataURL = function(\n    content: string|null, mimeType: string, contentEncoded: boolean, charset?: string|null,\n    limitSize: boolean = true): string|null {\n  const maxDataUrlSize = 1024 * 1024;\n  if (content === undefined || content === null || (limitSize && content.length > maxDataUrlSize)) {\n    return null;\n  }\n\n  content = contentEncoded ? content : encodeURIComponent(content);\n  return 'data:' + mimeType + (charset ? ';charset=' + charset : '') + (contentEncoded ? ';base64' : '') + ',' +\n      content;\n};\n\nexport type DeferredContent = {\n  content: string,\n  isEncoded: boolean,\n}|{\n  content: '',\n  isEncoded: false,\n  wasmDisassemblyInfo: WasmDisassembly,\n}|{\n  content: null,\n  error: string,\n  isEncoded: boolean,\n};\n\n// Some ContentProvider like NetworkRequests might never actually be able to return\n// a fully completed \"requestContent\" as the request keeps on going indefinitely.\n// Such proivders can implement the \"StreamingContentProvider\" addition, which allows\n// for partial/streaming content.\nexport interface StreamingContentProvider extends ContentProvider {\n  requestStreamingContent(): Promise<StreamingContentDataOrError>;\n}\n\nexport const isStreamingContentProvider = function(provider: ContentProvider): provider is StreamingContentProvider {\n  return 'requestStreamingContent' in provider;\n};\n"]}