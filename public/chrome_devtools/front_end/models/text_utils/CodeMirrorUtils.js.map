{"version":3,"file":"CodeMirrorUtils.js","sourceRoot":"","sources":["../../../../../../front_end/models/text_utils/CodeMirrorUtils.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA4BG;AAEH,OAAO,KAAK,UAAU,MAAM,sDAAsD,CAAC;AAInF,MAAM,UAAU,kBAAkB;IAChC,KAAK,UAAU,QAAQ,CAAC,IAAY,EAAE,QAAqD;QACzF,MAAM,YAAY,GAAG,MAAM,UAAU,CAAC,eAAe,EAAE,CAAC;QACxD,MAAM,MAAM,GAAG,IAAI,UAAU,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAEvD,MAAM,KAAK,GAAG,YAAY,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;QACzC,IAAI,OAAO,GAAG,MAAM,CAAC,GAAG,CAAC;QACzB,OAAO,CAAC,MAAM,CAAC,GAAG,EAAE,EAAE,CAAC;YACrB,MAAM,CAAC,KAAK,GAAG,OAAO,CAAC;YACvB,IAAI,SAAS,GAAG,YAAY,CAAC,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;YAClD;;;;;;;;eAQG;YACH,IAAI,SAAS,KAAK,OAAO,IAAI,KAAK,CAAC,KAAK,KAAK,WAAW,EAAE,CAAC;gBACzD,SAAS,GAAG,UAAU,CAAC;YACzB,CAAC;YACD,MAAM,OAAO,GAAG,MAAM,CAAC,OAAO,EAAE,CAAC;YACjC,QAAQ,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;YAC7B,OAAO,GAAG,MAAM,CAAC,GAAG,CAAC;QACvB,CAAC;IACH,CAAC;IACD,OAAO,QAAQ,CAAC;AAClB,CAAC","sourcesContent":["/*\n * Copyright (C) 2022 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as CodeMirror from '../../third_party/codemirror.next/codemirror.next.js';\n\ntype Tokenizer = (line: string, callback: (value: string, style: string|null) => void) => Promise<void>;\n\nexport function createCssTokenizer(): Tokenizer {\n  async function tokenize(line: string, callback: (value: string, style: string|null) => void): Promise<void> {\n    const streamParser = await CodeMirror.cssStreamParser();\n    const stream = new CodeMirror.StringStream(line, 4, 2);\n\n    const state = streamParser.startState(2);\n    let lastPos = stream.pos;\n    while (!stream.eol()) {\n      stream.start = lastPos;\n      let tokenType = streamParser.token(stream, state);\n      /**\n       * We expect unknown properties (like `unknownProp: unknownPropVal`) to still be\n       * formatted correctly. However, `tokenType` for such properties are marked\n       * as `error` from CodeMirror side and the internal state of the parser becomes `maybeprop`.\n       *\n       * So, we handle that specific keyword to be marked as `property` even though it is\n       * not a known property. We do this because for our formatting purposes it doesn't matter\n       * whether a property is a known CSS property or not.\n       */\n      if (tokenType === 'error' && state.state === 'maybeprop') {\n        tokenType = 'property';\n      }\n      const segment = stream.current();\n      callback(segment, tokenType);\n      lastPos = stream.pos;\n    }\n  }\n  return tokenize;\n}\n"]}