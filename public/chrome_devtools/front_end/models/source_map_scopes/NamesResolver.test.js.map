{"version":3,"file":"NamesResolver.test.js","sourceRoot":"","sources":["../../../../../../front_end/models/source_map_scopes/NamesResolver.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as Root from '../../core/root/root.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport {createTarget} from '../../testing/EnvironmentHelpers.js';\nimport {describeWithMockConnection} from '../../testing/MockConnection.js';\nimport {MockProtocolBackend} from '../../testing/MockScopeChain.js';\nimport * as Bindings from '../bindings/bindings.js';\nimport * as SourceMapScopes from '../source_map_scopes/source_map_scopes.js';\nimport * as Workspace from '../workspace/workspace.js';\n\ndescribeWithMockConnection('NameResolver', () => {\n  const URL = 'file:///tmp/example.js' as Platform.DevToolsPath.UrlString;\n  let target: SDK.Target.Target;\n  let backend: MockProtocolBackend;\n\n  beforeEach(() => {\n    const workspace = Workspace.Workspace.WorkspaceImpl.instance();\n    const targetManager = SDK.TargetManager.TargetManager.instance();\n    const resourceMapping = new Bindings.ResourceMapping.ResourceMapping(targetManager, workspace);\n    const debuggerWorkspaceBinding = Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.instance({\n      forceNew: true,\n      resourceMapping,\n      targetManager,\n    });\n    Bindings.IgnoreListManager.IgnoreListManager.instance({forceNew: true, debuggerWorkspaceBinding});\n    target = createTarget();\n    backend = new MockProtocolBackend();\n  });\n\n  // Given a function scope <fn-start>,<fn-end> and a nested scope <start>,<end>,\n  // we expect the scope parser to return a list of identifiers of the form [{name, offset}]\n  // for the nested scope. (The nested scope may be the same as the function scope.)\n  //\n  // For example, say we want to assert that the block scope '{let a = x, return a}'\n  // in function 'function f(x) { g(x); {let a = x, return a} }'\n  //   - defines and uses variable 'a' at the correct offsets, and\n  //   - uses free variable 'x'.\n  // Such assertions could be expressed roughly as follows:\n  //\n  // expect.that(\n  //  scopeIdentifiers(functionScope: {start: 10, end: 45}, scope:{start: 21, end: 43}).bound)\n  //   .equals([Identifier(name: a, offsets: [27, 41])]).\n  // expect.that(\n  //  scopeIdentifiers(functionScope: {start: 10, end: 45}, scope:{start: 21, end: 43}).free)\n  //   .equals([Identifier(name: x, offsets: [31])]).\n  //\n  // This is not ideal because the explicit offsets are hard to read and maintain.\n  // To avoid typing the exact offset we encode the offsets in a scope assertion string\n  // that can be easily aligned with the source code. For example, the assertion above\n  // will be written as\n  // source: 'function f(x) { g(x); {let a = x, return a} }'\n  // scopes: '          {            <   B   F         B> }'\n  //\n  // In the assertion string, '{' and '}' characters mark the positions of function\n  // offset start and end, '<' and '>' mark the positions of the nested scope\n  // start and end (if '<', '>' are missing then the nested scope is the function scope),\n  // the character 'B', 'F' mark the positions of bound and free identifiers that\n  // we expect to be returned by the scopeIdentifiers function.\n  it('test helper parses identifiers from test descriptor', () => {\n    const source = 'function f(x) { g(x); {let a = x, return a} }';\n    const scopes = '          {           <    B   F         B> }';\n    const identifiers = getIdentifiersFromScopeDescriptor(source, scopes);\n    assert.deepEqual(identifiers.bound, [\n      new SourceMapScopes.NamesResolver.IdentifierPositions(\n          'a', [{lineNumber: 0, columnNumber: 27}, {lineNumber: 0, columnNumber: 41}]),\n    ]);\n    assert.deepEqual(identifiers.free, [\n      new SourceMapScopes.NamesResolver.IdentifierPositions('x', [{lineNumber: 0, columnNumber: 31}]),\n    ]);\n  });\n\n  const tests = [\n    {\n      name: 'computes identifiers for a simple function',\n      source: 'function f(x) { return x }',\n      scopes: '          {B           B }',\n    },\n    {\n      name: 'computes identifiers for a function with a let local',\n      source: 'function f(x) { let a = 42; return a; }',\n      scopes: '          {B        B              B  }',\n    },\n    {\n      name: 'computes identifiers for a nested scope',\n      source: 'function f(x) { let outer = x; { let inner = outer; return inner } }',\n      scopes: '          {                    <     BBBBB   FFFFF         BBBBB > }',\n    },\n    {\n      name: 'computes identifiers for second nested scope',\n      source: 'function f(x) { { let a = 1; } { let b = x; return b } }',\n      scopes: '          {                    <     B   F         B > }',\n    },\n    {\n      name: 'computes identifiers with nested scopes',\n      source: 'function f(x) { let outer = x; { let a = outer; } { let b = x; return b } }',\n      scopes: '          {B        BBBBB   B            BBBBB              B             }',\n    },\n    {\n      name: 'computes identifiers with nested scopes, var lifting',\n      source: 'function f(x) { let outer = x; { var b = x; return b } }',\n      scopes: '          {B        BBBBB   B        B   B         B   }',\n    },\n    {\n      name: 'computes identifiers with nested scopes, var lifting',\n      source: 'function f(x) { let outer = x; { var b = x; return b } }',\n      scopes: '          {B        BBBBB   B        B   B         B   }',\n    },\n    {\n      name: 'computes identifiers in catch clause',\n      source: 'function f(x) { try { } catch (e) { let a = e + x; } }',\n      scopes: '          {                   <B            B   F  > }',\n    },\n    {\n      name: 'computes identifiers in catch clause',\n      source: 'function f(x) { try { } catch (e) { let a = e; return a; } }',\n      scopes: '          {                       <     B   F         B  > }',\n    },\n    {\n      name: 'computes identifiers in for-let',\n      source: 'function f(x) { for (let i = 0; i < 10; i++) { let j = i; console.log(j)} }',\n      scopes: '          {         <    B      B       B              B  FFFFFFF       > }',\n    },\n    {\n      name: 'computes identifiers in for-let body',\n      source: 'function f(x) { for (let i = 0; i < 10; i++) { let j = i; console.log(j)} }',\n      scopes: '          {                                  <     B   F  FFFFFFF     B > }',\n    },\n    {\n      name: 'computes identifiers in for-var function',\n      source: 'function f(x) { for (var i = 0; i < 10; i++) { let j = i; console.log(j)} }',\n      scopes: '          {B             B      B       B              B  FFFFFFF         }',\n    },\n    {\n      name: 'computes identifiers in for-let-of',\n      source: 'function f(x) { for (let i of x) { console.log(i)} }',\n      scopes: '          {         <    B    F    FFFFFFF     B > }',\n    },\n    {\n      name: 'computes identifiers in nested arrow function',\n      source: 'function f(x) { return (i) => { let j = i; return j } }',\n      scopes: '          {            <B           B   B         B > }',\n    },\n    {\n      name: 'computes identifiers in arrow function',\n      source: 'const f = (x) => { let i = 1; return x + i; }',\n      scopes: '          {B           B             B   B  }',\n    },\n    {\n      name: 'computes identifiers in an arrow function\\'s nested scope',\n      source: 'const f = (x) => { let i = 1; { let j = i + x; return j; } }',\n      scopes: '          {                   <     B   F   F         B  > }',\n    },\n    {\n      name: 'computes identifiers in an async arrow function\\'s nested scope',\n      source: 'const f = async (x) => { let i = 1; { let j = i + await x; return j; } }',\n      scopes: '                {                   <     B   F         F         B  > }',\n    },\n    {\n      name: 'computes identifiers in a function with yield and await',\n      source: 'async function* f(x) { return yield x + await p; }',\n      scopes: '                 {B                 B         F  }',\n    },\n    {\n      name: 'computes identifiers in a function with yield*',\n      source: 'function* f(x) { return yield* g(x) + 2; }',\n      scopes: '           {B                  F B       }',\n    },\n  ];\n\n  const dummyMapContent = JSON.stringify({\n    'version': 3,\n    'sources': [],\n  });\n\n  for (const test of tests) {\n    it(test.name, async () => {\n      const callFrame = await backend.createCallFrame(\n          target, {url: URL, content: test.source}, test.scopes, {url: 'file:///dummy.map', content: dummyMapContent});\n      const parsedScopeChain =\n          await SourceMapScopes.NamesResolver.findScopeChainForDebuggerScope(callFrame.scopeChain()[0]);\n      const scope = parsedScopeChain.pop();\n      assert.exists(scope);\n      const identifiers =\n          await SourceMapScopes.NamesResolver.scopeIdentifiers(callFrame.script, scope, parsedScopeChain);\n      const boundIdentifiers = identifiers?.boundVariables ?? [];\n      const freeIdentifiers = identifiers?.freeVariables ?? [];\n      boundIdentifiers.sort(\n          (l, r) => l.positions[0].lineNumber - r.positions[0].lineNumber ||\n              l.positions[0].columnNumber - r.positions[0].columnNumber);\n      freeIdentifiers.sort(\n          (l, r) => l.positions[0].lineNumber - r.positions[0].lineNumber ||\n              l.positions[0].columnNumber - r.positions[0].columnNumber);\n      assert.deepEqual(boundIdentifiers, getIdentifiersFromScopeDescriptor(test.source, test.scopes).bound);\n      assert.deepEqual(freeIdentifiers, getIdentifiersFromScopeDescriptor(test.source, test.scopes).free);\n    });\n  }\n\n  it('resolves name tokens merged with commas (without source map names)', async () => {\n    const sourceMapUrl = 'file:///tmp/example.js.min.map';\n    // This was minified with 'esbuild --sourcemap=linked --minify' v0.14.31.\n    const sourceMapContent = JSON.stringify({\n      'version': 3,\n      'sources': ['index.js'],\n      'sourcesContent': ['function f(par1, par2) {\\n  console.log(par1, par2);\\n}\\nf(1, 2);\\n'],\n      'mappings': 'AAAA,WAAW,EAAM,EAAM,CACrB,QAAQ,IAAI,EAAM,CAAI,CACxB,CACA,EAAE,EAAG,CAAC',\n      'names': [],\n    });\n\n    const source = `function f(o,n){console.log(o,n)}f(1,2);\\n//# sourceMappingURL=${sourceMapUrl}`;\n    const scopes = '          {                     }';\n\n    const scopeObject = backend.createSimpleRemoteObject([{name: 'o', value: 1}, {name: 'n', value: 2}]);\n    const callFrame = await backend.createCallFrame(\n        target, {url: URL, content: source}, scopes, {url: sourceMapUrl, content: sourceMapContent}, [scopeObject]);\n\n    const resolvedScopeObject = await SourceMapScopes.NamesResolver.resolveScopeInObject(callFrame.scopeChain()[0]);\n    const properties = await resolvedScopeObject.getAllProperties(false, false);\n    const namesAndValues = properties.properties?.map(p => ({name: p.name, value: p.value?.value})) ?? [];\n\n    assert.sameDeepMembers(namesAndValues, [{name: 'par1', value: 1}, {name: 'par2', value: 2}]);\n  });\n\n  it('resolves name tokens merged with equals (without source map names)', async () => {\n    const sourceMapUrl = 'file:///tmp/example.js.min.map';\n    // This was minified with 'esbuild --sourcemap=linked --minify' v0.14.31.\n    const sourceMapContent = JSON.stringify({\n      'version': 3,\n      'sources': ['index.js'],\n      'sourcesContent': ['function f(n) {\\n  for (let i = 0; i < n; i++) {\\n    console.log(\"hi\");\\n  }\\n}\\nf(10);\\n'],\n      'mappings': 'AAAA,WAAW,EAAG,CACZ,OAAS,GAAI,EAAG,EAAI,EAAG,IACrB,QAAQ,IAAI,IAAI,CAEpB,CACA,EAAE,EAAE',\n      'names': [],\n    });\n\n    const source = `function f(i){for(let o=0;o<i;o++)console.log(\"hi\")}f(10);\\n//# sourceMappingURL=${sourceMapUrl}`;\n    const scopes = '          {      <                                >}';\n\n    const scopeObject = backend.createSimpleRemoteObject([{name: 'o', value: 4}]);\n    const callFrame = await backend.createCallFrame(\n        target, {url: URL, content: source}, scopes, {url: sourceMapUrl, content: sourceMapContent}, [scopeObject]);\n\n    const resolvedScopeObject = await SourceMapScopes.NamesResolver.resolveScopeInObject(callFrame.scopeChain()[0]);\n    const properties = await resolvedScopeObject.getAllProperties(false, false);\n    const namesAndValues = properties.properties?.map(p => ({name: p.name, value: p.value?.value})) ?? [];\n\n    assert.sameDeepMembers(namesAndValues, [{name: 'i', value: 4}]);\n  });\n\n  it('resolves name tokens with source map names', async () => {\n    const sourceMapUrl = 'file:///tmp/example.js.min.map';\n    // This was minified with 'terser -m -o example.min.js --source-map \"includeSources;url=example.min.js.map\" --toplevel' v5.7.0.\n    const sourceMapContent = JSON.stringify({\n      'version': 3,\n      'names': ['f', 'par1', 'par2', 'console', 'log'],\n      'sources': ['index.js'],\n      'sourcesContent': ['function f(par1, par2) {\\n  console.log(par1, par2);\\n}\\nf(1, 2);\\n'],\n      'mappings': 'AAAA,SAASA,EAAEC,EAAMC,GACfC,QAAQC,IAAIH,EAAMC,GAEpBF,EAAE,EAAG',\n    });\n\n    const source = `function o(o,n){console.log(o,n)}o(1,2);\\n//# sourceMappingURL=${sourceMapUrl}`;\n    const scopes = '          {                     }';\n\n    const scopeObject = backend.createSimpleRemoteObject([{name: 'o', value: 1}, {name: 'n', value: 2}]);\n    const callFrame = await backend.createCallFrame(\n        target, {url: URL, content: source}, scopes, {url: sourceMapUrl, content: sourceMapContent}, [scopeObject]);\n\n    const resolvedScopeObject = await SourceMapScopes.NamesResolver.resolveScopeInObject(callFrame.scopeChain()[0]);\n    const properties = await resolvedScopeObject.getAllProperties(false, false);\n    const namesAndValues = properties.properties?.map(p => ({name: p.name, value: p.value?.value})) ?? [];\n\n    assert.sameDeepMembers(namesAndValues, [{name: 'par1', value: 1}, {name: 'par2', value: 2}]);\n  });\n\n  it('resolves names in constructors with super call', async () => {\n    const sourceMapUrl = 'file:///tmp/example.js.min.map';\n    // This was minified with 'terser -m -o example.min.js --source-map \"includeSources;url=example.min.js.map\"' v5.7.0.\n    const sourceMapContent = JSON.stringify({\n      'version': 3,\n      'names': ['C', 'B', 'constructor', 'par1', 'super', 'console', 'log'],\n      'sources': ['index.js'],\n      'mappings': 'AAAA,MAAMA,UAAUC,EACdC,YAAYC,GACVC,MAAMD,GACNE,QAAQC,IAAIH',\n    });\n\n    const source = `class C extends B{constructor(s){super(s),console.log(s)}}\\n//# sourceMappingURL=${sourceMapUrl}`;\n    const scopes = '                             {                          }';\n\n    const scopeObject = backend.createSimpleRemoteObject([{name: 's', value: 42}]);\n    const callFrame = await backend.createCallFrame(\n        target, {url: URL, content: source}, scopes, {url: sourceMapUrl, content: sourceMapContent}, [scopeObject]);\n\n    const resolvedScopeObject = await SourceMapScopes.NamesResolver.resolveScopeInObject(callFrame.scopeChain()[0]);\n    const properties = await resolvedScopeObject.getAllProperties(false, false);\n    const namesAndValues = properties.properties?.map(p => ({name: p.name, value: p.value?.value})) ?? [];\n\n    assert.sameDeepMembers(namesAndValues, [{name: 'par1', value: 42}]);\n  });\n\n  it('resolves names for variables in TDZ', async () => {\n    const sourceMapUrl = 'file:///tmp/example.js.min.map';\n    // This was minified with 'terser -m -o example.min.js --source-map \"includeSources;url=example.min.js.map\" v5.7.0.\n    const sourceMapContent = JSON.stringify({\n      'version': 3,\n      'names': ['adder', 'arg1', 'arg2', 'console', 'log', 'result'],\n      'sources': ['index.js'],\n      'sourcesContent': [\n        'function adder(arg1, arg2) {\\n  console.log(arg1, arg2);\\n  const result = arg1 + arg2;\\n  return result;\\n}\\n',\n      ],\n      'mappings': 'AAAA,SAASA,MAAMC,EAAMC,GACnBC,QAAQC,IAAIH,EAAMC,GAClB,MAAMG,EAASJ,EAAOC,EACtB,OAAOG,CACT',\n    });\n\n    const source = `function adder(n,o){console.log(n,o);const c=n+o;return c}\\n//# sourceMappingURL=${sourceMapUrl}`;\n    const scopes = '              {                                          }';\n\n    const scopeObject = backend.createSimpleRemoteObject([{name: 'n', value: 42}, {name: 'o', value: 5}, {name: 'c'}]);\n    const callFrame = await backend.createCallFrame(\n        target, {url: URL, content: source}, scopes, {url: sourceMapUrl, content: sourceMapContent}, [scopeObject]);\n\n    const resolvedScopeObject = await SourceMapScopes.NamesResolver.resolveScopeInObject(callFrame.scopeChain()[0]);\n    const properties = await resolvedScopeObject.getAllProperties(false, false);\n    const namesAndValues = properties.properties?.map(p => ({name: p.name, value: p.value?.value})) ?? [];\n\n    assert.sameDeepMembers(\n        namesAndValues, [{name: 'arg1', value: 42}, {name: 'arg2', value: 5}, {name: 'result', value: undefined}]);\n  });\n\n  it('resolves inner scope clashing names from let -> var transpilation', async () => {\n    // This tests the  behavior where the TypeScript compiler renames a variable when transforming let-variables\n    // to var-variables to avoid clash, and DevTools then (somewhat questionably) deobfuscates the var variables\n    // back to the original names in the function scope (as opposed to the original block scopes). Ideally, DevTools\n    // would do some scoping inference rather than relying on the pruned scope chain from V8.\n    const sourceMapUrl = 'file:///tmp/index.js.map';\n    // The source map was obtained with 'tsc --target es5 --sourceMap --inlineSources index.ts'.\n    const sourceMapContent = JSON.stringify({\n      'version': 3,\n      'file': 'index.js',\n      'sourceRoot': '',\n      'sources': ['index.ts'],\n      'names': [],\n      'mappings': 'AAAA,SAAS,CAAC;IACR,IAAI,GAAG,GAAG,EAAE,CAAC;' +\n          'IACb,KAAK,IAAI,KAAG,GAAG,CAAC,EAAE,KAAG,GAAG,CAAC,EAAE,KAAG,EAAE,EAAE;' +\n          'QAChC,OAAO,CAAC,GAAG,CAAC,KAAG,CAAC,CAAC;KAClB;' +\n          'AACH,CAAC;' +\n          'AACD,CAAC,EAAE,CAAC',\n      'sourcesContent': [\n        'function f() {\\n  let pos = 10;\\n  for (let pos = 0; pos < 5; pos++) {\\n    console.log(pos);\\n  }\\n}\\nf();\\n',\n      ],\n    });\n\n    const source: string[] = [];\n    const scopes: string[] = [];\n    source[0] = 'function f() {';\n    scopes[0] = '          {';  // Mark for scope start.\n    source[1] = '    var pos = 10;';\n    source[2] = '    for (var pos_1 = 0; pos_1 < 5; pos_1++) {';\n    source[3] = '        console.log(pos_1);';\n    source[4] = '    }';\n    source[5] = '}';\n    scopes[5] = '}';  // Mark for scope end.\n    source[6] = 'f();';\n    source[7] = `//# sourceMappingURL=${sourceMapUrl}`;\n\n    for (let i = 0; i < source.length; i++) {\n      scopes[i] ??= '';\n    }\n\n    const scopeObject = backend.createSimpleRemoteObject([{name: 'pos', value: 10}, {name: 'pos_1', value: 4}]);\n    const callFrame = await backend.createCallFrame(\n        target, {url: URL, content: source.join('\\n')}, scopes.join('\\n'),\n        {url: sourceMapUrl, content: sourceMapContent}, [scopeObject]);\n\n    const resolvedScopeObject = await SourceMapScopes.NamesResolver.resolveScopeInObject(callFrame.scopeChain()[0]);\n    const properties = await resolvedScopeObject.getAllProperties(false, false);\n    const namesAndValues = properties.properties?.map(p => ({name: p.name, value: p.value?.value})) ?? [];\n\n    assert.deepEqual(namesAndValues, [{name: 'pos', value: 10}, {name: 'pos', value: 4}]);\n  });\n\n  describe('Function name resolving', () => {\n    let callFrame: SDK.DebuggerModel.CallFrame;\n\n    beforeEach(async () => {\n      const sourceMapUrl = 'file:///tmp/example.js.min.map';\n      // This was minified with 'terser -m -o example.min.js --source-map \"includeSources;url=example.min.js.map\"' v5.7.0.\n      const sourceMapContent = JSON.stringify({\n        'version': 3,\n        'names': ['unminified', 'par1', 'par2', 'console', 'log'],\n        'sources': ['index.js'],\n        'sourcesContent': ['function unminified(par1, par2) {\\n  console.log(par1, par2);\\n}\\n'],\n        'mappings': 'AAAA,SAASA,EAAWC,EAAMC,GACxBC,QAAQC,IAAIH,EAAMC',\n      });\n\n      const source = `function o(o,n){console.log(o,n)}o(1,2);\\n//# sourceMappingURL=${sourceMapUrl}`;\n      const scopes = '          {                     }';\n\n      const scopeObject = backend.createSimpleRemoteObject([{name: 's', value: 42}]);\n      callFrame = await backend.createCallFrame(\n          target, {url: URL, content: source}, scopes, {url: sourceMapUrl, content: sourceMapContent}, [scopeObject]);\n    });\n\n    it('resolves function names at scope start for a debugger frame', async () => {\n      const functionName = await SourceMapScopes.NamesResolver.resolveDebuggerFrameFunctionName(callFrame);\n      assert.strictEqual(functionName, 'unminified');\n    });\n\n    it('resolves function names at scope start for a profiler frame', async () => {\n      const scopeLocation = callFrame.location();\n      const debuggerModel = target.model(SDK.DebuggerModel.DebuggerModel);\n      const script = debuggerModel?.scripts()[0];\n      const scriptId = script?.scriptId;\n      if (scriptId === undefined) {\n        assert.fail('Script id not found');\n        return;\n      }\n      const {lineNumber, columnNumber} = scopeLocation;\n      await script?.requestContentData();\n      const functionName = await SourceMapScopes.NamesResolver.resolveProfileFrameFunctionName(\n          {scriptId, columnNumber, lineNumber}, target);\n      assert.strictEqual(functionName, 'unminified');\n    });\n  });\n\n  describe('Function name resolving from scopes', () => {\n    it('resolves function scope name at scope start for a debugger frame', async () => {\n      Root.Runtime.experiments.enableForTest('use-source-map-scopes');\n\n      const sourceMapUrl = 'file:///tmp/example.js.min.map';\n      const sourceMapContent = JSON.stringify({\n        'version': 3,\n        'names': [\n          '<toplevel>',\n          '<anonymous>',\n          'log',\n          'main',\n        ],\n        'sources': ['main.js'],\n        'sourcesContent': [\n          '(function () {\\n  function log(m) {\\n    console.log(m);\\n  }\\n\\n  function main() {\\n\\t  log(\"hello\");\\n\\t  log(\"world\");\\n  }\\n  \\n  main();\\n})();',\n        ],\n        'mappings': 'CAAA,WACE,SAAS,EAAI,GACX,QAAQ,IAAI,EACd,CAEA,SAAS,IACR,EAAI,SACJ,EAAI,QACL,CAEA,GACD,EAXD',\n        'x_com_bloomberg_sourcesFunctionMappings': ['AAAWK,CACAJ,CCCRE,CIAKA'],\n      });\n\n      const source = '(function(){function o(o){console.log(o)}function n(){o(\"hello\");o(\"world\")}n()})();\\n';\n      const scopes = '                                                   {                       }';\n\n      const callFrame = await backend.createCallFrame(\n          target, {url: URL, content: source + `//# sourceMappingURL=${sourceMapUrl}`}, scopes,\n          {url: sourceMapUrl, content: sourceMapContent});\n\n      const functionName = await SourceMapScopes.NamesResolver.resolveDebuggerFrameFunctionName(callFrame);\n      assert.strictEqual(functionName, 'main');\n      Root.Runtime.experiments.disableForTest('use-source-map-scopes');\n    });\n  });\n\n  it('ignores the argument name during arrow function name resolution', async () => {\n    const sourceMapUrl = 'file:///tmp/example.js.min.map';\n    // This was minified with 'terser -m -o example.min.js --source-map \"includeSources;url=example.min.js.map\"' v5.7.0.\n    const sourceMapContent = JSON.stringify({\n      'version': 3,\n      'names': ['unminified', 'par1', 'console', 'log'],\n      'sources': ['index.js'],\n      'sourcesContent': ['const unminified = par1 => {\\n  console.log(par1);\\n}\\n'],\n      'mappings': 'AAAA,MAAMA,EAAaC,IACjBC,QAAQC,IAAIF',\n    });\n\n    const source = `const o=o=>{console.log(o)};\\n//# sourceMappingURL=${sourceMapUrl}`;\n    const scopes = '        {                 }';\n\n    const scopeObject = backend.createSimpleRemoteObject([{name: 'o', value: 42}]);\n    const callFrame = await backend.createCallFrame(\n        target, {url: URL, content: source}, scopes, {url: sourceMapUrl, content: sourceMapContent}, [scopeObject]);\n\n    assert.isNull(await SourceMapScopes.NamesResolver.resolveDebuggerFrameFunctionName(callFrame));\n  });\n\n  describe('allVariablesAtPosition', () => {\n    let script: SDK.Script.Script;\n\n    beforeEach(async () => {\n      const originalContent = `\nfunction mulWithOffset(param1, param2, offset) {\n  const intermediate = param1 * param2;\n  const result = intermediate;\n  if (offset !== undefined) {\n    const intermediate = result + offset;\n    return intermediate;\n  }\n  return result;\n}\n`;\n      const sourceMapUrl = 'file:///tmp/example.js.min.map';\n      // This was minified with 'terser -m -o example.min.js --source-map \"includeSources;url=example.min.js.map\"' v5.7.0.\n      const sourceMapContent = JSON.stringify({\n        version: 3,\n        names: ['mulWithOffset', 'param1', 'param2', 'offset', 'intermediate', 'result', 'undefined'],\n        sources: ['example.js'],\n        sourcesContent: [originalContent],\n        mappings:\n            'AACA,SAASA,cAAcC,EAAQC,EAAQC,GACrC,MAAMC,EAAeH,EAASC,EAC9B,MAAMG,EAASD,EACf,GAAID,IAAWG,UAAW,CACxB,MAAMF,EAAeC,EAASF,EAC9B,OAAOC,CACT,CACA,OAAOC,CACT',\n      });\n\n      const scriptContent =\n          'function mulWithOffset(n,t,e){const f=n*t;const u=f;if(e!==undefined){const n=u+e;return n}return u}';\n      script = await backend.addScript(\n          target, {url: 'file:///tmp/bundle.js', content: scriptContent},\n          {url: sourceMapUrl, content: sourceMapContent});\n    });\n\n    it('has the right mapping on a function scope without shadowing', async () => {\n      const location = script.rawLocation(0, 30);  // Beginning of function scope.\n      assert.exists(location);\n\n      const mapping = await SourceMapScopes.NamesResolver.allVariablesAtPosition(location);\n\n      assert.strictEqual(mapping.get('param1'), 'n');\n      assert.strictEqual(mapping.get('param2'), 't');\n      assert.strictEqual(mapping.get('offset'), 'e');\n      assert.strictEqual(mapping.get('intermediate'), 'f');\n      assert.strictEqual(mapping.get('result'), 'u');\n    });\n\n    it('has the right mapping in a block scope with shadowing in the authored code', async () => {\n      const location = script.rawLocation(0, 70);  // Beginning of block scope.\n      assert.exists(location);\n\n      const mapping = await SourceMapScopes.NamesResolver.allVariablesAtPosition(location);\n\n      // Block scope {intermediate} shadows function scope {intermediate}.\n      assert.strictEqual(mapping.get('intermediate'), 'n');\n    });\n\n    it('has the right mapping in a block scope with shadowing in the compiled code', async () => {\n      const location = script.rawLocation(0, 70);  // Beginning of block scope.\n      assert.exists(location);\n\n      const mapping = await SourceMapScopes.NamesResolver.allVariablesAtPosition(location);\n\n      assert.isNull(mapping.get('param1'));\n    });\n  });\n});\n\nfunction getIdentifiersFromScopeDescriptor(source: string, scopeDescriptor: string): {\n  bound: SourceMapScopes.NamesResolver.IdentifierPositions[],\n  free: SourceMapScopes.NamesResolver.IdentifierPositions[],\n} {\n  const bound = new Map<string, SourceMapScopes.NamesResolver.IdentifierPositions>();\n  const free = new Map<string, SourceMapScopes.NamesResolver.IdentifierPositions>();\n  let current = 0;\n\n  while (current < scopeDescriptor.length) {\n    while (current < scopeDescriptor.length) {\n      if (scopeDescriptor[current] === 'B' || scopeDescriptor[current] === 'F') {\n        break;\n      }\n      current++;\n    }\n    if (current >= scopeDescriptor.length) {\n      break;\n    }\n\n    const kind = scopeDescriptor[current];\n    const start = current;\n    let end = start + 1;\n    while (end < scopeDescriptor.length && scopeDescriptor[end] === kind) {\n      end++;\n    }\n    if (kind === 'B') {\n      addPosition(bound, start, end);\n    } else {\n      console.assert(kind === 'F');\n      addPosition(free, start, end);\n    }\n    current = end + 1;\n  }\n\n  return {bound: [...bound.values()], free: [...free.values()]};\n\n  function addPosition(\n      collection: Map<string, SourceMapScopes.NamesResolver.IdentifierPositions>, start: number, end: number) {\n    const name = source.substring(start, end);\n    let id = collection.get(name);\n    if (!id) {\n      id = new SourceMapScopes.NamesResolver.IdentifierPositions(name);\n      collection.set(name, id);\n    }\n    id.addPosition(0, start);\n  }\n}\n"]}