{"version":3,"file":"ExtensionAPI.js","sourceRoot":"","sources":["../../../../../../front_end/models/extensions/ExtensionAPI.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2012 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport type * as PublicAPI from '../../../extension-api/ExtensionAPI'; // eslint-disable-line rulesdir/es_modules_import\nimport type * as Platform from '../../core/platform/platform.js';\nimport type * as HAR from '../har/har.js';\n\n/* eslint-disable @typescript-eslint/naming-convention,@typescript-eslint/no-non-null-assertion */\nexport namespace PrivateAPI {\n  export namespace Panels {\n    export const enum SearchAction {\n      CancelSearch = 'cancelSearch',\n      PerformSearch = 'performSearch',\n      NextSearchResult = 'nextSearchResult',\n      PreviousSearchResult = 'previousSearchResult',\n    }\n  }\n\n  export const enum Events {\n    ButtonClicked = 'button-clicked-',\n    PanelObjectSelected = 'panel-objectSelected-',\n    InspectedURLChanged = 'inspected-url-changed',\n    NetworkRequestFinished = 'network-request-finished',\n    OpenResource = 'open-resource',\n    PanelSearch = 'panel-search-',\n    ProfilingStarted = 'profiling-started-',\n    ProfilingStopped = 'profiling-stopped-',\n    ResourceAdded = 'resource-added',\n    ResourceContentCommitted = 'resource-content-committed',\n    ViewShown = 'view-shown-',\n    ViewHidden = 'view-hidden,',\n    ThemeChange = 'host-theme-change',\n  }\n\n  export const enum Commands {\n    AddRequestHeaders = 'addRequestHeaders',\n    ApplyStyleSheet = 'applyStyleSheet',\n    CreatePanel = 'createPanel',\n    CreateSidebarPane = 'createSidebarPane',\n    CreateToolbarButton = 'createToolbarButton',\n    EvaluateOnInspectedPage = 'evaluateOnInspectedPage',\n    ForwardKeyboardEvent = '_forwardKeyboardEvent',\n    GetHAR = 'getHAR',\n    GetPageResources = 'getPageResources',\n    GetRequestContent = 'getRequestContent',\n    GetResourceContent = 'getResourceContent',\n    OpenResource = 'openResource',\n    Reload = 'Reload',\n    Subscribe = 'subscribe',\n    SetOpenResourceHandler = 'setOpenResourceHandler',\n    SetThemeChangeHandler = 'setThemeChangeHandler',\n    SetResourceContent = 'setResourceContent',\n    SetSidebarContent = 'setSidebarContent',\n    SetSidebarHeight = 'setSidebarHeight',\n    SetSidebarPage = 'setSidebarPage',\n    ShowPanel = 'showPanel',\n    Unsubscribe = 'unsubscribe',\n    UpdateButton = 'updateButton',\n    RegisterLanguageExtensionPlugin = 'registerLanguageExtensionPlugin',\n    GetWasmLinearMemory = 'getWasmLinearMemory',\n    GetWasmLocal = 'getWasmLocal',\n    GetWasmGlobal = 'getWasmGlobal',\n    GetWasmOp = 'getWasmOp',\n    RegisterRecorderExtensionPlugin = 'registerRecorderExtensionPlugin',\n    CreateRecorderView = 'createRecorderView',\n    ShowRecorderView = 'showRecorderView',\n    ShowNetworkPanel = 'showNetworkPanel',\n    ReportResourceLoad = 'reportResourceLoad',\n  }\n\n  export const enum LanguageExtensionPluginCommands {\n    AddRawModule = 'addRawModule',\n    RemoveRawModule = 'removeRawModule',\n    SourceLocationToRawLocation = 'sourceLocationToRawLocation',\n    RawLocationToSourceLocation = 'rawLocationToSourceLocation',\n    GetScopeInfo = 'getScopeInfo',\n    ListVariablesInScope = 'listVariablesInScope',\n    GetTypeInfo = 'getTypeInfo',\n    GetFormatter = 'getFormatter',\n    GetInspectableAddress = 'getInspectableAddress',\n    GetFunctionInfo = 'getFunctionInfo',\n    GetInlinedFunctionRanges = 'getInlinedFunctionRanges',\n    GetInlinedCalleesRanges = 'getInlinedCalleesRanges',\n    GetMappedLines = 'getMappedLines',\n    FormatValue = 'formatValue',\n    GetProperties = 'getProperties',\n    ReleaseObject = 'releaseObject',\n  }\n\n  export const enum LanguageExtensionPluginEvents {\n    UnregisteredLanguageExtensionPlugin = 'unregisteredLanguageExtensionPlugin',\n  }\n\n  export const enum RecorderExtensionPluginCommands {\n    Stringify = 'stringify',\n    StringifyStep = 'stringifyStep',\n    Replay = 'replay',\n  }\n\n  export const enum RecorderExtensionPluginEvents {\n    UnregisteredRecorderExtensionPlugin = 'unregisteredRecorderExtensionPlugin',\n  }\n\n  export interface EvaluateOptions {\n    frameURL?: string;\n    useContentScriptContext?: boolean;\n    scriptExecutionContext?: string;\n  }\n\n  type RegisterLanguageExtensionPluginRequest = {\n    command: Commands.RegisterLanguageExtensionPlugin,\n    pluginName: string,\n    port: MessagePort,\n    supportedScriptTypes: PublicAPI.Chrome.DevTools.SupportedScriptTypes,\n  };\n  export type RecordingExtensionPluginCapability = 'export'|'replay';\n  type RegisterRecorderExtensionPluginRequest = {\n    command: Commands.RegisterRecorderExtensionPlugin,\n    pluginName: string,\n    mediaType?: string, capabilities: RecordingExtensionPluginCapability[], port: MessagePort,\n  };\n  type CreateRecorderViewRequest = {\n    command: Commands.CreateRecorderView,\n    id: string,\n    title: string,\n    pagePath: string,\n  };\n  type ShowRecorderViewRequest = {\n    command: Commands.ShowRecorderView,\n    id: string,\n  };\n  type SubscribeRequest = {command: Commands.Subscribe, type: string};\n  type UnsubscribeRequest = {command: Commands.Unsubscribe, type: string};\n  type AddRequestHeadersRequest = {\n    command: Commands.AddRequestHeaders,\n    extensionId: string,\n    headers: {[key: string]: string},\n  };\n  type ApplyStyleSheetRequest = {command: Commands.ApplyStyleSheet, styleSheet: string};\n  type CreatePanelRequest = {command: Commands.CreatePanel, id: string, title: string, page: string};\n  type ShowPanelRequest = {command: Commands.ShowPanel, id: string};\n  type CreateToolbarButtonRequest = {\n    command: Commands.CreateToolbarButton,\n    id: string,\n    icon: string,\n    panel: string,\n    tooltip?: string,\n    disabled?: boolean,\n  };\n  type UpdateButtonRequest =\n      {command: Commands.UpdateButton, id: string, icon?: string, tooltip?: string, disabled?: boolean};\n  type CreateSidebarPaneRequest = {command: Commands.CreateSidebarPane, id: string, panel: string, title: string};\n  type SetSidebarHeightRequest = {command: Commands.SetSidebarHeight, id: string, height: string};\n  type SetSidebarContentRequest = {\n    command: Commands.SetSidebarContent,\n    id: string,\n    evaluateOnPage?: boolean, expression: string,\n    rootTitle?: string,\n    evaluateOptions?: EvaluateOptions,\n  };\n  type SetSidebarPageRequest = {command: Commands.SetSidebarPage, id: string, page: string};\n  type OpenResourceRequest =\n      {command: Commands.OpenResource, url: Platform.DevToolsPath.UrlString, lineNumber: number, columnNumber: number};\n  type SetOpenResourceHandlerRequest = {command: Commands.SetOpenResourceHandler, handlerPresent: boolean};\n  type SetThemeChangeHandlerRequest = {command: Commands.SetThemeChangeHandler, handlerPresent: boolean};\n  type ReloadRequest = {\n    command: Commands.Reload,\n    options: null|{\n      userAgent?: string,\n      injectedScript?: string,\n      ignoreCache?: boolean,\n    },\n  };\n  type EvaluateOnInspectedPageRequest = {\n    command: Commands.EvaluateOnInspectedPage,\n    expression: string,\n    evaluateOptions?: EvaluateOptions,\n  };\n  type GetRequestContentRequest = {command: Commands.GetRequestContent, id: number};\n  type GetResourceContentRequest = {command: Commands.GetResourceContent, url: string};\n  type SetResourceContentRequest =\n      {command: Commands.SetResourceContent, url: string, content: string, commit: boolean};\n  type ForwardKeyboardEventRequest = {\n    command: Commands.ForwardKeyboardEvent,\n    entries: Array<KeyboardEventInit&{eventType: string}>,\n  };\n  type GetHARRequest = {command: Commands.GetHAR};\n  type GetPageResourcesRequest = {command: Commands.GetPageResources};\n  type GetWasmLinearMemoryRequest = {\n    command: Commands.GetWasmLinearMemory,\n    offset: number,\n    length: number,\n    stopId: unknown,\n  };\n  type GetWasmLocalRequest = {\n    command: Commands.GetWasmLocal,\n    local: number,\n    stopId: unknown,\n  };\n  type GetWasmGlobalRequest = {\n    command: Commands.GetWasmGlobal,\n    global: number,\n    stopId: unknown,\n  };\n  type GetWasmOpRequest = {command: Commands.GetWasmOp, op: number, stopId: unknown};\n  type ShowNetworkPanelRequest = {command: Commands.ShowNetworkPanel, filter: string|undefined};\n  type ReportResourceLoadRequest = {\n    command: Commands.ReportResourceLoad,\n    extensionId: string,\n    resourceUrl: string,\n    status: {success: boolean, errorMessage?: string, size?: number},\n  };\n\n  export type ServerRequests = ShowRecorderViewRequest|CreateRecorderViewRequest|RegisterRecorderExtensionPluginRequest|\n      RegisterLanguageExtensionPluginRequest|SubscribeRequest|UnsubscribeRequest|AddRequestHeadersRequest|\n      ApplyStyleSheetRequest|CreatePanelRequest|ShowPanelRequest|CreateToolbarButtonRequest|UpdateButtonRequest|\n      CreateSidebarPaneRequest|SetSidebarHeightRequest|SetSidebarContentRequest|SetSidebarPageRequest|\n      OpenResourceRequest|SetOpenResourceHandlerRequest|SetThemeChangeHandlerRequest|ReloadRequest|\n      EvaluateOnInspectedPageRequest|GetRequestContentRequest|GetResourceContentRequest|SetResourceContentRequest|\n      ForwardKeyboardEventRequest|GetHARRequest|GetPageResourcesRequest|GetWasmLinearMemoryRequest|GetWasmLocalRequest|\n      GetWasmGlobalRequest|GetWasmOpRequest|ShowNetworkPanelRequest|ReportResourceLoadRequest;\n  export type ExtensionServerRequestMessage = PrivateAPI.ServerRequests&{requestId?: number};\n\n  type AddRawModuleRequest = {\n    method: LanguageExtensionPluginCommands.AddRawModule,\n    parameters: {rawModuleId: string, symbolsURL: string|undefined, rawModule: PublicAPI.Chrome.DevTools.RawModule},\n  };\n  type SourceLocationToRawLocationRequest = {\n    method: LanguageExtensionPluginCommands.SourceLocationToRawLocation,\n    parameters: {sourceLocation: PublicAPI.Chrome.DevTools.SourceLocation},\n  };\n  type RawLocationToSourceLocationRequest = {\n    method: LanguageExtensionPluginCommands.RawLocationToSourceLocation,\n    parameters: {rawLocation: PublicAPI.Chrome.DevTools.RawLocation},\n  };\n  type GetScopeInfoRequest = {method: LanguageExtensionPluginCommands.GetScopeInfo, parameters: {type: string}};\n  type ListVariablesInScopeRequest = {\n    method: LanguageExtensionPluginCommands.ListVariablesInScope,\n    parameters: {rawLocation: PublicAPI.Chrome.DevTools.RawLocation},\n  };\n  type RemoveRawModuleRequest = {\n    method: LanguageExtensionPluginCommands.RemoveRawModule,\n    parameters: {rawModuleId: string},\n  };\n  type GetFunctionInfoRequest = {\n    method: LanguageExtensionPluginCommands.GetFunctionInfo,\n    parameters: {rawLocation: PublicAPI.Chrome.DevTools.RawLocation},\n  };\n  type GetInlinedFunctionRangesRequest = {\n    method: LanguageExtensionPluginCommands.GetInlinedFunctionRanges,\n    parameters: {rawLocation: PublicAPI.Chrome.DevTools.RawLocation},\n  };\n  type GetInlinedCalleesRangesRequest = {\n    method: LanguageExtensionPluginCommands.GetInlinedCalleesRanges,\n    parameters: {rawLocation: PublicAPI.Chrome.DevTools.RawLocation},\n  };\n  type GetMappedLinesRequest = {\n    method: LanguageExtensionPluginCommands.GetMappedLines,\n    parameters: {rawModuleId: string, sourceFileURL: string},\n  };\n  type FormatValueRequest = {\n    method: LanguageExtensionPluginCommands.FormatValue,\n    parameters: {expression: string, context: PublicAPI.Chrome.DevTools.RawLocation, stopId: number},\n  };\n  type GetPropertiesRequest = {\n    method: LanguageExtensionPluginCommands.GetProperties,\n    parameters: {objectId: PublicAPI.Chrome.DevTools.RemoteObjectId},\n  };\n  type ReleaseObjectRequest = {\n    method: LanguageExtensionPluginCommands.ReleaseObject,\n    parameters: {objectId: PublicAPI.Chrome.DevTools.RemoteObjectId},\n  };\n\n  export type LanguageExtensionRequests =\n      AddRawModuleRequest|SourceLocationToRawLocationRequest|RawLocationToSourceLocationRequest|GetScopeInfoRequest|\n      ListVariablesInScopeRequest|RemoveRawModuleRequest|GetFunctionInfoRequest|GetInlinedFunctionRangesRequest|\n      GetInlinedCalleesRangesRequest|GetMappedLinesRequest|FormatValueRequest|GetPropertiesRequest|ReleaseObjectRequest;\n\n  type StringifyRequest = {\n    method: RecorderExtensionPluginCommands.Stringify,\n    parameters: {recording: Record<string, unknown>},\n  };\n\n  type StringifyStepRequest = {\n    method: RecorderExtensionPluginCommands.StringifyStep,\n    parameters: {step: Record<string, unknown>},\n  };\n\n  type ReplayRequest = {\n    method: RecorderExtensionPluginCommands.Replay,\n    parameters: {recording: Record<string, unknown>},\n  };\n\n  export type RecorderExtensionRequests = StringifyRequest|StringifyStepRequest|ReplayRequest;\n}\n\ndeclare global {\n  interface Window {\n    injectedExtensionAPI:\n        (extensionInfo: ExtensionDescriptor, inspectedTabId: string, themeName: string, keysToForward: number[],\n         testHook:\n             (extensionServer: APIImpl.ExtensionServerClient, extensionAPI: APIImpl.InspectorExtensionAPI) => unknown,\n         injectedScriptId: number, targetWindow?: Window) => void;\n    buildExtensionAPIInjectedScript(\n        extensionInfo: ExtensionDescriptor, inspectedTabId: string, themeName: string, keysToForward: number[],\n        testHook: undefined|((extensionServer: unknown, extensionAPI: unknown) => unknown)): string;\n    chrome: PublicAPI.Chrome.DevTools.Chrome;\n    webInspector?: APIImpl.InspectorExtensionAPI;\n  }\n}\n\nexport type ExtensionDescriptor = {\n  startPage: string,\n  name: string,\n  exposeExperimentalAPIs: boolean,\n  exposeWebInspectorNamespace?: boolean,\n  allowFileAccess?: boolean,\n};\n\nnamespace APIImpl {\n  export interface InspectorExtensionAPI {\n    languageServices: PublicAPI.Chrome.DevTools.LanguageExtensions;\n    recorder: PublicAPI.Chrome.DevTools.RecorderExtensions;\n    performance: PublicAPI.Chrome.DevTools.Performance;\n    network: PublicAPI.Chrome.DevTools.Network;\n    panels: PublicAPI.Chrome.DevTools.Panels;\n    inspectedWindow: PublicAPI.Chrome.DevTools.InspectedWindow;\n  }\n\n  export interface ExtensionServerClient {\n    _callbacks: {[key: string]: (response: unknown) => unknown};\n    _handlers: {[key: string]: (request: {arguments: unknown[]}) => unknown};\n    _lastRequestId: number;\n    _lastObjectId: number;\n    _port: MessagePort;\n\n    _onCallback(request: unknown): void;\n    _onMessage(event: MessageEvent<{command: string, requestId: number, arguments: unknown[]}>): void;\n    _registerCallback(callback: (response: unknown) => unknown): number;\n    registerHandler(command: string, handler: (request: {arguments: unknown[]}) => unknown): void;\n    unregisterHandler(command: string): void;\n    hasHandler(command: string): boolean;\n    sendRequest<ResponseT>(\n        request: PrivateAPI.ServerRequests, callback?: ((response: ResponseT) => unknown), transfers?: unknown[]): void;\n    nextObjectId(): string;\n  }\n\n  export type Callable = (...args: any[]) => void;\n\n  export interface EventSink<ListenerT extends Callable> extends PublicAPI.Chrome.DevTools.EventSink<ListenerT> {\n    _type: string;\n    _listeners: ListenerT[];\n    _customDispatch: undefined|((this: EventSink<ListenerT>, request: {arguments: unknown[]}) => unknown);\n\n    _fire(..._vararg: Parameters<ListenerT>): void;\n    _dispatch(request: {arguments: unknown[]}): void;\n  }\n\n  export interface Network extends PublicAPI.Chrome.DevTools.Network {\n    addRequestHeaders(headers: {[key: string]: string}): void;\n  }\n\n  export interface Request extends PublicAPI.Chrome.DevTools.Request, HAR.Log.EntryDTO {\n    _id: number;\n  }\n\n  export interface Panels extends PublicAPI.Chrome.DevTools.Panels {\n    get SearchAction(): {[key: string]: string};\n    applyStyleSheet(styleSheet: string): void;\n    setOpenResourceHandler(callback?: (resource: PublicAPI.Chrome.DevTools.Resource, lineNumber: number) => unknown):\n        void;\n    setThemeChangeHandler(callback?: (themeName: string) => unknown): void;\n  }\n\n  export interface ExtensionView extends PublicAPI.Chrome.DevTools.ExtensionView {\n    _id: string|null;\n  }\n\n  export interface ExtensionSidebarPane extends ExtensionView, PublicAPI.Chrome.DevTools.ExtensionSidebarPane {\n    setExpression(\n        expression: string, rootTitle?: string, evaluteOptions?: PrivateAPI.EvaluateOptions,\n        callback?: () => unknown): void;\n  }\n\n  export interface PanelWithSidebar extends ExtensionView, PublicAPI.Chrome.DevTools.PanelWithSidebar {\n    _hostPanelName: string;\n  }\n\n  export interface LanguageExtensions extends PublicAPI.Chrome.DevTools.LanguageExtensions {\n    _plugins: Map<PublicAPI.Chrome.DevTools.LanguageExtensionPlugin, MessagePort>;\n  }\n\n  export interface RecorderExtensions extends PublicAPI.Chrome.DevTools.RecorderExtensions {\n    _plugins: Map<PublicAPI.Chrome.DevTools.RecorderExtensionPlugin, MessagePort>;\n  }\n\n  export interface ExtensionPanel extends ExtensionView, PublicAPI.Chrome.DevTools.ExtensionPanel {\n    show(): void;\n  }\n\n  export interface RecorderView extends ExtensionView, PublicAPI.Chrome.DevTools.RecorderView {}\n\n  export interface Button extends PublicAPI.Chrome.DevTools.Button {\n    _id: string;\n  }\n\n  export type ResourceData = {url: string, type: string};\n  export interface Resource extends PublicAPI.Chrome.DevTools.Resource {\n    _type: string;\n    _url: string;\n\n    get type(): string;\n  }\n}\n\nself.injectedExtensionAPI = function(\n    extensionInfo: ExtensionDescriptor, inspectedTabId: string, themeName: string, keysToForward: number[],\n    testHook: (extensionServer: APIImpl.ExtensionServerClient, extensionAPI: APIImpl.InspectorExtensionAPI) => unknown,\n    injectedScriptId: number, targetWindowForTest?: Window): void {\n  const keysToForwardSet = new Set<number>(keysToForward);\n  const chrome = window.chrome || {};\n\n  const devtools_descriptor = Object.getOwnPropertyDescriptor(chrome, 'devtools');\n  if (devtools_descriptor) {\n    return;\n  }\n  let userAction = false;\n  let userRecorderAction = false;\n\n  // Here and below, all constructors are private to API implementation.\n  // For a public type Foo, if internal fields are present, these are on\n  // a private FooImpl type, an instance of FooImpl is used in a closure\n  // by Foo consutrctor to re-bind publicly exported members to an instance\n  // of Foo.\n\n  function EventSinkImpl<ListenerT extends APIImpl.Callable>(\n      this: APIImpl.EventSink<ListenerT>, type: string,\n      customDispatch?: (this: APIImpl.EventSink<ListenerT>, request: {arguments: unknown[]}) => unknown): void {\n    this._type = type;\n    this._listeners = [];\n    this._customDispatch = customDispatch;\n  }\n\n  EventSinkImpl.prototype = {\n    addListener: function<ListenerT extends APIImpl.Callable>(this: APIImpl.EventSink<ListenerT>, callback: ListenerT):\n        void {\n          if (typeof callback !== 'function') {\n            throw 'addListener: callback is not a function';\n          }\n          if (this._listeners.length === 0) {\n            extensionServer.sendRequest({command: PrivateAPI.Commands.Subscribe, type: this._type});\n          }\n          this._listeners.push(callback);\n          extensionServer.registerHandler('notify-' + this._type, this._dispatch.bind(this));\n        },\n\n    removeListener: function<ListenerT extends APIImpl.Callable>(\n        this: APIImpl.EventSink<ListenerT>, callback: ListenerT): void {\n      const listeners = this._listeners;\n\n      for (let i = 0; i < listeners.length; ++i) {\n        if (listeners[i] === callback) {\n          listeners.splice(i, 1);\n          break;\n        }\n      }\n      if (this._listeners.length === 0) {\n        extensionServer.sendRequest({command: PrivateAPI.Commands.Unsubscribe, type: this._type});\n      }\n    },\n\n    _fire: function<ListenerT extends APIImpl.Callable>(\n        this: APIImpl.EventSink<ListenerT>, ..._vararg: Parameters<ListenerT>): void {\n      const listeners = this._listeners.slice();\n      for (let i = 0; i < listeners.length; ++i) {\n        listeners[i].apply(null, Array.from(arguments));\n      }\n    },\n\n    _dispatch: function<ListenerT extends APIImpl.Callable>(\n        this: APIImpl.EventSink<ListenerT>, request: {arguments: unknown[]}): void {\n      if (this._customDispatch) {\n        this._customDispatch.call(this, request);\n      } else {\n        this._fire.apply(this, request.arguments as Parameters<ListenerT>);\n      }\n    },\n  };\n\n  function Constructor<NewT extends APIImpl.Callable>(ctor: NewT): new (...args: Parameters<NewT>) =>\n      ThisParameterType<NewT> {\n    return ctor as unknown as new (...args: Parameters<NewT>) => ThisParameterType<NewT>;\n  }\n\n  function InspectorExtensionAPI(this: APIImpl.InspectorExtensionAPI): void {\n    this.inspectedWindow = new (Constructor(InspectedWindow))();\n    this.panels = new (Constructor(Panels))();\n    this.network = new (Constructor(Network))();\n    this.languageServices = new (Constructor(LanguageServicesAPI))();\n    this.recorder = new (Constructor(RecorderServicesAPI))();\n    this.performance = new (Constructor(Performance))();\n    defineDeprecatedProperty(this, 'webInspector', 'resources', 'network');\n  }\n\n  function Network(this: APIImpl.Network): void {\n    function dispatchRequestEvent(\n        this: APIImpl.EventSink<(request: PublicAPI.Chrome.DevTools.Request) => unknown>,\n        message: {arguments: unknown[]}): void {\n      const request = message.arguments[1] as APIImpl.Request & {__proto__: APIImpl.Request};\n\n      request.__proto__ = new (Constructor(Request))(message.arguments[0] as number);\n      this._fire(request);\n    }\n\n    this.onRequestFinished =\n        new (Constructor(EventSink))(PrivateAPI.Events.NetworkRequestFinished, dispatchRequestEvent);\n    defineDeprecatedProperty(this, 'network', 'onFinished', 'onRequestFinished');\n\n    this.onNavigated = new (Constructor(EventSink))(PrivateAPI.Events.InspectedURLChanged);\n  }\n\n  (Network.prototype as Pick<APIImpl.Network, 'getHAR'|'addRequestHeaders'>) = {\n    getHAR: function(this: PublicAPI.Chrome.DevTools.Network, callback?: (harLog: Object) => unknown): void {\n      function callbackWrapper(response: unknown): void {\n        const result =\n            response as ({entries: Array<HAR.Log.EntryDTO&{__proto__?: APIImpl.Request, _requestId?: number}>});\n        const entries = (result && result.entries) || [];\n        for (let i = 0; i < entries.length; ++i) {\n          entries[i].__proto__ = new (Constructor(Request))(entries[i]._requestId as number);\n          delete entries[i]._requestId;\n        }\n        callback && callback(result as Object);\n      }\n      extensionServer.sendRequest({command: PrivateAPI.Commands.GetHAR}, callback && callbackWrapper);\n    },\n\n    addRequestHeaders: function(headers: {[key: string]: string}): void {\n      extensionServer.sendRequest(\n          {command: PrivateAPI.Commands.AddRequestHeaders, headers: headers, extensionId: window.location.hostname});\n    },\n  };\n\n  function RequestImpl(this: APIImpl.Request, id: number): void {\n    this._id = id;\n  }\n\n  (RequestImpl.prototype as Pick<APIImpl.Request, 'getContent'>) = {\n    getContent: function(this: APIImpl.Request, callback?: (content: string, encoding: string) => unknown): void {\n      function callbackWrapper(response: unknown): void {\n        const {content, encoding} = response as {content: string, encoding: string};\n        callback && callback(content, encoding);\n      }\n      extensionServer.sendRequest(\n          {command: PrivateAPI.Commands.GetRequestContent, id: this._id}, callback && callbackWrapper);\n    },\n  };\n\n  function Panels(this: APIImpl.Panels): void {\n    const panels: {[key: string]: ElementsPanel|SourcesPanel|PublicAPI.Chrome.DevTools.NetworkPanel} = {\n      elements: new ElementsPanel(),\n      sources: new SourcesPanel(),\n      network: new (Constructor(NetworkPanel))(),\n    };\n\n    function panelGetter(name: string): ElementsPanel|SourcesPanel|PublicAPI.Chrome.DevTools.NetworkPanel {\n      return panels[name];\n    }\n    for (const panel in panels) {\n      Object.defineProperty(this, panel, {get: panelGetter.bind(null, panel), enumerable: true});\n    }\n    this.applyStyleSheet = function(styleSheet: string): void {\n      extensionServer.sendRequest({command: PrivateAPI.Commands.ApplyStyleSheet, styleSheet: styleSheet});\n    };\n  }\n\n  (Panels.prototype as\n   Pick<APIImpl.Panels, 'create'|'setOpenResourceHandler'|'openResource'|'SearchAction'|'setThemeChangeHandler'>) = {\n    create: function(\n        title: string, icon: string, page: string,\n        callback: (panel: PublicAPI.Chrome.DevTools.ExtensionPanel) => unknown): void {\n      const id = 'extension-panel-' + extensionServer.nextObjectId();\n      extensionServer.sendRequest(\n          {command: PrivateAPI.Commands.CreatePanel, id, title, page},\n          callback && (() => callback.call(this, new (Constructor(ExtensionPanel))(id))));\n    },\n\n    setOpenResourceHandler: function(\n        callback: (resource: PublicAPI.Chrome.DevTools.Resource, lineNumber: number) => unknown): void {\n      const hadHandler = extensionServer.hasHandler(PrivateAPI.Events.OpenResource);\n\n      function callbackWrapper(message: unknown): void {\n        // Allow the panel to show itself when handling the event.\n        userAction = true;\n        try {\n          const {resource, lineNumber} = message as {resource: APIImpl.ResourceData, lineNumber: number};\n          if (canAccessResource(resource)) {\n            callback.call(null, new (Constructor(Resource))(resource), lineNumber);\n          }\n        } finally {\n          userAction = false;\n        }\n      }\n\n      if (!callback) {\n        extensionServer.unregisterHandler(PrivateAPI.Events.OpenResource);\n      } else {\n        extensionServer.registerHandler(PrivateAPI.Events.OpenResource, callbackWrapper);\n      }\n\n      // Only send command if we either removed an existing handler or added handler and had none before.\n      if (hadHandler === !callback) {\n        extensionServer.sendRequest(\n            {command: PrivateAPI.Commands.SetOpenResourceHandler, 'handlerPresent': Boolean(callback)});\n      }\n    },\n\n    setThemeChangeHandler: function(callback: (themeName: string) => unknown): void {\n      const hadHandler = extensionServer.hasHandler(PrivateAPI.Events.ThemeChange);\n\n      function callbackWrapper(message: unknown): void {\n        const {themeName} = message as {themeName: string};\n        chrome.devtools.panels.themeName = themeName;\n        callback.call(null, themeName);\n      }\n\n      if (!callback) {\n        extensionServer.unregisterHandler(PrivateAPI.Events.ThemeChange);\n      } else {\n        extensionServer.registerHandler(PrivateAPI.Events.ThemeChange, callbackWrapper);\n      }\n\n      // Only send command if we either removed an existing handler or added handler and had none before.\n      if (hadHandler === !callback) {\n        extensionServer.sendRequest(\n            {command: PrivateAPI.Commands.SetThemeChangeHandler, 'handlerPresent': Boolean(callback)});\n      }\n    },\n\n    openResource: function(\n        url: Platform.DevToolsPath.UrlString, lineNumber: number, columnNumber?: number,\n        _callback?: (response: unknown) => unknown): void {\n      const callbackArg = extractCallbackArgument(arguments);\n      // Handle older API:\n      const columnNumberArg = typeof columnNumber === 'number' ? columnNumber : 0;\n      extensionServer.sendRequest(\n          {command: PrivateAPI.Commands.OpenResource, url, lineNumber, columnNumber: columnNumberArg}, callbackArg);\n    },\n\n    get SearchAction(): {[key: string]: string} {\n      return {\n        CancelSearch: PrivateAPI.Panels.SearchAction.CancelSearch,\n        PerformSearch: PrivateAPI.Panels.SearchAction.PerformSearch,\n        NextSearchResult: PrivateAPI.Panels.SearchAction.NextSearchResult,\n        PreviousSearchResult: PrivateAPI.Panels.SearchAction.PreviousSearchResult,\n      };\n    },\n  };\n\n  function ExtensionViewImpl(this: APIImpl.ExtensionView, id: string|null): void {\n    this._id = id;\n\n    function dispatchShowEvent(\n        this: APIImpl.EventSink<(window?: Window) => unknown>, message: {arguments: unknown[]}): void {\n      const frameIndex = message.arguments[0];\n      if (typeof frameIndex === 'number') {\n        this._fire(window.parent.frames[frameIndex]);\n      } else {\n        this._fire();\n      }\n    }\n\n    if (id) {\n      this.onShown = new (Constructor(EventSink))(PrivateAPI.Events.ViewShown + id, dispatchShowEvent);\n\n      this.onHidden = new (Constructor(EventSink))(PrivateAPI.Events.ViewHidden + id);\n    }\n  }\n\n  function PanelWithSidebarImpl(this: APIImpl.PanelWithSidebar, hostPanelName: string): void {\n    ExtensionViewImpl.call(this, null);\n    this._hostPanelName = hostPanelName;\n\n    this.onSelectionChanged = new (Constructor(EventSink))(PrivateAPI.Events.PanelObjectSelected + hostPanelName);\n  }\n\n  (PanelWithSidebarImpl.prototype as Pick<APIImpl.PanelWithSidebar, 'createSidebarPane'>&\n   {__proto__: APIImpl.ExtensionView}) = {\n    createSidebarPane: function(\n        this: APIImpl.PanelWithSidebar, title: string,\n        callback?: (pane: PublicAPI.Chrome.DevTools.ExtensionSidebarPane) => unknown): void {\n      const id = 'extension-sidebar-' + extensionServer.nextObjectId();\n      function callbackWrapper(): void {\n        callback && callback(new (Constructor(ExtensionSidebarPane))(id));\n      }\n      extensionServer.sendRequest(\n          {command: PrivateAPI.Commands.CreateSidebarPane, panel: this._hostPanelName, id, title},\n          callback && callbackWrapper);\n    },\n\n    __proto__: ExtensionViewImpl.prototype,\n  };\n\n  function RecorderServicesAPIImpl(this: APIImpl.RecorderExtensions): void {\n    this._plugins = new Map();\n  }\n\n  async function registerRecorderExtensionPluginImpl(\n      this: APIImpl.RecorderExtensions, plugin: PublicAPI.Chrome.DevTools.RecorderExtensionPlugin, pluginName: string,\n      mediaType?: string): Promise<void> {\n    if (this._plugins.has(plugin)) {\n      throw new Error(`Tried to register plugin '${pluginName}' twice`);\n    }\n    const channel = new MessageChannel();\n    const port = channel.port1;\n    this._plugins.set(plugin, port);\n    port.onmessage = ({data}: MessageEvent<{requestId: number}&PrivateAPI.RecorderExtensionRequests>): void => {\n      const {requestId} = data;\n      dispatchMethodCall(data)\n          .then(result => port.postMessage({requestId, result}))\n          .catch(error => port.postMessage({requestId, error: {message: error.message}}));\n    };\n\n    async function dispatchMethodCall(request: PrivateAPI.RecorderExtensionRequests): Promise<unknown> {\n      switch (request.method) {\n        case PrivateAPI.RecorderExtensionPluginCommands.Stringify:\n          return (plugin as PublicAPI.Chrome.DevTools.RecorderExtensionExportPlugin)\n              .stringify(request.parameters.recording);\n        case PrivateAPI.RecorderExtensionPluginCommands.StringifyStep:\n          return (plugin as PublicAPI.Chrome.DevTools.RecorderExtensionExportPlugin)\n              .stringifyStep(request.parameters.step);\n        case PrivateAPI.RecorderExtensionPluginCommands.Replay:\n          try {\n            userAction = true;\n            userRecorderAction = true;\n            return (plugin as PublicAPI.Chrome.DevTools.RecorderExtensionReplayPlugin)\n                .replay(request.parameters.recording);\n          } finally {\n            userAction = false;\n            userRecorderAction = false;\n          }\n        default:\n          // @ts-expect-error\n          throw new Error(`'${request.method}' is not recognized`);\n      }\n    }\n\n    const capabilities: PrivateAPI.RecordingExtensionPluginCapability[] = [];\n\n    if ('stringify' in plugin && 'stringifyStep' in plugin) {\n      capabilities.push('export');\n    }\n\n    if ('replay' in plugin) {\n      capabilities.push('replay');\n    }\n\n    await new Promise<void>(resolve => {\n      extensionServer.sendRequest(\n          {\n            command: PrivateAPI.Commands.RegisterRecorderExtensionPlugin,\n            pluginName,\n            mediaType,\n            capabilities,\n            port: channel.port2,\n          },\n          () => resolve(), [channel.port2]);\n    });\n  }\n\n  (RecorderServicesAPIImpl.prototype as Pick<\n       APIImpl.RecorderExtensions,\n       'registerRecorderExtensionPlugin'|'unregisterRecorderExtensionPlugin'|'createView'>) = {\n    registerRecorderExtensionPlugin: registerRecorderExtensionPluginImpl,\n    unregisterRecorderExtensionPlugin: async function(\n        this: APIImpl.RecorderExtensions, plugin: PublicAPI.Chrome.DevTools.RecorderExtensionPlugin): Promise<void> {\n      const port = this._plugins.get(plugin);\n      if (!port) {\n        throw new Error('Tried to unregister a plugin that was not previously registered');\n      }\n      this._plugins.delete(plugin);\n      port.postMessage({event: PrivateAPI.RecorderExtensionPluginEvents.UnregisteredRecorderExtensionPlugin});\n      port.close();\n    },\n    createView: async function(this: APIImpl.RecorderExtensions, title: string, pagePath: string):\n        Promise<PublicAPI.Chrome.DevTools.RecorderView> {\n          const id = 'recorder-extension-view-' + extensionServer.nextObjectId();\n          await new Promise(resolve => {\n            extensionServer.sendRequest(\n                {command: PrivateAPI.Commands.CreateRecorderView, id, title, pagePath}, resolve);\n          });\n          return new (Constructor(RecorderView))(id);\n        },\n  };\n\n  function LanguageServicesAPIImpl(this: APIImpl.LanguageExtensions): void {\n    this._plugins = new Map();\n  }\n\n  (LanguageServicesAPIImpl.prototype as PublicAPI.Chrome.DevTools.LanguageExtensions) = {\n    registerLanguageExtensionPlugin: async function(\n        this: APIImpl.LanguageExtensions, plugin: PublicAPI.Chrome.DevTools.LanguageExtensionPlugin, pluginName: string,\n        supportedScriptTypes: PublicAPI.Chrome.DevTools.SupportedScriptTypes): Promise<void> {\n      if (this._plugins.has(plugin)) {\n        throw new Error(`Tried to register plugin '${pluginName}' twice`);\n      }\n      const channel = new MessageChannel();\n      const port = channel.port1;\n      this._plugins.set(plugin, port);\n      port.onmessage = ({data}: MessageEvent<{requestId: number}&PrivateAPI.LanguageExtensionRequests>): void => {\n        const {requestId} = data;\n        console.time(`${requestId}: ${data.method}`);\n        dispatchMethodCall(data)\n            .then(result => port.postMessage({requestId, result}))\n            .catch(error => port.postMessage({requestId, error: {message: error.message}}))\n            .finally(() => console.timeEnd(`${requestId}: ${data.method}`));\n      };\n\n      function dispatchMethodCall(request: PrivateAPI.LanguageExtensionRequests): Promise<unknown> {\n        switch (request.method) {\n          case PrivateAPI.LanguageExtensionPluginCommands.AddRawModule:\n            return plugin.addRawModule(\n                request.parameters.rawModuleId, request.parameters.symbolsURL, request.parameters.rawModule);\n          case PrivateAPI.LanguageExtensionPluginCommands.RemoveRawModule:\n            return plugin.removeRawModule(request.parameters.rawModuleId);\n          case PrivateAPI.LanguageExtensionPluginCommands.SourceLocationToRawLocation:\n            return plugin.sourceLocationToRawLocation(request.parameters.sourceLocation);\n          case PrivateAPI.LanguageExtensionPluginCommands.RawLocationToSourceLocation:\n            return plugin.rawLocationToSourceLocation(request.parameters.rawLocation);\n          case PrivateAPI.LanguageExtensionPluginCommands.GetScopeInfo:\n            return plugin.getScopeInfo(request.parameters.type);\n          case PrivateAPI.LanguageExtensionPluginCommands.ListVariablesInScope:\n            return plugin.listVariablesInScope(request.parameters.rawLocation);\n          case PrivateAPI.LanguageExtensionPluginCommands.GetFunctionInfo:\n            return plugin.getFunctionInfo(request.parameters.rawLocation);\n          case PrivateAPI.LanguageExtensionPluginCommands.GetInlinedFunctionRanges:\n            return plugin.getInlinedFunctionRanges(request.parameters.rawLocation);\n          case PrivateAPI.LanguageExtensionPluginCommands.GetInlinedCalleesRanges:\n            return plugin.getInlinedCalleesRanges(request.parameters.rawLocation);\n          case PrivateAPI.LanguageExtensionPluginCommands.GetMappedLines:\n            if ('getMappedLines' in plugin) {\n              return plugin.getMappedLines(request.parameters.rawModuleId, request.parameters.sourceFileURL);\n            }\n            return Promise.resolve(undefined);\n          case PrivateAPI.LanguageExtensionPluginCommands.FormatValue:\n            if ('evaluate' in plugin && plugin.evaluate) {\n              return plugin.evaluate(\n                  request.parameters.expression, request.parameters.context, request.parameters.stopId);\n            }\n            return Promise.resolve(undefined);\n          case PrivateAPI.LanguageExtensionPluginCommands.GetProperties:\n            if ('getProperties' in plugin && plugin.getProperties) {\n              return plugin.getProperties(request.parameters.objectId);\n            }\n            if (!('evaluate' in plugin &&\n                  plugin.evaluate)) {  // If evalute is defined but the remote objects methods aren't, that's a bug\n              return Promise.resolve(undefined);\n            }\n            break;\n          case PrivateAPI.LanguageExtensionPluginCommands.ReleaseObject:\n            if ('releaseObject' in plugin && plugin.releaseObject) {\n              return plugin.releaseObject(request.parameters.objectId);\n            }\n            break;\n        }\n        throw new Error(`Unknown language plugin method ${request.method}`);\n      }\n\n      await new Promise<void>(resolve => {\n        extensionServer.sendRequest(\n            {\n              command: PrivateAPI.Commands.RegisterLanguageExtensionPlugin,\n              pluginName,\n              port: channel.port2,\n              supportedScriptTypes,\n            },\n            () => resolve(), [channel.port2]);\n      });\n    },\n\n    unregisterLanguageExtensionPlugin: async function(\n        this: APIImpl.LanguageExtensions, plugin: PublicAPI.Chrome.DevTools.LanguageExtensionPlugin): Promise<void> {\n      const port = this._plugins.get(plugin);\n      if (!port) {\n        throw new Error('Tried to unregister a plugin that was not previously registered');\n      }\n      this._plugins.delete(plugin);\n      port.postMessage({event: PrivateAPI.LanguageExtensionPluginEvents.UnregisteredLanguageExtensionPlugin});\n      port.close();\n    },\n\n    getWasmLinearMemory: async function(\n        this: APIImpl.LanguageExtensions, offset: number, length: number, stopId: number): Promise<ArrayBuffer> {\n      const result = await new Promise(\n          resolve => extensionServer.sendRequest(\n              {command: PrivateAPI.Commands.GetWasmLinearMemory, offset, length, stopId}, resolve));\n      if (Array.isArray(result)) {\n        return new Uint8Array(result).buffer;\n      }\n      return new ArrayBuffer(0);\n    },\n    getWasmLocal: async function(\n        this: APIImpl.LanguageExtensions, local: number, stopId: number): Promise<PublicAPI.Chrome.DevTools.WasmValue> {\n      return new Promise(\n          resolve => extensionServer.sendRequest({command: PrivateAPI.Commands.GetWasmLocal, local, stopId}, resolve));\n    },\n    getWasmGlobal: async function(this: APIImpl.LanguageExtensions, global: number, stopId: number):\n        Promise<PublicAPI.Chrome.DevTools.WasmValue> {\n          return new Promise(\n              resolve =>\n                  extensionServer.sendRequest({command: PrivateAPI.Commands.GetWasmGlobal, global, stopId}, resolve));\n        },\n    getWasmOp: async function(this: APIImpl.LanguageExtensions, op: number, stopId: number):\n        Promise<PublicAPI.Chrome.DevTools.WasmValue> {\n          return new Promise(\n              resolve => extensionServer.sendRequest({command: PrivateAPI.Commands.GetWasmOp, op, stopId}, resolve));\n        },\n\n    reportResourceLoad: function(resourceUrl: string, status: {success: boolean, errorMessage?: string, size?: number}):\n        Promise<void> {\n          return new Promise(\n              resolve => extensionServer.sendRequest(\n                  {\n                    command: PrivateAPI.Commands.ReportResourceLoad,\n                    extensionId: window.location.origin,\n                    resourceUrl,\n                    status,\n                  },\n                  resolve));\n        },\n\n  };\n\n  function NetworkPanelImpl(this: PublicAPI.Chrome.DevTools.NetworkPanel): void {\n  }\n\n  (NetworkPanelImpl.prototype as Pick<PublicAPI.Chrome.DevTools.NetworkPanel, 'show'>) = {\n    show: function(options?: {filter: string}): Promise<void> {\n      return new Promise<void>(\n          resolve => extensionServer.sendRequest(\n              {command: PrivateAPI.Commands.ShowNetworkPanel, filter: options?.filter}, () => resolve()));\n    },\n  };\n\n  function PerformanceImpl(this: PublicAPI.Chrome.DevTools.Performance): void {\n    function dispatchProfilingStartedEvent(this: APIImpl.EventSink<() => unknown>): void {\n      this._fire();\n    }\n\n    function dispatchProfilingStoppedEvent(this: APIImpl.EventSink<() => unknown>): void {\n      this._fire();\n    }\n\n    this.onProfilingStarted =\n        new (Constructor(EventSink))(PrivateAPI.Events.ProfilingStarted, dispatchProfilingStartedEvent);\n    this.onProfilingStopped =\n        new (Constructor(EventSink))(PrivateAPI.Events.ProfilingStopped, dispatchProfilingStoppedEvent);\n  }\n\n  function declareInterfaceClass<ImplT extends APIImpl.Callable>(implConstructor: ImplT): (\n      this: ThisParameterType<ImplT>, ...args: Parameters<ImplT>) => void {\n    return function(this: ThisParameterType<ImplT>, ...args: Parameters<ImplT>): void {\n      const impl = {__proto__: implConstructor.prototype};\n      implConstructor.apply(impl, args);\n      populateInterfaceClass(this as {[key: string]: unknown}, impl);\n    };\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  function defineDeprecatedProperty(object: any, className: string, oldName: string, newName: string): void {\n    let warningGiven = false;\n    function getter(): unknown {\n      if (!warningGiven) {\n        console.warn(className + '.' + oldName + ' is deprecated. Use ' + className + '.' + newName + ' instead');\n        warningGiven = true;\n      }\n      return object[newName];\n    }\n    object.__defineGetter__(oldName, getter);\n  }\n\n  function extractCallbackArgument(args: IArguments): ((...args: unknown[]) => unknown)|undefined {\n    const lastArgument = args[args.length - 1];\n    return typeof lastArgument === 'function' ? lastArgument as (...args: unknown[]) => unknown : undefined;\n  }\n\n  const LanguageServicesAPI = declareInterfaceClass(LanguageServicesAPIImpl);\n  const RecorderServicesAPI = declareInterfaceClass(RecorderServicesAPIImpl);\n  const Performance = declareInterfaceClass(PerformanceImpl);\n  const Button = declareInterfaceClass(ButtonImpl);\n  const EventSink = declareInterfaceClass(EventSinkImpl);\n  const ExtensionPanel = declareInterfaceClass(ExtensionPanelImpl);\n  const RecorderView = declareInterfaceClass(RecorderViewImpl);\n  const ExtensionSidebarPane = declareInterfaceClass(ExtensionSidebarPaneImpl);\n  const PanelWithSidebarClass = declareInterfaceClass(PanelWithSidebarImpl);\n  const Request = declareInterfaceClass(RequestImpl);\n  const Resource = declareInterfaceClass(ResourceImpl);\n  const NetworkPanel = declareInterfaceClass(NetworkPanelImpl);\n\n  class ElementsPanel extends (Constructor(PanelWithSidebarClass)) {\n    constructor() {\n      super('elements');\n    }\n  }\n\n  class SourcesPanel extends (Constructor(PanelWithSidebarClass)) {\n    constructor() {\n      super('sources');\n    }\n  }\n\n  function ExtensionPanelImpl(this: APIImpl.ExtensionPanel, id: string): void {\n    ExtensionViewImpl.call(this, id);\n\n    this.onSearch = new (Constructor(EventSink))(PrivateAPI.Events.PanelSearch + id);\n  }\n\n  (ExtensionPanelImpl.prototype as Pick<APIImpl.ExtensionPanel, 'createStatusBarButton'|'show'>&\n   {__proto__: APIImpl.ExtensionView}) = {\n    createStatusBarButton: function(\n                               this: APIImpl.ExtensionPanel, iconPath: string, tooltipText: string, disabled: boolean):\n                               PublicAPI.Chrome.DevTools.Button {\n                                 const id = 'button-' + extensionServer.nextObjectId();\n                                 extensionServer.sendRequest({\n                                   command: PrivateAPI.Commands.CreateToolbarButton,\n                                   panel: this._id as string,\n                                   id: id,\n                                   icon: iconPath,\n                                   tooltip: tooltipText,\n                                   disabled: Boolean(disabled),\n                                 });\n\n                                 return new (Constructor(Button))(id);\n                               },\n\n    show: function(this: APIImpl.ExtensionPanel): void {\n      if (!userAction) {\n        return;\n      }\n\n      extensionServer.sendRequest({command: PrivateAPI.Commands.ShowPanel, id: this._id as string});\n    },\n\n    __proto__: ExtensionViewImpl.prototype,\n  };\n\n  function RecorderViewImpl(this: APIImpl.RecorderView, id: string): void {\n    ExtensionViewImpl.call(this, id);\n  }\n\n  (RecorderViewImpl.prototype as Pick<APIImpl.RecorderView, 'show'>& {__proto__: APIImpl.ExtensionView}) = {\n    show: function(this: APIImpl.RecorderView): void {\n      if (!userAction || !userRecorderAction) {\n        return;\n      }\n\n      extensionServer.sendRequest({command: PrivateAPI.Commands.ShowRecorderView, id: this._id as string});\n    },\n\n    __proto__: ExtensionViewImpl.prototype,\n  };\n\n  function ExtensionSidebarPaneImpl(this: APIImpl.ExtensionSidebarPane, id: string): void {\n    ExtensionViewImpl.call(this, id);\n  }\n\n  (ExtensionSidebarPaneImpl.prototype as\n       Pick<APIImpl.ExtensionSidebarPane, 'setHeight'|'setExpression'|'setObject'|'setPage'>&\n   {__proto__: APIImpl.ExtensionView}) = {\n    setHeight: function(this: APIImpl.ExtensionSidebarPane, height: string): void {\n      extensionServer.sendRequest(\n          {command: PrivateAPI.Commands.SetSidebarHeight, id: this._id as string, height: height});\n    },\n\n    setExpression: function(\n        this: APIImpl.ExtensionSidebarPane, expression: string, rootTitle: string,\n        evaluateOptions?: PrivateAPI.EvaluateOptions, _callback?: () => unknown): void {\n      extensionServer.sendRequest(\n          {\n            command: PrivateAPI.Commands.SetSidebarContent,\n            id: this._id as string,\n            expression: expression,\n            rootTitle: rootTitle,\n            evaluateOnPage: true,\n            evaluateOptions: (typeof evaluateOptions === 'object' ? evaluateOptions : {}),\n          },\n          extractCallbackArgument(arguments));\n    },\n\n    setObject: function(\n        this: APIImpl.ExtensionSidebarPane, jsonObject: string, rootTitle?: string, callback?: () => unknown): void {\n      extensionServer.sendRequest(\n          {\n            command: PrivateAPI.Commands.SetSidebarContent,\n            id: this._id as string,\n            expression: jsonObject,\n            rootTitle: rootTitle,\n          },\n          callback);\n    },\n\n    setPage: function(this: APIImpl.ExtensionSidebarPane, page: string): void {\n      extensionServer.sendRequest({command: PrivateAPI.Commands.SetSidebarPage, id: this._id as string, page: page});\n    },\n\n    __proto__: ExtensionViewImpl.prototype,\n  };\n\n  function ButtonImpl(this: APIImpl.Button, id: string): void {\n    this._id = id;\n\n    this.onClicked = new (Constructor(EventSink))(PrivateAPI.Events.ButtonClicked + id);\n  }\n\n  (ButtonImpl.prototype as Pick<APIImpl.Button, 'update'>) = {\n    update: function(this: APIImpl.Button, iconPath?: string, tooltipText?: string, disabled?: boolean): void {\n      extensionServer.sendRequest({\n        command: PrivateAPI.Commands.UpdateButton,\n        id: this._id,\n        icon: iconPath,\n        tooltip: tooltipText,\n        disabled: Boolean(disabled),\n      });\n    },\n  };\n\n  function canAccessResource(resource: APIImpl.ResourceData): boolean {\n    try {\n      return extensionInfo.allowFileAccess || (new URL(resource.url)).protocol !== 'file:';\n    } catch (e) {\n      return false;\n    }\n  }\n\n  function InspectedWindow(this: PublicAPI.Chrome.DevTools.InspectedWindow): void {\n    function dispatchResourceEvent(\n        this: APIImpl.EventSink<(resource: APIImpl.Resource) => unknown>, message: {arguments: unknown[]}): void {\n      const resourceData = message.arguments[0] as APIImpl.ResourceData;\n      if (!canAccessResource(resourceData)) {\n        return;\n      }\n      this._fire(new (Constructor(Resource))(resourceData));\n    }\n\n    function dispatchResourceContentEvent(\n        this: APIImpl.EventSink<(resource: APIImpl.Resource, content: string) => unknown>,\n        message: {arguments: unknown[]}): void {\n      const resourceData = message.arguments[0] as APIImpl.ResourceData;\n      if (!canAccessResource(resourceData)) {\n        return;\n      }\n      this._fire(new (Constructor(Resource))(resourceData), message.arguments[1] as string);\n    }\n\n    this.onResourceAdded = new (Constructor(EventSink))(PrivateAPI.Events.ResourceAdded, dispatchResourceEvent);\n    this.onResourceContentCommitted =\n        new (Constructor(EventSink))(PrivateAPI.Events.ResourceContentCommitted, dispatchResourceContentEvent);\n  }\n\n  (InspectedWindow.prototype as Pick<PublicAPI.Chrome.DevTools.InspectedWindow, 'reload'|'eval'|'getResources'>) = {\n    reload: function(optionsOrUserAgent: {\n      ignoreCache?: boolean,\n      injectedScript?: string,\n      userAgent?: string,\n    }): void {\n      let options: {\n        ignoreCache?: boolean,\n        injectedScript?: string,\n        userAgent?: string,\n      }|null = null;\n      if (typeof optionsOrUserAgent === 'object') {\n        options = optionsOrUserAgent;\n      } else if (typeof optionsOrUserAgent === 'string') {\n        options = {userAgent: optionsOrUserAgent};\n        console.warn(\n            'Passing userAgent as string parameter to inspectedWindow.reload() is deprecated. ' +\n            'Use inspectedWindow.reload({ userAgent: value}) instead.');\n      }\n      extensionServer.sendRequest({command: PrivateAPI.Commands.Reload, options: options});\n    },\n\n    eval: function(\n              expression: string,\n              evaluateOptions: {scriptExecutionContext?: string, frameURL?: string, useContentScriptContext?: boolean}):\n              Object |\n        null {\n          const callback = extractCallbackArgument(arguments);\n          function callbackWrapper(result: unknown): void {\n            const {isError, isException, value} = result as {\n              isError?: boolean,\n              isException?: boolean, value: unknown,\n            };\n            if (isError || isException) {\n              callback && callback(undefined, result);\n            } else {\n              callback && callback(value);\n            }\n          }\n          extensionServer.sendRequest(\n              {\n                command: PrivateAPI.Commands.EvaluateOnInspectedPage,\n                expression: expression,\n                evaluateOptions: (typeof evaluateOptions === 'object' ? evaluateOptions : undefined),\n              },\n              callback && callbackWrapper);\n          return null;\n        },\n\n    getResources: function(callback?: (resources: PublicAPI.Chrome.DevTools.Resource[]) => unknown): void {\n      function wrapResource(resourceData: APIImpl.ResourceData): APIImpl.Resource {\n        return new (Constructor(Resource))(resourceData);\n      }\n      function callbackWrapper(resources: unknown): void {\n        callback && callback((resources as APIImpl.ResourceData[]).filter(canAccessResource).map(wrapResource));\n      }\n      extensionServer.sendRequest({command: PrivateAPI.Commands.GetPageResources}, callback && callbackWrapper);\n    },\n  };\n\n  function ResourceImpl(this: APIImpl.Resource, resourceData: APIImpl.ResourceData): void {\n    if (!canAccessResource(resourceData)) {\n      throw new Error('Resource access not allowed');\n    }\n    this._url = resourceData.url;\n    this._type = resourceData.type;\n  }\n\n  (ResourceImpl.prototype as Pick<APIImpl.Resource, 'url'|'type'|'getContent'|'setContent'>) = {\n    get url(): string {\n      return (this as APIImpl.Resource)._url;\n    },\n\n    get type(): string {\n      return (this as APIImpl.Resource)._type;\n    },\n\n    getContent: function(this: APIImpl.Resource, callback?: (content: string, encoding: string) => unknown): void {\n      function callbackWrapper(response: unknown): void {\n        const {content, encoding} = response as {content: string, encoding: string};\n        callback && callback(content, encoding);\n      }\n\n      extensionServer.sendRequest(\n          {command: PrivateAPI.Commands.GetResourceContent, url: this._url}, callback && callbackWrapper);\n    },\n\n    setContent: function(\n        this: APIImpl.Resource, content: string, commit: boolean, callback: (error?: Object) => unknown): void {\n      extensionServer.sendRequest(\n          {command: PrivateAPI.Commands.SetResourceContent, url: this._url, content: content, commit: commit},\n          callback as (response: unknown) => unknown);\n    },\n  };\n\n  function getTabId(): string {\n    return inspectedTabId;\n  }\n\n  let keyboardEventRequestQueue: KeyboardEventInit&{eventType: string}[] = [];\n  let forwardTimer: number|null = null;\n  function forwardKeyboardEvent(event: KeyboardEvent): void {\n    // Check if the event should be forwarded.\n    // This is a workaround for crbug.com/923338.\n    const focused = document.activeElement;\n    if (focused) {\n      const isInput =\n          focused.nodeName === 'INPUT' || focused.nodeName === 'TEXTAREA' || (focused as HTMLElement).isContentEditable;\n      if (isInput && !(event.ctrlKey || event.altKey || event.metaKey)) {\n        return;\n      }\n    }\n\n    let modifiers = 0;\n    if (event.shiftKey) {\n      modifiers |= 1;\n    }\n    if (event.ctrlKey) {\n      modifiers |= 2;\n    }\n    if (event.altKey) {\n      modifiers |= 4;\n    }\n    if (event.metaKey) {\n      modifiers |= 8;\n    }\n    const num = (event.keyCode & 255) | (modifiers << 8);\n    // We only care about global hotkeys, not about random text\n    if (!keysToForwardSet.has(num)) {\n      return;\n    }\n    event.preventDefault();\n    const requestPayload = {\n      eventType: event.type,\n      ctrlKey: event.ctrlKey,\n      altKey: event.altKey,\n      metaKey: event.metaKey,\n      shiftKey: event.shiftKey,\n      // @ts-expect-error keyIdentifier is a deprecated non-standard property that typescript doesn't know about.\n      keyIdentifier: event.keyIdentifier,\n      key: event.key,\n      code: event.code,\n      location: event.location,\n      keyCode: event.keyCode,\n    };\n    keyboardEventRequestQueue.push(requestPayload);\n    if (!forwardTimer) {\n      forwardTimer = window.setTimeout(forwardEventQueue, 0);\n    }\n  }\n\n  function forwardEventQueue(): void {\n    forwardTimer = null;\n    extensionServer.sendRequest(\n        {command: PrivateAPI.Commands.ForwardKeyboardEvent, entries: keyboardEventRequestQueue});\n    keyboardEventRequestQueue = [];\n  }\n\n  document.addEventListener('keydown', forwardKeyboardEvent, false);\n\n  function ExtensionServerClient(this: APIImpl.ExtensionServerClient, targetWindow: Window): void {\n    this._callbacks = {};\n    this._handlers = {};\n    this._lastRequestId = 0;\n    this._lastObjectId = 0;\n\n    this.registerHandler('callback', this._onCallback.bind(this));\n\n    const channel = new MessageChannel();\n    this._port = channel.port1;\n    this._port.addEventListener('message', this._onMessage.bind(this), false);\n    this._port.start();\n\n    targetWindow.postMessage('registerExtension', '*', [channel.port2]);\n  }\n\n  (ExtensionServerClient.prototype as Pick<\n       APIImpl.ExtensionServerClient,\n       'sendRequest'|'hasHandler'|'registerHandler'|'unregisterHandler'|'nextObjectId'|'_registerCallback'|\n       '_onCallback'|'_onMessage'>) = {\n    sendRequest: function<ResponseT>(\n        this: APIImpl.ExtensionServerClient, message: PrivateAPI.ServerRequests,\n        callback?: (response: ResponseT) => unknown, transfers?: Transferable[]): void {\n      if (typeof callback === 'function') {\n        (message as PrivateAPI.ExtensionServerRequestMessage).requestId =\n            this._registerCallback(callback as (response: unknown) => unknown);\n      }\n      // @ts-expect-error\n      this._port.postMessage(message, transfers);\n    },\n\n    hasHandler: function(this: APIImpl.ExtensionServerClient, command: string): boolean {\n      return Boolean(this._handlers[command]);\n    },\n\n    registerHandler: function(\n        this: APIImpl.ExtensionServerClient, command: string, handler: (request: {arguments: unknown[]}) => unknown):\n        void {\n          this._handlers[command] = handler;\n        },\n\n    unregisterHandler: function(this: APIImpl.ExtensionServerClient, command: string): void {\n      delete this._handlers[command];\n    },\n\n    nextObjectId: function(this: APIImpl.ExtensionServerClient): string {\n      return injectedScriptId.toString() + '_' + ++this._lastObjectId;\n    },\n\n    _registerCallback: function(this: APIImpl.ExtensionServerClient, callback: (response: unknown) => unknown): number {\n      const id = ++this._lastRequestId;\n      this._callbacks[id] = callback;\n      return id;\n    },\n\n    _onCallback: function(this: APIImpl.ExtensionServerClient, request: {requestId: number, result: unknown}): void {\n      if (request.requestId in this._callbacks) {\n        const callback = this._callbacks[request.requestId];\n        delete this._callbacks[request.requestId];\n        callback(request.result);\n      }\n    },\n\n    _onMessage: function(\n        this: APIImpl.ExtensionServerClient,\n        event: MessageEvent<{command: string, requestId: number, arguments: unknown[]}>): void {\n      const request = event.data;\n      const handler = this._handlers[request.command];\n      if (handler) {\n        handler.call(this, request);\n      }\n    },\n  };\n\n  function populateInterfaceClass(interfaze: {[key: string]: unknown}, implementation: {[key: string]: unknown}): void {\n    for (const member in implementation) {\n      if (member.charAt(0) === '_') {\n        continue;\n      }\n      let descriptor: (PropertyDescriptor|undefined)|null = null;\n      // Traverse prototype chain until we find the owner.\n      for (let owner = implementation; owner && !descriptor; owner = owner.__proto__ as {[key: string]: unknown}) {\n        descriptor = Object.getOwnPropertyDescriptor(owner, member);\n      }\n      if (!descriptor) {\n        continue;\n      }\n      if (typeof descriptor.value === 'function') {\n        interfaze[member] = descriptor.value.bind(implementation);\n      } else if (typeof descriptor.get === 'function') {\n        // @ts-expect-error\n        interfaze.__defineGetter__(member, descriptor.get.bind(implementation));\n      } else {\n        Object.defineProperty(interfaze, member, descriptor);\n      }\n    }\n  }\n\n  const extensionServer = new (Constructor(ExtensionServerClient))(targetWindowForTest || window.parent);\n\n  const coreAPI = new (Constructor(InspectorExtensionAPI))();\n\n  Object.defineProperty(chrome, 'devtools', {value: {}, enumerable: true});\n\n  // Only expose tabId on chrome.devtools.inspectedWindow, not webInspector.inspectedWindow.\n  // @ts-expect-error\n  chrome.devtools!.inspectedWindow = {};\n  Object.defineProperty(chrome.devtools!.inspectedWindow, 'tabId', {get: getTabId});\n  // @ts-expect-error\n  chrome.devtools!.inspectedWindow.__proto__ = coreAPI.inspectedWindow;\n  chrome.devtools!.network = coreAPI.network;\n  chrome.devtools!.panels = coreAPI.panels;\n  chrome.devtools!.panels.themeName = themeName;\n  chrome.devtools!.languageServices = coreAPI.languageServices;\n  chrome.devtools!.recorder = coreAPI.recorder;\n  chrome.devtools!.performance = coreAPI.performance;\n\n  // default to expose experimental APIs for now.\n  if (extensionInfo.exposeExperimentalAPIs !== false) {\n    chrome.experimental = chrome.experimental || {};\n    chrome.experimental.devtools = chrome.experimental.devtools || {};\n\n    const properties = Object.getOwnPropertyNames(coreAPI);\n    for (let i = 0; i < properties.length; ++i) {\n      const descriptor = Object.getOwnPropertyDescriptor(coreAPI, properties[i]);\n      if (descriptor) {\n        Object.defineProperty(chrome.experimental.devtools, properties[i], descriptor);\n      }\n    }\n    chrome.experimental.devtools.inspectedWindow = chrome.devtools.inspectedWindow;\n  }\n\n  if (extensionInfo.exposeWebInspectorNamespace) {\n    window.webInspector = coreAPI;\n  }\n  testHook(extensionServer, coreAPI);\n};\n\nself.buildExtensionAPIInjectedScript = function(\n    extensionInfo: {\n      startPage: string,\n      name: string,\n      exposeExperimentalAPIs: boolean,\n    },\n    inspectedTabId: string, themeName: string, keysToForward: number[],\n    testHook:\n        ((extensionServer: APIImpl.ExtensionServerClient, extensionAPI: APIImpl.InspectorExtensionAPI) => unknown)|\n    undefined): string {\n  const argumentsJSON =\n      [extensionInfo, inspectedTabId || null, themeName, keysToForward].map(_ => JSON.stringify(_)).join(',');\n  if (!testHook) {\n    testHook = (): void => {};\n  }\n  return '(function(injectedScriptId){ ' +\n      '(' + self.injectedExtensionAPI.toString() + ')(' + argumentsJSON + ',' + testHook + ', injectedScriptId);' +\n      '})';\n};\n"]}