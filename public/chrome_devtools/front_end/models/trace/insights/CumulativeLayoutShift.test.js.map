{"version":3,"file":"CumulativeLayoutShift.test.js","sourceRoot":"","sources":["../../../../../../../front_end/models/trace/insights/CumulativeLayoutShift.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {TraceLoader} from '../../../testing/TraceLoader.js';\nimport * as Helpers from '../helpers/helpers.js';\nimport * as TraceModel from '../trace.js';\nimport * as Types from '../types/types.js';\n\nimport {InsightRunners} from './insights.js';\n\n// Root cause invalidation window.\nconst INVALIDATION_WINDOW = Helpers.Timing.secondsToMicroseconds(Types.Timing.Seconds(0.5));\n\ndescribe('CumulativeLayoutShift', function() {\n  describe('non composited animations', function() {\n    it('gets the correct non composited animations', async function() {\n      const data = await TraceLoader.traceEngine(this, 'non-composited-animation.json.gz');\n      const context = {\n        frameId: data.Meta.mainFrameId,\n        navigationId: data.Meta.navigationsByNavigationId.keys().next().value,\n      };\n      const {animationFailures} =\n          TraceModel.Insights.InsightRunners.CumulativeLayoutShift.generateInsight(data, context);\n      const expected: InsightRunners.CumulativeLayoutShift.NoncompositedAnimationFailure[] = [\n        {\n          name: 'simple-animation',\n          failureReasons: [InsightRunners.CumulativeLayoutShift.AnimationFailureReasons.UNSUPPORTED_CSS_PROPERTY],\n          unsupportedProperties: ['color'],\n        },\n        {\n          name: 'top',\n          failureReasons: [InsightRunners.CumulativeLayoutShift.AnimationFailureReasons.UNSUPPORTED_CSS_PROPERTY],\n          unsupportedProperties: ['top'],\n        },\n      ];\n      assert.deepStrictEqual(animationFailures, expected);\n    });\n    it('returns no insights when there are no non-composited animations', async function() {\n      const data = await TraceLoader.traceEngine(this, 'lcp-images.json.gz');\n      const context = {\n        frameId: data.Meta.mainFrameId,\n        navigationId: data.Meta.navigationsByNavigationId.keys().next().value,\n      };\n      const {animationFailures} =\n          TraceModel.Insights.InsightRunners.CumulativeLayoutShift.generateInsight(data, context);\n      assert.isEmpty(animationFailures);\n    });\n  });\n  describe('layout shifts', function() {\n    it('returns correct layout shifts', async function() {\n      const data = await TraceLoader.traceEngine(this, 'cls-single-frame.json.gz');\n      const context = {\n        frameId: data.Meta.mainFrameId,\n        navigationId: data.Meta.navigationsByNavigationId.keys().next().value,\n      };\n      const {shifts} = TraceModel.Insights.InsightRunners.CumulativeLayoutShift.generateInsight(data, context);\n      assert.exists(shifts);\n      assert.strictEqual(shifts.size, 7);\n    });\n\n    describe('root causes', function() {\n      it('handles potential iframe root cause correctly', async function() {\n        // Trace has a single iframe that gets created before the first layout shift and causes a layout shift.\n        const data = await TraceLoader.traceEngine(this, 'iframe-shift.json.gz');\n        const context = {\n          frameId: data.Meta.mainFrameId,\n          navigationId: data.Meta.navigationsByNavigationId.keys().next().value,\n        };\n        const {shifts} = TraceModel.Insights.InsightRunners.CumulativeLayoutShift.generateInsight(data, context);\n        assert.exists(shifts);\n        assert.strictEqual(shifts.size, 3);\n\n        const shift1 = Array.from(shifts)[0][0];\n        const shiftIframes = shifts.get(shift1)?.iframes;\n        assert.exists(shiftIframes);\n        assert.strictEqual(shiftIframes.length, 1);\n\n        const iframe = shiftIframes[0];\n        const iframeEndTime = iframe.dur ? iframe.ts + iframe.dur : iframe.ts;\n        // Ensure the iframe happens within the invalidation window.\n        assert.isTrue(iframeEndTime < shift1.ts && iframeEndTime >= shift1.ts - INVALIDATION_WINDOW);\n\n        // Other shifts should not have iframe root causes.\n        const shift2 = Array.from(shifts)[1][0];\n        assert.isEmpty(shifts.get(shift2)?.iframes);\n        const shift3 = Array.from(shifts)[2][0];\n        assert.isEmpty(shifts.get(shift3)?.iframes);\n      });\n\n      it('handles potential font root cause correctly', async function() {\n        // Trace has font load before the second layout shift.\n        const data = await TraceLoader.traceEngine(this, 'iframe-shift.json.gz');\n        const context = {\n          frameId: data.Meta.mainFrameId,\n          navigationId: data.Meta.navigationsByNavigationId.keys().next().value,\n        };\n        const {shifts} = TraceModel.Insights.InsightRunners.CumulativeLayoutShift.generateInsight(data, context);\n        assert.exists(shifts);\n        assert.strictEqual(shifts.size, 3);\n\n        const layoutShiftEvents = Array.from(shifts.entries());\n\n        const shift2 = layoutShiftEvents.at(1);\n        assert.isOk(shift2);\n        const shiftEvent = shift2[0];\n\n        const shiftFonts = shift2[1].fontRequests;\n        assert.exists(shiftFonts);\n        assert.strictEqual(shiftFonts.length, 1);\n\n        const fontRequest = shiftFonts[0];\n        const fontRequestEndTime = fontRequest.ts + fontRequest.dur;\n        // Ensure the font loads within the invalidation window.\n        assert.isTrue(fontRequestEndTime < shiftEvent.ts && fontRequestEndTime >= shiftEvent.ts - INVALIDATION_WINDOW);\n\n        // Other shifts should not have font root causes.\n        const shift1 = layoutShiftEvents.at(0);\n        assert.isOk(shift1);\n        assert.isEmpty(shift1[1].fontRequests);\n\n        const shift3 = layoutShiftEvents.at(2);\n        assert.isOk(shift3);\n        assert.isEmpty(shift3[1].fontRequests);\n      });\n    });\n  });\n});\n"]}