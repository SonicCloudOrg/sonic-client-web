{"version":3,"file":"LargestContentfulPaint.test.js","sourceRoot":"","sources":["../../../../../../../front_end/models/trace/insights/LargestContentfulPaint.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {TraceLoader} from '../../../testing/TraceLoader.js';\nimport * as TraceModel from '../trace.js';\nimport * as Types from '../types/types.js';\n\nasync function setupTraceData(testContext: Mocha.Suite|Mocha.Context|null, traceFile: string) {\n  const {NetworkRequests, LargestImagePaint, Meta, PageLoadMetrics} =\n      await TraceLoader.traceEngine(testContext, traceFile);\n  const data = {\n    NetworkRequests,\n    LargestImagePaint,\n    Meta,\n    PageLoadMetrics,\n  } as TraceModel.Handlers.Types.EnabledHandlerDataWithMeta<typeof TraceModel.Handlers.ModelHandlers>;\n\n  return data;\n}\n\ndescribe('LargestContentfulPaint', function() {\n  it('text lcp phases', async () => {\n    const data = await setupTraceData(this, 'lcp-web-font.json.gz');\n    const context = {\n      frameId: data.Meta.mainFrameId,\n      navigationId: data.Meta.navigationsByNavigationId.keys().next().value,\n    };\n\n    const insight = TraceModel.Insights.InsightRunners.LargestContentfulPaint.generateInsight(data, context);\n\n    assert.strictEqual(insight.lcpMs, 106.482);\n\n    const wantTtfb = Types.Timing.MilliSeconds(6.115);\n    const wantRenderDelay = Types.Timing.MilliSeconds(100.367);\n    assert.deepEqual(insight.phases, {ttfb: wantTtfb, renderDelay: wantRenderDelay});\n  });\n  it('image lcp phases', async () => {\n    const data = await setupTraceData(this, 'lcp-images.json.gz');\n    const context = {\n      frameId: data.Meta.mainFrameId,\n      navigationId: data.Meta.navigationsByNavigationId.keys().next().value,\n    };\n\n    const insight = TraceModel.Insights.InsightRunners.LargestContentfulPaint.generateInsight(data, context);\n\n    assert.strictEqual(insight.lcpMs, 109.623);\n\n    if (!insight.phases) {\n      throw new Error('No LCP phases');\n    }\n\n    const phases = {\n      ttfb: insight.phases.ttfb?.toFixed(2),\n      loadTime: insight.phases.loadTime?.toFixed(2),\n      loadDelay: insight.phases.loadDelay?.toFixed(2),\n      renderDelay: insight.phases.renderDelay?.toFixed(2),\n    };\n    assert.deepEqual(phases, {ttfb: '6.94', loadTime: '12.09', loadDelay: '33.74', renderDelay: '56.85'});\n  });\n  it('image lcp attributes', async () => {\n    const data = await setupTraceData(this, 'lcp-images.json.gz');\n    const context = {\n      frameId: data.Meta.mainFrameId,\n      navigationId: data.Meta.navigationsByNavigationId.keys().next().value,\n    };\n\n    const {shouldIncreasePriorityHint, shouldPreloadImage, shouldRemoveLazyLoading} =\n        TraceModel.Insights.InsightRunners.LargestContentfulPaint.generateInsight(data, context);\n\n    assert.strictEqual(shouldRemoveLazyLoading, false);\n    assert.strictEqual(shouldPreloadImage, true);\n    assert.strictEqual(shouldIncreasePriorityHint, true);\n  });\n  describe('warnings', function() {\n    it('no lcp', async () => {\n      const data = await setupTraceData(this, 'user-timings.json.gz');\n      const context = {\n        frameId: data.Meta.mainFrameId,\n        navigationId: data.Meta.navigationsByNavigationId.keys().next().value,\n      };\n\n      const insight = TraceModel.Insights.InsightRunners.LargestContentfulPaint.generateInsight(data, context);\n\n      assert.strictEqual(insight.lcpMs, undefined);\n      assert.strictEqual(insight.phases, undefined);\n      assert.strictEqual(insight.warnings?.[0], 'NO_LCP');\n    });\n    it('no main document url', async () => {\n      const data = await setupTraceData(this, 'about-blank-first.json.gz');\n      const context = {\n        frameId: data.Meta.mainFrameId,\n        navigationId: data.Meta.navigationsByNavigationId.keys().next().value,\n      };\n\n      const insight = TraceModel.Insights.InsightRunners.LargestContentfulPaint.generateInsight(data, context);\n\n      assert.strictEqual(insight.lcpMs, 204.909);\n      assert.strictEqual(insight.phases, undefined);\n      assert.strictEqual(insight.warnings?.[0], 'NO_DOCUMENT_REQUEST');\n    });\n  });\n});\n"]}