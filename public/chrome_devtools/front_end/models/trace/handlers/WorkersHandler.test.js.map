{"version":3,"file":"WorkersHandler.test.js","sourceRoot":"","sources":["../../../../../../../front_end/models/trace/handlers/WorkersHandler.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {TraceLoader} from '../../../testing/TraceLoader.js';\nimport * as TraceEngine from '../trace.js';\n\ndescribe('WorkersHandler', () => {\n  beforeEach(async function() {\n    TraceEngine.Handlers.ModelHandlers.Workers.reset();\n    const events = await TraceLoader.rawEvents(this, 'two-workers.json.gz');\n    TraceEngine.Handlers.ModelHandlers.Workers.initialize();\n    for (const event of events) {\n      TraceEngine.Handlers.ModelHandlers.Workers.handleEvent(event);\n    }\n    await TraceEngine.Handlers.ModelHandlers.Workers.finalize();\n  });\n  afterEach(() => {\n    TraceEngine.Handlers.ModelHandlers.Workers.reset();\n  });\n\n  it('collects the worker session ID metadata events', async function() {\n    const data = TraceEngine.Handlers.ModelHandlers.Workers.data();\n    assert.deepEqual(data.workerSessionIdEvents, [\n      {\n        name: 'TracingSessionIdForWorker',\n        cat: 'disabled-by-default-devtools.timeline',\n        ph: TraceEngine.Types.TraceEvents.Phase.INSTANT,\n        tid: TraceEngine.Types.TraceEvents.ThreadID(37651),\n        pid: TraceEngine.Types.TraceEvents.ProcessID(71044),\n        s: TraceEngine.Types.TraceEvents.TraceEventScope.THREAD,\n        ts: TraceEngine.Types.Timing.MicroSeconds(107351291649),\n        tts: TraceEngine.Types.Timing.MicroSeconds(934),\n        args: {\n          data: {\n            frame: '372333E30ECABDA706136ED37FD9FA2B',\n            url: 'https://chromedevtools.github.io/performance-stories/two-workers/fib-worker.js',\n            workerId: TraceEngine.Types.TraceEvents.WorkerId('990A76F8BED5B771144F505FF9313D06'),\n            workerThreadId: TraceEngine.Types.TraceEvents.ThreadID(37651),\n          },\n        },\n      },\n      {\n        name: 'TracingSessionIdForWorker',\n        cat: 'disabled-by-default-devtools.timeline',\n        ph: TraceEngine.Types.TraceEvents.Phase.INSTANT,\n        tid: TraceEngine.Types.TraceEvents.ThreadID(35351),\n        pid: TraceEngine.Types.TraceEvents.ProcessID(71044),\n        s: TraceEngine.Types.TraceEvents.TraceEventScope.THREAD,\n        ts: TraceEngine.Types.Timing.MicroSeconds(107351292507),\n        tts: TraceEngine.Types.Timing.MicroSeconds(817),\n        args: {\n          data: {\n            frame: '372333E30ECABDA706136ED37FD9FA2B',\n            url: 'https://chromedevtools.github.io/performance-stories/two-workers/fib-worker.js',\n            workerId: TraceEngine.Types.TraceEvents.WorkerId('E59E70C44C7664657CE822BB7DC54085'),\n            workerThreadId: TraceEngine.Types.TraceEvents.ThreadID(35351),\n          },\n        },\n      },\n    ]);\n  });\n\n  it('collects thread id for workers', async function() {\n    const data = TraceEngine.Handlers.ModelHandlers.Workers.data();\n    const [[thread1, worker1], [thread2, worker2]] = data.workerIdByThread.entries();\n    assert.strictEqual(thread1, 37651);\n    assert.strictEqual(worker1, '990A76F8BED5B771144F505FF9313D06');\n    assert.strictEqual(thread2, 35351);\n    assert.strictEqual(worker2, 'E59E70C44C7664657CE822BB7DC54085');\n  });\n\n  it('collects the url of workers', async function() {\n    const data = TraceEngine.Handlers.ModelHandlers.Workers.data();\n    const [[thread1, worker1], [thread2, worker2]] = data.workerURLById.entries();\n    assert.strictEqual(thread1, '990A76F8BED5B771144F505FF9313D06');\n    assert.strictEqual(worker1, 'https://chromedevtools.github.io/performance-stories/two-workers/fib-worker.js');\n    assert.strictEqual(thread2, 'E59E70C44C7664657CE822BB7DC54085');\n    assert.strictEqual(worker2, 'https://chromedevtools.github.io/performance-stories/two-workers/fib-worker.js');\n  });\n});\n"]}