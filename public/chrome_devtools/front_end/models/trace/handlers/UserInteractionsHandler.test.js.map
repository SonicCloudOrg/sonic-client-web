{"version":3,"file":"UserInteractionsHandler.test.js","sourceRoot":"","sources":["../../../../../../../front_end/models/trace/handlers/UserInteractionsHandler.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {TraceLoader} from '../../../testing/TraceLoader.js';\nimport * as TraceModel from '../trace.js';\n\nasync function processTrace(context: Mocha.Suite|Mocha.Context|null, path: string): Promise<void> {\n  const traceEvents = await TraceLoader.rawEvents(context, path);\n  TraceModel.Handlers.ModelHandlers.Meta.reset();\n  TraceModel.Handlers.ModelHandlers.Meta.initialize();\n  for (const event of traceEvents) {\n    TraceModel.Handlers.ModelHandlers.Meta.handleEvent(event);\n    TraceModel.Handlers.ModelHandlers.UserInteractions.handleEvent(event);\n  }\n  await TraceModel.Handlers.ModelHandlers.Meta.finalize();\n  await TraceModel.Handlers.ModelHandlers.UserInteractions.finalize();\n}\n\nbeforeEach(() => {\n  TraceModel.Handlers.ModelHandlers.Meta.reset();\n  TraceModel.Handlers.ModelHandlers.Meta.initialize();\n});\n\ndescribe('UserInteractionsHandler', function() {\n  describe('error handling', () => {\n    it('throws if not initialized', async () => {\n      TraceModel.Handlers.ModelHandlers.Meta.reset();\n      TraceModel.Handlers.ModelHandlers.Meta.initialize();\n\n      // Finalize the handler by calling data and then finalize on it.\n      TraceModel.Handlers.ModelHandlers.UserInteractions.data();\n      await TraceModel.Handlers.ModelHandlers.Meta.finalize();\n      await TraceModel.Handlers.ModelHandlers.UserInteractions.finalize();\n\n      assert.throws(() => {\n        const fakeEvent = {} as TraceModel.Types.TraceEvents.TraceEventData;\n        TraceModel.Handlers.ModelHandlers.UserInteractions.handleEvent(fakeEvent);\n      }, 'Handler is not initialized');\n    });\n  });\n\n  it('returns all user interactions', async function() {\n    const traceEvents = await TraceLoader.rawEvents(this, 'slow-interaction-button-click.json.gz');\n    for (const event of traceEvents) {\n      TraceModel.Handlers.ModelHandlers.UserInteractions.handleEvent(event);\n    }\n\n    const data = TraceModel.Handlers.ModelHandlers.UserInteractions.data();\n    const clicks = data.allEvents.filter(event => {\n      if (!event.args.data) {\n        return false;\n      }\n\n      return event.args.data.type === 'click';\n    });\n\n    assert.strictEqual(data.allEvents.length, 58);\n    assert.strictEqual(clicks.length, 1);\n  });\n\n  it('returns all interaction events', async () => {\n    await processTrace(this, 'slow-interaction-button-click.json.gz');\n    const data = TraceModel.Handlers.ModelHandlers.UserInteractions.data();\n    // There are three inct interactions:\n    // pointerdown on the button (start of the click)\n    // pointerup & click on the button (end of the click)\n    assert.strictEqual(data.interactionEvents.length, 3);\n  });\n\n  it('adds microsecond processingStart and processingEnd times to the synthetic event', async function() {\n    await processTrace(this, 'one-second-interaction.json.gz');\n    const data = TraceModel.Handlers.ModelHandlers.UserInteractions.data();\n    const oneSecondInteraction = Array.from(data.interactionEvents).find(entry => {\n      return entry.dur === 979974 && entry.type === 'click';\n    });\n    if (!oneSecondInteraction) {\n      throw new Error('Could not find interaction');\n    }\n\n    assert.strictEqual(oneSecondInteraction.processingStart, 141251950944);\n    assert.strictEqual(oneSecondInteraction.processingEnd, 141252927944);\n  });\n\n  it('adds the INP phases to the interaction', async function() {\n    await processTrace(this, 'one-second-interaction.json.gz');\n    const data = TraceModel.Handlers.ModelHandlers.UserInteractions.data();\n    const oneSecondInteraction = Array.from(data.interactionEvents).find(entry => {\n      return entry.dur === 979974 && entry.type === 'click';\n    });\n    if (!oneSecondInteraction) {\n      throw new Error('Could not find interaction');\n    }\n\n    // These numbers do seem suspciously round: that is because they are from\n    // converted millisecond values and this is expected.\n    assert.strictEqual(oneSecondInteraction.inputDelay, 1_000);\n    assert.strictEqual(oneSecondInteraction.mainThreadHandling, 977_000);\n    assert.strictEqual(oneSecondInteraction.presentationDelay, 1974);\n  });\n\n  it('identifies the longest interaction', async () => {\n    await processTrace(this, 'slow-interaction-keydown.json.gz');\n    const data = TraceModel.Handlers.ModelHandlers.UserInteractions.data();\n    assert.lengthOf(data.interactionEvents, 5);\n\n    const expectedLongestEvent = data.interactionEvents.find(event => {\n      return event.type === 'keydown' && event.interactionId === 7378;\n    });\n    assert.strictEqual(data.longestInteractionEvent, expectedLongestEvent);\n  });\n\n  it('returns a set of all interactions that exceed the threshold', async () => {\n    await processTrace(this, 'one-second-interaction.json.gz');\n    const data = TraceModel.Handlers.ModelHandlers.UserInteractions.data();\n    // There are two long interactions: the pointerup, and the click.\n    assert.strictEqual(data.interactionsOverThreshold.size, 2);\n  });\n\n  it('does not include interactions below the threshold', async () => {\n    await processTrace(this, 'slow-interaction-keydown.json.gz');\n    const data = TraceModel.Handlers.ModelHandlers.UserInteractions.data();\n    // All the interactions in this trace are < 200ms\n    assert.strictEqual(data.interactionsOverThreshold.size, 0);\n  });\n\n  it('sets the `dur` key on each event by finding the begin and end events and subtracting the ts', async () => {\n    await processTrace(this, 'slow-interaction-button-click.json.gz');\n    const data = TraceModel.Handlers.ModelHandlers.UserInteractions.data();\n    for (const syntheticEvent of data.interactionEvents) {\n      assert.strictEqual(\n          syntheticEvent.dur, syntheticEvent.args.data.endEvent.ts - syntheticEvent.args.data.beginEvent.ts);\n    }\n  });\n\n  it('gets the right interaction IDs for each interaction', async () => {\n    await processTrace(this, 'slow-interaction-button-click.json.gz');\n    const data = TraceModel.Handlers.ModelHandlers.UserInteractions.data();\n    assert.deepEqual(data.interactionEvents.map(i => i.interactionId), [\n      // pointerdown, pointerup and click are all from the same interaction\n      1540,\n      1540,\n      1540,\n    ]);\n  });\n\n  it('gets the right interaction IDs for a keypress interaction', async () => {\n    await processTrace(this, 'slow-interaction-keydown.json.gz');\n    const data = TraceModel.Handlers.ModelHandlers.UserInteractions.data();\n    assert.deepEqual(data.interactionEvents.map(i => i.interactionId), [\n      // pointerdown from clicking on the input\n      7371,\n      // pointerup from clicking on the input\n      7371,\n      // click from clicking on the input\n      7371,\n      // keydown from typing character\n      7378,\n      // keyup from typing character\n      7378,\n    ]);\n  });\n\n  it('detects correct events for a click and keydown interaction', async () => {\n    await processTrace(this, 'slow-interaction-keydown.json.gz');\n    const data = TraceModel.Handlers.ModelHandlers.UserInteractions.data();\n    const foundInteractions =\n        data.allEvents.filter(e => e.args.data && e.args.data.duration > 1 && e.args.data.interactionId);\n    // We expect there to be 3 interactions:\n    // User clicks on input:\n    // 1.pointerdown, 2. pointerup, 3. click\n    // User types into input:\n    // 4. keydown, 5. keyup\n    assert.deepEqual(\n        foundInteractions.map(event => event.args.data?.type),\n        ['pointerdown', 'pointerup', 'click', 'keydown', 'keyup']);\n\n    assert.deepEqual(foundInteractions.map(e => e.args.data?.interactionId), [\n      // The first three events relate to the click, so they have the same InteractionID\n      7371,\n      7371,\n      7371,\n      // The final two relate to the keypress, so they have the same InteractionID\n      7378,\n      7378,\n    ]);\n  });\n\n  it('finds all interaction events with a duration and interactionId', async () => {\n    const events = [\n      {\n        cat: 'devtools.timeline',\n        ph: TraceModel.Types.TraceEvents.Phase.ASYNC_NESTABLE_START,\n        pid: 1537729,  // the Renderer Thread\n        tid: 1,        // CrRendererMain\n        id: '1234',\n        ts: 10,\n        dur: 500,\n        scope: 'scope',\n        name: 'EventTiming',\n        args: {\n          data: {\n            'duration': 16,\n            'interactionId': 9700,\n            'nodeId': 0,\n            'processingEnd': 993,\n            'processingStart': 993,\n            'timeStamp': 985,\n            'type': 'pointerdown',\n          },\n        },\n      },\n      // Has an interactionId of 0, so should NOT be included.\n      {\n        cat: 'devtools.timeline',\n        ph: TraceModel.Types.TraceEvents.Phase.ASYNC_NESTABLE_START,\n        pid: 1537729,  // the Renderer Thread\n        tid: 1,        // CrRendererMain\n        id: '1234',\n        ts: 10,\n        dur: 500,\n        scope: 'scope',\n        name: 'EventTiming',\n        args: {\n          data: {\n            'duration': 16,\n            'interactionId': 0,\n            'nodeId': 0,\n            'processingEnd': 993,\n            'processingStart': 993,\n            'timeStamp': 985,\n            'type': 'pointerdown',\n          },\n        },\n      },\n      // Has an duration of 0, so should NOT be included.\n      {\n        cat: 'devtools.timeline',\n        ph: TraceModel.Types.TraceEvents.Phase.ASYNC_NESTABLE_START,\n        pid: 1537729,  // the Renderer Thread\n        tid: 1,        // CrRendererMain\n        id: '1234',\n        ts: 10,\n        dur: 500,\n        scope: 'scope',\n        name: 'EventTiming',\n        args: {\n          data: {\n            'duration': 0,\n            'interactionId': 0,\n            'nodeId': 0,\n            'processingEnd': 993,\n            'processingStart': 993,\n            'timeStamp': 985,\n            'type': 'pointerdown',\n          },\n        },\n      },\n    ] as unknown as TraceModel.Types.TraceEvents.TraceEventEventTiming[];\n    TraceModel.Handlers.ModelHandlers.UserInteractions.reset();\n    for (const event of events) {\n      TraceModel.Handlers.ModelHandlers.UserInteractions.handleEvent(event);\n    }\n    await TraceModel.Handlers.ModelHandlers.Meta.finalize();\n    await TraceModel.Handlers.ModelHandlers.UserInteractions.finalize();\n    const timings = TraceModel.Handlers.ModelHandlers.UserInteractions.data().allEvents;\n    assert.lengthOf(timings, 3);\n  });\n\n  describe('collapsing nested interactions', () => {\n    function makeFakeInteraction(type: string, options: {\n      startTime: number,\n      endTime: number,\n      interactionId: number,\n      processingStart?: number,\n      processingEnd?: number,\n    }): TraceModel.Types.TraceEvents.SyntheticInteractionPair {\n      const event = {\n        name: 'EventTiming',\n        type,\n        ts: TraceModel.Types.Timing.MicroSeconds(options.startTime),\n        dur: TraceModel.Types.Timing.MicroSeconds(options.endTime - options.startTime),\n        processingStart: TraceModel.Types.Timing.MicroSeconds(options.processingStart || 0),\n        processingEnd: TraceModel.Types.Timing.MicroSeconds(options.processingEnd || 0),\n        interactionId: options.interactionId,\n      };\n\n      return event as unknown as TraceModel.Types.TraceEvents.SyntheticInteractionPair;\n    }\n\n    const {removeNestedInteractions} = TraceModel.Handlers.ModelHandlers.UserInteractions;\n\n    it('removes interactions that have the same end time but are not the first event in that block', () => {\n      /**\n       * ========A=============\n       *   ===========B========\n       *   ===========C========\n       *         =====D========\n       */\n      const eventA = makeFakeInteraction('pointerdown', {startTime: 0, endTime: 10, interactionId: 1});\n      const eventB = makeFakeInteraction('pointerdown', {startTime: 2, endTime: 10, interactionId: 2});\n      const eventC = makeFakeInteraction('pointerdown', {startTime: 4, endTime: 10, interactionId: 3});\n      const eventD = makeFakeInteraction('pointerdown', {startTime: 6, endTime: 10, interactionId: 4});\n      const result = removeNestedInteractions([eventA, eventB, eventC, eventD]);\n      assert.deepEqual(result, [eventA]);\n    });\n\n    it('prefers the event with the longer processing start/end if the events have the same ts and dur', () => {\n      // Here we would expect eventA to be used; these events both have the\n      // same interactionId, the same start/end, but different processing\n      // start/end. In this situation we want to use the one with the largest\n      // processing range, as that is more likely accurate to the situation. We\n      // see in traces that other events will have processingStart and\n      // processingEnd set to the same value, which does not provide much\n      // insight compared to picking the event that does have more information\n      // and accurate processing numbers.\n      const eventA = makeFakeInteraction(\n          'pointerdown', {startTime: 0, endTime: 10, interactionId: 1, processingStart: 1, processingEnd: 8});\n      const eventB = makeFakeInteraction(\n          'pointerdown', {startTime: 0, endTime: 10, interactionId: 1, processingStart: 6, processingEnd: 6});\n      const result = removeNestedInteractions([eventA, eventB]);\n      assert.deepEqual(result, [eventA]);\n    });\n\n    it('only collapses events of the same type', () => {\n      /**\n       * Here we should collapse B, because A is bigger and of the same type.\n       * Similarly, we should collapse D, because C is bigger and of the same type.\n       * But C should remain visible, because it is a pointer event, not a key event,\n       * and therefore does not get collapsed into A.\n       * ========A=[keydown]====\n       *   =======B=[keyup]=====\n       *    ====C=[pointerdown]=\n       *         =D=[pointerup]=\n       */\n      const eventA = makeFakeInteraction('keydown', {startTime: 0, endTime: 10, interactionId: 1});\n      const eventB = makeFakeInteraction('keyup', {startTime: 2, endTime: 10, interactionId: 2});\n      const eventC = makeFakeInteraction('pointerdown', {startTime: 4, endTime: 10, interactionId: 3});\n      const eventD = makeFakeInteraction('pointerup', {startTime: 6, endTime: 10, interactionId: 4});\n      const result = removeNestedInteractions([eventA, eventB, eventC, eventD]);\n      assert.deepEqual(result, [eventA, eventC]);\n    });\n\n    it('does not remove interactions that overlap but have a different end time', () => {\n      /**\n       * ========A=============\n       *   ===========B========\n       *   ===========C========\n       *         =====D================\n       */\n      const eventA = makeFakeInteraction('pointerdown', {startTime: 0, endTime: 10, interactionId: 1});\n      const eventB = makeFakeInteraction('pointerdown', {startTime: 2, endTime: 10, interactionId: 2});\n      const eventC = makeFakeInteraction('pointerdown', {startTime: 4, endTime: 10, interactionId: 3});\n      const eventD = makeFakeInteraction('pointerdown', {startTime: 6, endTime: 20, interactionId: 4});\n      const result = removeNestedInteractions([eventA, eventB, eventC, eventD]);\n      assert.deepEqual(result, [eventA, eventD]);\n    });\n\n    it('does not remove interactions with an unexpected type', () => {\n      /**\n       * =====A=[pointerdown]=====\n       *   ===========B=[unknown]=\n       */\n      const eventA = makeFakeInteraction('pointerdown', {startTime: 0, endTime: 10, interactionId: 1});\n      const eventB = makeFakeInteraction('unknown', {startTime: 2, endTime: 10, interactionId: 2});\n      const result = removeNestedInteractions([eventA, eventB]);\n      assert.deepEqual(result, [eventA, eventB]);\n    });\n\n    it('correctly identifies nested events when their parent overlaps with multiple events', () => {\n      /**\n       * Here although it does not look like it on first glance, C is nested\n       * within B and should therefore be hidden. Similarly, D is nested within A and\n       * so should be hidden.\n       *\n       * ========A====== ======C====\n       *   ===========B=============\n       *   ======D======\n       */\n      const eventA = makeFakeInteraction('pointerdown', {startTime: 0, endTime: 5, interactionId: 1});\n      const eventB = makeFakeInteraction('pointerdown', {startTime: 2, endTime: 20, interactionId: 2});\n      const eventC = makeFakeInteraction('pointerdown', {startTime: 10, endTime: 20, interactionId: 3});\n      const eventD = makeFakeInteraction('pointerdown', {startTime: 2, endTime: 5, interactionId: 3});\n      const result = removeNestedInteractions([eventA, eventB, eventC, eventD]);\n      assert.deepEqual(result, [eventA, eventB]);\n    });\n\n    it('returns the events in timestamp order', () => {\n      /**\n       * None of the events below overlap at all, this test makes sure that the order of events does not change.\n       */\n      const eventA = makeFakeInteraction('pointerdown', {startTime: 0, endTime: 5, interactionId: 1});\n      const eventB = makeFakeInteraction('pointerdown', {startTime: 10, endTime: 20, interactionId: 2});\n      const eventC = makeFakeInteraction('pointerdown', {startTime: 30, endTime: 40, interactionId: 3});\n      const eventD = makeFakeInteraction('pointerdown', {startTime: 50, endTime: 60, interactionId: 4});\n      const result = removeNestedInteractions([eventA, eventB, eventC, eventD]);\n      assert.deepEqual(result, [eventA, eventB, eventC, eventD]);\n    });\n\n    it('can remove nested interactions in a real trace', async () => {\n      await processTrace(this, 'nested-interactions.json.gz');\n      const data = TraceModel.Handlers.ModelHandlers.UserInteractions.data();\n\n      const visibleEventInteractionIds = data.interactionEventsWithNoNesting.map(event => {\n        return `${event.type}:${event.interactionId}`;\n      });\n\n      // Note: it is very hard to explain in comments all these assertions, so\n      // it is highly recommended that you load the trace file above into\n      // DevTools to look at the timeline whilst working on this test.\n\n      /**\n       * This is a block of events with identical end times, so only the\n       * first should be kept:\n       * =====[keydown 3579]====\n       *    ==[keydown 3558]====\n       *       =[keyup 3558]====\n       **/\n      assert.isTrue(visibleEventInteractionIds.includes('keydown:3579'));\n      assert.isFalse(visibleEventInteractionIds.includes('keydown:3558'));\n      assert.isFalse(visibleEventInteractionIds.includes('keyup:3558'));\n\n      /** This is a slightly offset block of events:\n       * ====[keydown 3572]=====\n       *    =[keydown 3565]=====\n       *          ====[keydown 3586]========\n       * In this test we want to make sure that 3565 is collapsed, but the\n       * others are not.\n       **/\n      assert.isTrue(visibleEventInteractionIds.includes('keydown:3572'));\n      assert.isTrue(visibleEventInteractionIds.includes('keydown:3586'));\n      assert.isFalse(visibleEventInteractionIds.includes('keydown:3565'));\n\n      /** This is a block of events that have offset overlaps:\n       * ====[keydown 3614]=====  =====[keydown 3621]======\n       *       =====[keydown 3628]=========================\n       * In this test we want to make sure that 3621 is collapsed as it fits\n       * iwthin 3628, but 3614 is not collapsed.\n       **/\n      assert.isTrue(visibleEventInteractionIds.includes('keydown:3614'));\n      assert.isTrue(visibleEventInteractionIds.includes('keydown:3628'));\n      assert.isFalse(visibleEventInteractionIds.includes('keydown:3621'));\n    });\n  });\n});\n"]}