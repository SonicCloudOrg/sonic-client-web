{"version":3,"file":"ImagePaintingHandler.test.js","sourceRoot":"","sources":["../../../../../../../front_end/models/trace/handlers/ImagePaintingHandler.test.ts"],"names":[],"mappings":"AACA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,EAAC,WAAW,EAAC,MAAM,iCAAiC,CAAC;AAC5D,OAAO,KAAK,WAAW,MAAM,aAAa,CAAC;AAE3C,QAAQ,CAAC,sBAAsB,EAAE,GAAG,EAAE;IACpC,UAAU,CAAC,GAAG,EAAE;QACd,WAAW,CAAC,QAAQ,CAAC,aAAa,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;IAC3D,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,2EAA2E,EAAE,KAAK;QACnF,MAAM,MAAM,GAAG,MAAM,WAAW,CAAC,SAAS,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;QAEpE,KAAK,MAAM,KAAK,IAAI,MAAM,EAAE,CAAC;YAC3B,WAAW,CAAC,QAAQ,CAAC,aAAa,CAAC,aAAa,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QACtE,CAAC;QAED,MAAM,qBAAqB,GAAG,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,WAAW,CAAC,4BAA4B,CAAC,CAAC;QACtG,MAAM,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;QACnC,MAAM,CAAC,IAAI,CAAC,qBAAqB,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;QAEtD,MAAM,IAAI,GAAG,WAAW,CAAC,QAAQ,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;QAErE,MAAM,kBAAkB,GAAG,IAAI,CAAC,4BAA4B,CAAC,GAAG,CAAC,qBAAqB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC1G,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;IAClC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,uEAAuE,EAAE,KAAK;QAC/E,MAAM,MAAM,GAAG,MAAM,WAAW,CAAC,SAAS,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;QAEpE,KAAK,MAAM,KAAK,IAAI,MAAM,EAAE,CAAC;YAC3B,WAAW,CAAC,QAAQ,CAAC,aAAa,CAAC,aAAa,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QACtE,CAAC;QAED,MAAM,WAAW,GAAG,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,WAAW,CAAC,uBAAuB,CAAC,CAAC;QACvF,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAEzB,MAAM,IAAI,GAAG,WAAW,CAAC,QAAQ,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;QAErE,MAAM,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QACpE,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;IAClC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["\n// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {TraceLoader} from '../../../testing/TraceLoader.js';\nimport * as TraceEngine from '../trace.js';\n\ndescribe('ImagePaintingHandler', () => {\n  beforeEach(() => {\n    TraceEngine.Handlers.ModelHandlers.ImagePainting.reset();\n  });\n\n  it('can pair DrawLazyPixelRef events to PaintImages by their reference number', async function() {\n    const events = await TraceLoader.rawEvents(this, 'web-dev.json.gz');\n\n    for (const event of events) {\n      TraceEngine.Handlers.ModelHandlers.ImagePainting.handleEvent(event);\n    }\n\n    const drawLazyPixelRefEvent = events.find(TraceEngine.Types.TraceEvents.isTraceEventDrawLazyPixelRef);\n    assert.isOk(drawLazyPixelRefEvent);\n    assert.isOk(drawLazyPixelRefEvent.args?.LazyPixelRef);\n\n    const data = TraceEngine.Handlers.ModelHandlers.ImagePainting.data();\n\n    const matchingPaintEvent = data.paintImageByDrawLazyPixelRef.get(drawLazyPixelRefEvent.args.LazyPixelRef);\n    assert.isOk(matchingPaintEvent);\n  });\n\n  it('can pair a DecodeImage event to a PaintImage via the DrawLazyPixelRef', async function() {\n    const events = await TraceLoader.rawEvents(this, 'web-dev.json.gz');\n\n    for (const event of events) {\n      TraceEngine.Handlers.ModelHandlers.ImagePainting.handleEvent(event);\n    }\n\n    const decodeImage = events.find(TraceEngine.Types.TraceEvents.isTraceEventDecodeImage);\n    assert.isOk(decodeImage);\n\n    const data = TraceEngine.Handlers.ModelHandlers.ImagePainting.data();\n\n    const matchingPaintEvent = data.paintImageForEvent.get(decodeImage);\n    assert.isOk(matchingPaintEvent);\n  });\n});\n"]}