{"version":3,"file":"LayerTreeHandler.test.js","sourceRoot":"","sources":["../../../../../../../front_end/models/trace/handlers/LayerTreeHandler.test.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,EAAC,WAAW,EAAC,MAAM,iCAAiC,CAAC;AAC5D,OAAO,KAAK,UAAU,MAAM,aAAa,CAAC;AAE1C,QAAQ,CAAC,kBAAkB,EAAE;IAC3B,2DAA2D;IAC3D,sEAAsE;IACtE,yEAAyE;IACzE,6BAA6B;IAC7B,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;IAErB,UAAU,CAAC,GAAG,EAAE;QACd,UAAU,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;QAC/C,UAAU,CAAC,QAAQ,CAAC,aAAa,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;QACpD,UAAU,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC;QACpD,UAAU,CAAC,QAAQ,CAAC,aAAa,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC;IAC3D,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,oEAAoE,EAAE,KAAK;QAC5E,MAAM,MAAM,GAAG,MAAM,WAAW,CAAC,SAAS,CAAC,IAAI,EAAE,+CAA+C,CAAC,CAAC;QAElG,KAAK,MAAM,KAAK,IAAI,MAAM,EAAE,CAAC;YAC3B,UAAU,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YAC1D,UAAU,CAAC,QAAQ,CAAC,aAAa,CAAC,SAAS,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QACjE,CAAC;QACD,MAAM,UAAU,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;QACxD,MAAM,UAAU,CAAC,QAAQ,CAAC,aAAa,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;QAE7D,MAAM,IAAI,GAAG,UAAU,CAAC,QAAQ,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;QAEhE,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;QACjC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;QACpD,2CAA2C;QAC3C,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;YAC1C,OAAO,KAAK,CAAC,EAAE,KAAK,WAAW,CAAC;QAClC,CAAC,CAAC,CAAC;QACH,MAAM,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;YACnD,OAAO,QAAQ,CAAC,GAAG,EAAE,KAAK,KAAK,eAAe,CAAC;QACjD,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,UAAU,IAAI,CAAC,aAAa,EAAE,CAAC;YAClC,MAAM,IAAI,KAAK,CAAC,mDAAmD,CAAC,CAAC;QACvE,CAAC;QACD,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,aAAa,CAAC,CAAC;IAC5E,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {TraceLoader} from '../../../testing/TraceLoader.js';\nimport * as TraceModel from '../trace.js';\n\ndescribe('LayerTreeHandler', function() {\n  // The trace file used here is large because it has all the\n  // AdvancedPaintInstrumentation enabled in order to test this handler.\n  // Therefore the timeout here is larger to allow for the time required to\n  // load the file on the bots.\n  this.timeout(20_000);\n\n  beforeEach(() => {\n    TraceModel.Handlers.ModelHandlers.Meta.reset();\n    TraceModel.Handlers.ModelHandlers.LayerTree.reset();\n    TraceModel.Handlers.ModelHandlers.Meta.initialize();\n    TraceModel.Handlers.ModelHandlers.LayerTree.initialize();\n  });\n\n  it('creates a relationship between paint events and the snapshot event', async function() {\n    const events = await TraceLoader.rawEvents(this, 'web-dev-with-advanced-instrumentation.json.gz');\n\n    for (const event of events) {\n      TraceModel.Handlers.ModelHandlers.Meta.handleEvent(event);\n      TraceModel.Handlers.ModelHandlers.LayerTree.handleEvent(event);\n    }\n    await TraceModel.Handlers.ModelHandlers.Meta.finalize();\n    await TraceModel.Handlers.ModelHandlers.LayerTree.finalize();\n\n    const data = TraceModel.Handlers.ModelHandlers.LayerTree.data();\n\n    assert.lengthOf(data.paints, 49);\n    assert.strictEqual(data.paintsToSnapshots.size, 35);\n    // Check that one expected pair got created\n    const paintEvent = data.paints.find(paint => {\n      return paint.ts === 42482841188;\n    });\n    const snapshotEvent = data.snapshots.find(snapshot => {\n      return snapshot.id2?.local === '0x10c038b6d80';\n    });\n    if (!paintEvent || !snapshotEvent) {\n      throw new Error('Could not find expected paint and snapshot events');\n    }\n    assert.strictEqual(data.paintsToSnapshots.get(paintEvent), snapshotEvent);\n  });\n});\n"]}