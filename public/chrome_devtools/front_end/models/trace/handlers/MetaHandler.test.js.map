{"version":3,"file":"MetaHandler.test.js","sourceRoot":"","sources":["../../../../../../../front_end/models/trace/handlers/MetaHandler.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {defaultTraceEvent} from '../../../testing/TraceHelpers.js';\nimport {TraceLoader} from '../../../testing/TraceLoader.js';\nimport * as TraceModel from '../trace.js';\n\ndescribe('MetaHandler', function() {\n  let baseEvents: TraceModel.Types.TraceEvents.TraceEventData[];\n  beforeEach(async function() {\n    let defaultTraceEvents: readonly TraceModel.Types.TraceEvents.TraceEventData[];\n    try {\n      defaultTraceEvents = await TraceLoader.rawEvents(this, 'basic.json.gz');\n    } catch (error) {\n      assert.fail(error);\n      return;\n    }\n\n    baseEvents = [\n      ...defaultTraceEvents,\n      {\n        ...defaultTraceEvent,\n        args: {\n          data: {\n            isLoadingMainFrame: true,\n            isOutermostMainFrame: true,\n            documentLoaderURL: 'test1',\n            navigationId: 'navigation-1',\n          },\n          frame: '3E1717BE677B75D0536E292E00D6A34A',\n        },\n        pid: TraceModel.Types.TraceEvents.ProcessID(23456),\n        tid: TraceModel.Types.TraceEvents.ThreadID(775),\n        ts: TraceModel.Types.Timing.MicroSeconds(100),\n        name: 'navigationStart',\n      } as TraceModel.Types.TraceEvents.TraceEventNavigationStart,\n      {\n        ...defaultTraceEvent,\n        // Should be ignored based on empty documentLoaderURL\n        args: {\n          data: {\n            isLoadingMainFrame: true,\n            isOutermostMainFrame: true,\n            documentLoaderURL: '',\n            navigationId: 'navigation-2',\n          },\n        },\n        pid: TraceModel.Types.TraceEvents.ProcessID(23456),\n        tid: TraceModel.Types.TraceEvents.ThreadID(775),\n        ts: TraceModel.Types.Timing.MicroSeconds(800),\n        name: 'navigationStart',\n      } as TraceModel.Types.TraceEvents.TraceEventNavigationStart,\n      {\n        ...defaultTraceEvent,\n        args: {\n          data: {\n            isLoadingMainFrame: true,\n            isOutermostMainFrame: true,\n            documentLoaderURL: 'test3',\n            navigationId: 'navigation-3',\n          },\n        },\n        pid: TraceModel.Types.TraceEvents.ProcessID(23456),\n        tid: TraceModel.Types.TraceEvents.ThreadID(775),\n        ts: TraceModel.Types.Timing.MicroSeconds(1000),\n        name: 'navigationStart',\n      } as TraceModel.Types.TraceEvents.TraceEventNavigationStart,\n    ];\n\n    TraceModel.Handlers.ModelHandlers.Meta.reset();\n    TraceModel.Handlers.ModelHandlers.Meta.initialize();\n  });\n\n  describe('error handling', function() {\n    it('throws if data is called before finalize', function() {\n      for (const event of baseEvents) {\n        TraceModel.Handlers.ModelHandlers.Meta.handleEvent(event);\n      }\n\n      assert.throws(() => {\n        TraceModel.Handlers.ModelHandlers.Meta.data();\n      }, 'Handler is not finalized');\n    });\n\n    it('throws if initialize is called without a reset', function() {\n      // Due to the beforeEach the handler is already initialized, so calling\n      // it a second time should throw an error.\n      assert.throws(() => {\n        TraceModel.Handlers.ModelHandlers.Meta.initialize();\n      }, 'Handler was not reset');\n    });\n  });\n\n  describe('browser process ID', function() {\n    it('obtains the PID if present', async () => {\n      for (const event of baseEvents) {\n        TraceModel.Handlers.ModelHandlers.Meta.handleEvent(event);\n      }\n\n      await TraceModel.Handlers.ModelHandlers.Meta.finalize();\n      const data = TraceModel.Handlers.ModelHandlers.Meta.data();\n      assert.strictEqual(data.browserProcessId, TraceModel.Types.TraceEvents.ProcessID(8017));\n    });\n  });\n\n  describe('browser thread ID', function() {\n    it('obtains the TID if present', async () => {\n      for (const event of baseEvents) {\n        TraceModel.Handlers.ModelHandlers.Meta.handleEvent(event);\n      }\n\n      await TraceModel.Handlers.ModelHandlers.Meta.finalize();\n      const data = TraceModel.Handlers.ModelHandlers.Meta.data();\n      assert.strictEqual(data.browserThreadId, TraceModel.Types.TraceEvents.ThreadID(775));\n    });\n  });\n\n  describe('renderer process ID', function() {\n    it('obtains the PID if present', async () => {\n      for (const event of baseEvents) {\n        TraceModel.Handlers.ModelHandlers.Meta.handleEvent(event);\n      }\n\n      await TraceModel.Handlers.ModelHandlers.Meta.finalize();\n      const data = TraceModel.Handlers.ModelHandlers.Meta.data();\n      assert.strictEqual(data.topLevelRendererIds.size, 1);\n      assert.deepStrictEqual([...data.topLevelRendererIds], [TraceModel.Types.TraceEvents.ProcessID(8051)]);\n    });\n  });\n\n  describe('navigations', function() {\n    it('obtains them if present', async () => {\n      for (const event of baseEvents) {\n        TraceModel.Handlers.ModelHandlers.Meta.handleEvent(event);\n      }\n\n      await TraceModel.Handlers.ModelHandlers.Meta.finalize();\n      const data = TraceModel.Handlers.ModelHandlers.Meta.data();\n      // navigation-2 is discarded because it has no URL.\n      // navigation-3 doesn't have a frame id so it is discarded as well.\n      assert.strictEqual(data.navigationsByFrameId.size, 1);\n      assert.strictEqual(data.navigationsByNavigationId.size, 1);\n\n      const firstNavigation = data.navigationsByNavigationId.get('navigation-1');\n      if (!firstNavigation?.args.data) {\n        assert.fail('Navigation data was expected in trace events');\n        return;\n      }\n\n      assert.strictEqual(firstNavigation.args.data.documentLoaderURL, 'test1');\n    });\n\n    it('provides a list of main frame only navigations', async function() {\n      const events = await TraceLoader.rawEvents(this, 'multiple-navigations-with-iframes.json.gz');\n      TraceModel.Handlers.ModelHandlers.Meta.reset();\n      TraceModel.Handlers.ModelHandlers.Meta.initialize();\n      for (const event of events) {\n        TraceModel.Handlers.ModelHandlers.Meta.handleEvent(event);\n      }\n\n      await TraceModel.Handlers.ModelHandlers.Meta.finalize();\n      const data = TraceModel.Handlers.ModelHandlers.Meta.data();\n      const allNavigationsCount = data.navigationsByNavigationId.size;\n      assert.isTrue(data.mainFrameNavigations.length < allNavigationsCount);\n      assert.isTrue(data.mainFrameNavigations.every(event => {\n        return event.args.frame === data.mainFrameId;\n      }));\n    });\n  });\n\n  describe('frames', function() {\n    it('finds the main frame ID', async () => {\n      for (const event of baseEvents) {\n        TraceModel.Handlers.ModelHandlers.Meta.handleEvent(event);\n      }\n\n      await TraceModel.Handlers.ModelHandlers.Meta.finalize();\n      const data = TraceModel.Handlers.ModelHandlers.Meta.data();\n      assert.strictEqual(data.mainFrameId, '3E1717BE677B75D0536E292E00D6A34A');\n    });\n\n    it('finds the main frame ID for a trace that started with a page reload', async function() {\n      const events = await TraceLoader.rawEvents(this, 'reload-and-trace-page.json.gz');\n      TraceModel.Handlers.ModelHandlers.Meta.reset();\n      TraceModel.Handlers.ModelHandlers.Meta.initialize();\n      for (const event of events) {\n        TraceModel.Handlers.ModelHandlers.Meta.handleEvent(event);\n      }\n\n      await TraceModel.Handlers.ModelHandlers.Meta.finalize();\n      const data = TraceModel.Handlers.ModelHandlers.Meta.data();\n      assert.strictEqual(data.mainFrameId, '1D148CB660D1F96ED70D78DC6A53267B');\n    });\n    it('tracks the frames for found processes', async function() {\n      const events = await TraceLoader.rawEvents(this, 'reload-and-trace-page.json.gz');\n      TraceModel.Handlers.ModelHandlers.Meta.reset();\n      TraceModel.Handlers.ModelHandlers.Meta.initialize();\n      for (const event of events) {\n        TraceModel.Handlers.ModelHandlers.Meta.handleEvent(event);\n      }\n\n      await TraceModel.Handlers.ModelHandlers.Meta.finalize();\n      const data = TraceModel.Handlers.ModelHandlers.Meta.data();\n      assert.strictEqual(data.frameByProcessId.size, 1);\n      const [[processId, framesInProcess]] = data.frameByProcessId.entries();\n      assert.strictEqual(processId, 3581385);\n      assert.strictEqual(framesInProcess.size, 1);\n      const [{url}] = framesInProcess.values();\n      assert.strictEqual(url, 'https://example.com/');\n    });\n  });\n\n  describe('finding GPU thread and main frame', function() {\n    it('finds the GPU process and GPU Thread', async function() {\n      const events = await TraceLoader.rawEvents(this, 'threejs-gpu.json.gz');\n      TraceModel.Handlers.ModelHandlers.Meta.reset();\n      TraceModel.Handlers.ModelHandlers.Meta.initialize();\n      for (const event of events) {\n        TraceModel.Handlers.ModelHandlers.Meta.handleEvent(event);\n      }\n      await TraceModel.Handlers.ModelHandlers.Meta.finalize();\n      const {gpuProcessId, gpuThreadId} = TraceModel.Handlers.ModelHandlers.Meta.data();\n      assert.strictEqual(gpuProcessId, TraceModel.Types.TraceEvents.ProcessID(3581327));\n      assert.strictEqual(gpuThreadId, TraceModel.Types.TraceEvents.ThreadID(3581327));\n    });\n\n    it('handles traces that do not have a GPU thread and returns undefined for the thread ID', async function() {\n      const traceEventsWithNoGPUThread = await TraceLoader.rawEvents(this, 'forced-layouts-and-no-gpu.json.gz');\n      for (const event of traceEventsWithNoGPUThread) {\n        TraceModel.Handlers.ModelHandlers.Meta.handleEvent(event);\n      }\n\n      assert.doesNotThrow(async () => {\n        await TraceModel.Handlers.ModelHandlers.Meta.finalize();\n      });\n\n      const data = TraceModel.Handlers.ModelHandlers.Meta.data();\n      assert.isUndefined(data.gpuThreadId);\n    });\n  });\n\n  it('obtains renderer process IDs when there are no navigations', async function() {\n    let traceEvents: readonly TraceModel.Types.TraceEvents.TraceEventData[];\n    try {\n      traceEvents = await TraceLoader.rawEvents(this, 'threejs-gpu.json.gz');\n    } catch (error) {\n      assert.fail(error);\n      return;\n    }\n\n    TraceModel.Handlers.ModelHandlers.Meta.reset();\n    TraceModel.Handlers.ModelHandlers.Meta.initialize();\n    for (const event of traceEvents) {\n      TraceModel.Handlers.ModelHandlers.Meta.handleEvent(event);\n    }\n    await TraceModel.Handlers.ModelHandlers.Meta.finalize();\n\n    const data = TraceModel.Handlers.ModelHandlers.Meta.data();\n    assert.deepStrictEqual([...data.topLevelRendererIds], [3601132]);\n\n    const rendererProcesses = data.rendererProcessesByFrame.get(data.mainFrameId);\n    if (!rendererProcesses) {\n      assert.fail('No renderer processes found');\n      return;\n    }\n    assert.deepStrictEqual([...rendererProcesses?.keys()], [3601132]);\n    const windowMinTime = 1143381875846;\n    assert.deepStrictEqual(\n        [...rendererProcesses?.values()], [[{\n          'frame': {\n            'frame': '1D148CB660D1F96ED70D78DC6A53267B',\n            'name': '',\n            'processId': 3601132,\n            'url': 'https://threejs.org/examples/',\n          },\n          'window': {'min': windowMinTime, 'max': data.traceBounds.max, 'range': data.traceBounds.max - windowMinTime},\n        }]]);\n  });\n\n  it('handles multiple renderers from navigations', async function() {\n    let traceEvents: readonly TraceModel.Types.TraceEvents.TraceEventData[];\n    try {\n      traceEvents = await TraceLoader.rawEvents(this, 'multiple-top-level-renderers.json.gz');\n    } catch (error) {\n      assert.fail(error);\n      return;\n    }\n\n    TraceModel.Handlers.ModelHandlers.Meta.reset();\n    TraceModel.Handlers.ModelHandlers.Meta.initialize();\n    for (const event of traceEvents) {\n      TraceModel.Handlers.ModelHandlers.Meta.handleEvent(event);\n    }\n    await TraceModel.Handlers.ModelHandlers.Meta.finalize();\n\n    const data = TraceModel.Handlers.ModelHandlers.Meta.data();\n    assert.deepStrictEqual([...data.topLevelRendererIds], [78450, 78473, 79194]);\n\n    const rendererProcesses = data.rendererProcessesByFrame.get(data.mainFrameId);\n    if (!rendererProcesses) {\n      assert.fail('No renderer processes found');\n      return;\n    }\n\n    const windowMinTime = 3550807444741;\n    assert.deepStrictEqual([...rendererProcesses?.keys()], [78450, 78473, 79194]);\n    assert.deepStrictEqual([...rendererProcesses?.values()], [\n      [{\n        'frame': {\n          'frame': 'E70A9327100EBD78F1C03582BBBE8E5F',\n          'name': '',\n          'processId': 78450,\n          'url': 'http://127.0.0.1:8081/',\n        },\n        'window': {'min': 3550803491779, 'max': 3550805534872, 'range': 2043093},\n      }],\n      [{\n        'frame': {\n          'frame': 'E70A9327100EBD78F1C03582BBBE8E5F',\n          'name': '',\n          'processId': 78473,\n          'url': 'http://localhost:8080/',\n        },\n        'window': {'min': 3550805534873, 'max': 3550807444740, 'range': 1909867},\n      }],\n      [{\n        'frame': {\n          'frame': 'E70A9327100EBD78F1C03582BBBE8E5F',\n          'name': '',\n          'processId': 79194,\n          'url': 'https://www.google.com/',\n        },\n        'window': {'min': windowMinTime, 'max': data.traceBounds.max, 'range': data.traceBounds.max - windowMinTime},\n      }],\n    ]);\n  });\n  it('handles multiple renderers from navigations where a process handled multiple URLs ', async function() {\n    let traceEvents: readonly TraceModel.Types.TraceEvents.TraceEventData[];\n    try {\n      traceEvents = await TraceLoader.rawEvents(this, 'simple-js-program.json.gz');\n    } catch (error) {\n      assert.fail(error);\n      return;\n    }\n\n    TraceModel.Handlers.ModelHandlers.Meta.reset();\n    TraceModel.Handlers.ModelHandlers.Meta.initialize();\n    for (const event of traceEvents) {\n      TraceModel.Handlers.ModelHandlers.Meta.handleEvent(event);\n    }\n    await TraceModel.Handlers.ModelHandlers.Meta.finalize();\n\n    const data = TraceModel.Handlers.ModelHandlers.Meta.data();\n    assert.deepStrictEqual([...data.topLevelRendererIds], [2080]);\n\n    const rendererProcesses = data.rendererProcessesByFrame.get(data.mainFrameId);\n    if (!rendererProcesses) {\n      assert.fail('No renderer processes found');\n      return;\n    }\n\n    assert.deepStrictEqual([...rendererProcesses?.keys()], [2080]);\n    assert.deepStrictEqual([...rendererProcesses?.values()], [\n      [\n        {\n          'frame': {\n            'frame': '1F729458403A23CF1D8D246095129AC4',\n            'name': '',\n            'processId': 2080,\n            'url': 'about:blank',\n          },\n          'window': {\n            'min': 251126654355,\n            'max': 251126663397,\n            'range': 9042,\n          },\n        },\n        {\n          'frame': {\n            'frame': '1F729458403A23CF1D8D246095129AC4',\n            'name': '',\n            'processId': 2080,\n            'url': 'https://www.google.com',\n          },\n          'window': {\n            'min': 251126663398,\n            'max': 251128073034,\n            'range': 1409636,\n          },\n        },\n      ],\n    ]);\n  });\n\n  it('calculates trace bounds correctly', async function() {\n    let traceEvents: readonly TraceModel.Types.TraceEvents.TraceEventData[];\n    try {\n      traceEvents = await TraceLoader.rawEvents(this, 'basic.json.gz');\n    } catch (error) {\n      assert.fail(error);\n      return;\n    }\n\n    TraceModel.Handlers.ModelHandlers.Meta.reset();\n    TraceModel.Handlers.ModelHandlers.Meta.initialize();\n    for (const event of traceEvents) {\n      TraceModel.Handlers.ModelHandlers.Meta.handleEvent(event);\n    }\n    await TraceModel.Handlers.ModelHandlers.Meta.finalize();\n\n    const data = TraceModel.Handlers.ModelHandlers.Meta.data();\n    const {\n      max,\n      min,\n      range,\n    } = data.traceBounds;\n    const expectedMin = 50_442_438_975;\n    const expectedMax = 50_442_438_976;\n    assert.strictEqual(min, expectedMin, 'Min calculated incorrectly');\n    assert.strictEqual(max, expectedMax, 'Max calculated incorrectly');\n    assert.strictEqual(range, expectedMax - expectedMin, 'Range calculated incorrectly');\n  });\n\n  it('calculates the min trace bound correctly if no TracingStartedInBrowser event is found', async function() {\n    const baseEvents = await TraceLoader.rawEvents(this, 'basic.json.gz');\n    // We are about to mutate these events, so copy them to avoid mutating the\n    // cached events from the TraceLoader.\n    const traceEvents = baseEvents.slice().filter(event => {\n      // Delete the tracing started in browser event to force the min bounds to\n      // be calculated based on the event with the smallest timestamp.\n      return event.name !== 'TracingStartedInBrowser';\n    });\n\n    TraceModel.Handlers.ModelHandlers.Meta.reset();\n    TraceModel.Handlers.ModelHandlers.Meta.initialize();\n    for (const event of traceEvents) {\n      TraceModel.Handlers.ModelHandlers.Meta.handleEvent(event);\n    }\n    await TraceModel.Handlers.ModelHandlers.Meta.finalize();\n\n    const data = TraceModel.Handlers.ModelHandlers.Meta.data();\n    const expectedMin = 50_442_438_976;\n    assert.strictEqual(data.traceBounds.min, expectedMin, 'Min calculated incorrectly');\n  });\n\n  it('ignores ::UMA Events', async function() {\n    let traceEvents: readonly TraceModel.Types.TraceEvents.TraceEventData[];\n    try {\n      // This file contains UMA events which need to be ignored.\n      traceEvents = await TraceLoader.rawEvents(this, 'web-dev.json.gz');\n    } catch (error) {\n      assert.fail(error);\n      return;\n    }\n\n    TraceModel.Handlers.ModelHandlers.Meta.reset();\n    TraceModel.Handlers.ModelHandlers.Meta.initialize();\n    for (const event of traceEvents) {\n      TraceModel.Handlers.ModelHandlers.Meta.handleEvent(event);\n    }\n    await TraceModel.Handlers.ModelHandlers.Meta.finalize();\n\n    const data = TraceModel.Handlers.ModelHandlers.Meta.data();\n    const {\n      max,\n      min,\n      range,\n    } = data.traceBounds;\n    const expectedMin = 1_020_034_823_047;\n    const expectedMax = 1_020_036_087_961;\n    assert.strictEqual(min, expectedMin, 'Min calculated incorrectly');\n    assert.strictEqual(max, expectedMax, 'Max calculated incorrectly');\n    assert.strictEqual(range, expectedMax - expectedMin, 'Range calculated incorrectly');\n  });\n\n  it('collects all thread metadata in all processes', async () => {\n    for (const event of baseEvents) {\n      TraceModel.Handlers.ModelHandlers.Meta.handleEvent(event);\n    }\n\n    await TraceModel.Handlers.ModelHandlers.Meta.finalize();\n    const data = TraceModel.Handlers.ModelHandlers.Meta.data();\n    const collected = [...data.threadsInProcess.values()].map(threadInProcess => [...threadInProcess.values()]);\n\n    expect(collected.map(process => process.map(thread => thread.args.name))).to.deep.equal([\n      [\n        'swapper',\n        'VizCompositorThread',\n        'ThreadPoolServiceThread',\n        'ThreadPoolBackgroundWorker',\n        'GpuWatchdog',\n        'ThreadPoolForegroundWorker',\n      ],\n      [\n        'CrBrowserMain',\n        'Chrome_IOThread',\n        'ThreadPoolServiceThread',\n        'Chrome_DevToolsADBThread',\n        'ThreadPoolForegroundWorker',\n      ],\n      [\n        'CrRendererMain',\n        'Compositor',\n        'Chrome_ChildIOThread',\n        'ThreadPoolServiceThread',\n        'ThreadPoolForegroundWorker',\n      ],\n      [\n        'CrRendererMain',\n        'Compositor',\n        'Chrome_ChildIOThread',\n        'ThreadPoolServiceThread',\n        'ThreadPoolForegroundWorker',\n      ],\n    ]);\n  });\n\n  it('can handle edge cases where there are multiple navigations with the same ID', async function() {\n    // For context to why this test and trace file exist, see crbug.com/1503982\n    // If an HTML page contains <script>window.location.href =\n    // 'javascript:console.log(1)'</script>, the backend will emit two\n    // navigationStarted events that are identical except for timestamps, and\n    // this caused the trace engine to crash.\n    // To ensure that we handle this case, we have this test which makes sure a\n    // trace that does have two navigations with the same ID does not cause the\n    // MetaHandler to throw an error.\n    const events = await TraceLoader.rawEvents(this, 'multiple-navigations-same-id.json.gz');\n    assert.doesNotThrow(function() {\n      for (const event of events) {\n        TraceModel.Handlers.ModelHandlers.Meta.handleEvent(event);\n      }\n    });\n  });\n\n  it('marks a generic trace as generic', async function() {\n    const events = await TraceLoader.rawEvents(this, 'generic-about-tracing.json.gz');\n    for (const event of events) {\n      TraceModel.Handlers.ModelHandlers.Meta.handleEvent(event);\n    }\n    await TraceModel.Handlers.ModelHandlers.Meta.finalize();\n    assert.isTrue(TraceModel.Handlers.ModelHandlers.Meta.data().traceIsGeneric);\n  });\n\n  it('marks a web trace as being not generic', async function() {\n    const events = await TraceLoader.rawEvents(this, 'web-dev-with-commit.json.gz');\n    for (const event of events) {\n      TraceModel.Handlers.ModelHandlers.Meta.handleEvent(event);\n    }\n    await TraceModel.Handlers.ModelHandlers.Meta.finalize();\n    assert.isFalse(TraceModel.Handlers.ModelHandlers.Meta.data().traceIsGeneric);\n  });\n\n  it('sets the main frame URL from the TracingStartedInBrowser event', async function() {\n    // This trace has the right URL in TracingStartedInBrowser\n    const events = await TraceLoader.rawEvents(this, 'web-dev-with-commit.json.gz');\n    for (const event of events) {\n      TraceModel.Handlers.ModelHandlers.Meta.handleEvent(event);\n    }\n    await TraceModel.Handlers.ModelHandlers.Meta.finalize();\n    const data = TraceModel.Handlers.ModelHandlers.Meta.data();\n    assert.strictEqual(data.mainFrameURL, 'https://web.dev/');\n  });\n\n  it('will alter the main frame URL based on the first main frame navigation', async function() {\n    // This trace has the wrong URL in TracingStartedInBrowser - but it will be\n    // corrected by looking at the first main frame navigation.\n    const events = await TraceLoader.rawEvents(this, 'web-dev-initial-url.json.gz');\n    for (const event of events) {\n      TraceModel.Handlers.ModelHandlers.Meta.handleEvent(event);\n    }\n    await TraceModel.Handlers.ModelHandlers.Meta.finalize();\n    const data = TraceModel.Handlers.ModelHandlers.Meta.data();\n    assert.strictEqual(data.mainFrameURL, 'https://web.dev/articles/inp');\n  });\n\n  it('returns a list of processes and process_name events', async function() {\n    const events = await TraceLoader.rawEvents(this, 'web-dev-initial-url.json.gz');\n    for (const event of events) {\n      TraceModel.Handlers.ModelHandlers.Meta.handleEvent(event);\n    }\n    await TraceModel.Handlers.ModelHandlers.Meta.finalize();\n    const data = TraceModel.Handlers.ModelHandlers.Meta.data();\n    const pidsToNames = Array.from(data.processNames.entries(), ([pid, event]) => {\n      return [pid, event.args.name];\n    });\n    assert.deepEqual(pidsToNames, [\n      [TraceModel.Types.TraceEvents.ProcessID(37605), 'Browser'],\n      [TraceModel.Types.TraceEvents.ProcessID(48544), 'Renderer'],\n      [TraceModel.Types.TraceEvents.ProcessID(37613), 'GPU Process'],\n      [TraceModel.Types.TraceEvents.ProcessID(48531), 'Renderer'],\n    ]);\n  });\n\n  it('does not set a frame as a main frame if it has no URL.', async function() {\n    // This test exists because of a bug report from this trace where we\n    // incorrectly set the main frame ID, causing DevTools to pick an advert in\n    // an iframe as the main thread. This happened because we happily set\n    // mainFrameID to a frame that had no URL, which doesn't make sense.\n    const events = await TraceLoader.rawEvents(this, 'wrong-main-frame-bug.json.gz');\n    for (const event of events) {\n      TraceModel.Handlers.ModelHandlers.Meta.handleEvent(event);\n    }\n    await TraceModel.Handlers.ModelHandlers.Meta.finalize();\n    const data = TraceModel.Handlers.ModelHandlers.Meta.data();\n    assert.strictEqual(data.mainFrameId, 'D1731088F5DE299149240DF9E6025291');\n  });\n\n  it('will use isOutermostMainFrame to determine the main frame from the TracingStartedInBrowser event if it is present',\n     async function() {\n       const events = await TraceLoader.rawEvents(this, 'web-dev-outermost-frames.json.gz');\n       for (const event of events) {\n         TraceModel.Handlers.ModelHandlers.Meta.handleEvent(event);\n       }\n       await TraceModel.Handlers.ModelHandlers.Meta.finalize();\n       const data = TraceModel.Handlers.ModelHandlers.Meta.data();\n       assert.strictEqual(data.mainFrameId, '881522AC20B813B0C0E99E27CEBAB951');\n     });\n\n  it('will use isInPrimaryPage along with isOutermostMainFrame to identify the main frame from TracingStartedInBrowser',\n     async function() {\n       // See crbug.com/343873756 for context on this bug report and fix.\n       const events = await TraceLoader.rawEvents(this, 'primary-page-frame.json.gz');\n       for (const event of events) {\n         TraceModel.Handlers.ModelHandlers.Meta.handleEvent(event);\n       }\n       await TraceModel.Handlers.ModelHandlers.Meta.finalize();\n       const data = TraceModel.Handlers.ModelHandlers.Meta.data();\n       // If you look at the trace, this is the frame that is both:\n       // isInPrimaryPage === true\n       // isOutermostMainFrame == true\n       //\n       // The other frames have isOutermostMainFrame == true (as they are pre-rendered pages)\n       // But they are not in the primary page.\n       assert.strictEqual(data.mainFrameId, '07B7D55F5BE0ADB8AAD6502F2D3859FF');\n     });\n});\n"]}