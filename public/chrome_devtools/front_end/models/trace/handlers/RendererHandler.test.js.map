{"version":3,"file":"RendererHandler.test.js","sourceRoot":"","sources":["../../../../../../../front_end/models/trace/handlers/RendererHandler.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Timeline from '../../../panels/timeline/timeline.js';\nimport {describeWithEnvironment} from '../../../testing/EnvironmentHelpers.js';\nimport {\n  getAllNodes,\n  getEventsIn,\n  getRootAt,\n  makeBeginEvent,\n  makeCompleteEvent,\n  makeEndEvent,\n  makeInstantEvent,\n  prettyPrint,\n} from '../../../testing/TraceHelpers.js';\nimport {TraceLoader} from '../../../testing/TraceLoader.js';\nimport * as TraceModel from '../trace.js';\n\nconst MAIN_FRAME_PID = 2154214;\nconst SUB_FRAME_PID = 2236065;\nconst SUB_FRAME_PID_2 = 2236084;\nconst SUB_FRAME_PID_3 = 2236123;\n\nasync function handleEventsFromTraceFile(\n    context: Mocha.Suite|Mocha.Context|null, file: string): Promise<TraceModel.Handlers.Types.TraceParseData> {\n  const traceData = await TraceLoader.traceEngine(context, file);\n  return traceData;\n}\n\ndescribeWithEnvironment('RendererHandler', function() {\n  it('finds all the renderers in a real world profile', async () => {\n    const {Renderer: renderers} = await handleEventsFromTraceFile(this, 'multiple-navigations-with-iframes.json.gz');\n    assert.strictEqual(renderers.processes.size, 4);\n\n    const pids = [...renderers.processes].map(([pid]) => pid);\n    assert.deepStrictEqual(\n        pids,\n        [\n          MAIN_FRAME_PID,   // Main frame process: localhost:5000\n          SUB_FRAME_PID,    // Sub frame process (trace start): example.com\n          SUB_FRAME_PID_2,  // Sub frame process (after first navigation): example.com\n          SUB_FRAME_PID_3,  // Sub frame process (after second navigation): example.com\n        ],\n        'Process IDs do not match expectations');\n\n    const origins = [...renderers.processes].map(([, process]) => {\n      return process.url ? new URL(process.url).origin : null;\n    });\n    assert.deepEqual(\n        origins,\n        [\n          'http://localhost:5000',    // Main frame process: localhost:5000\n          'https://www.example.com',  // Sub frame process (trace start): example.com\n          'https://www.example.com',  // Sub frame process (after first navigation): example.com\n          'https://www.example.com',  // Sub frame process (after second navigation): example.com\n        ],\n        'Process origins do not meet expectations');\n\n    // Assert on whether it has correctly detected a given process to be on the\n    // main frame or in a subframe.\n    const isOnMainFrame = [...renderers.processes].map(([, process]) => process.isOnMainFrame);\n    assert.deepStrictEqual(\n        isOnMainFrame,\n        [\n          true,   // Main frame process: localhost:5000\n          false,  // Sub frame process (trace start): example.com\n          false,  // Sub frame process (after first navigation): example.com\n          false,  // Sub frame process (after second navigation): example.com\n        ],\n        'Processes are incorrectly assigned as being on the main frame');\n  });\n\n  it('finds all the main frame threads in a real world profile', async () => {\n    const {Renderer: renderers} = await handleEventsFromTraceFile(this, 'multiple-navigations-with-iframes.json.gz');\n    const frame = renderers.processes.get(TraceModel.Types.TraceEvents.ProcessID(MAIN_FRAME_PID)) as\n        TraceModel.Handlers.ModelHandlers.Renderer.RendererProcess;\n    const names = [...frame.threads].map(([, thread]) => thread.name).sort();\n    assert.deepEqual(\n        names,\n        [\n          'Chrome_ChildIOThread',\n          'Compositor',\n          'CompositorTileWorker1',\n          'CompositorTileWorker2',\n          'CompositorTileWorker3',\n          'CompositorTileWorker4',\n          'CrRendererMain',\n          'ThreadPoolForegroundWorker',\n          'ThreadPoolForegroundWorker',\n          'ThreadPoolForegroundWorker',\n          'ThreadPoolForegroundWorker',\n          'ThreadPoolForegroundWorker',\n          'ThreadPoolForegroundWorker',\n          'ThreadPoolForegroundWorker',\n          'ThreadPoolForegroundWorker',\n          'ThreadPoolServiceThread',\n        ],\n        'Main frame thread names do not meet expectations before navigation');\n  });\n\n  it('finds all the sub frame threads in a real world profile', async () => {\n    const {Renderer: renderers} = await handleEventsFromTraceFile(this, 'multiple-navigations-with-iframes.json.gz');\n    const frame = renderers.processes.get(TraceModel.Types.TraceEvents.ProcessID(SUB_FRAME_PID)) as\n        TraceModel.Handlers.ModelHandlers.Renderer.RendererProcess;\n    const names = [...frame.threads].map(([, thread]) => thread.name).sort();\n    assert.deepEqual(\n        names,\n        [\n          'Chrome_ChildIOThread',\n          'Compositor',\n          'CrRendererMain',\n          'ThreadPoolServiceThread',\n        ],\n        'Main frame thread names do not meet expectations after navigation');\n  });\n\n  it('finds all the roots on the main frame\\'s main thread in a real world profile', async () => {\n    const {Renderer: renderers} = await handleEventsFromTraceFile(this, 'multiple-navigations-with-iframes.json.gz');\n    const frame = renderers.processes.get(TraceModel.Types.TraceEvents.ProcessID(MAIN_FRAME_PID)) as\n        TraceModel.Handlers.ModelHandlers.Renderer.RendererProcess;\n    const thread = [...frame.threads.values()].find(thread => thread.name === 'CrRendererMain');\n    if (!thread) {\n      assert(false, 'Main thread was not found');\n      return;\n    }\n\n    const tree = thread.tree;\n    if (!tree) {\n      assert(false, 'Main thread has no tree of events');\n      return;\n    }\n    assert.deepEqual([...tree.roots].map(root => root.id), [\n      0,    1,    2,    3,    4,    5,    16,   18,   29,   38,   49,   58,   77,   183,  184,  185,  186,  188,  189,\n      190,  199,  200,  201,  202,  211,  212,  213,  214,  229,  230,  232,  237,  239,  240,  242,  251,  252,  261,\n      264,  265,  266,  267,  268,  279,  282,  284,  285,  286,  287,  288,  289,  290,  293,  294,  295,  296,  297,\n      298,  299,  300,  301,  302,  303,  304,  305,  306,  328,  329,  330,  331,  332,  333,  334,  335,  336,  337,\n      338,  339,  340,  341,  342,  343,  344,  345,  354,  355,  356,  359,  389,  408,  409,  410,  411,  412,  413,\n      414,  415,  416,  417,  418,  419,  420,  421,  422,  423,  424,  425,  426,  427,  428,  429,  430,  431,  432,\n      433,  441,  442,  443,  444,  445,  446,  447,  448,  455,  456,  457,  458,  459,  460,  461,  462,  463,  464,\n      465,  466,  467,  468,  469,  479,  480,  481,  482,  483,  484,  485,  492,  493,  494,  495,  496,  498,  506,\n      507,  508,  509,  510,  511,  516,  517,  518,  519,  520,  521,  522,  523,  524,  525,  526,  538,  540,  541,\n      552,  555,  556,  565,  566,  575,  576,  585,  586,  595,  596,  605,  606,  615,  616,  625,  626,  635,  636,\n      645,  646,  657,  660,  661,  662,  663,  674,  677,  678,  679,  680,  689,  690,  691,  692,  701,  702,  711,\n      712,  721,  722,  733,  734,  737,  738,  739,  740,  749,  750,  751,  760,  761,  762,  771,  772,  773,  782,\n      783,  784,  793,  794,  795,  796,  797,  808,  809,  810,  811,  835,  843,  844,  845,  846,  848,  861,  869,\n      870,  871,  872,  873,  874,  875,  876,  877,  878,  881,  882,  883,  884,  885,  886,  887,  888,  889,  890,\n      904,  905,  906,  907,  908,  909,  910,  911,  912,  913,  914,  915,  916,  917,  918,  919,  920,  921,  922,\n      931,  932,  933,  936,  966,  967,  983,  984,  985,  986,  987,  988,  989,  990,  991,  992,  993,  994,  995,\n      996,  997,  998,  999,  1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1020, 1021,\n      1022, 1023, 1024, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055,\n      1056, 1057, 1064, 1065, 1066, 1068, 1069, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088,\n      1089, 1090, 1091, 1092, 1102, 1104, 1105, 1106, 1107, 1116, 1117, 1118, 1127, 1128, 1129, 1138, 1139, 1140, 1141,\n      1150, 1151, 1152, 1153, 1154, 1165, 1166, 1167, 1176, 1177, 1178, 1189, 1192, 1193, 1194, 1203, 1204, 1205, 1206,\n      1215, 1216, 1225, 1226, 1235, 1236, 1237, 1246, 1247, 1256, 1257, 1266, 1267, 1276, 1277, 1286, 1287, 1298, 1301,\n      1302, 1303, 1304, 1313, 1314, 1315, 1324, 1325, 1326, 1335, 1336, 1337, 1348, 1351, 1352, 1353, 1362, 1364, 1365,\n      1366, 1367, 1368, 1369, 1370, 1371, 1378,\n    ]);\n  });\n\n  it('finds all the roots on the sub frame\\'s main thread in a real world profile', async () => {\n    const {Renderer: renderers} = await handleEventsFromTraceFile(this, 'multiple-navigations-with-iframes.json.gz');\n    const frame = renderers.processes.get(TraceModel.Types.TraceEvents.ProcessID(SUB_FRAME_PID)) as\n        TraceModel.Handlers.ModelHandlers.Renderer.RendererProcess;\n    const thread = [...frame.threads.values()].find(thread => thread.name === 'CrRendererMain');\n    if (!thread) {\n      assert(false, 'Main thread was not found');\n      return;\n    }\n\n    const tree = thread.tree;\n    if (!tree) {\n      assert(false, 'Main thread has no tree of events');\n      return;\n    }\n    assert.deepEqual(\n        [...tree.roots].map(root => root.id), [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20]);\n  });\n\n  it('builds a hierarchy for the main frame\\'s main thread in a real world profile', async () => {\n    const {Renderer: renderers} = await handleEventsFromTraceFile(this, 'multiple-navigations-with-iframes.json.gz');\n    const frame = renderers.processes.get(TraceModel.Types.TraceEvents.ProcessID(MAIN_FRAME_PID)) as\n        TraceModel.Handlers.ModelHandlers.Renderer.RendererProcess;\n    const thread = [...frame.threads.values()].find(thread => thread.name === 'CrRendererMain');\n    if (!thread) {\n      assert(false, 'Main thread was not found');\n      return;\n    }\n\n    const tree = thread.tree;\n    if (!tree) {\n      assert(false, 'Main thread has no tree of events');\n      return;\n    }\n\n    const isRoot = (node: TraceModel.Helpers.TreeHelpers.TraceEntryNode) => node.depth === 0;\n    const isInstant = (event: TraceModel.Types.TraceEvents.SyntheticTraceEntry) =>\n        TraceModel.Types.TraceEvents.isTraceEventInstant(event);\n    const isLong = (event: TraceModel.Types.TraceEvents.SyntheticTraceEntry) =>\n        TraceModel.Types.TraceEvents.isTraceEventComplete(event) && event.dur > 1000;\n    const isIncluded =\n        (node: TraceModel.Helpers.TreeHelpers.TraceEntryNode,\n         event: TraceModel.Types.TraceEvents.SyntheticTraceEntry) =>\n            (!isRoot(node) || isInstant(event) || isLong(event)) &&\n        Boolean(Timeline.EventUICategory.getEventStyle(event.name as TraceModel.Types.TraceEvents.KnownEventName));\n    assert.strictEqual(prettyPrint(tree, isIncluded), `\n............\n-RunTask [2.21ms]\n.\n  -MajorGC [2.148ms]\n...........................................................\n-RunTask [15.436ms]\n  -FrameStartedLoading [0ms]\n  -EventDispatch (pagehide) [0.018ms]\n  -EventDispatch (visibilitychange) [0.01ms]\n  -EventDispatch (webkitvisibilitychange) [0.006ms]\n.\n  -EventDispatch (unload) [0.006ms]\n.\n  -ResourceSendRequest [0ms]\n  -ResourceReceiveResponse [0ms]\n...\n  -ProfileCall (anonymous) [0.205ms]\n    -ProfileCall (anonymous) [0.205ms]\n.......................\n-RunTask [3.402ms]\n  -ParseHTML [2.593ms]\n....\n    -ParseHTML [0.064ms]\n...\n    -EventDispatch (readystatechange) [0.008ms]\n.\n    -EventDispatch (DOMContentLoaded) [0.004ms]\n.\n    -MarkDOMContent [0ms]\n.\n    -EventDispatch (readystatechange) [0.01ms]\n    -EventDispatch (beforeunload) [0.013ms]\n    -FrameStartedLoading [0ms]\n.\n  -ParseHTML [0.01ms]\n..\n  -EventDispatch (readystatechange) [0.008ms]\n.\n  -EventDispatch (DOMContentLoaded) [0.035ms]\n.\n  -UpdateLayoutTree [0.373ms]\n    -InvalidateLayout [0ms]\n  -MarkDOMContent [0ms]\n-RunTask [2.675ms]\n  -BeginMainThreadFrame [0ms]\n  -Layout [0.854ms]\n    -InvalidateLayout [0ms]\n    -Layout [0.302ms]\n      -UpdateLayoutTree [0.149ms]\n.\n  -UpdateLayerTree [0.338ms]\n  -Paint [0.203ms]\n..\n  -firstPaint [0ms]\n  -firstContentfulPaint [0ms]\n.....\n  -largestContentfulPaint::Candidate [0ms]\n.................................\n-RunTask [1.605ms]\n  -EventDispatch (pagehide) [0.014ms]\n  -EventDispatch (visibilitychange) [0.038ms]\n  -EventDispatch (webkitvisibilitychange) [0.009ms]\n  -EventDispatch (unload) [0.004ms]\n.\n  -ScheduleStyleRecalculation [0ms]\n..............\n-RunTask [1.231ms]\n  -BeginMainThreadFrame [0ms]\n  -UpdateLayoutTree [0.093ms]\n.\n  -UpdateLayerTree [0.186ms]\n  -Paint [0.063ms]\n  -Paint [0.084ms]\n  -UpdateLayer [0.022ms]\n  -UpdateLayer [0.006ms]\n  -CompositeLayers [0.311ms]\n............\n-RunTask [1.663ms]\n.\n  -EventDispatch (readystatechange) [0.009ms]\n.\n  -EventDispatch (load) [0.014ms]\n.\n  -MarkLoad [0ms]\n  -EventDispatch (pageshow) [0.007ms]\n.......................................................................................\n-RunTask [1.42ms]\n.\n  -UpdateLayerTree [0.023ms]\n  -HitTest [0.057ms]\n  -EventDispatch (mousemove) [0.018ms]\n.\n  -UpdateLayerTree [0.028ms]\n  -HitTest [0.022ms]\n.\n  -UpdateLayerTree [0.01ms]\n  -HitTest [0.002ms]\n  -ScheduleStyleRecalculation [0ms]\n  -EventDispatch (mousedown) [0.018ms]\n  -UpdateLayoutTree [0.146ms]\n.\n  -UpdateLayerTree [0.031ms]\n  -HitTest [0.016ms]\n  -ScheduleStyleRecalculation [0ms]\n  -UpdateLayoutTree [0.031ms]\n  -EventDispatch (focus) [0.014ms]\n  -EventDispatch (focusin) [0.005ms]\n  -EventDispatch (DOMFocusIn) [0.005ms]\n.\n  -UpdateLayerTree [0.029ms]\n.....\n-RunTask [1.034ms]\n.\n  -UpdateLayerTree [0.021ms]\n  -HitTest [0.038ms]\n  -ScheduleStyleRecalculation [0ms]\n  -EventDispatch (mouseup) [0.016ms]\n  -EventDispatch (click) [0.44ms]\n    -EventDispatch (beforeunload) [0.009ms]\n    -FrameStartedLoading [0ms]\n.\n  -UpdateLayoutTree [0.137ms]\n.\n  -UpdateLayerTree [0.03ms]\n....................\n-RunTask [8.203ms]\n  -EventDispatch (pagehide) [0.016ms]\n  -EventDispatch (visibilitychange) [0.006ms]\n  -EventDispatch (webkitvisibilitychange) [0.004ms]\n  -EventDispatch (unload) [0.008ms]\n..\n  -ResourceSendRequest [0ms]\n  -ResourceSendRequest [0ms]\n  -ResourceReceiveResponse [0ms]\n..........................\n-RunTask [2.996ms]\n  -ParseHTML [2.368ms]\n....\n    -ParseHTML [0.074ms]\n...\n    -EventDispatch (readystatechange) [0.01ms]\n.\n    -EventDispatch (DOMContentLoaded) [0.005ms]\n.\n    -MarkDOMContent [0ms]\n.\n    -EventDispatch (readystatechange) [0.008ms]\n    -EventDispatch (beforeunload) [0.009ms]\n    -FrameStartedLoading [0ms]\n.\n  -ParseHTML [0.009ms]\n..\n  -EventDispatch (readystatechange) [0.007ms]\n.\n  -EventDispatch (DOMContentLoaded) [0.005ms]\n.\n  -UpdateLayoutTree [0.301ms]\n    -InvalidateLayout [0ms]\n  -MarkDOMContent [0ms]\n.\n-RunTask [1.897ms]\n  -BeginMainThreadFrame [0ms]\n  -Layout [0.44ms]\n    -InvalidateLayout [0ms]\n.\n  -UpdateLayerTree [0.247ms]\n  -Paint [0.289ms]\n..\n  -firstPaint [0ms]\n  -firstContentfulPaint [0ms]\n..\n  -largestContentfulPaint::Candidate [0ms]\n....................................\n-RunTask [1.304ms]\n  -EventDispatch (pagehide) [0.016ms]\n  -EventDispatch (visibilitychange) [0.009ms]\n  -EventDispatch (webkitvisibilitychange) [0.004ms]\n  -EventDispatch (unload) [0.015ms]\n.\n  -ScheduleStyleRecalculation [0ms]\n......................................................................................................................`);\n  });\n\n  it('builds a hierarchy for the sub frame\\'s main thread in a real world profile', async () => {\n    const {Renderer: renderers} = await handleEventsFromTraceFile(this, 'multiple-navigations-with-iframes.json.gz');\n    const frame = renderers.processes.get(TraceModel.Types.TraceEvents.ProcessID(SUB_FRAME_PID)) as\n        TraceModel.Handlers.ModelHandlers.Renderer.RendererProcess;\n    const thread = [...frame.threads.values()].find(thread => thread.name === 'CrRendererMain');\n    if (!thread) {\n      assert(false, 'Main thread was not found');\n      return;\n    }\n\n    const tree = thread.tree;\n    if (!tree) {\n      assert(false, 'Main thread has no tree of events');\n      return;\n    }\n    const isIncluded =\n        (_node: TraceModel.Helpers.TreeHelpers.TraceEntryNode,\n         event: TraceModel.Types.TraceEvents.SyntheticTraceEntry) =>\n            Boolean(Timeline.EventUICategory.getEventStyle(event.name as TraceModel.Types.TraceEvents.KnownEventName));\n    assert.strictEqual(prettyPrint(tree, isIncluded), `\n-RunTask [0.13ms]\n-RunTask [0.005ms]\n-RunTask [0.009ms]\n-RunTask [0.065ms]\n-RunTask [0.084ms]\n-RunTask [0.041ms]\n-RunTask [0.057ms]\n-RunTask [0.021ms]\n-RunTask [0.009ms]\n-RunTask [0.065ms]\n-RunTask [0.078ms]\n-RunTask [0.043ms]\n-RunTask [0.077ms]\n  -ScheduleStyleRecalculation [0ms]\n-RunTask [0.415ms]\n-RunTask [0ms]\n-EventDispatch (pagehide) [0.012ms]\n-EventDispatch (visibilitychange) [0.007ms]\n-EventDispatch (webkitvisibilitychange) [0.016ms]\n-EventDispatch (unload) [0.007ms]\n.`);\n  });\n\n  it('has some correct known roots for the main frame\\'s main thread in a real world profile', async () => {\n    const {Renderer: renderers} = await handleEventsFromTraceFile(this, 'multiple-navigations-with-iframes.json.gz');\n    const frame = renderers.processes.get(TraceModel.Types.TraceEvents.ProcessID(MAIN_FRAME_PID)) as\n        TraceModel.Handlers.ModelHandlers.Renderer.RendererProcess;\n    const thread = [...frame.threads.values()].find(thread => thread.name === 'CrRendererMain');\n    if (!thread) {\n      assert(false, 'Main thread was not found');\n      return;\n    }\n\n    const tree = thread.tree;\n    if (!tree) {\n      assert(false, 'Main thread has no tree of events');\n      return;\n    }\n\n    const event0 = getRootAt(thread, 1).entry;\n    assert.deepEqual(event0 as unknown, {\n      'args': {},\n      'cat': 'disabled-by-default-devtools.timeline',\n      'dur': 132,\n      'name': 'RunTask',\n      'ph': 'X',\n      'pid': 2154214,\n      'tdur': 131,\n      'tid': 1,\n      'ts': 643492822363,\n      'tts': 291450,\n      'selfTime': 132,\n    });\n\n    const event1 = getRootAt(thread, 2).entry;\n    assert.deepEqual(event1 as unknown, {\n      'args': {},\n      'cat': 'disabled-by-default-devtools.timeline',\n      'dur': 4,\n      'name': 'RunTask',\n      'ph': 'X',\n      'pid': 2154214,\n      'tdur': 4,\n      'tid': 1,\n      'ts': 643492822500,\n      'tts': 291586,\n      'selfTime': 4,\n    });\n\n    const eventLast = getRootAt(thread, tree.roots.size - 1).entry;\n    assert.deepEqual(eventLast as unknown, {\n      'args': {},\n      'cat': 'disabled-by-default-devtools.timeline',\n      'dur': 67,\n      'name': 'RunTask',\n      'ph': 'X',\n      'pid': 2154214,\n      'tdur': 67,\n      'tid': 1,\n      'ts': 643499551460,\n      'tts': 949032,\n      'selfTime': 35,\n    });\n  });\n\n  it('has some correct known roots for the sub frame\\'s main thread in a real world profile', async () => {\n    const {Renderer: renderers} = await handleEventsFromTraceFile(this, 'multiple-navigations-with-iframes.json.gz');\n    const frame = renderers.processes.get(TraceModel.Types.TraceEvents.ProcessID(SUB_FRAME_PID)) as\n        TraceModel.Handlers.ModelHandlers.Renderer.RendererProcess;\n    const thread = [...frame.threads.values()].find(thread => thread.name === 'CrRendererMain');\n    if (!thread) {\n      assert(false, 'Main thread was not found');\n      return;\n    }\n\n    const tree = thread.tree;\n    if (!tree) {\n      assert(false, 'Main thread has no tree of events');\n      return;\n    }\n\n    const event0 = getRootAt(thread, 0).entry;\n    assert.deepEqual(event0 as unknown, {\n      'args': {},\n      'cat': 'disabled-by-default-devtools.timeline',\n      'dur': 130,\n      'name': 'RunTask',\n      'ph': 'X',\n      'pid': 2236065,\n      'tdur': 129,\n      'tid': 1,\n      'ts': 643492822099,\n      'tts': 62157,\n      'selfTime': 130,\n    });\n\n    const event1 = getRootAt(thread, 1).entry;\n    assert.deepEqual(event1 as unknown, {\n      'args': {},\n      'cat': 'disabled-by-default-devtools.timeline',\n      'dur': 5,\n      'name': 'RunTask',\n      'ph': 'X',\n      'pid': 2236065,\n      'tdur': 5,\n      'tid': 1,\n      'ts': 643492822234,\n      'tts': 62291,\n      'selfTime': 5,\n    });\n\n    const event2 = getRootAt(thread, 2).entry;\n\n    assert.deepEqual(event2 as unknown, {\n      'args': {},\n      'cat': 'disabled-by-default-devtools.timeline',\n      'dur': 9,\n      'name': 'RunTask',\n      'ph': 'X',\n      'pid': 2236065,\n      'tdur': 9,\n      'tid': 1,\n      'ts': 643492822242,\n      'tts': 62299,\n      'selfTime': 9,\n    });\n  });\n\n  it('can correctly sort a simple list of complete events', async () => {\n    const data = [\n      makeCompleteEvent('d0', 2, 1),\n      makeCompleteEvent('b0', 1, 1),\n      makeCompleteEvent('a0', 0, 1),\n      makeCompleteEvent('a1', 0, 0.5),\n      makeCompleteEvent('a2', 0.5, 0.5),\n      makeCompleteEvent('c0', 1.5, 0.5),\n      makeCompleteEvent('a4', 0.99, 0.01),\n      makeCompleteEvent('b1', 1, 0.01),\n      makeCompleteEvent('a3', 0.5, 0.25),\n    ];\n\n    TraceModel.Helpers.Trace.sortTraceEventsInPlace(data);\n\n    assert.deepEqual(data.map(e => ({name: e.name, ts: e.ts, dur: e.dur})) as unknown, [\n      {'name': 'a0', 'ts': 0, 'dur': 1},\n      {'name': 'a1', 'ts': 0, 'dur': 0.5},\n      {'name': 'a2', 'ts': 0.5, 'dur': 0.5},\n      {'name': 'a3', 'ts': 0.5, 'dur': 0.25},\n      {'name': 'a4', 'ts': 0.99, 'dur': 0.01},\n      {'name': 'b0', 'ts': 1, 'dur': 1},\n      {'name': 'b1', 'ts': 1, 'dur': 0.01},\n      {'name': 'c0', 'ts': 1.5, 'dur': 0.5},\n      {'name': 'd0', 'ts': 2, 'dur': 1},\n    ]);\n  });\n\n  it('can correctly sort a simple list of complete events interspersed with instant events', async () => {\n    const data = [\n      makeCompleteEvent('d0', 2, 1),\n      makeInstantEvent('i0', 0),\n      makeCompleteEvent('b0', 1, 1),\n      makeInstantEvent('i1', 0.01),\n      makeCompleteEvent('a0', 0, 1),\n      makeInstantEvent('i2', 0.5),\n      makeCompleteEvent('a1', 0, 0.5),\n      makeInstantEvent('i3', 0.99),\n      makeCompleteEvent('a2', 0.5, 0.5),\n      makeInstantEvent('i4', 1),\n      makeCompleteEvent('c0', 1.5, 0.5),\n      makeInstantEvent('i5', 1.75),\n      makeCompleteEvent('a4', 0.99, 0.01),\n      makeInstantEvent('i6', 1.99),\n      makeCompleteEvent('b1', 1, 0.01),\n      makeInstantEvent('i7', 2),\n      makeCompleteEvent('a3', 0.5, 0.25),\n      makeInstantEvent('i8', 2.01),\n    ];\n\n    TraceModel.Helpers.Trace.sortTraceEventsInPlace(data);\n\n    assert.deepEqual(data.map(e => ({name: e.name, ts: e.ts, dur: e.dur})) as unknown, [\n      {'name': 'a0', 'ts': 0, 'dur': 1},\n      {'name': 'a1', 'ts': 0, 'dur': 0.5},\n      {'name': 'i0', 'ts': 0, 'dur': undefined},\n      {'name': 'i1', 'ts': 0.01, 'dur': undefined},\n      {'name': 'a2', 'ts': 0.5, 'dur': 0.5},\n      {'name': 'a3', 'ts': 0.5, 'dur': 0.25},\n      {'name': 'i2', 'ts': 0.5, 'dur': undefined},\n      {'name': 'a4', 'ts': 0.99, 'dur': 0.01},\n      {'name': 'i3', 'ts': 0.99, 'dur': undefined},\n      {'name': 'b0', 'ts': 1, 'dur': 1},\n      {'name': 'b1', 'ts': 1, 'dur': 0.01},\n      {'name': 'i4', 'ts': 1, 'dur': undefined},\n      {'name': 'c0', 'ts': 1.5, 'dur': 0.5},\n      {'name': 'i5', 'ts': 1.75, 'dur': undefined},\n      {'name': 'i6', 'ts': 1.99, 'dur': undefined},\n      {'name': 'd0', 'ts': 2, 'dur': 1},\n      {'name': 'i7', 'ts': 2, 'dur': undefined},\n      {'name': 'i8', 'ts': 2.01, 'dur': undefined},\n    ]);\n  });\n\n  it('can process multiple processes', async () => {\n    /**\n     * |------------- Task A -------------||-- Task E --|\n     *  |-- Task B --||-- Task D --|\n     *   |- Task C -|\n     */\n    const data1 = [\n      makeCompleteEvent('A', 0, 10),  // 0..10\n      makeCompleteEvent('B', 1, 3),   // 1..4\n      makeCompleteEvent('D', 5, 3),   // 5..8\n      makeCompleteEvent('C', 2, 1),   // 2..3\n      makeCompleteEvent('E', 11, 3),  // 11..14\n    ];\n\n    /**\n     * |-- Task F --||------------- Task G -------------|\n     *               |-- Task H --||-- Task J --|\n     *                 |- Task I -|\n     */\n    const data2 = [\n      makeCompleteEvent('F', 0, 3),   // 0..3\n      makeCompleteEvent('G', 3, 10),  // 3..13 (starts when F finishes)\n      makeCompleteEvent('H', 3, 3),   // 3..6 (starts same time as G)\n      makeCompleteEvent('J', 6, 3),   // 6..9 (starts when H finishes)\n      makeCompleteEvent('I', 5, 1),   // 5..6 (finishes when H finishes)\n    ];\n\n    const processes = new Map([\n      [\n        TraceModel.Types.TraceEvents.ProcessID(0),\n        {\n          url: ('http://a.com'),\n          isOnMainFrame: true,\n          threads: new Map([[\n            TraceModel.Types.TraceEvents.ThreadID(1),\n            {name: 'Foo', entries: data1},\n          ]]),\n        } as TraceModel.Handlers.ModelHandlers.Renderer.RendererProcess,\n      ],\n      [\n        TraceModel.Types.TraceEvents.ProcessID(2),\n        {\n          url: ('http://b.com'),\n          isOnMainFrame: false,\n          threads: new Map([[\n            TraceModel.Types.TraceEvents.ThreadID(3),\n            {name: 'Bar', entries: data2},\n          ]]),\n        } as TraceModel.Handlers.ModelHandlers.Renderer.RendererProcess,\n      ],\n    ]);\n\n    TraceModel.Handlers.ModelHandlers.Samples.initialize();\n    await TraceModel.Handlers.ModelHandlers.Samples.finalize();\n    TraceModel.Handlers.ModelHandlers.Renderer.buildHierarchy(processes, {filter: {has: () => true}});\n\n    const firstThread = [...[...processes.values()][0].threads.values()][0];\n    const secondThread = [...[...processes.values()][1].threads.values()][0];\n\n    if (!firstThread.tree || !secondThread.tree) {\n      assert(false, 'Trees not found');\n      return;\n    }\n\n    assert.strictEqual(firstThread.tree.maxDepth, 3, 'Got the correct tree max depth for the first thread');\n    assert.strictEqual(secondThread.tree.maxDepth, 3, 'Got the correct tree max depth for the second thread');\n\n    const firstRoots = getEventsIn(firstThread.tree.roots.values());\n    assert.deepEqual(firstRoots.map(e => e ? {name: e.name, ts: e.ts, dur: e.dur} : null) as unknown[], [\n      {'name': 'A', 'ts': 0, 'dur': 10},\n      {'name': 'E', 'ts': 11, 'dur': 3},\n    ]);\n\n    const secondRoots = getEventsIn(secondThread.tree.roots.values());\n    assert.deepEqual(secondRoots.map(e => e ? {name: e.name, ts: e.ts, dur: e.dur} : null) as unknown[], [\n      {'name': 'F', 'ts': 0, 'dur': 3},\n      {'name': 'G', 'ts': 3, 'dur': 10},\n    ]);\n  });\n\n  it('can assign origins to processes', async () => {\n    const {Meta: metadata} = await handleEventsFromTraceFile(this, 'multiple-navigations-with-iframes.json.gz');\n    const processes:\n        Map<TraceModel.Types.TraceEvents.ProcessID, TraceModel.Handlers.ModelHandlers.Renderer.RendererProcess> =\n            new Map();\n\n    TraceModel.Handlers.ModelHandlers.Renderer.assignOrigin(processes, metadata.rendererProcessesByFrame);\n\n    assert.deepEqual([...processes].map(([pid, p]) => [pid, p.url ? new URL(p.url).origin : null]), [\n      [TraceModel.Types.TraceEvents.ProcessID(MAIN_FRAME_PID), 'http://localhost:5000'],\n      [TraceModel.Types.TraceEvents.ProcessID(SUB_FRAME_PID), 'https://www.example.com'],\n      [TraceModel.Types.TraceEvents.ProcessID(SUB_FRAME_PID_2), 'https://www.example.com'],\n      [TraceModel.Types.TraceEvents.ProcessID(SUB_FRAME_PID_3), 'https://www.example.com'],\n    ]);\n  });\n\n  it('can assign main frame flags to processes', async () => {\n    const {Meta: metadata} = await handleEventsFromTraceFile(this, 'multiple-navigations-with-iframes.json.gz');\n    const processes:\n        Map<TraceModel.Types.TraceEvents.ProcessID, TraceModel.Handlers.ModelHandlers.Renderer.RendererProcess> =\n            new Map();\n\n    TraceModel.Handlers.ModelHandlers.Renderer.assignIsMainFrame(\n        processes, metadata.mainFrameId, metadata.rendererProcessesByFrame);\n\n    assert.deepEqual([...processes].map(([pid, p]) => [pid, p.isOnMainFrame]), [\n      [TraceModel.Types.TraceEvents.ProcessID(MAIN_FRAME_PID), true],\n      [TraceModel.Types.TraceEvents.ProcessID(SUB_FRAME_PID), false],\n      [TraceModel.Types.TraceEvents.ProcessID(SUB_FRAME_PID_2), false],\n      [TraceModel.Types.TraceEvents.ProcessID(SUB_FRAME_PID_3), false],\n    ]);\n  });\n\n  it('can assign thread names to threads in processes', async () => {\n    const {Meta: metadata} = await handleEventsFromTraceFile(this, 'multiple-navigations-with-iframes.json.gz');\n    const {mainFrameId, rendererProcessesByFrame, threadsInProcess} = metadata;\n    const processes:\n        Map<TraceModel.Types.TraceEvents.ProcessID, TraceModel.Handlers.ModelHandlers.Renderer.RendererProcess> =\n            new Map();\n\n    TraceModel.Handlers.ModelHandlers.Renderer.assignMeta(\n        processes, mainFrameId, rendererProcessesByFrame, threadsInProcess);\n\n    assert.deepEqual([...processes].map(([pid, p]) => [pid, [...p.threads].map(([tid, t]) => [tid, t.name])]), [\n      [\n        TraceModel.Types.TraceEvents.ProcessID(MAIN_FRAME_PID),\n        [\n          [TraceModel.Types.TraceEvents.ThreadID(1), 'CrRendererMain'],\n          [TraceModel.Types.TraceEvents.ThreadID(7), 'Compositor'],\n          [TraceModel.Types.TraceEvents.ThreadID(2), 'ThreadPoolServiceThread'],\n          [TraceModel.Types.TraceEvents.ThreadID(4), 'Chrome_ChildIOThread'],\n          [TraceModel.Types.TraceEvents.ThreadID(24), 'ThreadPoolForegroundWorker'],\n          [TraceModel.Types.TraceEvents.ThreadID(27), 'ThreadPoolForegroundWorker'],\n          [TraceModel.Types.TraceEvents.ThreadID(17), 'ThreadPoolForegroundWorker'],\n          [TraceModel.Types.TraceEvents.ThreadID(29), 'ThreadPoolForegroundWorker'],\n          [TraceModel.Types.TraceEvents.ThreadID(25), 'ThreadPoolForegroundWorker'],\n          [TraceModel.Types.TraceEvents.ThreadID(28), 'ThreadPoolForegroundWorker'],\n          [TraceModel.Types.TraceEvents.ThreadID(30), 'ThreadPoolForegroundWorker'],\n          [TraceModel.Types.TraceEvents.ThreadID(26), 'ThreadPoolForegroundWorker'],\n          [TraceModel.Types.TraceEvents.ThreadID(11), 'CompositorTileWorker3'],\n          [TraceModel.Types.TraceEvents.ThreadID(12), 'CompositorTileWorker4'],\n          [TraceModel.Types.TraceEvents.ThreadID(10), 'CompositorTileWorker2'],\n          [TraceModel.Types.TraceEvents.ThreadID(9), 'CompositorTileWorker1'],\n        ],\n      ],\n      [\n        TraceModel.Types.TraceEvents.ProcessID(SUB_FRAME_PID),\n        [\n          [TraceModel.Types.TraceEvents.ThreadID(2), 'ThreadPoolServiceThread'],\n          [TraceModel.Types.TraceEvents.ThreadID(1), 'CrRendererMain'],\n          [TraceModel.Types.TraceEvents.ThreadID(7), 'Compositor'],\n          [TraceModel.Types.TraceEvents.ThreadID(4), 'Chrome_ChildIOThread'],\n        ],\n      ],\n      [\n        TraceModel.Types.TraceEvents.ProcessID(SUB_FRAME_PID_2),\n        [\n          [TraceModel.Types.TraceEvents.ThreadID(1), 'CrRendererMain'],\n          [TraceModel.Types.TraceEvents.ThreadID(4), 'Chrome_ChildIOThread'],\n          [TraceModel.Types.TraceEvents.ThreadID(8), 'Compositor'],\n          [TraceModel.Types.TraceEvents.ThreadID(2), 'ThreadPoolServiceThread'],\n          [TraceModel.Types.TraceEvents.ThreadID(10), 'CompositorTileWorker1'],\n        ],\n      ],\n      [\n        TraceModel.Types.TraceEvents.ProcessID(SUB_FRAME_PID_3),\n        [\n          [TraceModel.Types.TraceEvents.ThreadID(1), 'CrRendererMain'],\n          [TraceModel.Types.TraceEvents.ThreadID(2), 'ThreadPoolServiceThread'],\n          [TraceModel.Types.TraceEvents.ThreadID(4), 'Chrome_ChildIOThread'],\n          [TraceModel.Types.TraceEvents.ThreadID(7), 'Compositor'],\n          [TraceModel.Types.TraceEvents.ThreadID(10), 'CompositorTileWorker2'],\n          [TraceModel.Types.TraceEvents.ThreadID(3), 'ThreadPoolForegroundWorker'],\n        ],\n      ],\n    ]);\n  });\n\n  it('populates the map of trace events to tree nodes', async () => {\n    const {Renderer: renderers} = await handleEventsFromTraceFile(this, 'multiple-navigations-with-iframes.json.gz');\n    assert.strictEqual(renderers.entryToNode.size, 3591);\n  });\n\n  describe('Synthetic complete events', () => {\n    async function handleEvents(traceEvents: TraceModel.Types.TraceEvents.TraceEventData[]):\n        Promise<TraceModel.Handlers.ModelHandlers.Renderer.RendererHandlerData> {\n      TraceModel.Handlers.ModelHandlers.Renderer.reset();\n      TraceModel.Handlers.ModelHandlers.Meta.reset();\n      TraceModel.Handlers.ModelHandlers.Samples.reset();\n      TraceModel.Handlers.ModelHandlers.Meta.initialize();\n      TraceModel.Handlers.ModelHandlers.Samples.initialize();\n      TraceModel.Handlers.ModelHandlers.Renderer.initialize();\n\n      for (const event of traceEvents) {\n        TraceModel.Handlers.ModelHandlers.Meta.handleEvent(event);\n        TraceModel.Handlers.ModelHandlers.Renderer.handleEvent(event);\n      }\n\n      await TraceModel.Handlers.ModelHandlers.Meta.finalize();\n      await TraceModel.Handlers.ModelHandlers.Samples.finalize();\n      await TraceModel.Handlers.ModelHandlers.Renderer.finalize();\n      return TraceModel.Handlers.ModelHandlers.Renderer.data();\n    }\n    let defaultTraceEvents: readonly TraceModel.Types.TraceEvents.TraceEventData[];\n    const pid = TraceModel.Types.TraceEvents.ProcessID(28274);\n    const tid = TraceModel.Types.TraceEvents.ThreadID(775);\n    beforeEach(async function() {\n      defaultTraceEvents = await TraceLoader.rawEvents(this, 'basic.json.gz');\n    });\n\n    afterEach(() => {\n      TraceModel.Handlers.ModelHandlers.Renderer.reset();\n      TraceModel.Handlers.ModelHandlers.Meta.reset();\n      TraceModel.Handlers.ModelHandlers.Samples.reset();\n    });\n\n    it('builds a hierarchy using begin and end trace events', async () => {\n      // |------------- RunTask -------------||-- RunTask --|\n      //  |-- RunMicrotasks --||-- Layout --|\n      //   |- FunctionCall -|\n      const traceEvents = [\n        ...defaultTraceEvents, makeBeginEvent('RunTask', 0, '*', pid, tid),  // 0..10\n        makeBeginEvent('RunMicrotasks', 1, '*', pid, tid),                   // 1..4\n        makeBeginEvent('FunctionCall', 2, '*', pid, tid),                    // 2..3\n        makeEndEvent('FunctionCall', 3, '*', pid, tid),                      // 2..3\n        makeEndEvent('RunMicrotasks', 4, '*', pid, tid),                     // 1..4\n        makeBeginEvent('Layout', 5, '*', pid, tid),                          // 5..8\n        makeEndEvent('Layout', 8, '*', pid, tid),                            // 5..8\n        makeEndEvent('RunTask', 10, '*', pid, tid),                          // 0..10\n        makeBeginEvent('RunTask', 11, '*', pid, tid),                        // 11..14\n        makeEndEvent('RunTask', 14, '*', pid, tid),                          // 11..14\n      ];\n\n      const data = await handleEvents(traceEvents);\n\n      assert.strictEqual(data.allTraceEntries.length, 7);\n      assert.strictEqual(data.processes.size, 1);\n      const [process] = data.processes.values();\n      assert.strictEqual(process.threads.size, 1);\n      const [thread] = process.threads.values();\n      assert.strictEqual(thread.tree?.roots.size, 2);\n      if (!thread.tree?.roots) {\n        // This shouldn't happen, since the tree.roots.size is 2, but add this if check to pass ts check.\n        return;\n      }\n      const allNodes = getAllNodes(thread.tree?.roots);\n      assert.strictEqual(allNodes.length, 5);\n      if (!thread.tree) {\n        return;\n      }\n      assert.strictEqual(prettyPrint(thread.tree), `\n-RunTask [0.01ms]\n  -RunMicrotasks [0.003ms]\n    -FunctionCall [0.001ms]\n  -Layout [0.003ms]\n-RunTask [0.003ms]`);\n    });\n    it('builds a hierarchy using complete, begin and end trace events', async () => {\n      // |------------- RunTask -------------|\n      //  |-- RunMicrotasks --||-- Layout --|\n      //   |- FunctionCall -|\n\n      const traceEvents = [\n        ...defaultTraceEvents, makeBeginEvent('RunTask', 0, '*', pid, tid),  // 0..10\n        makeBeginEvent('RunMicrotasks', 1, '*', pid, tid),                   // 1..4\n        makeCompleteEvent('FunctionCall', 2, 1, '*', pid, tid),              // 2..3\n        makeEndEvent('RunMicrotasks', 4, '*', pid, tid),                     // 1..4\n        makeBeginEvent('Layout', 5, '*', pid, tid),                          // 5..8\n        makeEndEvent('Layout', 8, '*', pid, tid),                            // 5..8\n        makeEndEvent('RunTask', 10, '*', pid, tid),                          // 0..10\n      ];\n\n      const data = await handleEvents(traceEvents);\n\n      assert.strictEqual(data.allTraceEntries.length, 6);\n      assert.strictEqual(data.processes.size, 1);\n      const [process] = data.processes.values();\n      assert.strictEqual(process.threads.size, 1);\n      const [thread] = process.threads.values();\n      assert.strictEqual(thread.tree?.roots.size, 1);\n      if (!thread.tree?.roots) {\n        // This shouldn't happen, since the tree.roots.size is 1, but add this if check to pass ts check.\n        return;\n      }\n      const allNodes = getAllNodes(thread.tree?.roots);\n      assert.strictEqual(allNodes.length, 4);\n      if (!thread.tree) {\n        return;\n      }\n      assert.strictEqual(prettyPrint(thread.tree), `\n-RunTask [0.01ms]\n  -RunMicrotasks [0.003ms]\n    -FunctionCall [0.001ms]\n  -Layout [0.003ms]`);\n    });\n\n    it('keeps a FunctionCall that has the end event missing', async () => {\n      const traceEvents = [\n        ...defaultTraceEvents, makeBeginEvent('RunMicrotasks', 1, '*', pid, tid),  // 1..4\n        makeBeginEvent('FunctionCall', 2, '*', pid, tid),                          // 2..3\n      ];\n\n      const data = await handleEvents(traceEvents);\n      assert.strictEqual(data.processes.size, 1);\n      const [process] = data.processes.values();\n      assert.strictEqual(process.threads.size, 1);\n      const [thread] = process.threads.values();\n      if (!thread.tree) {\n        throw new Error('thread should have a tree');\n      }\n      // Ensure that the FunctionCall event has been kept despite not having an END event.\n      assert.deepEqual(thread.entries.map(e => e.name), ['RunMicrotasks', 'FunctionCall']);\n    });\n  });\n\n  describe('building hierarchies trace events and profile calls', () => {\n    it('build a hierarchy using data from real world trace file', async () => {\n      const {Renderer} = await handleEventsFromTraceFile(this, 'recursive-counting-js.json.gz');\n      const threadId = TraceModel.Types.TraceEvents.ThreadID(259);\n      const firstProcessId = TraceModel.Types.TraceEvents.ProcessID(23239);\n      const thread = Renderer.processes.get(firstProcessId)?.threads.get(threadId);\n      if (!thread || !thread.tree) {\n        throw new Error('Tree not found');\n      }\n      const onlyLongTasksPredicate =\n          (_node: TraceModel.Helpers.TreeHelpers.TraceEntryNode,\n           event: TraceModel.Types.TraceEvents.SyntheticTraceEntry) => Boolean(event.dur && event.dur > 1000) &&\n          Boolean(Timeline.EventUICategory.getEventStyle(event.name as TraceModel.Types.TraceEvents.KnownEventName));\n      assert.strictEqual(prettyPrint(thread.tree, onlyLongTasksPredicate), `\n.............\n-RunTask [17.269ms]\n.............................\n-RunTask [1065.663ms]\n  -ParseHTML [1065.609ms]\n.........\n-RunTask [1.12ms]\n  -ParseHTML [1.082ms]\n.........................................................\n-RunTask [1058.811ms]\n  -TimerFire [1058.77ms]\n    -FunctionCall [1058.693ms]\n.\n      -ProfileCall (anonymous) [1058.589ms]\n        -ProfileCall (foo) [1058.589ms]\n          -ProfileCall (foo) [1058.589ms]\n            -ProfileCall (foo) [1058.589ms]\n              -ProfileCall (foo) [1058.589ms]\n..\n                -ProfileCall (count) [1058.453ms]\n........\n-RunTask [1057.455ms]\n  -TimerFire [1057.391ms]\n    -FunctionCall [1057.27ms]\n.\n      -ProfileCall (anonymous) [1056.579ms]\n        -ProfileCall (foo) [1056.579ms]\n          -ProfileCall (foo) [1056.579ms]\n            -ProfileCall (foo) [1056.579ms]\n              -ProfileCall (foo) [1056.579ms]\n                -ProfileCall (count) [1056.538ms]\n........`);\n    });\n  });\n\n  it('identifies and returns rasterizer threads', async () => {\n    const {Renderer} = await handleEventsFromTraceFile(this, 'web-dev.json.gz');\n    assert.deepEqual(Array.from(Renderer.compositorTileWorkers.entries()), [\n      [\n        TraceModel.Types.TraceEvents.ProcessID(68481),\n        [\n          TraceModel.Types.TraceEvents.ThreadID(81675),\n        ],\n      ],\n      [\n        TraceModel.Types.TraceEvents.ProcessID(73704),\n        [\n          TraceModel.Types.TraceEvents.ThreadID(23299),\n          TraceModel.Types.TraceEvents.ThreadID(22275),\n          TraceModel.Types.TraceEvents.ThreadID(41475),\n          TraceModel.Types.TraceEvents.ThreadID(40451),\n          TraceModel.Types.TraceEvents.ThreadID(22531),\n        ],\n      ],\n    ]);\n  });\n\n  it('keeps the processes associated with AuctionWorklets and assigns them URLs', async () => {\n    const {Renderer, AuctionWorklets} = await handleEventsFromTraceFile(this, 'fenced-frame-fledge.json.gz');\n    assert.strictEqual(AuctionWorklets.worklets.size, 3);\n    for (const [pid] of AuctionWorklets.worklets) {\n      const process = Renderer.processes.get(pid);\n      assert.exists(process);\n      // Ensure that the URL was set properly based on the AuctionWorklets metadata event.\n      assert.isTrue(process?.url?.includes('fledge-demo.glitch.me'));\n    }\n  });\n});\n"]}