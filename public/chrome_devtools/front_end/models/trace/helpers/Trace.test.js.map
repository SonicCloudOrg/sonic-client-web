{"version":3,"file":"Trace.test.js","sourceRoot":"","sources":["../../../../../../../front_end/models/trace/helpers/Trace.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {describeWithEnvironment} from '../../../testing/EnvironmentHelpers.js';\nimport {\n  getMainThread,\n  makeAsyncEndEvent,\n  makeAsyncStartEvent,\n  makeCompleteEvent,\n  makeInstantEvent,\n} from '../../../testing/TraceHelpers.js';\nimport {TraceLoader} from '../../../testing/TraceLoader.js';\nimport * as TraceModel from '../trace.js';\n\ndescribeWithEnvironment('TraceModel helpers', function() {\n  describe('extractOriginFromTrace', () => {\n    it('extracts the origin of a parsed trace correctly', async function() {\n      const model = await TraceLoader.traceEngine(this, 'web-dev.json.gz');\n      const origin = TraceModel.Helpers.Trace.extractOriginFromTrace(model.Meta.mainFrameURL);\n      assert.strictEqual(origin, 'web.dev');\n    });\n\n    it('will remove the `www` if it is present', async function() {\n      const traceEvents = await TraceLoader.traceEngine(this, 'multiple-navigations.json.gz');\n      const origin = TraceModel.Helpers.Trace.extractOriginFromTrace(traceEvents.Meta.mainFrameURL);\n      assert.strictEqual(origin, 'google.com');\n    });\n\n    it('returns null when no origin is found', async function() {\n      const traceEvents = await TraceLoader.traceEngine(this, 'basic.json.gz');\n      const origin = TraceModel.Helpers.Trace.extractOriginFromTrace(traceEvents.Meta.mainFrameURL);\n      assert.isNull(origin);\n    });\n  });\n\n  describe('addEventToProcessThread', () => {\n    function makeTraceEvent(pid: TraceModel.Types.TraceEvents.ProcessID, tid: TraceModel.Types.TraceEvents.ThreadID):\n        TraceModel.Types.TraceEvents.TraceEventData {\n      return {\n        name: 'process_name',\n        tid,\n        pid,\n        ts: TraceModel.Types.Timing.MicroSeconds(0),\n        cat: 'test',\n        ph: TraceModel.Types.TraceEvents.Phase.METADATA,\n      };\n    }\n\n    function pid(x: number): TraceModel.Types.TraceEvents.ProcessID {\n      return TraceModel.Types.TraceEvents.ProcessID(x);\n    }\n    function tid(x: number): TraceModel.Types.TraceEvents.ThreadID {\n      return TraceModel.Types.TraceEvents.ThreadID(x);\n    }\n\n    const eventMap = new Map<\n        TraceModel.Types.TraceEvents.ProcessID,\n        Map<TraceModel.Types.TraceEvents.ThreadID, TraceModel.Types.TraceEvents.TraceEventData[]>>();\n\n    beforeEach(() => {\n      eventMap.clear();\n    });\n\n    it('will create a process and thread if it does not exist yet', async () => {\n      const event = makeTraceEvent(pid(1), tid(1));\n      TraceModel.Helpers.Trace.addEventToProcessThread(event, eventMap);\n      assert.strictEqual(eventMap.get(pid(1))?.size, 1);\n      const threadEvents = eventMap.get(pid(1))?.get(tid(1));\n      assert.strictEqual(threadEvents?.length, 1);\n    });\n\n    it('adds new events to existing threads correctly', async () => {\n      const event = makeTraceEvent(pid(1), tid(1));\n      TraceModel.Helpers.Trace.addEventToProcessThread(event, eventMap);\n      const newEvent = makeTraceEvent(pid(1), tid(1));\n      TraceModel.Helpers.Trace.addEventToProcessThread(newEvent, eventMap);\n      assert.deepEqual(eventMap.get(pid(1))?.get(tid(1)), [event, newEvent]);\n    });\n  });\n\n  describe('sortTraceEventsInPlace', () => {\n    function makeFakeEvent(ts: number, dur: number): TraceModel.Types.TraceEvents.TraceEventData {\n      return {\n        ts: TraceModel.Types.Timing.MicroSeconds(ts),\n        dur: TraceModel.Types.Timing.MicroSeconds(dur),\n      } as unknown as TraceModel.Types.TraceEvents.TraceEventData;\n    }\n\n    it('sorts by start time in ASC order', () => {\n      const event1 = makeFakeEvent(1, 1);\n      const event2 = makeFakeEvent(2, 1);\n      const event3 = makeFakeEvent(3, 1);\n      const events = [event3, event1, event2];\n      TraceModel.Helpers.Trace.sortTraceEventsInPlace(events);\n      assert.deepEqual(events, [event1, event2, event3]);\n    });\n\n    it('sorts by longest duration if the timestamps are the same', () => {\n      const event1 = makeFakeEvent(1, 1);\n      const event2 = makeFakeEvent(1, 2);\n      const event3 = makeFakeEvent(1, 3);\n      const events = [event1, event2, event3];\n      TraceModel.Helpers.Trace.sortTraceEventsInPlace(events);\n      assert.deepEqual(events, [event3, event2, event1]);\n    });\n  });\n\n  describe('getNavigationForTraceEvent', () => {\n    it('returns the correct navigation for a request', async function() {\n      const {NetworkRequests, Meta} = await TraceLoader.traceEngine(this, 'multiple-navigations.json.gz');\n      const request1 = NetworkRequests.byTime[0];\n      const navigationForFirstRequest = TraceModel.Helpers.Trace.getNavigationForTraceEvent(\n          request1, request1.args.data.frame, Meta.navigationsByFrameId);\n      assert.isUndefined(navigationForFirstRequest?.ts);\n\n      const request2 = NetworkRequests.byTime[1];\n      const navigationForSecondRequest = TraceModel.Helpers.Trace.getNavigationForTraceEvent(\n          request2, request2.args.data.frame, Meta.navigationsByFrameId);\n      assert.strictEqual(navigationForSecondRequest?.ts, TraceModel.Types.Timing.MicroSeconds(636471400029));\n    });\n\n    it('returns the correct navigation for a page load event', async function() {\n      const {PageLoadMetrics, Meta} = await TraceLoader.traceEngine(this, 'multiple-navigations.json.gz');\n      const firstNavigationId = Meta.navigationsByNavigationId.keys().next().value;\n\n      const fcp = PageLoadMetrics.metricScoresByFrameId.get(Meta.mainFrameId)\n                      ?.get(firstNavigationId)\n                      ?.get(TraceModel.Handlers.ModelHandlers.PageLoadMetrics.MetricName.FCP);\n      if (!fcp || !fcp.event) {\n        assert.fail('FCP not found');\n      }\n      const navigationForFirstRequest =\n          TraceModel.Helpers.Trace.getNavigationForTraceEvent(fcp.event, Meta.mainFrameId, Meta.navigationsByFrameId);\n      assert.strictEqual(navigationForFirstRequest?.args.data?.navigationId, firstNavigationId);\n    });\n  });\n\n  describe('extractId', () => {\n    it('returns the correct id for an event', async () => {\n      const fakeEventWithId = {id: 'id'} as unknown as TraceModel.Types.TraceEvents.TraceEventPairableAsync;\n      const id = TraceModel.Helpers.Trace.extractId(fakeEventWithId);\n      assert.strictEqual(id, fakeEventWithId.id);\n\n      const fakeEventWithGlobalId2 = {id2: {global: 'globalId2'}} as unknown as\n          TraceModel.Types.TraceEvents.TraceEventPairableAsync;\n      const globalId2 = TraceModel.Helpers.Trace.extractId(fakeEventWithGlobalId2);\n      assert.strictEqual(globalId2, fakeEventWithGlobalId2.id2?.global);\n\n      const fakeEventWithLocalId2 = {id2: {local: 'localId2'}} as unknown as\n          TraceModel.Types.TraceEvents.TraceEventPairableAsync;\n      const localId2 = TraceModel.Helpers.Trace.extractId(fakeEventWithLocalId2);\n      assert.strictEqual(localId2, fakeEventWithLocalId2.id2?.local);\n    });\n  });\n  describe('mergeEventsInOrder', () => {\n    it('merges two ordered arrays of trace events with no duration', async () => {\n      const array1 = [\n        {\n          name: 'a',\n          ts: 0,\n        },\n        {\n          name: 'b',\n          ts: 2,\n        },\n        {\n          name: 'c',\n          ts: 4,\n        },\n        {\n          name: 'd',\n          ts: 6,\n        },\n        {\n          name: 'e',\n          ts: 8,\n        },\n      ] as TraceModel.Types.TraceEvents.TraceEventData[];\n\n      const array2 = [\n        {\n          name: 'a',\n          ts: 1,\n        },\n        {\n          name: 'b',\n          ts: 3,\n        },\n        {\n          name: 'c',\n          ts: 5,\n        },\n        {\n          name: 'd',\n          ts: 7,\n        },\n        {\n          name: 'e',\n          ts: 9,\n        },\n      ] as TraceModel.Types.TraceEvents.TraceEventData[];\n      const ordered = TraceModel.Helpers.Trace.mergeEventsInOrder(array1, array2);\n      for (let i = 1; i < ordered.length; i++) {\n        assert.isAbove(ordered[i].ts, ordered[i - 1].ts);\n      }\n    });\n    it('merges two ordered arrays of trace events with duration', async () => {\n      const array1 = [\n        {\n          name: 'a',\n          ts: 0,\n          dur: 10,\n        },\n        {\n          name: 'b',\n          ts: 2,\n          dur: 12,\n        },\n        {\n          name: 'c',\n          ts: 4,\n          dur: 2,\n        },\n        {\n          name: 'd',\n          ts: 6,\n          dur: 9,\n        },\n        {\n          name: 'e',\n          ts: 8,\n          dur: 100,\n        },\n      ] as TraceModel.Types.TraceEvents.TraceEventData[];\n\n      const array2 = [\n        {\n          name: 'a',\n          ts: 1,\n          dur: 2,\n        },\n        {\n          name: 'b',\n          ts: 3,\n          dur: 1,\n        },\n        {\n          name: 'c',\n          ts: 5,\n          dur: 99,\n        },\n        {\n          name: 'd',\n          ts: 7,\n        },\n        {\n          name: 'e',\n          ts: 9,\n          dur: 0,\n        },\n      ] as TraceModel.Types.TraceEvents.TraceEventData[];\n      const ordered = TraceModel.Helpers.Trace.mergeEventsInOrder(array1, array2);\n      for (let i = 1; i < ordered.length; i++) {\n        assert.isAbove(ordered[i].ts, ordered[i - 1].ts);\n      }\n    });\n    it('merges two ordered arrays of trace events when timestamps collide', async () => {\n      const array1 = [\n        {\n          name: 'a',\n          ts: 0,\n          dur: 10,\n        },\n        {\n          name: 'b',\n          ts: 2,\n          dur: 12,\n        },\n        {\n          name: 'c',\n          ts: 4,\n          dur: 2,\n        },\n        {\n          name: 'd',\n          ts: 6,\n          dur: 9,\n        },\n        {\n          name: 'e',\n          ts: 8,\n          dur: 100,\n        },\n      ] as TraceModel.Types.TraceEvents.TraceEventData[];\n\n      const array2 = [\n        {\n          name: 'a',\n          ts: 0,\n          dur: 2,\n        },\n        {\n          name: 'b',\n          ts: 2,\n          dur: 1,\n        },\n        {\n          name: 'c',\n          ts: 4,\n          dur: 99,\n        },\n        {\n          name: 'd',\n          ts: 7,\n        },\n        {\n          name: 'e',\n          ts: 9,\n          dur: 0,\n        },\n      ] as TraceModel.Types.TraceEvents.TraceEventData[];\n      const ordered = TraceModel.Helpers.Trace.mergeEventsInOrder(array1, array2);\n      for (let i = 1; i < ordered.length; i++) {\n        const dur = ordered[i].dur;\n        const durPrev = ordered[i - 1].dur;\n        const eventsHaveDuration = dur !== undefined && durPrev !== undefined;\n        const correctOrderForSharedTimestamp =\n            eventsHaveDuration && ordered[i].ts === ordered[i - 1].ts && dur <= durPrev;\n        assert.isTrue(ordered[i].ts > ordered[i - 1].ts || correctOrderForSharedTimestamp);\n      }\n    });\n    it('merges two ordered arrays of trace events when timestamps and durations collide', async () => {\n      const array1 = [\n        {\n          name: 'a',\n          ts: 0,\n          dur: 10,\n        },\n        {\n          name: 'b',\n          ts: 2,\n          dur: 10,\n        },\n        {\n          name: 'c',\n          ts: 4,\n          dur: 10,\n        },\n        {\n          name: 'd',\n          ts: 6,\n          dur: 10,\n        },\n        {\n          name: 'e',\n          ts: 8,\n          dur: 10,\n        },\n      ] as TraceModel.Types.TraceEvents.TraceEventData[];\n\n      const array2 = [...array1];\n      const ordered = TraceModel.Helpers.Trace.mergeEventsInOrder(array1, array2);\n      for (let i = 1; i < ordered.length; i++) {\n        const dur = ordered[i].dur;\n        const durPrev = ordered[i - 1].dur;\n        const eventsHaveDuration = dur !== undefined && durPrev !== undefined;\n        const correctOrderForSharedTimestamp =\n            eventsHaveDuration && ordered[i].ts === ordered[i - 1].ts && dur <= durPrev;\n        assert.isTrue(ordered[i].ts > ordered[i - 1].ts || correctOrderForSharedTimestamp);\n      }\n    });\n  });\n  describe('activeURLForFrameAtTime', () => {\n    it('extracts the active url for a frame at a given time', async function() {\n      const traceEvents = await TraceLoader.traceEngine(this, 'simple-js-program.json.gz');\n      const frameId = '1F729458403A23CF1D8D246095129AC4';\n      const firstURL = TraceModel.Helpers.Trace.activeURLForFrameAtTime(\n          frameId, TraceModel.Types.Timing.MicroSeconds(251126654355), traceEvents.Meta.rendererProcessesByFrame);\n      assert.strictEqual(firstURL, 'about:blank');\n      const secondURL = TraceModel.Helpers.Trace.activeURLForFrameAtTime(\n          frameId, TraceModel.Types.Timing.MicroSeconds(251126663398), traceEvents.Meta.rendererProcessesByFrame);\n      assert.strictEqual(secondURL, 'https://www.google.com');\n    });\n  });\n\n  describe('createMatchedSortedSyntheticEvents', () => {\n    it('matches up arbitrary async events', async function() {\n      const events = await TraceLoader.rawEvents(this, 'user-timings.json.gz');\n      const asyncEvents = events.filter(event => TraceModel.Types.TraceEvents.isTraceEventAsyncPhase(event)) as\n          TraceModel.Types.TraceEvents.TraceEventPairableAsync[];\n      const synthEvents = TraceModel.Helpers.Trace.createMatchedSortedSyntheticEvents(asyncEvents);\n\n      // There's a lot of events, let's only assert one event per name\n      const seen = new Set();\n      // Make a readable output of each event to assert\n      const eventSummary = (e: TraceModel.Types.TraceEvents.SyntheticEventPair) =>\n          `@ ${(e.ts / 1000 - 1003e5).toFixed(3).padEnd(9)} for ${(e.dur / 1000).toFixed(3).padStart(8)}: ${e.name}`;\n      const eventsSummary = synthEvents\n                                .filter(e => {\n                                  const alreadySeen = seen.has(e.name);\n                                  seen.add(e.name);\n                                  return !alreadySeen;\n                                })\n                                .map(eventSummary);\n\n      assert.deepEqual(eventsSummary, [\n        '@ 22336.946 for   16.959: PipelineReporter',\n        '@ 22350.590 for    3.315: BeginImplFrameToSendBeginMainFrame',\n        '@ 40732.328 for    0.834: SendBeginMainFrameToCommit',\n        '@ 40733.162 for    0.307: Commit',\n        '@ 40733.469 for    0.097: EndCommitToActivation',\n        '@ 40733.566 for    0.019: Activation',\n        '@ 40733.585 for    1.775: EndActivateToSubmitCompositorFrame',\n        '@ 40735.360 for   58.412: SubmitCompositorFrameToPresentationCompositorFrame',\n        '@ 40735.360 for    0.148: SubmitToReceiveCompositorFrame',\n        '@ 40735.508 for    3.667: ReceiveCompositorFrameToStartDraw',\n        '@ 40739.175 for   54.136: StartDrawToSwapStart',\n        '@ 40793.311 for    0.461: Swap',\n        '@ 40810.809 for  205.424: first measure',\n        '@ 40810.809 for  606.224: second measure',\n        '@ 40825.971 for   11.802: InputLatency::MouseMove',\n        '@ 41818.833 for 2005.601: third measure',\n      ]);\n      assert.strictEqual(synthEvents.length, 237);\n    });\n    describe('createSortedSyntheticEvents()', () => {\n      it('correctly creates synthetic events when instant animation events are present', async function() {\n        const events = await TraceLoader.rawEvents(this, 'instant-animation-events.json.gz');\n        const animationEvents = events.filter(event => TraceModel.Types.TraceEvents.isTraceEventAnimation(event)) as\n            TraceModel.Types.TraceEvents.TraceEventAnimation[];\n        const animationSynthEvents = TraceModel.Helpers.Trace.createMatchedSortedSyntheticEvents(animationEvents);\n        const wantPairs = new Map<string, {compositeFailed: number, unsupportedProperties?: Array<string>}>([\n          [\n            'blink.animations,devtools.timeline,benchmark,rail:0x11d00230380:Animation',\n            {compositeFailed: 8224, unsupportedProperties: ['width']},\n          ],\n          ['blink.animations,devtools.timeline,benchmark,rail:0x11d00234738:Animation', {compositeFailed: 0}],\n          [\n            'blink.animations,devtools.timeline,benchmark,rail:0x11d00234b08:Animation',\n            {compositeFailed: 8224, unsupportedProperties: ['height']},\n          ],\n          [\n            'blink.animations,devtools.timeline,benchmark,rail:0x11d00234ed8:Animation',\n            {compositeFailed: 8224, unsupportedProperties: ['font-size']},\n          ],\n        ]);\n        // Ensure we have the correct numner of synthetic events created.\n        assert.deepEqual(wantPairs.size, animationSynthEvents.length);\n\n        animationSynthEvents.forEach(event => {\n          const id = event.id;\n          assert.exists(id);\n          assert.exists(wantPairs.get(id));\n\n          const beginEvent = event.args.data.beginEvent;\n          const endEvent = event.args.data.endEvent;\n          const instantEvents = event.args.data.instantEvents;\n\n          assert.exists(beginEvent);\n\n          // Check that the individual event ids match the synthetic id.\n          assert.isTrue(beginEvent.id2?.local && id.includes(beginEvent.id2?.local));\n          if (endEvent) {\n            assert.isTrue(endEvent.id2?.local && id?.includes(endEvent.id2?.local));\n          }\n          assert.isTrue(instantEvents?.every(event => event.id2?.local && id.includes(event.id2?.local)));\n\n          assert.strictEqual(instantEvents.length, 2);\n\n          // Check that the non-composited data matches the expected.\n          const nonCompositedEvents = instantEvents.filter(event => event.args.data.compositeFailed);\n          nonCompositedEvents.forEach(event => {\n            assert.strictEqual(event.args.data.compositeFailed, wantPairs.get(id)?.compositeFailed);\n            assert.deepEqual(event.args.data.unsupportedProperties, wantPairs.get(id)?.unsupportedProperties);\n          });\n        });\n      });\n    });\n  });\n\n  describe('getZeroIndexedLineAndColumnNumbersForEvent', () => {\n    it('subtracts one from the line number of a function call', async () => {\n      const fakeFunctionCall: TraceModel.Types.TraceEvents.TraceEventFunctionCall = {\n        name: TraceModel.Types.TraceEvents.KnownEventName.FunctionCall,\n        ph: TraceModel.Types.TraceEvents.Phase.COMPLETE,\n        cat: 'devtools-timeline',\n        dur: TraceModel.Types.Timing.MicroSeconds(100),\n        ts: TraceModel.Types.Timing.MicroSeconds(100),\n        pid: TraceModel.Types.TraceEvents.ProcessID(1),\n        tid: TraceModel.Types.TraceEvents.ThreadID(1),\n        args: {\n          data: {\n            functionName: 'test',\n            url: 'https://google.com/test.js',\n            scriptId: Number(123),\n            lineNumber: 1,\n            columnNumber: 1,\n          },\n        },\n      };\n      assert.deepEqual(TraceModel.Helpers.Trace.getZeroIndexedLineAndColumnForEvent(fakeFunctionCall), {\n        lineNumber: 0,\n        columnNumber: 0,\n      });\n    });\n  });\n\n  describe('frameIDForEvent', () => {\n    it('returns the frame ID from beginData if the event has it', async function() {\n      const traceParsedData = await TraceLoader.traceEngine(this, 'web-dev-with-commit.json.gz');\n      const parseHTMLEvent =\n          traceParsedData.Renderer.allTraceEntries.find(TraceModel.Types.TraceEvents.isTraceEventParseHTML);\n      assert.isOk(parseHTMLEvent);\n      const frameId = TraceModel.Helpers.Trace.frameIDForEvent(parseHTMLEvent);\n      assert.isNotNull(frameId);\n      assert.strictEqual(frameId, parseHTMLEvent.args.beginData.frame);\n    });\n\n    it('returns the frame ID from args.data if the event has it', async function() {\n      const traceParsedData = await TraceLoader.traceEngine(this, 'web-dev-with-commit.json.gz');\n      const invalidateLayoutEvent =\n          traceParsedData.Renderer.allTraceEntries.find(TraceModel.Types.TraceEvents.isTraceEventInvalidateLayout);\n      assert.isOk(invalidateLayoutEvent);\n      const frameId = TraceModel.Helpers.Trace.frameIDForEvent(invalidateLayoutEvent);\n      assert.isNotNull(frameId);\n      assert.strictEqual(frameId, invalidateLayoutEvent.args.data.frame);\n    });\n\n    it('returns null if the event does not have a frame', async function() {\n      const traceParsedData = await TraceLoader.traceEngine(this, 'web-dev-with-commit.json.gz');\n      const v8CompileEvent =\n          traceParsedData.Renderer.allTraceEntries.find(TraceModel.Types.TraceEvents.isTraceEventV8Compile);\n      assert.isOk(v8CompileEvent);\n      const frameId = TraceModel.Helpers.Trace.frameIDForEvent(v8CompileEvent);\n      assert.isNull(frameId);\n    });\n  });\n\n  describe('findUpdateLayoutTreeEvents', () => {\n    it('returns the set of UpdateLayoutTree events within the right time range', async function() {\n      const traceParsedData = await TraceLoader.traceEngine(this, 'selector-stats.json.gz');\n      const mainThread = getMainThread(traceParsedData.Renderer);\n      const foundEvents = TraceModel.Helpers.Trace.findUpdateLayoutTreeEvents(\n          mainThread.entries,\n          traceParsedData.Meta.traceBounds.min,\n      );\n      assert.lengthOf(foundEvents, 11);\n\n      const lastEvent = foundEvents.at(-1);\n      assert.isOk(lastEvent);\n\n      // Check we can filter by endTime by making the endTime less than the start\n      // time of the last event:\n      const filteredByEndTimeEvents = TraceModel.Helpers.Trace.findUpdateLayoutTreeEvents(\n          mainThread.entries,\n          traceParsedData.Meta.traceBounds.min,\n          TraceModel.Types.Timing.MicroSeconds(lastEvent.ts - 1_000),\n      );\n      assert.lengthOf(filteredByEndTimeEvents, 10);\n    });\n  });\n\n  describe('forEachEvent', () => {\n    const pid = TraceModel.Types.TraceEvents.ProcessID(1);\n    const tid = TraceModel.Types.TraceEvents.ThreadID(1);\n\n    it('iterates through the events in the expected tree-like order', async () => {\n      // |------------- RunTask -------------||-- RunTask --|\n      //  |-- RunMicrotasks --||-- Layout --|\n      //   |- FunctionCall -|\n      const traceEvents = [\n        makeCompleteEvent('RunTask', 0, 10, '*', pid, tid),       // 0..10\n        makeCompleteEvent('RunMicrotasks', 1, 3, '*', pid, tid),  // 1..4\n        makeCompleteEvent('FunctionCall', 2, 1, '*', pid, tid),   // 2..3\n        makeCompleteEvent('Layout', 5, 3, '*', pid, tid),         // 5..8\n        makeCompleteEvent('RunTask', 11, 3, '*', pid, tid),       // 11..14\n      ];\n      const onStartEvent = sinon.spy<(e: TraceModel.Types.TraceEvents.TraceEventData) => void>(_event => {});\n      const onEndEvent = sinon.spy<(e: TraceModel.Types.TraceEvents.TraceEventData) => void>(_event => {});\n\n      TraceModel.Helpers.Trace.forEachEvent(traceEvents, {\n        onEndEvent,\n        onStartEvent,\n      });\n      const eventsFromStartEventCalls = onStartEvent.getCalls().map(a => a.args[0]);\n      const eventsFromEndEventCalls = onEndEvent.getCalls().map(a => a.args[0]);\n      assert.deepEqual(\n          eventsFromStartEventCalls.map(e => e.name),\n          ['RunTask', 'RunMicrotasks', 'FunctionCall', 'Layout', 'RunTask'],\n      );\n      assert.deepEqual(\n          eventsFromEndEventCalls.map(e => e.name),\n          ['FunctionCall', 'RunMicrotasks', 'Layout', 'RunTask', 'RunTask'],\n      );\n    });\n\n    it('allows for a custom start and end time', async () => {\n      // |------------- RunTask -------------||-- RunTask --|\n      //  |-- RunMicrotasks --||-- Layout --|\n      //   |- FunctionCall -|\n      const traceEvents = [\n        makeCompleteEvent('RunTask', 0, 10, '*', pid, tid),       // 0..10\n        makeCompleteEvent('RunMicrotasks', 1, 3, '*', pid, tid),  // 1..4\n        makeCompleteEvent('FunctionCall', 2, 1, '*', pid, tid),   // 2..3\n        makeCompleteEvent('Layout', 5, 3, '*', pid, tid),         // 5..8\n      ];\n      const onStartEvent = sinon.spy<(e: TraceModel.Types.TraceEvents.TraceEventData) => void>(_event => {});\n      const onEndEvent = sinon.spy<(e: TraceModel.Types.TraceEvents.TraceEventData) => void>(_event => {});\n\n      TraceModel.Helpers.Trace.forEachEvent(traceEvents, {\n        onEndEvent,\n        onStartEvent,\n        startTime: TraceModel.Types.Timing.MicroSeconds(5),\n        endTime: TraceModel.Types.Timing.MicroSeconds(9),\n      });\n      const eventsFromStartEventCalls = onStartEvent.getCalls().map(a => a.args[0]);\n      const eventsFromEndEventCalls = onEndEvent.getCalls().map(a => a.args[0]);\n      // We expect the RunTask event (0-10) and the Layout event (5-8) as\n      // those fit in the 5-9 custom time range.\n      assert.deepEqual(\n          eventsFromStartEventCalls.map(e => e.name),\n          ['RunTask', 'Layout'],\n      );\n      assert.deepEqual(\n          eventsFromEndEventCalls.map(e => e.name),\n          ['Layout', 'RunTask'],\n      );\n    });\n\n    it('lets the user filter out events with a custom filter', async () => {\n      // |------------- RunTask -------------||-- RunTask --|\n      //  |-- RunMicrotasks --||-- Layout --|\n      //   |- FunctionCall -|\n      const traceEvents = [\n        makeCompleteEvent('RunTask', 0, 10, '*', pid, tid),       // 0..10\n        makeCompleteEvent('RunMicrotasks', 1, 3, '*', pid, tid),  // 1..4\n        makeCompleteEvent('FunctionCall', 2, 1, '*', pid, tid),   // 2..3\n        makeCompleteEvent('Layout', 5, 3, '*', pid, tid),         // 5..8\n        makeCompleteEvent('RunTask', 11, 3, '*', pid, tid),       // 11..14\n      ];\n      const onStartEvent = sinon.spy<(e: TraceModel.Types.TraceEvents.TraceEventData) => void>(_event => {});\n      const onEndEvent = sinon.spy<(e: TraceModel.Types.TraceEvents.TraceEventData) => void>(_event => {});\n\n      TraceModel.Helpers.Trace.forEachEvent(traceEvents, {\n        onEndEvent,\n        onStartEvent,\n        eventFilter(event) {\n          return event.name !== 'RunTask';\n        },\n      });\n      const eventsFromStartEventCalls = onStartEvent.getCalls().map(a => a.args[0]);\n      const eventsFromEndEventCalls = onEndEvent.getCalls().map(a => a.args[0]);\n\n      assert.deepEqual(\n          eventsFromStartEventCalls.map(e => e.name),\n          ['RunMicrotasks', 'FunctionCall', 'Layout'],\n      );\n      assert.deepEqual(\n          eventsFromEndEventCalls.map(e => e.name),\n          ['FunctionCall', 'RunMicrotasks', 'Layout'],\n      );\n    });\n\n    it('calls the onInstantEvent callback when it finds an event with 0 duration', async () => {\n      const traceEvents = [\n        makeInstantEvent('FakeInstantEvent', 0, '*', pid, tid),\n      ];\n      const onStartEvent = sinon.spy<(e: TraceModel.Types.TraceEvents.TraceEventData) => void>(_event => {});\n      const onEndEvent = sinon.spy<(e: TraceModel.Types.TraceEvents.TraceEventData) => void>(_event => {});\n      const onInstantEvent = sinon.spy<(e: TraceModel.Types.TraceEvents.TraceEventData) => void>(_event => {});\n\n      TraceModel.Helpers.Trace.forEachEvent(traceEvents, {\n        onEndEvent,\n        onStartEvent,\n        onInstantEvent,\n      });\n\n      assert.strictEqual(onStartEvent.callCount, 0);\n      assert.strictEqual(onEndEvent.callCount, 0);\n      assert.strictEqual(onInstantEvent.callCount, 1);\n    });\n\n    it('skips async events by default', async () => {\n      const traceEvents = [\n        makeAsyncStartEvent('FakeAsync', 0, pid, tid),\n        makeAsyncEndEvent('FakeAsync', 0, pid, tid),\n      ];\n      const onStartEvent = sinon.spy<(e: TraceModel.Types.TraceEvents.TraceEventData) => void>(_event => {});\n      const onEndEvent = sinon.spy<(e: TraceModel.Types.TraceEvents.TraceEventData) => void>(_event => {});\n      const onInstantEvent = sinon.spy<(e: TraceModel.Types.TraceEvents.TraceEventData) => void>(_event => {});\n\n      TraceModel.Helpers.Trace.forEachEvent(traceEvents, {\n        onEndEvent,\n        onStartEvent,\n        onInstantEvent,\n      });\n\n      assert.strictEqual(onStartEvent.callCount, 0);\n      assert.strictEqual(onEndEvent.callCount, 0);\n      assert.strictEqual(onInstantEvent.callCount, 0);\n    });\n\n    it('can be configured to include async events', async () => {\n      const traceEvents = [\n        makeAsyncStartEvent('FakeAsync', 0, pid, tid),\n        makeAsyncEndEvent('FakeAsync', 0, pid, tid),\n      ];\n      const onStartEvent = sinon.spy<(e: TraceModel.Types.TraceEvents.TraceEventData) => void>(_event => {});\n      const onEndEvent = sinon.spy<(e: TraceModel.Types.TraceEvents.TraceEventData) => void>(_event => {});\n      const onInstantEvent = sinon.spy<(e: TraceModel.Types.TraceEvents.TraceEventData) => void>(_event => {});\n\n      TraceModel.Helpers.Trace.forEachEvent(traceEvents, {\n        onEndEvent,\n        onStartEvent,\n        onInstantEvent,\n        ignoreAsyncEvents: false,\n      });\n\n      assert.strictEqual(onStartEvent.callCount, 0);\n      assert.strictEqual(onEndEvent.callCount, 0);\n      assert.strictEqual(onInstantEvent.callCount, 2);\n    });\n  });\n\n  describe('isTopLevelEvent', () => {\n    it('is true for a RunTask event', async function() {\n      const traceParsedData = await TraceLoader.traceEngine(this, 'web-dev.json.gz');\n      const runTask = traceParsedData.Renderer.allTraceEntries.find(TraceModel.Types.TraceEvents.isTraceEventRunTask);\n      assert.isOk(runTask);\n\n      assert.isTrue(TraceModel.Helpers.Trace.isTopLevelEvent(runTask));\n    });\n  });\n});\n"]}