{"version":3,"file":"NetworkPersistenceManager.test.js","sourceRoot":"","sources":["../../../../../../front_end/models/persistence/NetworkPersistenceManager.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport {\n  createTarget,\n  deinitializeGlobalVars,\n  initializeGlobalVars,\n} from '../../testing/EnvironmentHelpers.js';\nimport {describeWithMockConnection} from '../../testing/MockConnection.js';\nimport {createWorkspaceProject, setUpEnvironment} from '../../testing/OverridesHelpers.js';\nimport {setMockResourceTree} from '../../testing/ResourceTreeHelpers.js';\nimport {createFileSystemUISourceCode} from '../../testing/UISourceCodeHelpers.js';\nimport * as Persistence from '../persistence/persistence.js';\nimport * as Workspace from '../workspace/workspace.js';\n\nconst setUpEnvironmentWithUISourceCode =\n    (url: string, resourceType: Common.ResourceType.ResourceType, project?: Workspace.Workspace.Project) => {\n      const {workspace, networkPersistenceManager} = setUpEnvironment();\n\n      if (!project) {\n        project = {id: () => url, type: () => Workspace.Workspace.projectTypes.Network} as Workspace.Workspace.Project;\n      }\n\n      const uiSourceCode =\n          new Workspace.UISourceCode.UISourceCode(project, url as Platform.DevToolsPath.UrlString, resourceType);\n\n      project.uiSourceCodes = () => [uiSourceCode];\n\n      workspace.addProject(project);\n\n      return {workspace, project: project, uiSourceCode, networkPersistenceManager};\n    };\n\ndescribeWithMockConnection('NetworkPersistenceManager', () => {\n  beforeEach(async () => {\n    SDK.NetworkManager.MultitargetNetworkManager.dispose();\n    const target = createTarget();\n    sinon.stub(target.fetchAgent(), 'invoke_enable');\n  });\n\n  it('can create an overridden file with Local Overrides enabled', async () => {\n    const url = 'http://www.example.com/list-fetch.json';\n    const resourceType = Common.ResourceType.resourceTypes.Document;\n\n    const {uiSourceCode} = setUpEnvironmentWithUISourceCode(url, resourceType);\n    const networkPersistenceManager =\n        await createWorkspaceProject('file:///path/to/overrides' as Platform.DevToolsPath.UrlString, []);\n\n    const saveSpy = sinon.spy(networkPersistenceManager, 'saveUISourceCodeForOverrides');\n    const actual = await networkPersistenceManager.setupAndStartLocalOverrides(uiSourceCode);\n\n    saveSpy.restore();\n\n    assert.isTrue(saveSpy.calledOnce, 'should override content once');\n    assert.isTrue(actual, 'should complete override successfully');\n  });\n\n  it('can create an overridden file with Local Overrides folder set up but disabled', async () => {\n    Common.Settings.Settings.instance().moduleSetting('persistence-network-overrides-enabled').set(false);\n\n    const url = 'http://www.example.com/list-xhr.json';\n    const resourceType = Common.ResourceType.resourceTypes.Document;\n\n    const {uiSourceCode} = setUpEnvironmentWithUISourceCode(url, resourceType);\n    const networkPersistenceManager =\n        await createWorkspaceProject('file:///path/to/overrides' as Platform.DevToolsPath.UrlString, []);\n\n    const saveSpy = sinon.spy(networkPersistenceManager, 'saveUISourceCodeForOverrides');\n    const actual = await networkPersistenceManager.setupAndStartLocalOverrides(uiSourceCode);\n\n    saveSpy.restore();\n\n    assert.isTrue(saveSpy.calledOnce, 'should override content once');\n    assert.isTrue(actual, 'should complete override successfully');\n  });\n});\n\ndescribeWithMockConnection('NetworkPersistenceManager', () => {\n  it('does not create interception patterns for forbidden URLs', async () => {\n    SDK.NetworkManager.MultitargetNetworkManager.dispose();\n    const target = createTarget();\n\n    const networkPersistenceManager =\n        await createWorkspaceProject('file:///path/to/overrides' as Platform.DevToolsPath.UrlString, [\n          {name: 'helloWorld.html', path: 'www.example.com/', content: 'Hello World!'},\n          {name: 'forbidden.html', path: 'chromewebstore.google.com/', content: 'Chrome Web Store'},\n          {name: 'flags', path: 'chrome:/', content: 'Chrome Flags'},\n          {name: 'index.html', path: 'chrome.google.com/', content: 'Chrome'},\n          {name: 'allowed.html', path: 'www.google.com/', content: 'Google Search'},\n        ]);\n\n    const stub = sinon.stub(target.fetchAgent(), 'invoke_enable');\n    await networkPersistenceManager.updateInterceptionPatternsForTests();\n\n    const patterns = stub.lastCall.args[0].patterns;\n    const expected = [\n      {\n        urlPattern: 'http?://www.example.com/helloWorld.html',\n        requestStage: Protocol.Fetch.RequestStage.Response,\n      },\n      {\n        urlPattern: 'http?://www.google.com/allowed.html',\n        requestStage: Protocol.Fetch.RequestStage.Response,\n      },\n    ];\n    assert.deepStrictEqual(patterns, expected);\n  });\n\n  it('recognizes forbidden network URLs', () => {\n    assert.isTrue(Persistence.NetworkPersistenceManager.NetworkPersistenceManager.isForbiddenNetworkUrl(\n        'chrome://version' as Platform.DevToolsPath.UrlString));\n    assert.isTrue(Persistence.NetworkPersistenceManager.NetworkPersistenceManager.isForbiddenNetworkUrl(\n        'https://chromewebstore.google.com/index.html' as Platform.DevToolsPath.UrlString));\n    assert.isTrue(Persistence.NetworkPersistenceManager.NetworkPersistenceManager.isForbiddenNetworkUrl(\n        'https://chrome.google.com/script.js' as Platform.DevToolsPath.UrlString));\n    assert.isFalse(Persistence.NetworkPersistenceManager.NetworkPersistenceManager.isForbiddenNetworkUrl(\n        'https://www.example.com/script.js' as Platform.DevToolsPath.UrlString));\n  });\n});\n\ndescribeWithMockConnection('NetworkPersistenceManager', () => {\n  let networkPersistenceManager: Persistence.NetworkPersistenceManager.NetworkPersistenceManager;\n\n  beforeEach(async () => {\n    SDK.NetworkManager.MultitargetNetworkManager.dispose();\n    setMockResourceTree(false);\n    const target = createTarget();\n    networkPersistenceManager =\n        await createWorkspaceProject('file:///path/to/overrides' as Platform.DevToolsPath.UrlString, [\n          {\n            name: '.headers',\n            path: 'www.example.com/',\n            content: `[\n            {\n              \"applyTo\": \"index.html\",\n              \"headers\": [{\n                \"name\": \"index-only\",\n                \"value\": \"only added to index.html\"\n              }]\n            },\n            {\n              \"applyTo\": \"*.css\",\n              \"headers\": [{\n                \"name\": \"css-only\",\n                \"value\": \"only added to css files\"\n              }]\n            },\n            {\n              \"applyTo\": \"path/to/*.js\",\n              \"headers\": [{\n                \"name\": \"another-header\",\n                \"value\": \"only added to specific path\"\n              }]\n            },\n            {\n              \"applyTo\": \"repeated.html\",\n              \"headers\": [\n                {\n                  \"name\": \"repeated\",\n                  \"value\": \"first override\"\n                },\n                {\n                  \"name\": \"repeated\",\n                  \"value\": \"second override\"\n                }\n              ]\n            }\n          ]`,\n          },\n          {\n            name: '.headers',\n            path: '',\n            content: `[\n            {\n              \"applyTo\": \"*\",\n              \"headers\": [{\n                \"name\": \"age\",\n                \"value\": \"overridden\"\n              }]\n            }\n          ]`,\n          },\n          {name: 'helloWorld.html', path: 'www.example.com/', content: 'Hello World!'},\n        ]);\n    sinon.stub(target.fetchAgent(), 'invoke_enable');\n    await networkPersistenceManager.updateInterceptionPatternsForTests();\n  });\n\n  it('merges request headers with override without overlap', async () => {\n    const interceptedRequest = {\n      request: {\n        url: 'https://www.example.com/',\n      },\n      responseHeaders: [\n        {name: 'server', value: 'DevTools mock server'},\n      ],\n    } as SDK.NetworkManager.InterceptedRequest;\n\n    const expected = [\n      {name: 'age', value: 'overridden'},\n      {name: 'index-only', value: 'only added to index.html'},\n      {name: 'server', value: 'DevTools mock server'},\n    ];\n    const actual = await networkPersistenceManager.handleHeaderInterception(interceptedRequest);\n    assert.deepEqual(actual.sort((a, b) => (a.name.localeCompare(b.name))), expected);\n  });\n\n  it('merges request headers with override with overlap', async () => {\n    const interceptedRequest = {\n      request: {\n        url: 'https://www.example.com/index.html',\n      },\n      responseHeaders: [\n        {name: 'server', value: 'DevTools mock server'},\n        {name: 'age', value: '1'},\n      ],\n    } as SDK.NetworkManager.InterceptedRequest;\n\n    const expected = [\n      {name: 'age', value: 'overridden'},\n      {name: 'index-only', value: 'only added to index.html'},\n      {name: 'server', value: 'DevTools mock server'},\n    ];\n    const actual = await networkPersistenceManager.handleHeaderInterception(interceptedRequest);\n    assert.deepEqual(actual.sort((a, b) => (a.name.localeCompare(b.name))), expected);\n  });\n\n  it('merges request headers with override with file type wildcard', async () => {\n    const interceptedRequest = {\n      request: {\n        url: 'https://www.example.com/styles.css',\n      },\n      responseHeaders: [\n        {name: 'server', value: 'DevTools mock server'},\n        {name: 'age', value: '1'},\n      ],\n    } as SDK.NetworkManager.InterceptedRequest;\n\n    const expected = [\n      {name: 'age', value: 'overridden'},\n      {name: 'css-only', value: 'only added to css files'},\n      {name: 'server', value: 'DevTools mock server'},\n    ];\n    const actual = await networkPersistenceManager.handleHeaderInterception(interceptedRequest);\n    assert.deepEqual(actual.sort((a, b) => (a.name.localeCompare(b.name))), expected);\n  });\n\n  it('merges request headers with override with specific path', async () => {\n    const interceptedRequest = {\n      request: {\n        url: 'https://www.example.com/path/to/script.js',\n      },\n      responseHeaders: [\n        {name: 'server', value: 'DevTools mock server'},\n        {name: 'age', value: '1'},\n      ],\n    } as SDK.NetworkManager.InterceptedRequest;\n\n    const expected = [\n      {name: 'age', value: 'overridden'},\n      {name: 'another-header', value: 'only added to specific path'},\n      {name: 'server', value: 'DevTools mock server'},\n    ];\n    const actual = await networkPersistenceManager.handleHeaderInterception(interceptedRequest);\n    assert.deepEqual(actual.sort((a, b) => (a.name.localeCompare(b.name))), expected);\n  });\n\n  it('merges request headers only when domain matches', async () => {\n    const interceptedRequest = {\n      request: {\n        url: 'https://www.web.dev/index.html',\n      },\n      responseHeaders: [\n        {name: 'server', value: 'DevTools mock server'},\n      ],\n    } as SDK.NetworkManager.InterceptedRequest;\n\n    const expected = [\n      {name: 'age', value: 'overridden'},\n      {name: 'server', value: 'DevTools mock server'},\n    ];\n    const actual = await networkPersistenceManager.handleHeaderInterception(interceptedRequest);\n    assert.deepEqual(actual.sort((a, b) => (a.name.localeCompare(b.name))), expected);\n  });\n\n  it('merges headers while leaving muliple headers with the same name unchanged', async () => {\n    const interceptedRequest = {\n      request: {\n        url: 'https://www.example.com/index.html',\n      },\n      responseHeaders: [\n        {name: 'repeated', value: 'first'},\n        {name: 'repeated', value: 'second'},\n        {name: 'repeated', value: 'third'},\n      ],\n    } as SDK.NetworkManager.InterceptedRequest;\n\n    const expected = [\n      {name: 'age', value: 'overridden'},\n      {name: 'index-only', value: 'only added to index.html'},\n      {name: 'repeated', value: 'first'},\n      {name: 'repeated', value: 'second'},\n      {name: 'repeated', value: 'third'},\n    ];\n    const actual = await networkPersistenceManager.handleHeaderInterception(interceptedRequest);\n    assert.deepEqual(actual.sort((a, b) => (a.name.localeCompare(b.name))), expected);\n  });\n\n  it('merges headers and can override muliple headers with the same name', async () => {\n    const interceptedRequest = {\n      request: {\n        url: 'https://www.example.com/repeated.html',\n      },\n      responseHeaders: [\n        {name: 'repeated', value: 'first'},\n        {name: 'repeated', value: 'second'},\n        {name: 'repeated', value: 'third'},\n      ],\n    } as SDK.NetworkManager.InterceptedRequest;\n\n    const expected = [\n      {name: 'age', value: 'overridden'},\n      {name: 'repeated', value: 'first override'},\n      {name: 'repeated', value: 'second override'},\n    ];\n    const actual = await networkPersistenceManager.handleHeaderInterception(interceptedRequest);\n    assert.deepEqual(actual.sort((a, b) => (a.name.localeCompare(b.name))), expected);\n  });\n\n  it('translates URLs into raw and encoded paths', async () => {\n    let toTest = [\n      // Simple tests.\n      {\n        url: 'www.example.com/',\n        raw: 'www.example.com/index.html',\n        encoded: 'www.example.com/index.html',\n      },\n      {\n        url: 'www.example.com/simple',\n        raw: 'www.example.com/simple',\n        encoded: 'www.example.com/simple',\n      },\n      {\n        url: 'www.example.com/hello/foo/bar',\n        raw: 'www.example.com/hello/foo/bar',\n        encoded: 'www.example.com/hello/foo/bar',\n      },\n      {\n        url: 'www.example.com/.',\n        raw: 'www.example.com/.',\n        encoded: 'www.example.com/',\n      },\n      {\n        url: 'localhost:8090/endswith.',\n        raw: 'localhost:8090/endswith.',\n        encoded: 'localhost:8090/endswith.',\n      },\n      // Query parameters.\n      {\n        url: 'example.com/fo?o/bar',\n        raw: 'example.com/fo?o%2Fbar',\n        encoded: 'example.com/fo%3Fo%252Fbar',\n      },\n      {\n        url: 'example.com/foo?/bar',\n        raw: 'example.com/foo?%2Fbar',\n        encoded: 'example.com/foo%3F%252Fbar',\n      },\n      {\n        url: 'example.com/foo/?bar',\n        raw: 'example.com/foo/?bar',\n        encoded: 'example.com/foo/%3Fbar',\n      },\n      {\n        url: 'example.com/?foo/bar/3',\n        raw: 'example.com/?foo%2Fbar%2F3',\n        encoded: 'example.com/%3Ffoo%252Fbar%252F3',\n      },\n      {\n        url: 'example.com/foo/bar/?3hello/bar',\n        raw: 'example.com/foo/bar/?3hello%2Fbar',\n        encoded: 'example.com/foo/bar/%3F3hello%252Fbar',\n      },\n      {url: 'https://www.example.com/?foo=bar', raw: 'www.example.com/?foo=bar', encoded: 'www.example.com/%3Ffoo=bar'},\n      {\n        url: 'http://www.example.com/?foo=bar/',\n        raw: 'www.example.com/?foo=bar%2F',\n        encoded: 'www.example.com/%3Ffoo=bar%252F',\n      },\n      {\n        url: 'http://www.example.com/?foo=bar?',\n        raw: 'www.example.com/?foo=bar?',\n        encoded: 'www.example.com/%3Ffoo=bar%3F',\n      },\n      // Hash parameters.\n      {\n        url: 'example.com/?foo/bar/3#hello/bar',\n        raw: 'example.com/?foo%2Fbar%2F3',\n        encoded: 'example.com/%3Ffoo%252Fbar%252F3',\n      },\n      {\n        url: 'example.com/#foo/bar/3hello/bar',\n        raw: 'example.com/index.html',\n        encoded: 'example.com/index.html',\n      },\n      {\n        url: 'example.com/foo/bar/#?3hello/bar',\n        raw: 'example.com/foo/bar/index.html',\n        encoded: 'example.com/foo/bar/index.html',\n      },\n      {\n        url: 'example.com/foo.js#',\n        raw: 'example.com/foo.js',\n        encoded: 'example.com/foo.js',\n      },\n      {\n        url: 'http://www.web.dev/path/page.html#anchor',\n        raw: 'www.web.dev/path/page.html',\n        encoded: 'www.web.dev/path/page.html',\n      },\n      {\n        url: 'http://www.example.com/file&$*?.html',\n        raw: 'www.example.com/file&$%2A?.html',\n        encoded: 'www.example.com/file&$%252A%3F.html',\n      },\n      {\n        url: 'localhost:8090/',\n        raw: 'localhost:8090/index.html',\n        encoded: 'localhost:8090/index.html',\n      },\n      {url: 'localhost:8090/lpt1', raw: 'localhost:8090/lpt1', encoded: 'localhost:8090/lpt1'},\n      {\n        url: 'example.com/foo .js',\n        raw: 'example.com/foo%20.js',\n        encoded: 'example.com/foo%2520.js',\n      },\n      {\n        url: 'example.com///foo.js',\n        raw: 'example.com/foo.js',\n        encoded: 'example.com/foo.js',\n      },\n      {\n        url: 'example.com///',\n        raw: 'example.com/index.html',\n        encoded: 'example.com/index.html',\n      },\n      // Very long file names.\n      {\n        url: 'example.com' +\n            '/THIS/PATH/IS_MORE_THAN/200/Chars'.repeat(8),\n        raw: 'example.com/longurls/Chars-141a715a',\n        encoded: 'example.com/longurls/Chars-141a715a',\n      },\n      {\n        url: ('example.com' +\n              '/THIS/PATH/IS_LESS_THAN/200/Chars'.repeat(5))\n                 .slice(0, -1),\n        raw:\n            'example.com/THIS/PATH/IS_LESS_THAN/200/Chars/THIS/PATH/IS_LESS_THAN/200/Chars/THIS/PATH/IS_LESS_THAN/200/Chars/THIS/PATH/IS_LESS_THAN/200/Chars/THIS/PATH/IS_LESS_THAN/200/Char',\n        encoded:\n            'example.com/THIS/PATH/IS_LESS_THAN/200/Chars/THIS/PATH/IS_LESS_THAN/200/Chars/THIS/PATH/IS_LESS_THAN/200/Chars/THIS/PATH/IS_LESS_THAN/200/Chars/THIS/PATH/IS_LESS_THAN/200/Char',\n      },\n    ];\n    if (Host.Platform.isWin()) {\n      toTest = [\n        {\n          url: 'https://www.example.com/?foo=bar',\n          raw: 'www.example.com/%3Ffoo=bar',\n          encoded: 'www.example.com/%253Ffoo=bar',\n        },\n        {\n          url: 'http://www.web.dev/path/page.html#anchor',\n          raw: 'www.web.dev/path/page.html',\n          encoded: 'www.web.dev/path/page.html',\n        },\n        {\n          url: 'http://www.example.com/?foo=bar/',\n          raw: 'www.example.com/%3Ffoo=bar%2F',\n          encoded: 'www.example.com/%253Ffoo=bar%252F',\n        },\n        {\n          url: 'http://www.example.com/?foo=bar?',\n          raw: 'www.example.com/%3Ffoo=bar%3F',\n          encoded: 'www.example.com/%253Ffoo=bar%253F',\n        },\n        {\n          url: 'http://www.example.com/file&$*?.html',\n          raw: 'www.example.com/file&$%2A%3F.html',\n          encoded: 'www.example.com/file&$%252A%253F.html',\n        },\n        {\n          url: 'localhost:8090/',\n          raw: 'localhost%3A8090/index.html',\n          encoded: 'localhost%253A8090/index.html',\n        },\n        // Windows cannot end with . (period) and space.\n        {\n          url: 'example.com/foo.js.',\n          raw: 'example.com/foo.js%2E',\n          encoded: 'example.com/foo.js%252E',\n        },\n        {\n          url: 'localhost:8090/endswith.',\n          raw: 'localhost%3A8090/endswith%2E',\n          encoded: 'localhost%253A8090/endswith%252E',\n        },\n        {\n          url: 'example.com/foo.js ',\n          raw: 'example.com/foo.js%20',\n          encoded: 'example.com/foo.js%2520',\n        },\n        // Reserved filenames on Windows.\n        {\n          url: 'example.com/CON',\n          raw: 'example.com/%43%4F%4E',\n          encoded: 'example.com/%2543%254F%254E',\n        },\n        {\n          url: 'example.com/cOn',\n          raw: 'example.com/%63%4F%6E',\n          encoded: 'example.com/%2563%254F%256E',\n        },\n        {\n          url: 'example.com/cOn/hello',\n          raw: 'example.com/%63%4F%6E/hello',\n          encoded: 'example.com/%2563%254F%256E/hello',\n        },\n        {\n          url: 'example.com/PRN',\n          raw: 'example.com/%50%52%4E',\n          encoded: 'example.com/%2550%2552%254E',\n        },\n        {\n          url: 'example.com/AUX',\n          raw: 'example.com/%41%55%58',\n          encoded: 'example.com/%2541%2555%2558',\n        },\n        {\n          url: 'example.com/NUL',\n          raw: 'example.com/%4E%55%4C',\n          encoded: 'example.com/%254E%2555%254C',\n        },\n        {\n          url: 'example.com/COM1',\n          raw: 'example.com/%43%4F%4D%31',\n          encoded: 'example.com/%2543%254F%254D%2531',\n        },\n        {\n          url: 'example.com/COM2',\n          raw: 'example.com/%43%4F%4D%32',\n          encoded: 'example.com/%2543%254F%254D%2532',\n        },\n        {\n          url: 'example.com/COM3',\n          raw: 'example.com/%43%4F%4D%33',\n          encoded: 'example.com/%2543%254F%254D%2533',\n        },\n        {\n          url: 'example.com/COM4',\n          raw: 'example.com/%43%4F%4D%34',\n          encoded: 'example.com/%2543%254F%254D%2534',\n        },\n        {\n          url: 'example.com/COM5',\n          raw: 'example.com/%43%4F%4D%35',\n          encoded: 'example.com/%2543%254F%254D%2535',\n        },\n        {\n          url: 'example.com/COM6',\n          raw: 'example.com/%43%4F%4D%36',\n          encoded: 'example.com/%2543%254F%254D%2536',\n        },\n        {\n          url: 'example.com/COM7',\n          raw: 'example.com/%43%4F%4D%37',\n          encoded: 'example.com/%2543%254F%254D%2537',\n        },\n        {\n          url: 'example.com/COM8',\n          raw: 'example.com/%43%4F%4D%38',\n          encoded: 'example.com/%2543%254F%254D%2538',\n        },\n        {\n          url: 'example.com/COM9',\n          raw: 'example.com/%43%4F%4D%39',\n          encoded: 'example.com/%2543%254F%254D%2539',\n        },\n        {\n          url: 'localhost:8090/lpt1',\n          raw: 'localhost%3A8090/%6C%70%74%31',\n          encoded: 'localhost%253A8090/%256C%2570%2574%2531',\n        },\n        {\n          url: 'example.com/LPT1',\n          raw: 'example.com/%4C%50%54%31',\n          encoded: 'example.com/%254C%2550%2554%2531',\n        },\n        {\n          url: 'example.com/LPT2',\n          raw: 'example.com/%4C%50%54%32',\n          encoded: 'example.com/%254C%2550%2554%2532',\n        },\n        {\n          url: 'example.com/LPT3',\n          raw: 'example.com/%4C%50%54%33',\n          encoded: 'example.com/%254C%2550%2554%2533',\n        },\n        {\n          url: 'example.com/LPT4',\n          raw: 'example.com/%4C%50%54%34',\n          encoded: 'example.com/%254C%2550%2554%2534',\n        },\n        {\n          url: 'example.com/LPT5',\n          raw: 'example.com/%4C%50%54%35',\n          encoded: 'example.com/%254C%2550%2554%2535',\n        },\n        {\n          url: 'example.com/LPT6',\n          raw: 'example.com/%4C%50%54%36',\n          encoded: 'example.com/%254C%2550%2554%2536',\n        },\n        {\n          url: 'example.com/LPT7',\n          raw: 'example.com/%4C%50%54%37',\n          encoded: 'example.com/%254C%2550%2554%2537',\n        },\n        {\n          url: 'example.com/LPT8',\n          raw: 'example.com/%4C%50%54%38',\n          encoded: 'example.com/%254C%2550%2554%2538',\n        },\n        {\n          url: 'example.com/LPT9',\n          raw: 'example.com/%4C%50%54%39',\n          encoded: 'example.com/%254C%2550%2554%2539',\n        },\n\n      ];\n    }\n    toTest.forEach(testStrings => {\n      assert.deepEqual(\n          networkPersistenceManager.rawPathFromUrl(testStrings.url as Platform.DevToolsPath.UrlString),\n          testStrings.raw);\n      assert.deepEqual(\n          networkPersistenceManager.encodedPathFromUrl(testStrings.url as Platform.DevToolsPath.UrlString),\n          testStrings.encoded);\n    });\n  });\n\n  it('is aware of which \\'.headers\\' files are currently active', done => {\n    const workspace = Workspace.Workspace.WorkspaceImpl.instance();\n    const project = {\n      type: () => Workspace.Workspace.projectTypes.Network,\n    } as Workspace.Workspace.Project;\n    const networkUISourceCode = {\n      url: () => 'https://www.example.com/hello/world/index.html',\n      project: () => project,\n      contentType: () => Common.ResourceType.resourceTypes.Document,\n    } as Workspace.UISourceCode.UISourceCode;\n    project.uiSourceCodes = () => [networkUISourceCode];\n\n    const eventURLs: string[] = [];\n    networkPersistenceManager.addEventListener(\n        Persistence.NetworkPersistenceManager.Events.RequestsForHeaderOverridesFileChanged, event => {\n          eventURLs.push(event.data.url());\n        });\n\n    workspace.dispatchEventToListeners(Workspace.Workspace.Events.UISourceCodeAdded, networkUISourceCode);\n\n    assert.isTrue(networkPersistenceManager.hasMatchingNetworkUISourceCodeForHeaderOverridesFile({\n      url: () => 'file:///path/to/overrides/www.example.com/.headers',\n      project: () => networkPersistenceManager.project(),\n    } as Workspace.UISourceCode.UISourceCode));\n    assert.isTrue(networkPersistenceManager.hasMatchingNetworkUISourceCodeForHeaderOverridesFile({\n      url: () => 'file:///path/to/overrides/.headers',\n      project: () => networkPersistenceManager.project(),\n    } as Workspace.UISourceCode.UISourceCode));\n    assert.isFalse(networkPersistenceManager.hasMatchingNetworkUISourceCodeForHeaderOverridesFile({\n      url: () => 'file:///path/to/overrides/www.foo.com/.headers',\n      project: () => networkPersistenceManager.project(),\n    } as Workspace.UISourceCode.UISourceCode));\n\n    workspace.dispatchEventToListeners(Workspace.Workspace.Events.ProjectRemoved, project);\n\n    setTimeout(() => {\n      assert.deepStrictEqual(\n          eventURLs, ['file:///path/to/overrides/.headers', 'file:///path/to/overrides/www.example.com/.headers']);\n      assert.isFalse(networkPersistenceManager.hasMatchingNetworkUISourceCodeForHeaderOverridesFile({\n        url: () => 'file:///path/to/overrides/www.example.com/.headers',\n        project: () => networkPersistenceManager.project(),\n      } as Workspace.UISourceCode.UISourceCode));\n      assert.isFalse(networkPersistenceManager.hasMatchingNetworkUISourceCodeForHeaderOverridesFile({\n        url: () => 'file:///path/to/overrides/.headers',\n        project: () => networkPersistenceManager.project(),\n      } as Workspace.UISourceCode.UISourceCode));\n      assert.isFalse(networkPersistenceManager.hasMatchingNetworkUISourceCodeForHeaderOverridesFile({\n        url: () => 'file:///path/to/overrides/www.foo.com/.headers',\n        project: () => networkPersistenceManager.project(),\n      } as Workspace.UISourceCode.UISourceCode));\n      done();\n    }, 0);\n  });\n});\n\ndescribeWithMockConnection('NetworkPersistenceManager', () => {\n  beforeEach(() => {\n    SDK.NetworkManager.MultitargetNetworkManager.dispose();\n  });\n\n  it('updates active state when target detach and attach', async () => {\n    const {networkPersistenceManager} = setUpEnvironment();\n    const {project} =\n        createFileSystemUISourceCode({url: 'file:///tmp' as Platform.DevToolsPath.UrlString, mimeType: 'text/plain'});\n    await networkPersistenceManager.setProject(project);\n    const targetManager = SDK.TargetManager.TargetManager.instance();\n    assert.isNull(targetManager.rootTarget());\n    assert.isFalse(networkPersistenceManager.active());\n\n    const target = await createTarget();\n    assert.isTrue(networkPersistenceManager.active());\n\n    targetManager.removeTarget(target);\n    target.dispose('test');\n\n    assert.isFalse(networkPersistenceManager.active());\n  });\n});\n\ndescribe('NetworkPersistenceManager', () => {\n  before(async () => {\n    await initializeGlobalVars();\n  });\n  after(async () => {\n    await deinitializeGlobalVars();\n  });\n\n  it('escapes patterns to be used in RegExes', () => {\n    assert.strictEqual(Persistence.NetworkPersistenceManager.escapeRegex('www.example.com/'), 'www\\\\.example\\\\.com/');\n    assert.strictEqual(\n        Persistence.NetworkPersistenceManager.escapeRegex('www.example.com/index.html'),\n        'www\\\\.example\\\\.com/index\\\\.html');\n    assert.strictEqual(\n        Persistence.NetworkPersistenceManager.escapeRegex('www.example.com/*'), 'www\\\\.example\\\\.com/.*');\n    assert.strictEqual(\n        Persistence.NetworkPersistenceManager.escapeRegex('www.example.com/*.js'), 'www\\\\.example\\\\.com/.*\\\\.js');\n    assert.strictEqual(\n        Persistence.NetworkPersistenceManager.escapeRegex('www.example.com/file([{with-special$_^chars}])'),\n        'www\\\\.example\\\\.com/file\\\\(\\\\[\\\\{with\\\\-special\\\\$_\\\\^chars\\\\}\\\\]\\\\)');\n    assert.strictEqual(\n        Persistence.NetworkPersistenceManager.escapeRegex('www.example.com/page.html?foo=bar'),\n        'www\\\\.example\\\\.com/page\\\\.html\\\\?foo=bar');\n    assert.strictEqual(\n        Persistence.NetworkPersistenceManager.escapeRegex('www.example.com/*?foo=bar'),\n        'www\\\\.example\\\\.com/.*\\\\?foo=bar');\n  });\n\n  it('detects when the tail of a path matches with a default index file', () => {\n    assert.deepEqual(\n        Persistence.NetworkPersistenceManager.extractDirectoryIndex('index.html'), {head: '', tail: 'index.html'});\n    assert.deepEqual(\n        Persistence.NetworkPersistenceManager.extractDirectoryIndex('index.htm'), {head: '', tail: 'index.htm'});\n    assert.deepEqual(\n        Persistence.NetworkPersistenceManager.extractDirectoryIndex('index.php'), {head: '', tail: 'index.php'});\n    assert.deepEqual(Persistence.NetworkPersistenceManager.extractDirectoryIndex('index.ht'), {head: 'index.ht'});\n    assert.deepEqual(Persistence.NetworkPersistenceManager.extractDirectoryIndex('*.html'), {head: '', tail: '*.html'});\n    assert.deepEqual(Persistence.NetworkPersistenceManager.extractDirectoryIndex('*.htm'), {head: '', tail: '*.htm'});\n    assert.deepEqual(\n        Persistence.NetworkPersistenceManager.extractDirectoryIndex('path/*.html'), {head: 'path/', tail: '*.html'});\n    assert.deepEqual(Persistence.NetworkPersistenceManager.extractDirectoryIndex('foo*.html'), {head: 'foo*.html'});\n    assert.deepEqual(Persistence.NetworkPersistenceManager.extractDirectoryIndex('a*'), {head: 'a*'});\n    assert.deepEqual(Persistence.NetworkPersistenceManager.extractDirectoryIndex('a/*'), {head: 'a/*'});\n  });\n\n  it('merges headers which do not overlap', () => {\n    const {networkPersistenceManager} = setUpEnvironment();\n    const baseHeaders = [{\n      name: 'age',\n      value: '0',\n    }];\n    const overrideHeaders = [{\n      'name': 'accept-ranges',\n      'value': 'bytes',\n    }];\n    const merged = [\n      {name: 'accept-ranges', value: 'bytes'},\n      {name: 'age', value: '0'},\n    ];\n    assert.deepEqual(networkPersistenceManager.mergeHeaders(baseHeaders, overrideHeaders), merged);\n  });\n\n  it('merges headers which overlap', () => {\n    const {networkPersistenceManager} = setUpEnvironment();\n    const baseHeaders = [{\n      name: 'age',\n      value: '0',\n    }];\n    const overrideHeaders = [\n      {name: 'accept-ranges', value: 'bytes'},\n      {name: 'age', value: '1'},\n    ];\n    const merged = [\n      {name: 'accept-ranges', value: 'bytes'},\n      {name: 'age', value: '1'},\n    ];\n    assert.deepEqual(networkPersistenceManager.mergeHeaders(baseHeaders, overrideHeaders), merged);\n  });\n\n  it('generates header patterns', async () => {\n    const {networkPersistenceManager} = setUpEnvironment();\n    const headers = `[\n      {\n        \"applyTo\": \"*\",\n        \"headers\": [{\n          \"name\": \"age\",\n          \"value\": \"0\"\n        }]\n      },\n      {\n        \"applyTo\": \"page.html\",\n        \"headers\": [{\n          \"name\": \"age\",\n          \"value\": \"1\"\n        }]\n      },\n      {\n        \"applyTo\": \"index.html\",\n        \"headers\": [{\n          \"name\": \"age\",\n          \"value\": \"2\"\n        }]\n      },\n      {\n        \"applyTo\": \"nested/path/*.js\",\n        \"headers\": [{\n          \"name\": \"age\",\n          \"value\": \"3\"\n        }]\n      },\n      {\n        \"applyTo\": \"*/path/*.js\",\n        \"headers\": [{\n          \"name\": \"age\",\n          \"value\": \"4\"\n        }]\n      }\n    ]`;\n\n    const {uiSourceCode} = createFileSystemUISourceCode({\n      url: 'file:///path/to/overrides/www.example.com/.headers' as Platform.DevToolsPath.UrlString,\n      content: headers,\n      mimeType: 'text/plain',\n      fileSystemPath: 'file:///path/to/overrides',\n    });\n\n    const expectedPatterns = [\n      'http?://www.example.com/*',\n      'http?://www.example.com/page.html',\n      'http?://www.example.com/index.html',\n      'http?://www.example.com/',\n      'http?://www.example.com/nested/path/*.js',\n      'http?://www.example.com/*/path/*.js',\n    ];\n\n    const {headerPatterns, path, overridesWithRegex} =\n        await networkPersistenceManager.generateHeaderPatterns(uiSourceCode);\n    assert.deepEqual(Array.from(headerPatterns).sort(), expectedPatterns.sort());\n\n    const expectedMapping = [\n      {\n        applyTo: /^www\\.example\\.com\\/.*$/.toString(),\n        headers: [{name: 'age', value: '0'}],\n      },\n      {\n        applyTo: /^www\\.example\\.com\\/page\\.html$/.toString(),\n        headers: [{name: 'age', value: '1'}],\n      },\n      {\n        applyTo: /^www\\.example\\.com\\/(index\\.html)?$/.toString(),\n        headers: [{name: 'age', value: '2'}],\n      },\n      {\n        applyTo: /^www\\.example\\.com\\/nested\\/path\\/.*\\.js$/.toString(),\n        headers: [{name: 'age', value: '3'}],\n      },\n      {\n        applyTo: /^www\\.example\\.com\\/.*\\/path\\/.*\\.js$/.toString(),\n        headers: [{name: 'age', value: '4'}],\n      },\n    ];\n\n    assert.strictEqual(path, 'www.example.com/');\n    const actualMapping = overridesWithRegex.map(\n        override => ({applyTo: override.applyToRegex.toString(), headers: override.headers}),\n    );\n    assert.deepEqual(actualMapping, expectedMapping);\n  });\n\n  it('generates header patterns for global header overrides', async () => {\n    const {networkPersistenceManager} = setUpEnvironment();\n    const headers = `[\n      {\n        \"applyTo\": \"*\",\n        \"headers\": [{\n          \"name\": \"age\",\n          \"value\": \"0\"\n        }]\n      }\n    ]`;\n\n    const {uiSourceCode} = createFileSystemUISourceCode({\n      url: 'file:///path/to/overrides/.headers' as Platform.DevToolsPath.UrlString,\n      content: headers,\n      mimeType: 'text/plain',\n      fileSystemPath: 'file:///path/to/overrides',\n    });\n\n    const {headerPatterns} = await networkPersistenceManager.generateHeaderPatterns(uiSourceCode);\n    assert.deepEqual(Array.from(headerPatterns), ['http?://*', 'file:///*']);\n  });\n\n  it('generates header patterns for long URLs', async () => {\n    const {networkPersistenceManager} = setUpEnvironment();\n    const headers = `[\n      {\n        \"applyTo\": \"index.html-5b9f4873.html\",\n        \"headers\": [{\n          \"name\": \"foo\",\n          \"value\": \"bar\"\n        }]\n      }\n    ]`;\n\n    const {uiSourceCode} = createFileSystemUISourceCode({\n      url: 'file:///path/to/overrides/www.longurls.com/longurls/.headers' as Platform.DevToolsPath.UrlString,\n      content: headers,\n      mimeType: 'text/plain',\n      fileSystemPath: 'file:///path/to/overrides',\n    });\n\n    const {headerPatterns, path, overridesWithRegex} =\n        await networkPersistenceManager.generateHeaderPatterns(uiSourceCode);\n    assert.deepEqual(Array.from(headerPatterns), ['http?://www.longurls.com/*']);\n    assert.strictEqual(path, 'www.longurls.com/longurls/');\n\n    const expectedMapping = [\n      {\n        applyTo: /^www\\.longurls\\.com\\/longurls\\/index\\.html\\-5b9f4873\\.html$/.toString(),\n        headers: [{name: 'foo', value: 'bar'}],\n      },\n    ];\n    const actualMapping = overridesWithRegex.map(\n        override => ({applyTo: override.applyToRegex.toString(), headers: override.headers}),\n    );\n    assert.deepEqual(actualMapping, expectedMapping);\n  });\n\n  it('updates interception patterns upon edit of .headers file', async () => {\n    const {networkPersistenceManager} = setUpEnvironment();\n    const headers = `[\n      {\n        \"applyTo\": \"index.html\",\n        \"headers\": [{\n          \"name\": \"foo\",\n          \"value\": \"bar\"\n        }]\n      }\n    ]`;\n\n    const {uiSourceCode} = createFileSystemUISourceCode({\n      url: 'file:///path/to/overrides/www.example.com/.headers' as Platform.DevToolsPath.UrlString,\n      content: headers,\n      mimeType: 'text/plain',\n      fileSystemPath: 'file:///path/to/overrides',\n    });\n    const spy = sinon.spy(networkPersistenceManager, 'updateInterceptionPatterns');\n    assert.isTrue(spy.notCalled);\n\n    uiSourceCode.setWorkingCopy(`[\n      {\n        \"applyTo\": \"index.html\",\n        \"headers\": [{\n          \"name\": \"foo2\",\n          \"value\": \"bar2\"\n        }]\n      }\n    ]`);\n    uiSourceCode.commitWorkingCopy();\n    assert.isTrue(spy.calledOnce);\n  });\n});\n"]}