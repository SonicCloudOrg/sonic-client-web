{"version":3,"file":"IsolatedFileSystem.js","sourceRoot":"","sources":["../../../../../../front_end/models/persistence/IsolatedFileSystem.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2013 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as TextUtils from '../text_utils/text_utils.js';\n\nimport {Events, type IsolatedFileSystemManager} from './IsolatedFileSystemManager.js';\nimport {PlatformFileSystem} from './PlatformFileSystem.js';\n\nconst UIStrings = {\n  /**\n   *@description Text in Isolated File System of the Workspace settings in Settings\n   *@example {folder does not exist} PH1\n   */\n  fileSystemErrorS: 'File system error: {PH1}',\n  /**\n   *@description Error message when reading a remote blob\n   */\n  blobCouldNotBeLoaded: 'Blob could not be loaded.',\n  /**\n   *@description Error message when reading a file.\n   *@example {c:\\dir\\file.js} PH1\n   *@example {Underlying error} PH2\n   */\n  cantReadFileSS: 'Can\\'t read file: {PH1}: {PH2}',\n  /**\n   *@description Text to show something is linked to another\n   *@example {example.url} PH1\n   */\n  linkedToS: 'Linked to {PH1}',\n};\nconst str_ = i18n.i18n.registerUIStrings('models/persistence/IsolatedFileSystem.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class IsolatedFileSystem extends PlatformFileSystem {\n  private readonly manager: IsolatedFileSystemManager;\n  private readonly embedderPathInternal: Platform.DevToolsPath.RawPathString;\n  private readonly domFileSystem: FileSystem;\n  private readonly excludedFoldersSetting:\n      Common.Settings.Setting<{[path: Platform.DevToolsPath.UrlString]: Platform.DevToolsPath.EncodedPathString[]}>;\n  private excludedFoldersInternal: Set<Platform.DevToolsPath.EncodedPathString>;\n  private readonly excludedEmbedderFolders: Platform.DevToolsPath.RawPathString[] = [];\n  private readonly initialFilePathsInternal = new Set<Platform.DevToolsPath.EncodedPathString>();\n  private readonly initialGitFoldersInternal = new Set<Platform.DevToolsPath.EncodedPathString>();\n  private readonly fileLocks = new Map<Platform.DevToolsPath.EncodedPathString, Promise<unknown>>();\n\n  constructor(\n      manager: IsolatedFileSystemManager, path: Platform.DevToolsPath.UrlString,\n      embedderPath: Platform.DevToolsPath.RawPathString, domFileSystem: FileSystem, type: string) {\n    super(path, type);\n    this.manager = manager;\n    this.embedderPathInternal = embedderPath;\n    this.domFileSystem = domFileSystem;\n    this.excludedFoldersSetting =\n        Common.Settings.Settings.instance().createLocalSetting('workspace-excluded-folders', {});\n    this.excludedFoldersInternal = new Set(this.excludedFoldersSetting.get()[path] || []);\n  }\n\n  static async create(\n      manager: IsolatedFileSystemManager, path: Platform.DevToolsPath.UrlString,\n      embedderPath: Platform.DevToolsPath.RawPathString, type: string, name: string,\n      rootURL: string): Promise<IsolatedFileSystem|null> {\n    const domFileSystem = Host.InspectorFrontendHost.InspectorFrontendHostInstance.isolatedFileSystem(name, rootURL);\n    if (!domFileSystem) {\n      return null;\n    }\n\n    const fileSystem = new IsolatedFileSystem(manager, path, embedderPath, domFileSystem, type);\n    return fileSystem.initializeFilePaths().then(() => fileSystem).catch(error => {\n      console.error(error);\n      return null;\n    });\n  }\n\n  static errorMessage(error: DOMError): string {\n    return i18nString(UIStrings.fileSystemErrorS, {PH1: error.message});\n  }\n\n  private serializedFileOperation<T>(path: Platform.DevToolsPath.EncodedPathString, operation: () => Promise<T>):\n      Promise<T> {\n    const promise = Promise.resolve(this.fileLocks.get(path)).then(() => operation.call(null));\n    this.fileLocks.set(path, promise);\n    return promise;\n  }\n\n  override getMetadata(path: Platform.DevToolsPath.EncodedPathString): Promise<Metadata|null> {\n    const {promise, resolve} = Platform.PromiseUtilities.promiseWithResolvers<Metadata|null>();\n    this.domFileSystem.root.getFile(\n        Common.ParsedURL.ParsedURL.encodedPathToRawPathString(path), undefined, fileEntryLoaded, errorHandler);\n    return promise;\n\n    function fileEntryLoaded(entry: FileEntry): void {\n      entry.getMetadata(resolve, errorHandler);\n    }\n\n    function errorHandler(error: DOMError): void {\n      const errorMessage = IsolatedFileSystem.errorMessage(error);\n      console.error(errorMessage + ' when getting file metadata \\'' + path);\n      resolve(null);\n    }\n  }\n\n  override initialFilePaths(): Platform.DevToolsPath.EncodedPathString[] {\n    return [...this.initialFilePathsInternal];\n  }\n\n  override initialGitFolders(): Platform.DevToolsPath.EncodedPathString[] {\n    return [...this.initialGitFoldersInternal];\n  }\n\n  override embedderPath(): Platform.DevToolsPath.RawPathString {\n    return this.embedderPathInternal;\n  }\n\n  private initializeFilePaths(): Promise<void> {\n    return new Promise(fulfill => {\n      let pendingRequests = 1;\n      const boundInnerCallback = innerCallback.bind(this);\n      this.requestEntries(Platform.DevToolsPath.EmptyRawPathString, boundInnerCallback);\n\n      function innerCallback(this: IsolatedFileSystem, entries: FileEntry[]): void {\n        for (let i = 0; i < entries.length; ++i) {\n          const entry = entries[i];\n          if (!entry.isDirectory) {\n            if (this.isFileExcluded(Common.ParsedURL.ParsedURL.rawPathToEncodedPathString(\n                    entry.fullPath as Platform.DevToolsPath.RawPathString))) {\n              continue;\n            }\n            this.initialFilePathsInternal.add(Common.ParsedURL.ParsedURL.rawPathToEncodedPathString(\n                Common.ParsedURL.ParsedURL.substr(entry.fullPath as Platform.DevToolsPath.RawPathString, 1)));\n          } else {\n            if (entry.fullPath.endsWith('/.git')) {\n              const lastSlash = entry.fullPath.lastIndexOf('/');\n              const parentFolder = Common.ParsedURL.ParsedURL.substr(\n                  entry.fullPath as Platform.DevToolsPath.RawPathString, 1, lastSlash);\n              this.initialGitFoldersInternal.add(Common.ParsedURL.ParsedURL.rawPathToEncodedPathString(parentFolder));\n            }\n            if (this.isFileExcluded(Common.ParsedURL.ParsedURL.concatenate(\n                    Common.ParsedURL.ParsedURL.rawPathToEncodedPathString(\n                        entry.fullPath as Platform.DevToolsPath.RawPathString),\n                    '/'))) {\n              const url = Common.ParsedURL.ParsedURL.concatenate(\n                  this.path(),\n                  Common.ParsedURL.ParsedURL.rawPathToEncodedPathString(\n                      entry.fullPath as Platform.DevToolsPath.RawPathString));\n              this.excludedEmbedderFolders.push(\n                  Common.ParsedURL.ParsedURL.urlToRawPathString(url, Host.Platform.isWin()));\n              continue;\n            }\n            ++pendingRequests;\n            this.requestEntries(entry.fullPath as Platform.DevToolsPath.RawPathString, boundInnerCallback);\n          }\n        }\n        if ((--pendingRequests === 0)) {\n          fulfill();\n        }\n      }\n    });\n  }\n\n  private async createFoldersIfNotExist(folderPath: Platform.DevToolsPath.RawPathString): Promise<DirectoryEntry|null> {\n    // Fast-path. If parent directory already exists we return it immidiatly.\n    let dirEntry = await new Promise<DirectoryEntry|null>(\n        resolve => this.domFileSystem.root.getDirectory(folderPath, undefined, resolve, () => resolve(null)));\n    if (dirEntry) {\n      return dirEntry;\n    }\n    const paths = folderPath.split('/');\n    let activePath = '';\n    for (const path of paths) {\n      activePath = activePath + '/' + path;\n      dirEntry = await this.innerCreateFolderIfNeeded(activePath);\n      if (!dirEntry) {\n        return null;\n      }\n    }\n    return dirEntry;\n  }\n\n  private innerCreateFolderIfNeeded(path: string): Promise<DirectoryEntry|null> {\n    return new Promise(resolve => {\n      this.domFileSystem.root.getDirectory(path, {create: true}, dirEntry => resolve(dirEntry), error => {\n        const errorMessage = IsolatedFileSystem.errorMessage(error);\n        console.error(errorMessage + ' trying to create directory \\'' + path + '\\'');\n        resolve(null);\n      });\n    });\n  }\n\n  override async createFile(path: Platform.DevToolsPath.EncodedPathString, name: Platform.DevToolsPath.RawPathString|null):\n      Promise<Platform.DevToolsPath.EncodedPathString|null> {\n    const dirEntry = await this.createFoldersIfNotExist(Common.ParsedURL.ParsedURL.encodedPathToRawPathString(path));\n    if (!dirEntry) {\n      return null;\n    }\n    const fileEntry =\n        await this.serializedFileOperation(\n            path, createFileCandidate.bind(this, name || 'NewFile' as Platform.DevToolsPath.RawPathString)) as\n            FileEntry |\n        null;\n    if (!fileEntry) {\n      return null;\n    }\n    return Common.ParsedURL.ParsedURL.rawPathToEncodedPathString(\n        Common.ParsedURL.ParsedURL.substr(fileEntry.fullPath as Platform.DevToolsPath.RawPathString, 1));\n\n    function createFileCandidate(\n        this: IsolatedFileSystem, name: Platform.DevToolsPath.RawPathString,\n        newFileIndex?: number): Promise<FileEntry|null> {\n      return new Promise(resolve => {\n        const nameCandidate = Common.ParsedURL.ParsedURL.concatenate(name, (newFileIndex || '').toString());\n        (dirEntry as DirectoryEntry).getFile(nameCandidate, {create: true, exclusive: true}, resolve, error => {\n          if (error.name === 'InvalidModificationError') {\n            resolve(createFileCandidate.call(this, name, (newFileIndex ? newFileIndex + 1 : 1)));\n            return;\n          }\n          const errorMessage = IsolatedFileSystem.errorMessage(error);\n          console.error(\n              errorMessage + ' when testing if file exists \\'' + (this.path() + '/' + path + '/' + nameCandidate) +\n              '\\'');\n          resolve(null);\n        });\n      });\n    }\n  }\n\n  override deleteFile(path: Platform.DevToolsPath.EncodedPathString): Promise<boolean> {\n    const {promise, resolve} = Platform.PromiseUtilities.promiseWithResolvers<boolean>();\n    this.domFileSystem.root.getFile(\n        Common.ParsedURL.ParsedURL.encodedPathToRawPathString(path), undefined, fileEntryLoaded.bind(this),\n        errorHandler.bind(this));\n    return promise;\n\n    function fileEntryLoaded(this: IsolatedFileSystem, fileEntry: FileEntry): void {\n      fileEntry.remove(fileEntryRemoved, errorHandler.bind(this));\n    }\n\n    function fileEntryRemoved(): void {\n      resolve(true);\n    }\n\n    /**\n     * TODO(jsbell): Update externs replacing DOMError with DOMException. https://crbug.com/496901\n     */\n    function errorHandler(this: IsolatedFileSystem, error: DOMError): void {\n      const errorMessage = IsolatedFileSystem.errorMessage(error);\n      console.error(errorMessage + ' when deleting file \\'' + (this.path() + '/' + path) + '\\'');\n      resolve(false);\n    }\n  }\n\n  override deleteDirectoryRecursively(path: Platform.DevToolsPath.EncodedPathString): Promise<boolean> {\n    const {promise, resolve} = Platform.PromiseUtilities.promiseWithResolvers<boolean>();\n    this.domFileSystem.root.getDirectory(\n        Common.ParsedURL.ParsedURL.encodedPathToRawPathString(path), undefined, dirEntryLoaded.bind(this),\n        errorHandler.bind(this));\n    return promise;\n\n    function dirEntryLoaded(this: IsolatedFileSystem, dirEntry: DirectoryEntry): void {\n      dirEntry.removeRecursively(dirEntryRemoved, errorHandler.bind(this));\n    }\n\n    function dirEntryRemoved(): void {\n      resolve(true);\n    }\n\n    /**\n     * TODO(jsbell): Update externs replacing DOMError with DOMException. https://crbug.com/496901\n     */\n    function errorHandler(this: IsolatedFileSystem, error: DOMError): void {\n      const errorMessage = IsolatedFileSystem.errorMessage(error);\n      console.error(errorMessage + ' when deleting directory \\'' + (this.path() + '/' + path) + '\\'');\n      resolve(false);\n    }\n  }\n\n  override requestFileBlob(path: Platform.DevToolsPath.EncodedPathString): Promise<Blob|null> {\n    return new Promise(resolve => {\n      this.domFileSystem.root.getFile(Common.ParsedURL.ParsedURL.encodedPathToRawPathString(path), undefined, entry => {\n        entry.file(resolve, errorHandler.bind(this));\n      }, errorHandler.bind(this));\n\n      function errorHandler(this: IsolatedFileSystem, error: DOMError): void {\n        if (error.name === 'NotFoundError') {\n          resolve(null);\n          return;\n        }\n\n        const errorMessage = IsolatedFileSystem.errorMessage(error);\n        console.error(errorMessage + ' when getting content for file \\'' + (this.path() + '/' + path) + '\\'');\n        resolve(null);\n      }\n    });\n  }\n\n  override requestFileContent(path: Platform.DevToolsPath.EncodedPathString):\n      Promise<TextUtils.ContentData.ContentDataOrError> {\n    return this.serializedFileOperation(path, () => this.innerRequestFileContent(path));\n  }\n\n  private async innerRequestFileContent(path: Platform.DevToolsPath.EncodedPathString):\n      Promise<TextUtils.ContentData.ContentDataOrError> {\n    const blob = await this.requestFileBlob(path);\n    if (!blob) {\n      return {error: i18nString(UIStrings.blobCouldNotBeLoaded)};\n    }\n\n    const mimeType = mimeTypeForBlob(path, blob);\n    try {\n      if (Platform.MimeType.isTextType(mimeType)) {\n        return new TextUtils.ContentData.ContentData(await blob.text(), /* isBase64 */ false, mimeType);\n      }\n      return new TextUtils.ContentData.ContentData(await Common.Base64.encode(blob), /* isBase64 */ true, mimeType);\n    } catch (e) {\n      return {error: i18nString(UIStrings.cantReadFileSS, {PH1: path, PH2: e.message})};\n    }\n  }\n\n  override async setFileContent(path: Platform.DevToolsPath.EncodedPathString, content: string, isBase64: boolean):\n      Promise<void> {\n    Host.userMetrics.actionTaken(Host.UserMetrics.Action.FileSavedInWorkspace);\n    let resolve: (result: ProgressEvent<EventTarget>|undefined) => void;\n    const innerSetFileContent = (): Promise<ProgressEvent<EventTarget>|undefined> => {\n      const promise = new Promise<ProgressEvent<EventTarget>|undefined>(x => {\n        resolve = x;\n      });\n      this.domFileSystem.root.getFile(\n          Common.ParsedURL.ParsedURL.encodedPathToRawPathString(path), {create: true}, fileEntryLoaded.bind(this),\n          errorHandler.bind(this));\n      return promise;\n    };\n\n    void this.serializedFileOperation(path, innerSetFileContent);\n\n    function fileEntryLoaded(this: IsolatedFileSystem, entry: FileEntry): void {\n      entry.createWriter(fileWriterCreated.bind(this), errorHandler.bind(this));\n    }\n\n    async function fileWriterCreated(this: IsolatedFileSystem, fileWriter: FileWriter): Promise<void> {\n      fileWriter.onerror = errorHandler.bind(this);\n      fileWriter.onwriteend = fileWritten;\n      let blob: Blob;\n      if (isBase64) {\n        blob = await (await fetch(`data:application/octet-stream;base64,${content}`)).blob();\n      } else {\n        blob = new Blob([content], {type: 'text/plain'});\n      }\n      fileWriter.write(blob);\n\n      function fileWritten(): void {\n        fileWriter.onwriteend = resolve;\n        fileWriter.truncate(blob.size);\n      }\n    }\n\n    function errorHandler(this: IsolatedFileSystem, error: DOMError|ProgressEvent<EventTarget>): void {\n      // @ts-ignore TODO(crbug.com/1172300) Properly type this after jsdoc to ts migration\n      const errorMessage = IsolatedFileSystem.errorMessage(error);\n      console.error(errorMessage + ' when setting content for file \\'' + (this.path() + '/' + path) + '\\'');\n      resolve(undefined);\n    }\n  }\n\n  override renameFile(\n      path: Platform.DevToolsPath.EncodedPathString, newName: Platform.DevToolsPath.RawPathString,\n      callback: (arg0: boolean, arg1?: string|undefined) => void): void {\n    newName = newName ? Common.ParsedURL.ParsedURL.trim(newName) : newName;\n    if (!newName || newName.indexOf('/') !== -1) {\n      callback(false);\n      return;\n    }\n    let fileEntry: FileEntry;\n    let dirEntry: DirectoryEntry;\n\n    this.domFileSystem.root.getFile(\n        Common.ParsedURL.ParsedURL.encodedPathToRawPathString(path), undefined, fileEntryLoaded.bind(this),\n        errorHandler.bind(this));\n\n    function fileEntryLoaded(this: IsolatedFileSystem, entry: FileEntry): void {\n      if (entry.name === newName) {\n        callback(false);\n        return;\n      }\n\n      fileEntry = entry;\n      fileEntry.getParent(dirEntryLoaded.bind(this), errorHandler.bind(this));\n    }\n\n    function dirEntryLoaded(this: IsolatedFileSystem, entry: DirectoryEntry): void {\n      dirEntry = entry;\n      dirEntry.getFile(newName, undefined, newFileEntryLoaded, newFileEntryLoadErrorHandler.bind(this));\n    }\n\n    function newFileEntryLoaded(_entry: FileEntry): void {\n      callback(false);\n    }\n\n    function newFileEntryLoadErrorHandler(this: IsolatedFileSystem, error: DOMError): void {\n      if (error.name !== 'NotFoundError') {\n        callback(false);\n        return;\n      }\n      fileEntry.moveTo(dirEntry, newName, fileRenamed, errorHandler.bind(this));\n    }\n\n    function fileRenamed(entry: Entry): void {\n      callback(true, entry.name);\n    }\n\n    function errorHandler(this: IsolatedFileSystem, error: DOMError): void {\n      const errorMessage = IsolatedFileSystem.errorMessage(error);\n      console.error(errorMessage + ' when renaming file \\'' + (this.path() + '/' + path) + '\\' to \\'' + newName + '\\'');\n      callback(false);\n    }\n  }\n\n  private readDirectory(dirEntry: DirectoryEntry, callback: (arg0: Array<FileEntry>) => void): void {\n    const dirReader = dirEntry.createReader();\n    let entries: FileEntry[] = [];\n\n    function innerCallback(results: Entry[]): void {\n      if (!results.length) {\n        callback(entries.sort());\n      } else {\n        entries = entries.concat(toArray(results));\n        dirReader.readEntries(innerCallback, errorHandler);\n      }\n    }\n\n    function toArray(list: Entry[]): FileEntry[] {\n      return Array.prototype.slice.call(list || [], 0);\n    }\n\n    dirReader.readEntries(innerCallback, errorHandler);\n\n    function errorHandler(error: DOMError): void {\n      const errorMessage = IsolatedFileSystem.errorMessage(error);\n      console.error(errorMessage + ' when reading directory \\'' + dirEntry.fullPath + '\\'');\n      callback([]);\n    }\n  }\n\n  private requestEntries(path: Platform.DevToolsPath.RawPathString, callback: (arg0: Array<FileEntry>) => void): void {\n    this.domFileSystem.root.getDirectory(path, undefined, innerCallback.bind(this), errorHandler);\n\n    function innerCallback(this: IsolatedFileSystem, dirEntry: DirectoryEntry): void {\n      this.readDirectory(dirEntry, callback);\n    }\n\n    function errorHandler(error: DOMError): void {\n      const errorMessage = IsolatedFileSystem.errorMessage(error);\n      console.error(errorMessage + ' when requesting entry \\'' + path + '\\'');\n      callback([]);\n    }\n  }\n\n  private saveExcludedFolders(): void {\n    const settingValue = this.excludedFoldersSetting.get();\n    settingValue[this.path()] = [...this.excludedFoldersInternal];\n    this.excludedFoldersSetting.set(settingValue);\n  }\n\n  override addExcludedFolder(path: Platform.DevToolsPath.EncodedPathString): void {\n    this.excludedFoldersInternal.add(path);\n    this.saveExcludedFolders();\n    this.manager.dispatchEventToListeners(Events.ExcludedFolderAdded, path);\n  }\n\n  override removeExcludedFolder(path: Platform.DevToolsPath.EncodedPathString): void {\n    this.excludedFoldersInternal.delete(path);\n    this.saveExcludedFolders();\n    this.manager.dispatchEventToListeners(Events.ExcludedFolderRemoved, path);\n  }\n\n  override fileSystemRemoved(): void {\n    const settingValue = this.excludedFoldersSetting.get();\n    delete settingValue[this.path()];\n    this.excludedFoldersSetting.set(settingValue);\n  }\n\n  override isFileExcluded(folderPath: Platform.DevToolsPath.EncodedPathString): boolean {\n    if (this.excludedFoldersInternal.has(folderPath)) {\n      return true;\n    }\n    const regex = (this.manager.workspaceFolderExcludePatternSetting()).asRegExp();\n    return Boolean(regex && regex.test(Common.ParsedURL.ParsedURL.encodedPathToRawPathString(folderPath)));\n  }\n\n  override excludedFolders(): Set<Platform.DevToolsPath.EncodedPathString> {\n    return this.excludedFoldersInternal;\n  }\n\n  override searchInPath(query: string, progress: Common.Progress.Progress): Promise<string[]> {\n    return new Promise(resolve => {\n      const requestId = this.manager.registerCallback(innerCallback);\n      Host.InspectorFrontendHost.InspectorFrontendHostInstance.searchInPath(\n          requestId, this.embedderPathInternal, query);\n\n      function innerCallback(files: Platform.DevToolsPath.RawPathString[]): void {\n        resolve(files.map(path => Common.ParsedURL.ParsedURL.rawPathToUrlString(path)));\n        progress.incrementWorked(1);\n      }\n    });\n  }\n\n  override indexContent(progress: Common.Progress.Progress): void {\n    progress.setTotalWork(1);\n    const requestId = this.manager.registerProgress(progress);\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.indexPath(\n        requestId, this.embedderPathInternal, JSON.stringify(this.excludedEmbedderFolders));\n  }\n\n  override mimeFromPath(path: Platform.DevToolsPath.UrlString): string {\n    return Common.ResourceType.ResourceType.mimeFromURL(path) || 'text/plain';\n  }\n\n  override canExcludeFolder(path: Platform.DevToolsPath.EncodedPathString): boolean {\n    return Boolean(path) && this.type() !== 'overrides';\n  }\n\n  // path not typed as Branded Types as here we are interested in extention only\n  override contentType(path: string): Common.ResourceType.ResourceType {\n    const extension = Common.ParsedURL.ParsedURL.extractExtension(path);\n    if (STYLE_SHEET_EXTENSIONS.has(extension)) {\n      return Common.ResourceType.resourceTypes.Stylesheet;\n    }\n    if (DOCUMENT_EXTENSIONS.has(extension)) {\n      return Common.ResourceType.resourceTypes.Document;\n    }\n    if (IMAGE_EXTENSIONS.has(extension)) {\n      return Common.ResourceType.resourceTypes.Image;\n    }\n    if (SCRIPT_EXTENSIONS.has(extension)) {\n      return Common.ResourceType.resourceTypes.Script;\n    }\n    return BinaryExtensions.has(extension) ? Common.ResourceType.resourceTypes.Other :\n                                             Common.ResourceType.resourceTypes.Document;\n  }\n\n  override tooltipForURL(url: Platform.DevToolsPath.UrlString): string {\n    const path = Platform.StringUtilities.trimMiddle(\n        Common.ParsedURL.ParsedURL.urlToRawPathString(url, Host.Platform.isWin()), 150);\n    return i18nString(UIStrings.linkedToS, {PH1: path});\n  }\n\n  override supportsAutomapping(): boolean {\n    return this.type() !== 'overrides';\n  }\n}\n\n/**\n * @returns Tries to determine the mime type for this Blob:\n *   1) If blob.type is non-empty, we return that.\n *   2) If we know it from the extension, use that.\n *   3) Check the list of known binary extensions and use application/octet-stream.\n *   4) Use text/plain\n */\nfunction mimeTypeForBlob(path: Platform.DevToolsPath.EncodedPathString, blob: Blob): string {\n  if (blob.type) {\n    return blob.type;\n  }\n\n  const extension = Common.ParsedURL.ParsedURL.extractExtension(path);\n  const maybeMime = Common.ResourceType.ResourceType.mimeFromExtension(extension);\n  if (maybeMime) {\n    return maybeMime;\n  }\n\n  return BinaryExtensions.has(extension) ? 'application/octet-stream' : 'text/plain';\n}\n\nconst STYLE_SHEET_EXTENSIONS = new Set<string>(['css', 'scss', 'sass', 'less']);\nconst DOCUMENT_EXTENSIONS = new Set<string>(['htm', 'html', 'asp', 'aspx', 'phtml', 'jsp']);\n\nconst SCRIPT_EXTENSIONS = new Set<string>([\n  'asp', 'aspx', 'c', 'cc', 'cljs', 'coffee', 'cpp', 'cs', 'dart', 'java', 'js',\n  'jsp', 'jsx',  'h', 'm',  'mjs',  'mm',     'py',  'sh', 'ts',   'tsx',  'ls',\n]);\n\nconst IMAGE_EXTENSIONS = new Set<string>(['jpeg', 'jpg', 'svg', 'gif', 'webp', 'png', 'ico', 'tiff', 'tif', 'bmp']);\n\nexport const BinaryExtensions = new Set<string>([\n  // Executable extensions, roughly taken from https://en.wikipedia.org/wiki/Comparison_of_executable_file_formats\n  'cmd',\n  'com',\n  'exe',\n  // Archive extensions, roughly taken from https://en.wikipedia.org/wiki/List_of_archive_formats\n  'a',\n  'ar',\n  'iso',\n  'tar',\n  'bz2',\n  'gz',\n  'lz',\n  'lzma',\n  'z',\n  '7z',\n  'apk',\n  'arc',\n  'cab',\n  'dmg',\n  'jar',\n  'pak',\n  'rar',\n  'zip',\n  // Audio file extensions, roughly taken from https://en.wikipedia.org/wiki/Audio_file_format#List_of_formats\n  '3gp',\n  'aac',\n  'aiff',\n  'flac',\n  'm4a',\n  'mmf',\n  'mp3',\n  'ogg',\n  'oga',\n  'raw',\n  'sln',\n  'wav',\n  'wma',\n  'webm',\n  // Video file extensions, roughly taken from https://en.wikipedia.org/wiki/Video_file_format\n  'mkv',\n  'flv',\n  'vob',\n  'ogv',\n  'gifv',\n  'avi',\n  'mov',\n  'qt',\n  'mp4',\n  'm4p',\n  'm4v',\n  'mpg',\n  'mpeg',\n  // Image file extensions\n  'jpeg',\n  'jpg',\n  'gif',\n  'webp',\n  'png',\n  'ico',\n  'tiff',\n  'tif',\n  'bmp',\n]);\n"]}