{"version":3,"file":"NetworkPersistenceManager.js","sourceRoot":"","sources":["../../../../../../front_end/models/persistence/NetworkPersistenceManager.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as Breakpoints from '../breakpoints/breakpoints.js';\nimport * as TextUtils from '../text_utils/text_utils.js';\nimport * as Workspace from '../workspace/workspace.js';\n\nimport {type FileSystem, FileSystemWorkspaceBinding} from './FileSystemWorkspaceBinding.js';\nimport {IsolatedFileSystemManager} from './IsolatedFileSystemManager.js';\nimport {PersistenceBinding, PersistenceImpl} from './PersistenceImpl.js';\n\nlet networkPersistenceManagerInstance: NetworkPersistenceManager|null;\n\nconst forbiddenUrls = ['chromewebstore.google.com', 'chrome.google.com'];\n\nexport class NetworkPersistenceManager extends Common.ObjectWrapper.ObjectWrapper<EventTypes> implements\n    SDK.TargetManager.Observer {\n  private bindings: WeakMap<Workspace.UISourceCode.UISourceCode, PersistenceBinding>;\n  private readonly originalResponseContentPromises: WeakMap<Workspace.UISourceCode.UISourceCode, Promise<string|null>>;\n  private savingForOverrides: WeakSet<Workspace.UISourceCode.UISourceCode>;\n  private readonly savingSymbol: symbol;\n  private enabledSetting: Common.Settings.Setting<boolean>;\n  private readonly workspace: Workspace.Workspace.WorkspaceImpl;\n  private readonly networkUISourceCodeForEncodedPath:\n      Map<Platform.DevToolsPath.EncodedPathString, Workspace.UISourceCode.UISourceCode>;\n  private readonly interceptionHandlerBound:\n      (interceptedRequest: SDK.NetworkManager.InterceptedRequest) => Promise<void>;\n  private readonly updateInterceptionThrottler: Common.Throttler.Throttler;\n  private projectInternal: Workspace.Workspace.Project|null;\n  private readonly activeProject: Workspace.Workspace.Project|null;\n  private activeInternal: boolean;\n  private enabled: boolean;\n  private eventDescriptors: Common.EventTarget.EventDescriptor[];\n  #headerOverridesMap: Map<Platform.DevToolsPath.EncodedPathString, HeaderOverrideWithRegex[]> = new Map();\n  readonly #sourceCodeToBindProcessMutex = new WeakMap<Workspace.UISourceCode.UISourceCode, Common.Mutex.Mutex>();\n  readonly #eventDispatchThrottler: Common.Throttler.Throttler;\n  #headerOverridesForEventDispatch: Set<Workspace.UISourceCode.UISourceCode>;\n\n  private constructor(workspace: Workspace.Workspace.WorkspaceImpl) {\n    super();\n    this.bindings = new WeakMap();\n    this.originalResponseContentPromises = new WeakMap();\n    this.savingForOverrides = new WeakSet();\n    this.savingSymbol = Symbol('SavingForOverrides');\n\n    this.enabledSetting = Common.Settings.Settings.instance().moduleSetting('persistence-network-overrides-enabled');\n    this.enabledSetting.addChangeListener(this.enabledChanged, this);\n\n    this.workspace = workspace;\n\n    this.networkUISourceCodeForEncodedPath = new Map();\n    this.interceptionHandlerBound = this.interceptionHandler.bind(this);\n    this.updateInterceptionThrottler = new Common.Throttler.Throttler(50);\n    this.#eventDispatchThrottler = new Common.Throttler.Throttler(50);\n    this.#headerOverridesForEventDispatch = new Set();\n\n    this.projectInternal = null;\n    this.activeProject = null;\n\n    this.activeInternal = false;\n    this.enabled = false;\n\n    this.workspace.addEventListener(Workspace.Workspace.Events.ProjectAdded, event => {\n      void this.onProjectAdded(event.data);\n    });\n    this.workspace.addEventListener(Workspace.Workspace.Events.ProjectRemoved, event => {\n      void this.onProjectRemoved(event.data);\n    });\n\n    PersistenceImpl.instance().addNetworkInterceptor(this.canHandleNetworkUISourceCode.bind(this));\n    Breakpoints.BreakpointManager.BreakpointManager.instance().addUpdateBindingsCallback(\n        this.networkUISourceCodeAdded.bind(this));\n\n    this.eventDescriptors = [];\n    void this.enabledChanged();\n\n    SDK.TargetManager.TargetManager.instance().observeTargets(this);\n  }\n\n  targetAdded(): void {\n    void this.updateActiveProject();\n  }\n  targetRemoved(): void {\n    void this.updateActiveProject();\n  }\n\n  static instance(opts: {\n    forceNew: boolean|null,\n    workspace: Workspace.Workspace.WorkspaceImpl|null,\n  } = {forceNew: null, workspace: null}): NetworkPersistenceManager {\n    const {forceNew, workspace} = opts;\n    if (!networkPersistenceManagerInstance || forceNew) {\n      if (!workspace) {\n        throw new Error('Missing workspace for NetworkPersistenceManager');\n      }\n      networkPersistenceManagerInstance = new NetworkPersistenceManager(workspace);\n    }\n\n    return networkPersistenceManagerInstance;\n  }\n\n  active(): boolean {\n    return this.activeInternal;\n  }\n\n  project(): Workspace.Workspace.Project|null {\n    return this.projectInternal;\n  }\n\n  originalContentForUISourceCode(uiSourceCode: Workspace.UISourceCode.UISourceCode): Promise<string|null>|null {\n    const binding = this.bindings.get(uiSourceCode);\n    if (!binding) {\n      return null;\n    }\n    const fileSystemUISourceCode = binding.fileSystem;\n    return this.originalResponseContentPromises.get(fileSystemUISourceCode) || null;\n  }\n\n  private async enabledChanged(): Promise<void> {\n    if (this.enabled === this.enabledSetting.get()) {\n      return;\n    }\n    this.enabled = this.enabledSetting.get();\n    if (this.enabled) {\n      Host.userMetrics.actionTaken(Host.UserMetrics.Action.PersistenceNetworkOverridesEnabled);\n      this.eventDescriptors = [\n        Workspace.Workspace.WorkspaceImpl.instance().addEventListener(\n            Workspace.Workspace.Events.UISourceCodeRenamed,\n            event => {\n              void this.uiSourceCodeRenamedListener(event);\n            }),\n        Workspace.Workspace.WorkspaceImpl.instance().addEventListener(\n            Workspace.Workspace.Events.UISourceCodeAdded,\n            event => {\n              void this.uiSourceCodeAdded(event);\n            }),\n        Workspace.Workspace.WorkspaceImpl.instance().addEventListener(\n            Workspace.Workspace.Events.UISourceCodeRemoved,\n            event => {\n              void this.uiSourceCodeRemovedListener(event);\n            }),\n        Workspace.Workspace.WorkspaceImpl.instance().addEventListener(\n            Workspace.Workspace.Events.WorkingCopyCommitted,\n            event => this.onUISourceCodeWorkingCopyCommitted(event.data.uiSourceCode)),\n      ];\n      await this.updateActiveProject();\n    } else {\n      Host.userMetrics.actionTaken(Host.UserMetrics.Action.PersistenceNetworkOverridesDisabled);\n      Common.EventTarget.removeEventListeners(this.eventDescriptors);\n      await this.updateActiveProject();\n    }\n    this.dispatchEventToListeners(Events.LocalOverridesProjectUpdated, this.enabled);\n  }\n\n  private async uiSourceCodeRenamedListener(\n      event: Common.EventTarget.EventTargetEvent<Workspace.Workspace.UISourceCodeRenamedEvent>): Promise<void> {\n    const uiSourceCode = event.data.uiSourceCode;\n    await this.onUISourceCodeRemoved(uiSourceCode);\n    await this.onUISourceCodeAdded(uiSourceCode);\n  }\n\n  private async uiSourceCodeRemovedListener(\n      event: Common.EventTarget.EventTargetEvent<Workspace.UISourceCode.UISourceCode>): Promise<void> {\n    await this.onUISourceCodeRemoved(event.data);\n  }\n\n  private async uiSourceCodeAdded(event: Common.EventTarget.EventTargetEvent<Workspace.UISourceCode.UISourceCode>):\n      Promise<void> {\n    await this.onUISourceCodeAdded(event.data);\n  }\n\n  private async updateActiveProject(): Promise<void> {\n    const wasActive = this.activeInternal;\n    this.activeInternal = Boolean(\n        this.enabledSetting.get() && SDK.TargetManager.TargetManager.instance().rootTarget() && this.projectInternal);\n    if (this.activeInternal === wasActive) {\n      return;\n    }\n\n    if (this.activeInternal && this.projectInternal) {\n      await Promise.all([...this.projectInternal.uiSourceCodes()].map(\n          uiSourceCode => this.filesystemUISourceCodeAdded(uiSourceCode)));\n\n      const networkProjects = this.workspace.projectsForType(Workspace.Workspace.projectTypes.Network);\n      for (const networkProject of networkProjects) {\n        await Promise.all(\n            [...networkProject.uiSourceCodes()].map(uiSourceCode => this.networkUISourceCodeAdded(uiSourceCode)));\n      }\n    } else if (this.projectInternal) {\n      await Promise.all([...this.projectInternal.uiSourceCodes()].map(\n          uiSourceCode => this.filesystemUISourceCodeRemoved(uiSourceCode)));\n      this.networkUISourceCodeForEncodedPath.clear();\n    }\n    PersistenceImpl.instance().refreshAutomapping();\n  }\n\n  encodedPathFromUrl(url: Platform.DevToolsPath.UrlString, ignoreInactive?: boolean):\n      Platform.DevToolsPath.EncodedPathString {\n    return Common.ParsedURL.ParsedURL.rawPathToEncodedPathString(this.rawPathFromUrl(url, ignoreInactive));\n  }\n\n  rawPathFromUrl(url: Platform.DevToolsPath.UrlString, ignoreInactive?: boolean): Platform.DevToolsPath.RawPathString {\n    if ((!this.activeInternal && !ignoreInactive) || !this.projectInternal) {\n      return Platform.DevToolsPath.EmptyRawPathString;\n    }\n    let initialEncodedPath = Common.ParsedURL.ParsedURL.urlWithoutHash(url.replace(/^https?:\\/\\//, '')) as\n        Platform.DevToolsPath.EncodedPathString;\n    if (initialEncodedPath.endsWith('/') && initialEncodedPath.indexOf('?') === -1) {\n      initialEncodedPath = Common.ParsedURL.ParsedURL.concatenate(initialEncodedPath, 'index.html');\n    }\n    let encodedPathParts = NetworkPersistenceManager.encodeEncodedPathToLocalPathParts(initialEncodedPath);\n    const projectPath =\n        FileSystemWorkspaceBinding.fileSystemPath(this.projectInternal.id() as Platform.DevToolsPath.UrlString);\n    const encodedPath = encodedPathParts.join('/');\n    if (projectPath.length + encodedPath.length > 200) {\n      const domain = encodedPathParts[0];\n      const encodedFileName = encodedPathParts[encodedPathParts.length - 1];\n      const shortFileName = encodedFileName ? encodedFileName.substr(0, 10) + '-' : '';\n      const extension = Common.ParsedURL.ParsedURL.extractExtension(initialEncodedPath);\n      const extensionPart = extension ? '.' + extension.substr(0, 10) : '';\n      encodedPathParts = [\n        domain,\n        'longurls',\n        shortFileName + Platform.StringUtilities.hashCode(encodedPath).toString(16) + extensionPart,\n      ];\n    }\n    return Common.ParsedURL.ParsedURL.join(encodedPathParts as Platform.DevToolsPath.RawPathString[], '/');\n  }\n\n  static encodeEncodedPathToLocalPathParts(encodedPath: Platform.DevToolsPath.EncodedPathString): string[] {\n    const encodedParts = [];\n    for (const pathPart of this.#fileNamePartsFromEncodedPath(encodedPath)) {\n      if (!pathPart) {\n        continue;\n      }\n      // encodeURI() escapes all the unsafe filename characters except '/' and '*'\n      let encodedName =\n          encodeURI(pathPart).replace(/[\\/\\*]/g, match => '%' + match[0].charCodeAt(0).toString(16).toUpperCase());\n      if (Host.Platform.isWin()) {\n        // Windows does not allow ':' and '?' in filenames\n        encodedName = encodedName.replace(/[:\\?]/g, match => '%' + match[0].charCodeAt(0).toString(16).toUpperCase());\n        // Windows does not allow a small set of filenames.\n        if (RESERVED_FILENAMES.has(encodedName.toLowerCase())) {\n          encodedName = encodedName.split('').map(char => '%' + char.charCodeAt(0).toString(16).toUpperCase()).join('');\n        }\n        // Windows does not allow the file to end in a space or dot (space should already be encoded).\n        const lastChar = encodedName.charAt(encodedName.length - 1);\n        if (lastChar === '.') {\n          encodedName = encodedName.substr(0, encodedName.length - 1) + '%2E';\n        }\n      }\n      encodedParts.push(encodedName);\n    }\n    return encodedParts;\n  }\n\n  static #fileNamePartsFromEncodedPath(encodedPath: Platform.DevToolsPath.EncodedPathString): string[] {\n    encodedPath = Common.ParsedURL.ParsedURL.urlWithoutHash(encodedPath) as Platform.DevToolsPath.EncodedPathString;\n    const queryIndex = encodedPath.indexOf('?');\n    if (queryIndex === -1) {\n      return encodedPath.split('/');\n    }\n    if (queryIndex === 0) {\n      return [encodedPath];\n    }\n    const endSection = encodedPath.substr(queryIndex);\n    const parts = encodedPath.substr(0, encodedPath.length - endSection.length).split('/');\n    parts[parts.length - 1] += endSection;\n    return parts;\n  }\n\n  fileUrlFromNetworkUrl(url: Platform.DevToolsPath.UrlString, ignoreInactive?: boolean):\n      Platform.DevToolsPath.UrlString {\n    if (!this.projectInternal) {\n      return Platform.DevToolsPath.EmptyUrlString;\n    }\n    return Common.ParsedURL.ParsedURL.concatenate(\n        (this.projectInternal as FileSystem).fileSystemPath(), '/', this.encodedPathFromUrl(url, ignoreInactive));\n  }\n\n  getHeadersUISourceCodeFromUrl(url: Platform.DevToolsPath.UrlString): Workspace.UISourceCode.UISourceCode|null {\n    const fileUrlFromRequest = this.fileUrlFromNetworkUrl(url, /* ignoreNoActive */ true);\n    const folderUrlFromRequest =\n        Common.ParsedURL.ParsedURL.substring(fileUrlFromRequest, 0, fileUrlFromRequest.lastIndexOf('/'));\n    const headersFileUrl = Common.ParsedURL.ParsedURL.concatenate(folderUrlFromRequest, '/', HEADERS_FILENAME);\n    return Workspace.Workspace.WorkspaceImpl.instance().uiSourceCodeForURL(headersFileUrl);\n  }\n\n  async getOrCreateHeadersUISourceCodeFromUrl(url: Platform.DevToolsPath.UrlString):\n      Promise<Workspace.UISourceCode.UISourceCode|null> {\n    let uiSourceCode = this.getHeadersUISourceCodeFromUrl(url);\n    if (!uiSourceCode && this.projectInternal) {\n      const encodedFilePath = this.encodedPathFromUrl(url, /* ignoreNoActive */ true);\n      const encodedPath = Common.ParsedURL.ParsedURL.substring(encodedFilePath, 0, encodedFilePath.lastIndexOf('/'));\n      uiSourceCode = await this.projectInternal.createFile(encodedPath, HEADERS_FILENAME, '');\n      Host.userMetrics.actionTaken(Host.UserMetrics.Action.HeaderOverrideFileCreated);\n    }\n    return uiSourceCode;\n  }\n\n  private decodeLocalPathToUrlPath(path: string): string {\n    try {\n      return unescape(path);\n    } catch (e) {\n      console.error(e);\n    }\n    return path;\n  }\n\n  async #unbind(uiSourceCode: Workspace.UISourceCode.UISourceCode): Promise<void> {\n    const binding = this.bindings.get(uiSourceCode);\n    const headerBinding = uiSourceCode.url().endsWith(HEADERS_FILENAME);\n    if (binding) {\n      const mutex = this.#getOrCreateMutex(binding.network);\n      await mutex.run(this.#innerUnbind.bind(this, binding));\n    } else if (headerBinding) {\n      this.dispatchEventToListeners(Events.RequestsForHeaderOverridesFileChanged, uiSourceCode);\n    }\n  }\n\n  async #unbindUnguarded(uiSourceCode: Workspace.UISourceCode.UISourceCode): Promise<void> {\n    const binding = this.bindings.get(uiSourceCode);\n    if (binding) {\n      await this.#innerUnbind(binding);\n    }\n  }\n\n  #innerUnbind(binding: PersistenceBinding): Promise<void> {\n    this.bindings.delete(binding.network);\n    this.bindings.delete(binding.fileSystem);\n    return PersistenceImpl.instance().removeBinding(binding);\n  }\n\n  async #bind(\n      networkUISourceCode: Workspace.UISourceCode.UISourceCode,\n      fileSystemUISourceCode: Workspace.UISourceCode.UISourceCode): Promise<void> {\n    const mutex = this.#getOrCreateMutex(networkUISourceCode);\n    await mutex.run(async () => {\n      const existingBinding = this.bindings.get(networkUISourceCode);\n      if (existingBinding) {\n        const {network, fileSystem} = existingBinding;\n        if (networkUISourceCode === network && fileSystemUISourceCode === fileSystem) {\n          return;\n        }\n        await this.#unbindUnguarded(networkUISourceCode);\n        await this.#unbindUnguarded(fileSystemUISourceCode);\n      }\n\n      await this.#innerAddBinding(networkUISourceCode, fileSystemUISourceCode);\n    });\n  }\n\n  #getOrCreateMutex(networkUISourceCode: Workspace.UISourceCode.UISourceCode): Common.Mutex.Mutex {\n    let mutex = this.#sourceCodeToBindProcessMutex.get(networkUISourceCode);\n    if (!mutex) {\n      mutex = new Common.Mutex.Mutex();\n      this.#sourceCodeToBindProcessMutex.set(networkUISourceCode, mutex);\n    }\n    return mutex;\n  }\n\n  async #innerAddBinding(\n      networkUISourceCode: Workspace.UISourceCode.UISourceCode,\n      fileSystemUISourceCode: Workspace.UISourceCode.UISourceCode): Promise<void> {\n    const binding = new PersistenceBinding(networkUISourceCode, fileSystemUISourceCode);\n    this.bindings.set(networkUISourceCode, binding);\n    this.bindings.set(fileSystemUISourceCode, binding);\n    await PersistenceImpl.instance().addBinding(binding);\n    const uiSourceCodeOfTruth =\n        this.savingForOverrides.has(networkUISourceCode) ? networkUISourceCode : fileSystemUISourceCode;\n    const {content, isEncoded} = await uiSourceCodeOfTruth.requestContent();\n    PersistenceImpl.instance().syncContent(uiSourceCodeOfTruth, content || '', isEncoded);\n  }\n\n  private onUISourceCodeWorkingCopyCommitted(uiSourceCode: Workspace.UISourceCode.UISourceCode): void {\n    void this.saveUISourceCodeForOverrides(uiSourceCode);\n    this.updateInterceptionPatterns();\n  }\n\n  isActiveHeaderOverrides(uiSourceCode: Workspace.UISourceCode.UISourceCode): boolean {\n    // If this overriden file is actively in use at the moment.\n    if (!this.enabledSetting.get()) {\n      return false;\n    }\n    return uiSourceCode.url().endsWith(HEADERS_FILENAME) &&\n        this.hasMatchingNetworkUISourceCodeForHeaderOverridesFile(uiSourceCode);\n  }\n\n  isUISourceCodeOverridable(uiSourceCode: Workspace.UISourceCode.UISourceCode): boolean {\n    return uiSourceCode.project().type() === Workspace.Workspace.projectTypes.Network &&\n        !NetworkPersistenceManager.isForbiddenNetworkUrl(uiSourceCode.url());\n  }\n\n  #isUISourceCodeAlreadyOverridden(uiSourceCode: Workspace.UISourceCode.UISourceCode): boolean {\n    return this.bindings.has(uiSourceCode) || this.savingForOverrides.has(uiSourceCode);\n  }\n\n  #shouldPromptSaveForOverridesDialog(uiSourceCode: Workspace.UISourceCode.UISourceCode): boolean {\n    return this.isUISourceCodeOverridable(uiSourceCode) && !this.#isUISourceCodeAlreadyOverridden(uiSourceCode) &&\n        !this.activeInternal && !this.projectInternal;\n  }\n\n  #canSaveUISourceCodeForOverrides(uiSourceCode: Workspace.UISourceCode.UISourceCode): boolean {\n    return this.activeInternal && this.isUISourceCodeOverridable(uiSourceCode) &&\n        !this.#isUISourceCodeAlreadyOverridden(uiSourceCode);\n  }\n\n  async setupAndStartLocalOverrides(uiSourceCode: Workspace.UISourceCode.UISourceCode): Promise<boolean> {\n    // No overrides folder, set it up\n    if (this.#shouldPromptSaveForOverridesDialog(uiSourceCode)) {\n      Host.userMetrics.actionTaken(Host.UserMetrics.Action.OverrideContentContextMenuSetup);\n      await new Promise<void>(\n          resolve => UI.InspectorView.InspectorView.instance().displaySelectOverrideFolderInfobar(resolve));\n      await IsolatedFileSystemManager.instance().addFileSystem('overrides');\n    }\n\n    if (!this.project()) {\n      Host.userMetrics.actionTaken(Host.UserMetrics.Action.OverrideContentContextMenuAbandonSetup);\n      return false;\n    }\n\n    // Already have an overrides folder, enable setting\n    if (!this.enabledSetting.get()) {\n      Host.userMetrics.actionTaken(Host.UserMetrics.Action.OverrideContentContextMenuActivateDisabled);\n      this.enabledSetting.set(true);\n      await this.once(Events.LocalOverridesProjectUpdated);\n    }\n\n    // Save new file\n    if (!this.#isUISourceCodeAlreadyOverridden(uiSourceCode)) {\n      Host.userMetrics.actionTaken(Host.UserMetrics.Action.OverrideContentContextMenuSaveNewFile);\n      uiSourceCode.commitWorkingCopy();\n      await this.saveUISourceCodeForOverrides(uiSourceCode as Workspace.UISourceCode.UISourceCode);\n    } else {\n      Host.userMetrics.actionTaken(Host.UserMetrics.Action.OverrideContentContextMenuOpenExistingFile);\n    }\n\n    return true;\n  }\n\n  async saveUISourceCodeForOverrides(uiSourceCode: Workspace.UISourceCode.UISourceCode): Promise<void> {\n    if (!this.#canSaveUISourceCodeForOverrides(uiSourceCode)) {\n      return;\n    }\n    this.savingForOverrides.add(uiSourceCode);\n    let encodedPath = this.encodedPathFromUrl(uiSourceCode.url());\n    const {content, isEncoded} = await uiSourceCode.requestContent();\n    const lastIndexOfSlash = encodedPath.lastIndexOf('/');\n    const encodedFileName = Common.ParsedURL.ParsedURL.substring(encodedPath, lastIndexOfSlash + 1);\n    const rawFileName = Common.ParsedURL.ParsedURL.encodedPathToRawPathString(encodedFileName);\n    encodedPath = Common.ParsedURL.ParsedURL.substr(encodedPath, 0, lastIndexOfSlash);\n    if (this.projectInternal) {\n      await this.projectInternal.createFile(encodedPath, rawFileName, content ?? '', isEncoded);\n    }\n    this.fileCreatedForTest(encodedPath, rawFileName);\n    this.savingForOverrides.delete(uiSourceCode);\n  }\n\n  private fileCreatedForTest(_path: Platform.DevToolsPath.EncodedPathString, _fileName: string): void {\n  }\n\n  private patternForFileSystemUISourceCode(uiSourceCode: Workspace.UISourceCode.UISourceCode): string {\n    const relativePathParts = FileSystemWorkspaceBinding.relativePath(uiSourceCode);\n    if (relativePathParts.length < 2) {\n      return '';\n    }\n    if (relativePathParts[1] === 'longurls' && relativePathParts.length !== 2) {\n      if (relativePathParts[0] === 'file:') {\n        return 'file:///*';\n      }\n      return 'http?://' + relativePathParts[0] + '/*';\n    }\n    // 'relativePath' returns an encoded string of the local file name which itself is already encoded.\n    // We therefore need to decode twice to get the raw path.\n    const path = this.decodeLocalPathToUrlPath(this.decodeLocalPathToUrlPath(relativePathParts.join('/')));\n    if (path.startsWith('file:/')) {\n      // The file path of the override file looks like '/path/to/overrides/file:/path/to/local/files/index.html'.\n      // The decoded relative path then starts with 'file:/' which we modify to start with 'file:///' instead.\n      return 'file:///' + path.substring('file:/'.length);\n    }\n    return 'http?://' + path;\n  }\n\n  // 'chrome://'-URLs and the Chrome Web Store are privileged URLs. We don't want users\n  // to be able to override those. Ideally we'd have a similar check in the backend,\n  // because the fix here has no effect on non-DevTools CDP clients.\n  private isForbiddenFileUrl(uiSourceCode: Workspace.UISourceCode.UISourceCode): boolean {\n    const relativePathParts = FileSystemWorkspaceBinding.relativePath(uiSourceCode);\n    // Decode twice to handle paths generated on Windows OS.\n    const host = this.decodeLocalPathToUrlPath(this.decodeLocalPathToUrlPath(relativePathParts[0] || ''));\n    return host === 'chrome:' || forbiddenUrls.includes(host);\n  }\n\n  static isForbiddenNetworkUrl(urlString: Platform.DevToolsPath.UrlString): boolean {\n    const url = Common.ParsedURL.ParsedURL.fromString(urlString);\n    if (!url) {\n      return false;\n    }\n    return url.scheme === 'chrome' || forbiddenUrls.includes(url.host);\n  }\n\n  private async onUISourceCodeAdded(uiSourceCode: Workspace.UISourceCode.UISourceCode): Promise<void> {\n    await this.networkUISourceCodeAdded(uiSourceCode);\n    await this.filesystemUISourceCodeAdded(uiSourceCode);\n  }\n\n  private canHandleNetworkUISourceCode(uiSourceCode: Workspace.UISourceCode.UISourceCode): boolean {\n    return this.activeInternal && !Common.ParsedURL.schemeIs(uiSourceCode.url(), 'snippet:');\n  }\n\n  private async networkUISourceCodeAdded(uiSourceCode: Workspace.UISourceCode.UISourceCode): Promise<void> {\n    if (uiSourceCode.project().type() !== Workspace.Workspace.projectTypes.Network ||\n        !this.canHandleNetworkUISourceCode(uiSourceCode)) {\n      return;\n    }\n    const url = Common.ParsedURL.ParsedURL.urlWithoutHash(uiSourceCode.url()) as Platform.DevToolsPath.UrlString;\n    this.networkUISourceCodeForEncodedPath.set(this.encodedPathFromUrl(url), uiSourceCode);\n\n    const project = this.projectInternal as FileSystem;\n    const fileSystemUISourceCode = project.uiSourceCodeForURL(this.fileUrlFromNetworkUrl(url));\n    if (fileSystemUISourceCode) {\n      await this.#bind(uiSourceCode, fileSystemUISourceCode);\n    }\n    this.#maybeDispatchRequestsForHeaderOverridesFileChanged(uiSourceCode);\n  }\n\n  private async filesystemUISourceCodeAdded(uiSourceCode: Workspace.UISourceCode.UISourceCode): Promise<void> {\n    if (!this.activeInternal || uiSourceCode.project() !== this.projectInternal) {\n      return;\n    }\n    this.updateInterceptionPatterns();\n\n    const relativePath = FileSystemWorkspaceBinding.relativePath(uiSourceCode);\n    const networkUISourceCode =\n        this.networkUISourceCodeForEncodedPath.get(Common.ParsedURL.ParsedURL.join(relativePath, '/'));\n    if (networkUISourceCode) {\n      await this.#bind(networkUISourceCode, uiSourceCode);\n    }\n  }\n\n  async #getHeaderOverridesFromUiSourceCode(uiSourceCode: Workspace.UISourceCode.UISourceCode):\n      Promise<HeaderOverride[]> {\n    const content = (await uiSourceCode.requestContent()).content || '[]';\n    let headerOverrides: HeaderOverride[] = [];\n    try {\n      headerOverrides = JSON.parse(content) as HeaderOverride[];\n      if (!headerOverrides.every(isHeaderOverride)) {\n        throw 'Type mismatch after parsing';\n      }\n    } catch (e) {\n      console.error('Failed to parse', uiSourceCode.url(), 'for locally overriding headers.');\n      return [];\n    }\n    return headerOverrides;\n  }\n\n  #doubleDecodeEncodedPathString(relativePath: Platform.DevToolsPath.EncodedPathString):\n      {singlyDecodedPath: Platform.DevToolsPath.EncodedPathString, decodedPath: Platform.DevToolsPath.RawPathString} {\n    // 'relativePath' is an encoded string of a local file path, which is itself already encoded.\n    // e.g. relativePath: 'www.example.com%253A443/path/.headers'\n    // singlyDecodedPath: 'www.example.com%3A443/path/.headers'\n    // decodedPath: 'www.example.com:443/path/.headers'\n    const singlyDecodedPath = this.decodeLocalPathToUrlPath(relativePath) as Platform.DevToolsPath.EncodedPathString;\n    const decodedPath = this.decodeLocalPathToUrlPath(singlyDecodedPath) as Platform.DevToolsPath.RawPathString;\n    return {singlyDecodedPath, decodedPath};\n  }\n\n  async generateHeaderPatterns(uiSourceCode: Workspace.UISourceCode.UISourceCode): Promise<{\n    headerPatterns: Set<string>,\n    path: Platform.DevToolsPath.EncodedPathString,\n    overridesWithRegex: HeaderOverrideWithRegex[],\n  }> {\n    const headerOverrides = await this.#getHeaderOverridesFromUiSourceCode(uiSourceCode);\n    const relativePathParts = FileSystemWorkspaceBinding.relativePath(uiSourceCode);\n    const relativePath = Common.ParsedURL.ParsedURL.slice(\n        Common.ParsedURL.ParsedURL.join(relativePathParts, '/'), 0, -HEADERS_FILENAME.length);\n    const {singlyDecodedPath, decodedPath} = this.#doubleDecodeEncodedPathString(relativePath);\n    let patterns;\n\n    // Long URLS are encoded as `[domain]/longurls/[hashed path]` by `rawPathFromUrl()`.\n    if (relativePathParts.length > 2 && relativePathParts[1] === 'longurls' && headerOverrides.length) {\n      patterns = this.#generateHeaderPatternsForLongUrl(decodedPath, headerOverrides, relativePathParts[0]);\n    } else if (decodedPath.startsWith('file:/')) {\n      patterns = this.#generateHeaderPatternsForFileUrl(\n          Common.ParsedURL.ParsedURL.substring(decodedPath, 'file:/'.length), headerOverrides);\n    } else {\n      patterns = this.#generateHeaderPatternsForHttpUrl(decodedPath, headerOverrides);\n    }\n    return {...patterns, path: singlyDecodedPath};\n  }\n\n  #generateHeaderPatternsForHttpUrl(\n      decodedPath: Platform.DevToolsPath.RawPathString, headerOverrides: HeaderOverride[]): {\n    headerPatterns: Set<string>,\n    overridesWithRegex: HeaderOverrideWithRegex[],\n  } {\n    const headerPatterns = new Set<string>();\n    const overridesWithRegex: HeaderOverrideWithRegex[] = [];\n    for (const headerOverride of headerOverrides) {\n      headerPatterns.add('http?://' + decodedPath + headerOverride.applyTo);\n\n      // Make 'global' overrides apply to file URLs as well.\n      if (decodedPath === '') {\n        headerPatterns.add('file:///' + headerOverride.applyTo);\n        overridesWithRegex.push({\n          applyToRegex: new RegExp('^file:\\/\\/\\/' + escapeRegex(decodedPath + headerOverride.applyTo) + '$'),\n          headers: headerOverride.headers,\n        });\n      }\n\n      // Most servers have the concept of a \"directory index\", which is a\n      // default resource name for a request targeting a \"directory\", e. g.\n      // requesting \"example.com/path/\" would result in the same response as\n      // requesting \"example.com/path/index.html\". To match this behavior we\n      // generate an additional pattern without \"index.html\" as the longer\n      // pattern would not match against a shorter request.\n      const {head, tail} = extractDirectoryIndex(headerOverride.applyTo);\n      if (tail) {\n        headerPatterns.add('http?://' + decodedPath + head);\n\n        overridesWithRegex.push({\n          applyToRegex: new RegExp(`^${escapeRegex(decodedPath + head)}(${escapeRegex(tail)})?$`),\n          headers: headerOverride.headers,\n        });\n      } else {\n        overridesWithRegex.push({\n          applyToRegex: new RegExp(`^${escapeRegex(decodedPath + headerOverride.applyTo)}$`),\n          headers: headerOverride.headers,\n        });\n      }\n    }\n    return {headerPatterns, overridesWithRegex};\n  }\n\n  #generateHeaderPatternsForFileUrl(\n      decodedPath: Platform.DevToolsPath.RawPathString, headerOverrides: HeaderOverride[]): {\n    headerPatterns: Set<string>,\n    overridesWithRegex: HeaderOverrideWithRegex[],\n  } {\n    const headerPatterns = new Set<string>();\n    const overridesWithRegex: HeaderOverrideWithRegex[] = [];\n    for (const headerOverride of headerOverrides) {\n      headerPatterns.add('file:///' + decodedPath + headerOverride.applyTo);\n      overridesWithRegex.push({\n        applyToRegex: new RegExp(`^file:\\/${escapeRegex(decodedPath + headerOverride.applyTo)}$`),\n        headers: headerOverride.headers,\n      });\n    }\n    return {headerPatterns, overridesWithRegex};\n  }\n\n  // For very long URLs, part of the URL is hashed for local overrides, so that\n  // the URL appears shorter. This special case is handled here.\n  #generateHeaderPatternsForLongUrl(\n      decodedPath: Platform.DevToolsPath.RawPathString, headerOverrides: HeaderOverride[],\n      relativePathPart: Platform.DevToolsPath.EncodedPathString): {\n    headerPatterns: Set<string>,\n    overridesWithRegex: HeaderOverrideWithRegex[],\n  } {\n    const headerPatterns = new Set<string>();\n\n    // Use pattern with wildcard => every request which matches will be paused\n    // and checked whether its hashed URL matches a stored local override in\n    // `maybeMergeHeadersForPathSegment()`.\n    let {decodedPath: decodedPattern} =\n        this.#doubleDecodeEncodedPathString(Common.ParsedURL.ParsedURL.concatenate(relativePathPart, '/*'));\n\n    const isFileUrl = decodedPath.startsWith('file:/');\n    if (isFileUrl) {\n      decodedPath = Common.ParsedURL.ParsedURL.substring(decodedPath, 'file:/'.length);\n      decodedPattern = Common.ParsedURL.ParsedURL.substring(decodedPattern, 'file:/'.length);\n    }\n    headerPatterns.add((isFileUrl ? 'file:///' : 'http?://') + decodedPattern);\n\n    const overridesWithRegex: HeaderOverrideWithRegex[] = [];\n    for (const headerOverride of headerOverrides) {\n      overridesWithRegex.push({\n        applyToRegex: new RegExp(`^${isFileUrl ? 'file:\\/' : ''}${escapeRegex(decodedPath + headerOverride.applyTo)}$`),\n        headers: headerOverride.headers,\n      });\n    }\n    return {headerPatterns, overridesWithRegex};\n  }\n\n  async updateInterceptionPatternsForTests(): Promise<void> {\n    await this.#innerUpdateInterceptionPatterns();\n  }\n\n  updateInterceptionPatterns(): void {\n    void this.updateInterceptionThrottler.schedule(this.#innerUpdateInterceptionPatterns.bind(this));\n  }\n\n  async #innerUpdateInterceptionPatterns(): Promise<void> {\n    this.#headerOverridesMap.clear();\n    if (!this.activeInternal || !this.projectInternal) {\n      return SDK.NetworkManager.MultitargetNetworkManager.instance().setInterceptionHandlerForPatterns(\n          [], this.interceptionHandlerBound);\n    }\n    let patterns = new Set<string>();\n    for (const uiSourceCode of this.projectInternal.uiSourceCodes()) {\n      if (this.isForbiddenFileUrl(uiSourceCode)) {\n        continue;\n      }\n      const pattern = this.patternForFileSystemUISourceCode(uiSourceCode);\n      if (uiSourceCode.name() === HEADERS_FILENAME) {\n        const {headerPatterns, path, overridesWithRegex} = await this.generateHeaderPatterns(uiSourceCode);\n        if (headerPatterns.size > 0) {\n          patterns = new Set([...patterns, ...headerPatterns]);\n          this.#headerOverridesMap.set(path, overridesWithRegex);\n        }\n      } else {\n        patterns.add(pattern);\n      }\n      // Most servers have the concept of a \"directory index\", which is a\n      // default resource name for a request targeting a \"directory\", e. g.\n      // requesting \"example.com/path/\" would result in the same response as\n      // requesting \"example.com/path/index.html\". To match this behavior we\n      // generate an additional pattern without \"index.html\" as the longer\n      // pattern would not match against a shorter request.\n      const {head, tail} = extractDirectoryIndex(pattern);\n      if (tail) {\n        patterns.add(head);\n      }\n    }\n\n    return SDK.NetworkManager.MultitargetNetworkManager.instance().setInterceptionHandlerForPatterns(\n        Array.from(patterns).map(\n            pattern => ({urlPattern: pattern, requestStage: Protocol.Fetch.RequestStage.Response})),\n        this.interceptionHandlerBound);\n  }\n\n  private async onUISourceCodeRemoved(uiSourceCode: Workspace.UISourceCode.UISourceCode): Promise<void> {\n    await this.networkUISourceCodeRemoved(uiSourceCode);\n    await this.filesystemUISourceCodeRemoved(uiSourceCode);\n  }\n\n  private async networkUISourceCodeRemoved(uiSourceCode: Workspace.UISourceCode.UISourceCode): Promise<void> {\n    if (uiSourceCode.project().type() === Workspace.Workspace.projectTypes.Network) {\n      await this.#unbind(uiSourceCode);\n      this.#sourceCodeToBindProcessMutex.delete(uiSourceCode);\n      this.networkUISourceCodeForEncodedPath.delete(this.encodedPathFromUrl(uiSourceCode.url()));\n    }\n    this.#maybeDispatchRequestsForHeaderOverridesFileChanged(uiSourceCode);\n  }\n\n  // We consider a header override file as active, if it matches (= potentially contains\n  // header overrides for) some of the current page's requests.\n  // The editors (in the Sources panel) of active header override files should have an\n  // emphasized icon. For regular overrides we use bindings to determine which editors\n  // are active. For header overrides we do not have a 1:1 matching between the file\n  // defining the header overrides and the request matching the override definition,\n  // because a single '.headers' file can contain header overrides for multiple requests.\n  // For each request, we therefore look whether one or more matching header override\n  // files exist, and if they do, for each of them we emit an event, which causes\n  // potential matching editors to update their icon.\n  #maybeDispatchRequestsForHeaderOverridesFileChanged(uiSourceCode: Workspace.UISourceCode.UISourceCode): void {\n    if (!this.projectInternal) {\n      return;\n    }\n    const project = this.projectInternal as FileSystem;\n    const fileUrl = this.fileUrlFromNetworkUrl(uiSourceCode.url());\n\n    for (let i = project.fileSystemPath().length; i < fileUrl.length; i++) {\n      if (fileUrl[i] !== '/') {\n        continue;\n      }\n      const headersFilePath =\n          Common.ParsedURL.ParsedURL.concatenate(Common.ParsedURL.ParsedURL.substring(fileUrl, 0, i + 1), '.headers');\n      const headersFileUiSourceCode = project.uiSourceCodeForURL(headersFilePath);\n      if (!headersFileUiSourceCode) {\n        continue;\n      }\n      this.#headerOverridesForEventDispatch.add(headersFileUiSourceCode);\n      void this.#eventDispatchThrottler.schedule(this.#dispatchRequestsForHeaderOverridesFileChanged.bind(this));\n    }\n  }\n\n  #dispatchRequestsForHeaderOverridesFileChanged(): Promise<void> {\n    for (const headersFileUiSourceCode of this.#headerOverridesForEventDispatch) {\n      this.dispatchEventToListeners(Events.RequestsForHeaderOverridesFileChanged, headersFileUiSourceCode);\n    }\n    this.#headerOverridesForEventDispatch.clear();\n    return Promise.resolve();\n  }\n\n  hasMatchingNetworkUISourceCodeForHeaderOverridesFile(headersFile: Workspace.UISourceCode.UISourceCode): boolean {\n    const relativePathParts = FileSystemWorkspaceBinding.relativePath(headersFile);\n    const relativePath = Common.ParsedURL.ParsedURL.slice(\n        Common.ParsedURL.ParsedURL.join(relativePathParts, '/'), 0, -HEADERS_FILENAME.length);\n\n    for (const encodedNetworkPath of this.networkUISourceCodeForEncodedPath.keys()) {\n      if (encodedNetworkPath.startsWith(relativePath)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  private async filesystemUISourceCodeRemoved(uiSourceCode: Workspace.UISourceCode.UISourceCode): Promise<void> {\n    if (uiSourceCode.project() !== this.projectInternal) {\n      return;\n    }\n    this.updateInterceptionPatterns();\n    this.originalResponseContentPromises.delete(uiSourceCode);\n    await this.#unbind(uiSourceCode);\n  }\n\n  async setProject(project: Workspace.Workspace.Project|null): Promise<void> {\n    if (project === this.projectInternal) {\n      return;\n    }\n\n    if (this.projectInternal) {\n      await Promise.all([...this.projectInternal.uiSourceCodes()].map(\n          uiSourceCode => this.filesystemUISourceCodeRemoved(uiSourceCode)));\n    }\n\n    this.projectInternal = project;\n\n    if (this.projectInternal) {\n      await Promise.all([...this.projectInternal.uiSourceCodes()].map(\n          uiSourceCode => this.filesystemUISourceCodeAdded(uiSourceCode)));\n    }\n\n    await this.updateActiveProject();\n    this.dispatchEventToListeners(Events.ProjectChanged, this.projectInternal);\n  }\n\n  private async onProjectAdded(project: Workspace.Workspace.Project): Promise<void> {\n    if (project.type() !== Workspace.Workspace.projectTypes.FileSystem ||\n        FileSystemWorkspaceBinding.fileSystemType(project) !== 'overrides') {\n      return;\n    }\n    const fileSystemPath = FileSystemWorkspaceBinding.fileSystemPath(project.id() as Platform.DevToolsPath.UrlString);\n    if (!fileSystemPath) {\n      return;\n    }\n    if (this.projectInternal) {\n      this.projectInternal.remove();\n    }\n\n    await this.setProject(project);\n  }\n\n  private async onProjectRemoved(project: Workspace.Workspace.Project): Promise<void> {\n    for (const uiSourceCode of project.uiSourceCodes()) {\n      await this.networkUISourceCodeRemoved(uiSourceCode);\n    }\n    if (project === this.projectInternal) {\n      await this.setProject(null);\n    }\n  }\n\n  mergeHeaders(baseHeaders: Protocol.Fetch.HeaderEntry[], overrideHeaders: Protocol.Fetch.HeaderEntry[]):\n      Protocol.Fetch.HeaderEntry[] {\n    const headerMap = new Platform.MapUtilities.Multimap<string, string>();\n    for (const {name, value} of overrideHeaders) {\n      if (name.toLowerCase() !== 'set-cookie') {\n        headerMap.set(name.toLowerCase(), value);\n      }\n    }\n\n    const overriddenHeaderNames = new Set(headerMap.keysArray());\n    for (const {name, value} of baseHeaders) {\n      const lowerCaseName = name.toLowerCase();\n      if (!overriddenHeaderNames.has(lowerCaseName) && lowerCaseName !== 'set-cookie') {\n        headerMap.set(lowerCaseName, value);\n      }\n    }\n\n    const result: Protocol.Fetch.HeaderEntry[] = [];\n    for (const headerName of headerMap.keysArray()) {\n      for (const headerValue of headerMap.get(headerName)) {\n        result.push({name: headerName, value: headerValue});\n      }\n    }\n\n    const originalSetCookieHeaders = baseHeaders.filter(header => header.name.toLowerCase() === 'set-cookie') || [];\n    const setCookieHeadersFromOverrides = overrideHeaders.filter(header => header.name.toLowerCase() === 'set-cookie');\n    const mergedHeaders = SDK.NetworkManager.InterceptedRequest.mergeSetCookieHeaders(\n        originalSetCookieHeaders, setCookieHeadersFromOverrides);\n    result.push(...mergedHeaders);\n\n    return result;\n  }\n\n  #maybeMergeHeadersForPathSegment(\n      path: Platform.DevToolsPath.EncodedPathString, requestUrl: Platform.DevToolsPath.UrlString,\n      headers: Protocol.Fetch.HeaderEntry[]): Protocol.Fetch.HeaderEntry[] {\n    const headerOverrides = this.#headerOverridesMap.get(path) || [];\n    for (const headerOverride of headerOverrides) {\n      const requestUrlWithLongUrlReplacement = this.decodeLocalPathToUrlPath(this.rawPathFromUrl(requestUrl));\n      if (headerOverride.applyToRegex.test(requestUrlWithLongUrlReplacement)) {\n        headers = this.mergeHeaders(headers, headerOverride.headers);\n      }\n    }\n    return headers;\n  }\n\n  handleHeaderInterception(interceptedRequest: SDK.NetworkManager.InterceptedRequest): Protocol.Fetch.HeaderEntry[] {\n    let result: Protocol.Fetch.HeaderEntry[] = interceptedRequest.responseHeaders || [];\n    // 'rawPathFromUrl()''s return value is already (singly-)encoded, so we can\n    // treat it as an 'EncodedPathString' here.\n    const urlSegments =\n        this.rawPathFromUrl(interceptedRequest.request.url as Platform.DevToolsPath.UrlString).split('/') as\n        Platform.DevToolsPath.EncodedPathString[];\n    // Traverse the hierarchy of overrides from the most general to the most\n    // specific. Check with empty string first to match overrides applying to\n    // all domains.\n    // e.g. '', 'www.example.com/', 'www.example.com/path/', ...\n    let path = Platform.DevToolsPath.EmptyEncodedPathString;\n    result = this.#maybeMergeHeadersForPathSegment(\n        path, interceptedRequest.request.url as Platform.DevToolsPath.UrlString, result);\n    for (const segment of urlSegments) {\n      path = Common.ParsedURL.ParsedURL.concatenate(path, segment, '/');\n      result = this.#maybeMergeHeadersForPathSegment(\n          path, interceptedRequest.request.url as Platform.DevToolsPath.UrlString, result);\n    }\n    return result;\n  }\n\n  private async interceptionHandler(interceptedRequest: SDK.NetworkManager.InterceptedRequest): Promise<void> {\n    const method = interceptedRequest.request.method;\n    if (!this.activeInternal || (method === 'OPTIONS')) {\n      return;\n    }\n    const proj = this.projectInternal as FileSystem;\n    const path = this.fileUrlFromNetworkUrl(interceptedRequest.request.url as Platform.DevToolsPath.UrlString);\n    const fileSystemUISourceCode = proj.uiSourceCodeForURL(path);\n    let responseHeaders = this.handleHeaderInterception(interceptedRequest);\n    if (!fileSystemUISourceCode && !responseHeaders.length) {\n      return;\n    }\n    if (!responseHeaders.length) {\n      responseHeaders = interceptedRequest.responseHeaders || [];\n    }\n\n    let {mimeType} = interceptedRequest.getMimeTypeAndCharset();\n    if (!mimeType) {\n      const expectedResourceType =\n          Common.ResourceType.resourceTypes[interceptedRequest.resourceType] || Common.ResourceType.resourceTypes.Other;\n      mimeType = fileSystemUISourceCode?.mimeType() || '';\n      if (Common.ResourceType.ResourceType.fromMimeType(mimeType) !== expectedResourceType) {\n        mimeType = expectedResourceType.canonicalMimeType();\n      }\n    }\n\n    if (fileSystemUISourceCode) {\n      this.originalResponseContentPromises.set(\n          fileSystemUISourceCode, interceptedRequest.responseBody().then(response => {\n            if (TextUtils.ContentData.ContentData.isError(response) || !response.isTextContent) {\n              return null;\n            }\n            return response.text;\n          }));\n\n      const project = fileSystemUISourceCode.project() as FileSystem;\n      const blob = await project.requestFileBlob(fileSystemUISourceCode);\n      if (blob) {\n        void interceptedRequest.continueRequestWithContent(\n            new Blob([blob], {type: mimeType}), /* encoded */ false, responseHeaders, /* isBodyOverridden */ true);\n      }\n    } else if (interceptedRequest.isRedirect()) {\n      void interceptedRequest.continueRequestWithContent(\n          new Blob([], {type: mimeType}), /* encoded */ true, responseHeaders, /* isBodyOverridden */ false);\n    } else {\n      const responseBody = await interceptedRequest.responseBody();\n      if (!TextUtils.ContentData.ContentData.isError(responseBody)) {\n        const content = responseBody.isTextContent ? responseBody.text : responseBody.base64;\n        void interceptedRequest.continueRequestWithContent(\n            new Blob([content], {type: mimeType}), /* encoded */ !responseBody.isTextContent, responseHeaders,\n            /* isBodyOverridden */ false);\n      }\n    }\n  }\n}\n\nconst RESERVED_FILENAMES = new Set<string>([\n  'con',  'prn',  'aux',  'nul',  'com1', 'com2', 'com3', 'com4', 'com5', 'com6', 'com7',\n  'com8', 'com9', 'lpt1', 'lpt2', 'lpt3', 'lpt4', 'lpt5', 'lpt6', 'lpt7', 'lpt8', 'lpt9',\n]);\n\nexport const HEADERS_FILENAME = '.headers';\n\nexport const enum Events {\n  ProjectChanged = 'ProjectChanged',\n  RequestsForHeaderOverridesFileChanged = 'RequestsForHeaderOverridesFileChanged',\n  LocalOverridesProjectUpdated = 'LocalOverridesProjectUpdated',\n}\n\nexport type EventTypes = {\n  [Events.ProjectChanged]: Workspace.Workspace.Project|null,\n  [Events.RequestsForHeaderOverridesFileChanged]: Workspace.UISourceCode.UISourceCode,\n  [Events.LocalOverridesProjectUpdated]: boolean,\n};\n\nexport interface HeaderOverride {\n  applyTo: string;\n  headers: Protocol.Fetch.HeaderEntry[];\n}\n\ninterface HeaderOverrideWithRegex {\n  applyToRegex: RegExp;\n  headers: Protocol.Fetch.HeaderEntry[];\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function isHeaderOverride(arg: any): arg is HeaderOverride {\n  if (!(arg && typeof arg.applyTo === 'string' && arg.headers && arg.headers.length && Array.isArray(arg.headers))) {\n    return false;\n  }\n  return arg.headers.every(\n      (header: Protocol.Fetch.HeaderEntry) => typeof header.name === 'string' && typeof header.value === 'string');\n}\n\nexport function escapeRegex(pattern: string): string {\n  return Platform.StringUtilities.escapeCharacters(pattern, '[]{}()\\\\.^$+|-,?').replaceAll('*', '.*');\n}\n\nexport function extractDirectoryIndex(pattern: string): {head: string, tail?: string} {\n  const lastSlash = pattern.lastIndexOf('/');\n  const tail = lastSlash >= 0 ? pattern.slice(lastSlash + 1) : pattern;\n  const head = lastSlash >= 0 ? pattern.slice(0, lastSlash + 1) : '';\n  const regex = new RegExp('^' + escapeRegex(tail) + '$');\n  if (tail !== '*' && (regex.test('index.html') || regex.test('index.htm') || regex.test('index.php'))) {\n    return {head, tail};\n  }\n  return {head: pattern};\n}\n"]}