{"version":3,"file":"DebuggerLanguagePlugins.test.js","sourceRoot":"","sources":["../../../../../../front_end/models/bindings/DebuggerLanguagePlugins.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {type Chrome} from '../../../extension-api/ExtensionAPI.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport {createTarget} from '../../testing/EnvironmentHelpers.js';\nimport {TestPlugin} from '../../testing/LanguagePluginHelpers.js';\nimport {describeWithMockConnection} from '../../testing/MockConnection.js';\nimport * as Workspace from '../workspace/workspace.js';\n\nimport * as Bindings from './bindings.js';\n\ndescribe('DebuggerLanguagePlugins', () => {\n  describe('ExtensionRemoteObject', () => {\n    describe('isLinearMemoryInspectable', () => {\n      it('yields false when the extension object has no linear memory address', () => {\n        const callFrame = sinon.createStubInstance(SDK.DebuggerModel.CallFrame);\n        const extensionObject: Chrome.DevTools.RemoteObject = {\n          type: 'object',\n          hasChildren: false,\n        };\n        const plugin = new TestPlugin('TestPlugin');\n        const remoteObject =\n            new Bindings.DebuggerLanguagePlugins.ExtensionRemoteObject(callFrame, extensionObject, plugin);\n        assert.isFalse(remoteObject.isLinearMemoryInspectable());\n      });\n\n      it('yields true when the extension object has a linear memory address', () => {\n        const callFrame = sinon.createStubInstance(SDK.DebuggerModel.CallFrame);\n        const extensionObject: Chrome.DevTools.RemoteObject = {\n          type: 'object',\n          linearMemoryAddress: 42,\n          hasChildren: false,\n        };\n        const plugin = new TestPlugin('TestPlugin');\n        const remoteObject =\n            new Bindings.DebuggerLanguagePlugins.ExtensionRemoteObject(callFrame, extensionObject, plugin);\n        assert.isTrue(remoteObject.isLinearMemoryInspectable());\n      });\n    });\n  });\n\n  describe('DebuggerLanguagePluginManager', () => {\n    describeWithMockConnection('getFunctionInfo', () => {\n      let target: SDK.Target.Target;\n      let pluginManager: Bindings.DebuggerLanguagePlugins.DebuggerLanguagePluginManager;\n\n      const MISSING_DWO_FILE = 'test.dwo';\n      const MISSING_DEBUG_FILES: SDK.DebuggerModel.MissingDebugFiles = {\n        resourceUrl: MISSING_DWO_FILE as Platform.DevToolsPath.UrlString,\n        initiator: {\n          target: null,\n          frameId: null,\n          extensionId: 'chrome-extension-id',\n          initiatorUrl: 'chrome-extension-id' as Platform.DevToolsPath.UrlString,\n        },\n      };\n      const FUNCTION_NAME = 'test';\n\n      class Plugin extends TestPlugin {\n        override getFunctionInfo(_rawLocation: Chrome.DevTools.RawLocation):\n            Promise<{frames: Chrome.DevTools.FunctionInfo[], missingSymbolFiles: string[]}|\n                    {frames: Chrome.DevTools.FunctionInfo[]}|{missingSymbolFiles: string[]}> {\n          return Promise.resolve({missingSymbolFiles: []});\n        }\n        override handleScript(_: SDK.Script.Script) {\n          return true;\n        }\n        override addRawModule(_rawModuleId: string, _symbolsURL: string, _rawModule: Chrome.DevTools.RawModule):\n            Promise<string[]> {\n          return Promise.resolve(['https://script-host/script.js']);\n        }\n      }\n\n      beforeEach(() => {\n        target = createTarget();\n        const workspace = Workspace.Workspace.WorkspaceImpl.instance();\n        const targetManager = target.targetManager();\n        const resourceMapping = new Bindings.ResourceMapping.ResourceMapping(targetManager, workspace);\n        const debuggerWorkspaceBinding = Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.instance(\n            {forceNew: true, resourceMapping, targetManager});\n        pluginManager = debuggerWorkspaceBinding.pluginManager;\n      });\n\n      function createAndRegisterScript(): SDK.Script.Script {\n        const debuggerModel = target.model(SDK.DebuggerModel.DebuggerModel) as SDK.DebuggerModel.DebuggerModel;\n        const scriptUrl = 'https://script-host/script.js' as Platform.DevToolsPath.UrlString;\n        return debuggerModel.parsedScriptSource(\n            '0' as Protocol.Runtime.ScriptId, scriptUrl, 0, 0, 0, 0, 0, '', null, false, undefined, false, false, 0,\n            null, null, null, null, null, null);\n      }\n\n      it('correctly processes missing debug info if available', async () => {\n        const plugin = new Plugin('TestPlugin');\n        sinon.stub(plugin, 'getFunctionInfo').returns(Promise.resolve({missingSymbolFiles: [MISSING_DWO_FILE]}));\n        pluginManager.addPlugin(plugin);\n\n        const script = createAndRegisterScript();\n\n        const location = sinon.createStubInstance(SDK.DebuggerModel.Location);\n        const result = await pluginManager.getFunctionInfo(script, location);\n        Platform.assertNotNullOrUndefined(result);\n        assert.deepStrictEqual(result, {missingSymbolFiles: [MISSING_DEBUG_FILES]});\n      });\n\n      it('correctly returns frames if available', async () => {\n        const plugin = new Plugin('TestPlugin');\n        sinon.stub(plugin, 'getFunctionInfo').returns(Promise.resolve({frames: [{name: FUNCTION_NAME}]}));\n        pluginManager.addPlugin(plugin);\n\n        const script = createAndRegisterScript();\n        const location = sinon.createStubInstance(SDK.DebuggerModel.Location);\n\n        const result = await pluginManager.getFunctionInfo(script, location);\n        Platform.assertNotNullOrUndefined(result);\n        assert.deepStrictEqual(result, {frames: [{name: FUNCTION_NAME}]});\n      });\n\n      it('correctly returns frames and missing debug info if both are available', async () => {\n        const plugin = new Plugin('TestPlugin');\n        sinon.stub(plugin, 'getFunctionInfo')\n            .returns(Promise.resolve({frames: [{name: FUNCTION_NAME}], missingSymbolFiles: [MISSING_DWO_FILE]}));\n        pluginManager.addPlugin(plugin);\n\n        const script = createAndRegisterScript();\n        const location = sinon.createStubInstance(SDK.DebuggerModel.Location);\n\n        const result = await pluginManager.getFunctionInfo(script, location);\n        Platform.assertNotNullOrUndefined(result);\n        assert.deepStrictEqual(result, {frames: [{name: FUNCTION_NAME}], missingSymbolFiles: [MISSING_DEBUG_FILES]});\n      });\n    });\n  });\n});\n"]}