{"version":3,"file":"IgnoreListManager.js","sourceRoot":"","sources":["../../../../../../front_end/models/bindings/IgnoreListManager.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2014 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Workspace from '../workspace/workspace.js';\n\nimport {type DebuggerWorkspaceBinding} from './DebuggerWorkspaceBinding.js';\n\nconst UIStrings = {\n  /**\n   *@description Text to stop preventing the debugger from stepping into library code\n   */\n  removeFromIgnoreList: 'Remove from ignore list',\n  /**\n   *@description Text for scripts that should not be stepped into when debugging\n   */\n  addScriptToIgnoreList: 'Add script to ignore list',\n  /**\n   *@description Text for directories whose scripts should not be stepped into when debugging\n   */\n  addDirectoryToIgnoreList: 'Add directory to ignore list',\n  /**\n   *@description A context menu item in the Call Stack Sidebar Pane of the Sources panel\n   */\n  addAllContentScriptsToIgnoreList: 'Add all extension scripts to ignore list',\n  /**\n   *@description A context menu item in the Call Stack Sidebar Pane of the Sources panel\n   */\n  addAllThirdPartyScriptsToIgnoreList: 'Add all third-party scripts to ignore list',\n};\n\nconst str_ = i18n.i18n.registerUIStrings('models/bindings/IgnoreListManager.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nlet ignoreListManagerInstance: IgnoreListManager|undefined;\n\nexport type IgnoreListGeneralRules = {\n  isContentScript?: boolean,\n  isKnownThirdParty?: boolean,\n  isCurrentlyIgnoreListed?: boolean,\n};\n\nexport class IgnoreListManager implements SDK.TargetManager.SDKModelObserver<SDK.DebuggerModel.DebuggerModel> {\n  readonly #debuggerWorkspaceBinding: DebuggerWorkspaceBinding;\n  readonly #listeners: Set<() => void>;\n  readonly #isIgnoreListedURLCache: Map<string, boolean>;\n\n  private constructor(debuggerWorkspaceBinding: DebuggerWorkspaceBinding) {\n    this.#debuggerWorkspaceBinding = debuggerWorkspaceBinding;\n\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.DebuggerModel.DebuggerModel, SDK.DebuggerModel.Events.GlobalObjectCleared,\n        this.clearCacheIfNeeded.bind(this), this);\n    Common.Settings.Settings.instance()\n        .moduleSetting('skip-stack-frames-pattern')\n        .addChangeListener(this.patternChanged.bind(this));\n    Common.Settings.Settings.instance()\n        .moduleSetting('skip-content-scripts')\n        .addChangeListener(this.patternChanged.bind(this));\n    Common.Settings.Settings.instance()\n        .moduleSetting('automatically-ignore-list-known-third-party-scripts')\n        .addChangeListener(this.patternChanged.bind(this));\n    Common.Settings.Settings.instance()\n        .moduleSetting('enable-ignore-listing')\n        .addChangeListener(this.patternChanged.bind(this));\n\n    this.#listeners = new Set();\n\n    this.#isIgnoreListedURLCache = new Map();\n\n    SDK.TargetManager.TargetManager.instance().observeModels(SDK.DebuggerModel.DebuggerModel, this);\n  }\n\n  static instance(opts: {\n    forceNew: boolean|null,\n    debuggerWorkspaceBinding: DebuggerWorkspaceBinding|null,\n  } = {forceNew: null, debuggerWorkspaceBinding: null}): IgnoreListManager {\n    const {forceNew, debuggerWorkspaceBinding} = opts;\n    if (!ignoreListManagerInstance || forceNew) {\n      if (!debuggerWorkspaceBinding) {\n        throw new Error(`Unable to create settings: debuggerWorkspaceBinding must be provided: ${new Error().stack}`);\n      }\n\n      ignoreListManagerInstance = new IgnoreListManager(debuggerWorkspaceBinding);\n    }\n\n    return ignoreListManagerInstance;\n  }\n\n  static removeInstance(): void {\n    ignoreListManagerInstance = undefined;\n  }\n\n  addChangeListener(listener: () => void): void {\n    this.#listeners.add(listener);\n  }\n\n  removeChangeListener(listener: () => void): void {\n    this.#listeners.delete(listener);\n  }\n\n  modelAdded(debuggerModel: SDK.DebuggerModel.DebuggerModel): void {\n    void this.setIgnoreListPatterns(debuggerModel);\n    const sourceMapManager = debuggerModel.sourceMapManager();\n    sourceMapManager.addEventListener(SDK.SourceMapManager.Events.SourceMapAttached, this.sourceMapAttached, this);\n    sourceMapManager.addEventListener(SDK.SourceMapManager.Events.SourceMapDetached, this.sourceMapDetached, this);\n  }\n\n  modelRemoved(debuggerModel: SDK.DebuggerModel.DebuggerModel): void {\n    this.clearCacheIfNeeded();\n    const sourceMapManager = debuggerModel.sourceMapManager();\n    sourceMapManager.removeEventListener(SDK.SourceMapManager.Events.SourceMapAttached, this.sourceMapAttached, this);\n    sourceMapManager.removeEventListener(SDK.SourceMapManager.Events.SourceMapDetached, this.sourceMapDetached, this);\n  }\n\n  private clearCacheIfNeeded(): void {\n    if (this.#isIgnoreListedURLCache.size > 1024) {\n      this.#isIgnoreListedURLCache.clear();\n    }\n  }\n\n  private getSkipStackFramesPatternSetting(): Common.Settings.RegExpSetting {\n    return Common.Settings.Settings.instance().moduleSetting('skip-stack-frames-pattern') as\n        Common.Settings.RegExpSetting;\n  }\n\n  private setIgnoreListPatterns(debuggerModel: SDK.DebuggerModel.DebuggerModel): Promise<boolean> {\n    const regexPatterns = this.enableIgnoreListing ? this.getSkipStackFramesPatternSetting().getAsArray() : [];\n    const patterns = ([] as string[]);\n    for (const item of regexPatterns) {\n      if (!item.disabled && item.pattern) {\n        patterns.push(item.pattern);\n      }\n    }\n    return debuggerModel.setBlackboxPatterns(patterns);\n  }\n\n  private getGeneralRulesForUISourceCode(uiSourceCode: Workspace.UISourceCode.UISourceCode): IgnoreListGeneralRules {\n    const projectType = uiSourceCode.project().type();\n    const isContentScript = projectType === Workspace.Workspace.projectTypes.ContentScripts;\n    const isKnownThirdParty = uiSourceCode.isKnownThirdParty();\n    return {isContentScript, isKnownThirdParty};\n  }\n\n  isUserOrSourceMapIgnoreListedUISourceCode(uiSourceCode: Workspace.UISourceCode.UISourceCode): boolean {\n    if (uiSourceCode.isUnconditionallyIgnoreListed()) {\n      return true;\n    }\n    const url = this.uiSourceCodeURL(uiSourceCode);\n    return this.isUserIgnoreListedURL(url, this.getGeneralRulesForUISourceCode(uiSourceCode));\n  }\n\n  isUserIgnoreListedURL(url: Platform.DevToolsPath.UrlString|null, options?: IgnoreListGeneralRules): boolean {\n    if (!this.enableIgnoreListing) {\n      return false;\n    }\n    if (options?.isContentScript && this.skipContentScripts) {\n      return true;\n    }\n    if (options?.isKnownThirdParty && this.automaticallyIgnoreListKnownThirdPartyScripts) {\n      return true;\n    }\n    if (!url) {\n      return false;\n    }\n    if (this.#isIgnoreListedURLCache.has(url)) {\n      return Boolean(this.#isIgnoreListedURLCache.get(url));\n    }\n    const regex = this.getSkipStackFramesPatternSetting().asRegExp();\n    const isIgnoreListed = (regex && regex.test(url)) || false;\n    this.#isIgnoreListedURLCache.set(url, isIgnoreListed);\n    return isIgnoreListed;\n  }\n\n  private sourceMapAttached(\n      event: Common.EventTarget.EventTargetEvent<{client: SDK.Script.Script, sourceMap: SDK.SourceMap.SourceMap}>):\n      void {\n    const script = event.data.client;\n    const sourceMap = event.data.sourceMap;\n    void this.updateScriptRanges(script, sourceMap);\n  }\n\n  private sourceMapDetached(\n      event: Common.EventTarget.EventTargetEvent<{client: SDK.Script.Script, sourceMap: SDK.SourceMap.SourceMap}>):\n      void {\n    const script = event.data.client;\n    void this.updateScriptRanges(script, undefined);\n  }\n\n  private async updateScriptRanges(script: SDK.Script.Script, sourceMap: SDK.SourceMap.SourceMap|undefined):\n      Promise<void> {\n    let hasIgnoreListedMappings = false;\n    if (!IgnoreListManager.instance().isUserIgnoreListedURL(\n            script.sourceURL, {isContentScript: script.isContentScript()})) {\n      hasIgnoreListedMappings =\n          sourceMap?.sourceURLs().some(\n              url => this.isUserIgnoreListedURL(url, {isKnownThirdParty: sourceMap.hasIgnoreListHint(url)})) ??\n          false;\n    }\n    if (!hasIgnoreListedMappings) {\n      if (scriptToRange.get(script) && await script.setBlackboxedRanges([])) {\n        scriptToRange.delete(script);\n      }\n      await this.#debuggerWorkspaceBinding.updateLocations(script);\n      return;\n    }\n\n    if (!sourceMap) {\n      return;\n    }\n\n    const newRanges =\n        sourceMap\n            .findRanges(\n                srcURL => this.isUserIgnoreListedURL(srcURL, {isKnownThirdParty: sourceMap.hasIgnoreListHint(srcURL)}),\n                {isStartMatching: true})\n            .flatMap(range => [range.start, range.end]);\n\n    const oldRanges = scriptToRange.get(script) || [];\n    if (!isEqual(oldRanges, newRanges) && await script.setBlackboxedRanges(newRanges)) {\n      scriptToRange.set(script, newRanges);\n    }\n    void this.#debuggerWorkspaceBinding.updateLocations(script);\n\n    function isEqual(rangesA: SourceRange[], rangesB: SourceRange[]): boolean {\n      if (rangesA.length !== rangesB.length) {\n        return false;\n      }\n      for (let i = 0; i < rangesA.length; ++i) {\n        if (rangesA[i].lineNumber !== rangesB[i].lineNumber || rangesA[i].columnNumber !== rangesB[i].columnNumber) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }\n\n  private uiSourceCodeURL(uiSourceCode: Workspace.UISourceCode.UISourceCode): Platform.DevToolsPath.UrlString|null {\n    return uiSourceCode.project().type() === Workspace.Workspace.projectTypes.Debugger ? null : uiSourceCode.url();\n  }\n\n  canIgnoreListUISourceCode(uiSourceCode: Workspace.UISourceCode.UISourceCode): boolean {\n    const url = this.uiSourceCodeURL(uiSourceCode);\n    return url ? Boolean(this.urlToRegExpString(url)) : false;\n  }\n\n  ignoreListUISourceCode(uiSourceCode: Workspace.UISourceCode.UISourceCode): void {\n    const url = this.uiSourceCodeURL(uiSourceCode);\n    if (url) {\n      this.ignoreListURL(url);\n    }\n  }\n\n  unIgnoreListUISourceCode(uiSourceCode: Workspace.UISourceCode.UISourceCode): void {\n    this.unIgnoreListURL(this.uiSourceCodeURL(uiSourceCode), this.getGeneralRulesForUISourceCode(uiSourceCode));\n  }\n\n  get enableIgnoreListing(): boolean {\n    return Common.Settings.Settings.instance().moduleSetting('enable-ignore-listing').get();\n  }\n\n  set enableIgnoreListing(value: boolean) {\n    Common.Settings.Settings.instance().moduleSetting('enable-ignore-listing').set(value);\n  }\n\n  get skipContentScripts(): boolean {\n    return this.enableIgnoreListing && Common.Settings.Settings.instance().moduleSetting('skip-content-scripts').get();\n  }\n\n  get automaticallyIgnoreListKnownThirdPartyScripts(): boolean {\n    return this.enableIgnoreListing &&\n        Common.Settings.Settings.instance().moduleSetting('automatically-ignore-list-known-third-party-scripts').get();\n  }\n\n  ignoreListContentScripts(): void {\n    if (!this.enableIgnoreListing) {\n      this.enableIgnoreListing = true;\n    }\n    Common.Settings.Settings.instance().moduleSetting('skip-content-scripts').set(true);\n  }\n\n  unIgnoreListContentScripts(): void {\n    Common.Settings.Settings.instance().moduleSetting('skip-content-scripts').set(false);\n  }\n\n  ignoreListThirdParty(): void {\n    if (!this.enableIgnoreListing) {\n      this.enableIgnoreListing = true;\n    }\n    Common.Settings.Settings.instance().moduleSetting('automatically-ignore-list-known-third-party-scripts').set(true);\n  }\n\n  unIgnoreListThirdParty(): void {\n    Common.Settings.Settings.instance().moduleSetting('automatically-ignore-list-known-third-party-scripts').set(false);\n  }\n\n  ignoreListURL(url: Platform.DevToolsPath.UrlString): void {\n    const regexValue = this.urlToRegExpString(url);\n    if (!regexValue) {\n      return;\n    }\n    this.ignoreListRegex(regexValue, url);\n  }\n\n  private ignoreListRegex(regexValue: string, disabledForUrl?: Platform.DevToolsPath.UrlString): void {\n    const regexPatterns = this.getSkipStackFramesPatternSetting().getAsArray();\n\n    let found = false;\n    for (let i = 0; i < regexPatterns.length; ++i) {\n      const item = regexPatterns[i];\n      if (item.pattern === regexValue || (disabledForUrl && item.disabledForUrl === disabledForUrl)) {\n        item.disabled = false;\n        item.disabledForUrl = undefined;\n        found = true;\n      }\n    }\n    if (!found) {\n      regexPatterns.push({pattern: regexValue, disabled: false});\n    }\n    if (!this.enableIgnoreListing) {\n      this.enableIgnoreListing = true;\n    }\n    this.getSkipStackFramesPatternSetting().setAsArray(regexPatterns);\n  }\n\n  unIgnoreListURL(url: Platform.DevToolsPath.UrlString|null, options?: IgnoreListGeneralRules): void {\n    if (options?.isContentScript) {\n      this.unIgnoreListContentScripts();\n    }\n\n    if (options?.isKnownThirdParty) {\n      this.unIgnoreListThirdParty();\n    }\n\n    if (!url) {\n      return;\n    }\n\n    let regexPatterns = this.getSkipStackFramesPatternSetting().getAsArray();\n    const regexValue = IgnoreListManager.instance().urlToRegExpString(url);\n    if (!regexValue) {\n      return;\n    }\n\n    regexPatterns = regexPatterns.filter(function(item) {\n      return item.pattern !== regexValue;\n    });\n    for (let i = 0; i < regexPatterns.length; ++i) {\n      const item = regexPatterns[i];\n      if (item.disabled) {\n        continue;\n      }\n      try {\n        const regex = new RegExp(item.pattern);\n        if (regex.test(url)) {\n          item.disabled = true;\n          item.disabledForUrl = url;\n        }\n      } catch (e) {\n      }\n    }\n    this.getSkipStackFramesPatternSetting().setAsArray(regexPatterns);\n  }\n\n  private removeIgnoreListPattern(regexValue: string): void {\n    let regexPatterns = this.getSkipStackFramesPatternSetting().getAsArray();\n    regexPatterns = regexPatterns.filter(function(item) {\n      return item.pattern !== regexValue;\n    });\n    this.getSkipStackFramesPatternSetting().setAsArray(regexPatterns);\n  }\n\n  private ignoreListHasPattern(regexValue: string, enabledOnly: boolean): boolean {\n    const regexPatterns = this.getSkipStackFramesPatternSetting().getAsArray();\n    return regexPatterns.some(item => !(enabledOnly && item.disabled) && item.pattern === regexValue);\n  }\n\n  private async patternChanged(): Promise<void> {\n    this.#isIgnoreListedURLCache.clear();\n\n    const promises: Promise<unknown>[] = [];\n    for (const debuggerModel of SDK.TargetManager.TargetManager.instance().models(SDK.DebuggerModel.DebuggerModel)) {\n      promises.push(this.setIgnoreListPatterns(debuggerModel));\n      const sourceMapManager = debuggerModel.sourceMapManager();\n      for (const script of debuggerModel.scripts()) {\n        promises.push(this.updateScriptRanges(script, sourceMapManager.sourceMapForClient(script)));\n      }\n    }\n    await Promise.all(promises);\n    const listeners = Array.from(this.#listeners);\n    for (const listener of listeners) {\n      listener();\n    }\n    this.patternChangeFinishedForTests();\n  }\n\n  private patternChangeFinishedForTests(): void {\n    // This method is sniffed in tests.\n  }\n\n  private urlToRegExpString(url: Platform.DevToolsPath.UrlString): string {\n    const parsedURL = new Common.ParsedURL.ParsedURL(url);\n    if (parsedURL.isAboutBlank() || parsedURL.isDataURL()) {\n      return '';\n    }\n    if (!parsedURL.isValid) {\n      return '^' + Platform.StringUtilities.escapeForRegExp(url) + '$';\n    }\n    let name: string = parsedURL.lastPathComponent;\n    if (name) {\n      name = '/' + name;\n    } else if (parsedURL.folderPathComponents) {\n      name = parsedURL.folderPathComponents + '/';\n    }\n    if (!name) {\n      name = parsedURL.host;\n    }\n    if (!name) {\n      return '';\n    }\n    const scheme = parsedURL.scheme;\n    let prefix = '';\n    if (scheme && scheme !== 'http' && scheme !== 'https') {\n      prefix = '^' + scheme + '://';\n      if (scheme === 'chrome-extension') {\n        prefix += parsedURL.host + '\\\\b';\n      }\n      prefix += '.*';\n    }\n    return prefix + Platform.StringUtilities.escapeForRegExp(name) + (url.endsWith(name) ? '$' : '\\\\b');\n  }\n\n  getIgnoreListURLContextMenuItems(uiSourceCode: Workspace.UISourceCode.UISourceCode):\n      Array<{text: string, callback: () => void, jslogContext: string}> {\n    if (uiSourceCode.project().type() === Workspace.Workspace.projectTypes.FileSystem) {\n      return [];\n    }\n\n    const menuItems: Array<{text: string, callback: () => void, jslogContext: string}> = [];\n    const canIgnoreList = this.canIgnoreListUISourceCode(uiSourceCode);\n    const isIgnoreListed = this.isUserOrSourceMapIgnoreListedUISourceCode(uiSourceCode);\n    const {isContentScript, isKnownThirdParty} = this.getGeneralRulesForUISourceCode(uiSourceCode);\n\n    if (isIgnoreListed) {\n      if (canIgnoreList || isContentScript || isKnownThirdParty) {\n        menuItems.push({\n          text: i18nString(UIStrings.removeFromIgnoreList),\n          callback: this.unIgnoreListUISourceCode.bind(this, uiSourceCode),\n          jslogContext: 'remove-script-from-ignorelist',\n        });\n      }\n    } else {\n      if (canIgnoreList) {\n        menuItems.push({\n          text: i18nString(UIStrings.addScriptToIgnoreList),\n          callback: this.ignoreListUISourceCode.bind(this, uiSourceCode),\n          jslogContext: 'add-script-to-ignorelist',\n        });\n      }\n      menuItems.push(...this.getIgnoreListGeneralContextMenuItems({isContentScript, isKnownThirdParty}));\n    }\n\n    return menuItems;\n  }\n\n  private getIgnoreListGeneralContextMenuItems(options?: IgnoreListGeneralRules):\n      Array<{text: string, callback: () => void, jslogContext: string}> {\n    const menuItems: Array<{text: string, callback: () => void, jslogContext: string}> = [];\n    if (options?.isContentScript) {\n      menuItems.push({\n        text: i18nString(UIStrings.addAllContentScriptsToIgnoreList),\n        callback: this.ignoreListContentScripts.bind(this),\n        jslogContext: 'add-content-scripts-to-ignorelist',\n      });\n    }\n    if (options?.isKnownThirdParty) {\n      menuItems.push({\n        text: i18nString(UIStrings.addAllThirdPartyScriptsToIgnoreList),\n        callback: this.ignoreListThirdParty.bind(this),\n        jslogContext: 'add-3p-scripts-to-ignorelist',\n      });\n    }\n    return menuItems;\n  }\n\n  getIgnoreListFolderContextMenuItems(url: Platform.DevToolsPath.UrlString, options?: IgnoreListGeneralRules):\n      Array<{text: string, callback: () => void, jslogContext: string}> {\n    const menuItems: Array<{text: string, callback: () => void, jslogContext: string}> = [];\n\n    const regexValue = '^' + Platform.StringUtilities.escapeForRegExp(url) + '/';\n    if (this.ignoreListHasPattern(regexValue, true)) {\n      menuItems.push({\n        text: i18nString(UIStrings.removeFromIgnoreList),\n        callback: this.removeIgnoreListPattern.bind(this, regexValue),\n        jslogContext: 'remove-from-ignore-list',\n      });\n    } else if (this.isUserIgnoreListedURL(url, options)) {\n      // This specific url isn't on the ignore list, but there are rules that match it.\n      menuItems.push({\n        text: i18nString(UIStrings.removeFromIgnoreList),\n        callback: this.unIgnoreListURL.bind(this, url, options),\n        jslogContext: 'remove-from-ignore-list',\n      });\n    } else if (!options?.isCurrentlyIgnoreListed) {\n      // Provide options to add to ignore list, unless folder currently displays\n      // as entirely ignored.\n      menuItems.push({\n        text: i18nString(UIStrings.addDirectoryToIgnoreList),\n        callback: this.ignoreListRegex.bind(this, regexValue),\n        jslogContext: 'add-directory-to-ignore-list',\n      });\n      menuItems.push(...this.getIgnoreListGeneralContextMenuItems(options));\n    }\n\n    return menuItems;\n  }\n}\n\nexport interface SourceRange {\n  lineNumber: number;\n  columnNumber: number;\n}\n\nconst scriptToRange = new WeakMap<SDK.Script.Script, SourceRange[]>();\n"]}