{"version":3,"file":"CompilerScriptMapping.js","sourceRoot":"","sources":["../../../../../../front_end/models/bindings/CompilerScriptMapping.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2012 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../core/common/common.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as TextUtils from '../text_utils/text_utils.js';\nimport * as Workspace from '../workspace/workspace.js';\n\nimport {ContentProviderBasedProject} from './ContentProviderBasedProject.js';\n\nimport {type DebuggerSourceMapping, type DebuggerWorkspaceBinding} from './DebuggerWorkspaceBinding.js';\nimport {IgnoreListManager} from './IgnoreListManager.js';\nimport {NetworkProject} from './NetworkProject.js';\n\n/**\n * The `CompilerScriptMapping` maps script entities from source maps to scripts and vice versa.\n * It is part of the {@link DebuggerWorkspaceBinding} and operates on top of the\n * {@link SDK.SourceMapManager.SourceMapManager}.\n *\n * The `CompilerScriptMapping` maintains a list of {@link ContentProviderBasedProject}s, in which it\n * creates the `UISourceCode`s for the source-mapped entities. The mapping is implemented in various\n * layers:\n *\n * - `#sourceMapToProject` holds a mapping of all the attached `SourceMap`s to their respective\n *   `ContentBasedProviderBasedProject`s. When resolving raw to UI locations this is the first\n *   place to check.\n * - `#uiSourceCodeToSourceMaps` maps every `UISourceCode` created herein to the `SourceMap` that\n *   it originated from. This is the authoritative source of information: The `#projects` might\n *   contain `UISourceCode` objects that were created from this `CompilerScriptMapping`, but which\n *   have become stale, and `#uiSourceCodeToSourceMaps` represents these as having no source maps.\n *\n * @see {@link SDK.SourceMap.SourceMap}\n * @see {@link SDK.SourceMapManager.SourceMapManager}\n */\nexport class CompilerScriptMapping implements DebuggerSourceMapping {\n  readonly #sourceMapManager: SDK.SourceMapManager.SourceMapManager<SDK.Script.Script>;\n  readonly #debuggerWorkspaceBinding: DebuggerWorkspaceBinding;\n  readonly #stubUISourceCodes = new Map<SDK.Script.Script, Workspace.UISourceCode.UISourceCode>();\n  readonly #stubProject: ContentProviderBasedProject;\n  readonly #eventListeners: Common.EventTarget.EventDescriptor[];\n  readonly #projects = new Map<string, ContentProviderBasedProject>();\n  readonly #sourceMapToProject = new Map<SDK.SourceMap.SourceMap, ContentProviderBasedProject>();\n  readonly #uiSourceCodeToSourceMaps =\n      new Platform.MapUtilities.Multimap<Workspace.UISourceCode.UISourceCode, SDK.SourceMap.SourceMap>();\n\n  constructor(\n      debuggerModel: SDK.DebuggerModel.DebuggerModel, workspace: Workspace.Workspace.WorkspaceImpl,\n      debuggerWorkspaceBinding: DebuggerWorkspaceBinding) {\n    this.#sourceMapManager = debuggerModel.sourceMapManager();\n    this.#debuggerWorkspaceBinding = debuggerWorkspaceBinding;\n\n    this.#stubProject = new ContentProviderBasedProject(\n        workspace, 'jsSourceMaps:stub:' + debuggerModel.target().id(), Workspace.Workspace.projectTypes.Service, '',\n        true /* isServiceProject */);\n    this.#eventListeners = [\n      this.#sourceMapManager.addEventListener(\n          SDK.SourceMapManager.Events.SourceMapWillAttach, this.sourceMapWillAttach, this),\n      this.#sourceMapManager.addEventListener(\n          SDK.SourceMapManager.Events.SourceMapFailedToAttach, this.sourceMapFailedToAttach, this),\n      this.#sourceMapManager.addEventListener(\n          SDK.SourceMapManager.Events.SourceMapAttached, this.sourceMapAttached, this),\n      this.#sourceMapManager.addEventListener(\n          SDK.SourceMapManager.Events.SourceMapDetached, this.sourceMapDetached, this),\n    ];\n  }\n\n  private addStubUISourceCode(script: SDK.Script.Script): void {\n    const stubUISourceCode = this.#stubProject.addContentProvider(\n        Common.ParsedURL.ParsedURL.concatenate(script.sourceURL, ':sourcemap'),\n        TextUtils.StaticContentProvider.StaticContentProvider.fromString(\n            script.sourceURL, Common.ResourceType.resourceTypes.Script,\n            '\\n\\n\\n\\n\\n// Please wait a bit.\\n// Compiled script is not shown while source map is being loaded!'),\n        'text/javascript');\n    this.#stubUISourceCodes.set(script, stubUISourceCode);\n  }\n\n  private removeStubUISourceCode(script: SDK.Script.Script): void {\n    const uiSourceCode = this.#stubUISourceCodes.get(script);\n    this.#stubUISourceCodes.delete(script);\n    if (uiSourceCode) {\n      this.#stubProject.removeUISourceCode(uiSourceCode.url());\n    }\n  }\n\n  getLocationRangesForSameSourceLocation(rawLocation: SDK.DebuggerModel.Location): SDK.DebuggerModel.LocationRange[] {\n    const debuggerModel = rawLocation.debuggerModel;\n    const script = rawLocation.script();\n    if (!script) {\n      return [];\n    }\n    const sourceMap = this.#sourceMapManager.sourceMapForClient(script);\n    if (!sourceMap) {\n      return [];\n    }\n\n    // Find the source location for the raw location.\n    const {lineNumber, columnNumber} = script.rawLocationToRelativeLocation(rawLocation);\n    const entry = sourceMap.findEntry(lineNumber, columnNumber);\n    if (!entry || !entry.sourceURL) {\n      return [];\n    }\n\n    const project = this.#sourceMapToProject.get(sourceMap);\n    if (!project) {\n      return [];\n    }\n\n    const uiSourceCode = project.uiSourceCodeForURL(entry.sourceURL);\n    if (!uiSourceCode) {\n      return [];\n    }\n\n    // Check that the reverse is also true and we have a binding for this |uiSourceCode|\n    // that is referred to from the |sourceMap| of the |script|.\n    if (!this.#uiSourceCodeToSourceMaps.hasValue(uiSourceCode, sourceMap)) {\n      return [];\n    }\n\n    // Map the source location back to raw location ranges.\n    const ranges = sourceMap.findReverseRanges(entry.sourceURL, entry.sourceLineNumber, entry.sourceColumnNumber);\n    return ranges.map(({startLine, startColumn, endLine, endColumn}) => {\n      const start = script.relativeLocationToRawLocation({lineNumber: startLine, columnNumber: startColumn});\n      const end = script.relativeLocationToRawLocation({lineNumber: endLine, columnNumber: endColumn});\n      return {\n        start: debuggerModel.createRawLocation(script, start.lineNumber, start.columnNumber),\n        end: debuggerModel.createRawLocation(script, end.lineNumber, end.columnNumber),\n      };\n    });\n  }\n\n  uiSourceCodeForURL(url: Platform.DevToolsPath.UrlString, isContentScript: boolean):\n      Workspace.UISourceCode.UISourceCode|null {\n    const projectType =\n        isContentScript ? Workspace.Workspace.projectTypes.ContentScripts : Workspace.Workspace.projectTypes.Network;\n    for (const project of this.#projects.values()) {\n      if (project.type() !== projectType) {\n        continue;\n      }\n      const uiSourceCode = project.uiSourceCodeForURL(url);\n      if (uiSourceCode) {\n        return uiSourceCode;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Resolves the source-mapped entity mapped from the given `rawLocation` if any. If the `rawLocation`\n   * does not point into a script with a source map, `null` is returned from here, while if the source\n   * map for the script is currently being loaded, a stub `UISourceCode` is returned meanwhile. Otherwise,\n   * if the script has a source map entry for the position identified by the `rawLocation`, this method\n   * will compute the location in the source-mapped file by a reverse lookup on the source map.\n   *\n   * If `rawLocation` points to a script with a source map managed by this `CompilerScriptMapping`, which\n   * is stale (because it was overridden by a more recent mapping), `null` will be returned.\n   *\n   * @param rawLocation script location.\n   * @returns the {@link Workspace.UISourceCode.UILocation} for the `rawLocation` if any.\n   */\n  rawLocationToUILocation(rawLocation: SDK.DebuggerModel.Location): Workspace.UISourceCode.UILocation|null {\n    const script = rawLocation.script();\n    if (!script) {\n      return null;\n    }\n\n    const {lineNumber, columnNumber} = script.rawLocationToRelativeLocation(rawLocation);\n    const stubUISourceCode = this.#stubUISourceCodes.get(script);\n    if (stubUISourceCode) {\n      return new Workspace.UISourceCode.UILocation(stubUISourceCode, lineNumber, columnNumber);\n    }\n\n    const sourceMap = this.#sourceMapManager.sourceMapForClient(script);\n    if (!sourceMap) {\n      return null;\n    }\n\n    const project = this.#sourceMapToProject.get(sourceMap);\n    if (!project) {\n      return null;\n    }\n\n    const entry = sourceMap.findEntry(lineNumber, columnNumber);\n    if (!entry || !entry.sourceURL) {\n      return null;\n    }\n\n    const uiSourceCode = project.uiSourceCodeForURL(entry.sourceURL);\n    if (!uiSourceCode) {\n      return null;\n    }\n\n    // Check that the reverse is also true and we have a binding for this `uiSourceCode`\n    // that is referred to from the `sourceMap` of the `script`.\n    if (!this.#uiSourceCodeToSourceMaps.hasValue(uiSourceCode, sourceMap)) {\n      return null;\n    }\n\n    return uiSourceCode.uiLocation(entry.sourceLineNumber, entry.sourceColumnNumber);\n  }\n\n  /**\n   * Resolves a location within a source mapped entity managed by the `CompilerScriptMapping`\n   * to its script locations. If the `uiSourceCode` does not belong to this mapping or if its\n   * mapping is stale, an empty list will be returned.\n   *\n   * A single UI location can map to multiple different {@link SDK.DebuggerModel.RawLocation}s,\n   * and these raw locations don't even need to belong to the same script (e.g. multiple bundles\n   * can reference the same shared source file in case of code splitting, and locations within\n   * this shared source file will then resolve to locations in all the bundles).\n   *\n   * @param uiSourceCode the source mapped entity.\n   * @param lineNumber the line number in terms of the {@link uiSourceCode}.\n   * @param columnNumber the column number in terms of the {@link uiSourceCode}.\n   * @returns a list of raw locations that correspond to the UI location.\n   */\n  uiLocationToRawLocations(uiSourceCode: Workspace.UISourceCode.UISourceCode, lineNumber: number, columnNumber: number):\n      SDK.DebuggerModel.Location[] {\n    const locations = [];\n    for (const sourceMap of this.#uiSourceCodeToSourceMaps.get(uiSourceCode)) {\n      const entry = sourceMap.sourceLineMapping(uiSourceCode.url(), lineNumber, columnNumber);\n      if (!entry) {\n        continue;\n      }\n      const script = this.#sourceMapManager.clientForSourceMap(sourceMap);\n      if (!script) {\n        continue;\n      }\n      const location = script.relativeLocationToRawLocation(entry);\n      locations.push(script.debuggerModel.createRawLocation(script, location.lineNumber, location.columnNumber));\n    }\n    return locations;\n  }\n\n  uiLocationRangeToRawLocationRanges(\n      uiSourceCode: Workspace.UISourceCode.UISourceCode,\n      textRange: TextUtils.TextRange.TextRange): SDK.DebuggerModel.LocationRange[]|null {\n    if (!this.#uiSourceCodeToSourceMaps.has(uiSourceCode)) {\n      return null;\n    }\n    const ranges = [];\n    for (const sourceMap of this.#uiSourceCodeToSourceMaps.get(uiSourceCode)) {\n      const script = this.#sourceMapManager.clientForSourceMap(sourceMap);\n      if (!script) {\n        continue;\n      }\n\n      for (const scriptTextRange of sourceMap.reverseMapTextRanges(uiSourceCode.url(), textRange)) {\n        const startLocation = script.relativeLocationToRawLocation(scriptTextRange.start);\n        const endLocation = script.relativeLocationToRawLocation(scriptTextRange.end);\n        const start =\n            script.debuggerModel.createRawLocation(script, startLocation.lineNumber, startLocation.columnNumber);\n        const end = script.debuggerModel.createRawLocation(script, endLocation.lineNumber, endLocation.columnNumber);\n        ranges.push({start, end});\n      }\n    }\n    return ranges;\n  }\n\n  /**\n   * Computes the set of line numbers which are source-mapped to a script within the\n   * given {@link uiSourceCode}.\n   *\n   * @param uiSourceCode the source mapped entity.\n   * @return a set of source-mapped line numbers or `null` if the {@link uiSourceCode}\n   *         is not provided by this {@link CompilerScriptMapping} instance.\n   */\n  getMappedLines(uiSourceCode: Workspace.UISourceCode.UISourceCode): Set<number>|null {\n    if (!this.#uiSourceCodeToSourceMaps.has(uiSourceCode)) {\n      return null;\n    }\n    const mappedLines = new Set<number>();\n    for (const sourceMap of this.#uiSourceCodeToSourceMaps.get(uiSourceCode)) {\n      for (const entry of sourceMap.mappings()) {\n        if (entry.sourceURL !== uiSourceCode.url()) {\n          continue;\n        }\n        mappedLines.add(entry.sourceLineNumber);\n      }\n    }\n    return mappedLines;\n  }\n\n  /**\n   * Invoked by the {@link SDK.SourceMapManager.SourceMapManager} whenever it starts loading the\n   * source map for a given {@link SDK.Script.Script}. The `CompilerScriptMapping` will set up a\n   * {@link Workspace.UISourceCode.UISourceCode} stub for the time that the source map is being\n   * loaded to avoid showing the generated code when the DevTools front-end is stopped early (for\n   * example on a breakpoint).\n   *\n   * @param event holds the {@link SDK.Script.Script} whose source map is being loaded.\n   */\n  private sourceMapWillAttach(event: Common.EventTarget.EventTargetEvent<{client: SDK.Script.Script}>): void {\n    const {client: script} = event.data;\n    // Create stub UISourceCode for the time source mapping is being loaded.\n    this.addStubUISourceCode(script);\n    void this.#debuggerWorkspaceBinding.updateLocations(script);\n    if (IgnoreListManager.instance().isUserIgnoreListedURL(\n            script.sourceURL, {isContentScript: script.isContentScript()})) {\n      this.#sourceMapManager.cancelAttachSourceMap(script);\n    }\n  }\n\n  /**\n   * Invoked by the {@link SDK.SourceMapManager.SourceMapManager} after an attempt to load the\n   * source map for a given {@link SDK.Script.Script} failed. The `CompilerScriptMapping` will\n   * remove the {@link Workspace.UISourceCode.UISourceCode} stub, and from this time on won't\n   * report any mappings for the `client` script.\n   *\n   * @param event holds the {@link SDK.Script.Script} whose source map failed to load.\n   */\n  private sourceMapFailedToAttach(event: Common.EventTarget.EventTargetEvent<{client: SDK.Script.Script}>): void {\n    const {client: script} = event.data;\n    this.removeStubUISourceCode(script);\n    void this.#debuggerWorkspaceBinding.updateLocations(script);\n  }\n\n  /**\n   * Invoked by the {@link SDK.SourceMapManager.SourceMapManager} after an attempt to load the\n   * source map for a given {@link SDK.Script.Script} succeeded. The `CompilerScriptMapping` will\n   * now create {@link Workspace.UISourceCode.UISourceCode}s for all the sources mentioned in the\n   * `sourceMap`.\n   *\n   * In case of a conflict this method creates a new {@link Workspace.UISourceCode.UISourceCode}\n   * and copies over all the mappings from the other source maps that were registered for the\n   * same URL and which are compatible (agree on the content and ignore-list hint for the given\n   * URL). If they are considered incompatible, the original `UISourceCode` will simply be\n   * removed and a new mapping will be established.\n   *\n   * @param event holds the {@link SDK.Script.Script} and its {@link SDK.SourceMap.SourceMap}.\n   */\n  private sourceMapAttached(event: Common.EventTarget.EventTargetEvent<{\n    client: SDK.Script.Script,\n    sourceMap: SDK.SourceMap.SourceMap,\n  }>): void {\n    const {client: script, sourceMap} = event.data;\n    const scripts = new Set<SDK.Script.Script>([script]);\n    this.removeStubUISourceCode(script);\n\n    const target = script.target();\n    const projectId = `jsSourceMaps:${script.isContentScript() ? 'extensions' : ''}:${target.id()}`;\n    let project = this.#projects.get(projectId);\n    if (!project) {\n      const projectType = script.isContentScript() ? Workspace.Workspace.projectTypes.ContentScripts :\n                                                     Workspace.Workspace.projectTypes.Network;\n      project = new ContentProviderBasedProject(\n          this.#stubProject.workspace(), projectId, projectType, /* displayName */ '', /* isServiceProject */ false);\n      NetworkProject.setTargetForProject(project, target);\n      this.#projects.set(projectId, project);\n    }\n    this.#sourceMapToProject.set(sourceMap, project);\n\n    for (const url of sourceMap.sourceURLs()) {\n      const contentType = Common.ResourceType.resourceTypes.SourceMapScript;\n      const uiSourceCode = project.createUISourceCode(url, contentType);\n      if (sourceMap.hasIgnoreListHint(url)) {\n        uiSourceCode.markKnownThirdParty();\n      }\n      const content = sourceMap.embeddedContentByURL(url);\n      const contentProvider = content !== null ?\n          TextUtils.StaticContentProvider.StaticContentProvider.fromString(url, contentType, content) :\n          new SDK.CompilerSourceMappingContentProvider.CompilerSourceMappingContentProvider(\n              url, contentType, script.createPageResourceLoadInitiator());\n      let metadata: Workspace.UISourceCode.UISourceCodeMetadata|null = null;\n      if (content !== null) {\n        const encoder = new TextEncoder();\n        metadata = new Workspace.UISourceCode.UISourceCodeMetadata(null, encoder.encode(content).length);\n      }\n      const mimeType = Common.ResourceType.ResourceType.mimeFromURL(url) ?? contentType.canonicalMimeType();\n\n      this.#uiSourceCodeToSourceMaps.set(uiSourceCode, sourceMap);\n      NetworkProject.setInitialFrameAttribution(uiSourceCode, script.frameId);\n\n      // Check if there was already an `UISourceCode` for the given `url`, and if so, discard\n      // the previous one. While it would be possible to keep the previous one and just add\n      // the new mapping (from the `sourceMap`) to it as long as there's no conflict, this\n      // doesn't really work with the way the `BreakpointManager` and other parts of the front-end\n      // work, which only listen for additions/removals of `UISourceCode`s, since there's no\n      // notion of a 'UISourceCodeChanged` event (yet).\n      //\n      // Therefore, unless we discard any previous `UISourceCode` for the `url` and publish the\n      // new `uiSourceCode`, the `BreakpointManager` will not restore / set breakpoints in newly\n      // added scripts in case of code-splitting, since it won't find out about these new mappings.\n      // By removing and (re)adding a `UISourceCode` for the `url` we effectively force restoration\n      // of breakpoints.\n      const otherUISourceCode = project.uiSourceCodeForURL(url);\n      if (otherUISourceCode !== null) {\n        // Copy the existing source mappings from the `otherUISourceCode` over as long as\n        // they are compatible with the `sourceMap` wrt. `url`. While doing so, also clean\n        // up the `otherUISourceCode` (in particular its frame attributions).\n        for (const otherSourceMap of this.#uiSourceCodeToSourceMaps.get(otherUISourceCode)) {\n          this.#uiSourceCodeToSourceMaps.delete(otherUISourceCode, otherSourceMap);\n          const otherScript = this.#sourceMapManager.clientForSourceMap(otherSourceMap);\n          if (!otherScript) {\n            continue;\n          }\n          NetworkProject.removeFrameAttribution(otherUISourceCode, otherScript.frameId);\n          if (sourceMap.compatibleForURL(url, otherSourceMap)) {\n            this.#uiSourceCodeToSourceMaps.set(uiSourceCode, otherSourceMap);\n            NetworkProject.addFrameAttribution(uiSourceCode, otherScript.frameId);\n          }\n          scripts.add(otherScript);\n        }\n        project.removeUISourceCode(url);\n      }\n\n      project.addUISourceCodeWithProvider(uiSourceCode, contentProvider, metadata, mimeType);\n    }\n    void Promise.all([...scripts].map(script => this.#debuggerWorkspaceBinding.updateLocations(script)))\n        .then(() => this.sourceMapAttachedForTest(sourceMap));\n  }\n\n  /**\n   * Invoked by the {@link SDK.SourceMapManager.SourceMapManager} when the source map for a given\n   * {@link SDK.Script.Script} is removed, which could be either because the target is execution\n   * context was destroyed, or the user manually asked to replace the source map for a given\n   * script.\n   *\n   * @param event holds the {@link SDK.Script.Script} and {@link SDK.SourceMap.SourceMap} that\n   *              should be detached.\n   */\n  private sourceMapDetached(event: Common.EventTarget.EventTargetEvent<{\n    client: SDK.Script.Script,\n    sourceMap: SDK.SourceMap.SourceMap,\n  }>): void {\n    const {client: script, sourceMap} = event.data;\n    const project = this.#sourceMapToProject.get(sourceMap);\n    if (!project) {\n      return;\n    }\n\n    // Remove all the files in the `project` that (still) belong to the `sourceMap`.\n    // In case of conflicts or overrides (for example due to HMR), not all the files\n    // that were originally provided by the `sourceMap` might still belong to it.\n    for (const uiSourceCode of project.uiSourceCodes()) {\n      if (this.#uiSourceCodeToSourceMaps.delete(uiSourceCode, sourceMap)) {\n        NetworkProject.removeFrameAttribution(uiSourceCode, script.frameId);\n        if (!this.#uiSourceCodeToSourceMaps.has(uiSourceCode)) {\n          project.removeUISourceCode(uiSourceCode.url());\n        }\n      }\n    }\n\n    this.#sourceMapToProject.delete(sourceMap);\n    void this.#debuggerWorkspaceBinding.updateLocations(script);\n  }\n\n  scriptsForUISourceCode(uiSourceCode: Workspace.UISourceCode.UISourceCode): SDK.Script.Script[] {\n    const scripts = [];\n    for (const sourceMap of this.#uiSourceCodeToSourceMaps.get(uiSourceCode)) {\n      const script = this.#sourceMapManager.clientForSourceMap(sourceMap);\n      if (script) {\n        scripts.push(script);\n      }\n    }\n    return scripts;\n  }\n\n  private sourceMapAttachedForTest(_sourceMap: SDK.SourceMap.SourceMap): void {\n  }\n\n  dispose(): void {\n    Common.EventTarget.removeEventListeners(this.#eventListeners);\n    for (const project of this.#projects.values()) {\n      project.dispose();\n    }\n    this.#stubProject.dispose();\n  }\n}\n"]}