{"version":3,"file":"ResourceMapping.test.js","sourceRoot":"","sources":["../../../../../../front_end/models/bindings/ResourceMapping.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport {createTarget} from '../../testing/EnvironmentHelpers.js';\nimport {describeWithMockConnection} from '../../testing/MockConnection.js';\nimport {createResource, getMainFrame} from '../../testing/ResourceTreeHelpers.js';\nimport * as TextUtils from '../text_utils/text_utils.js';\nimport * as Workspace from '../workspace/workspace.js';\n\nimport * as Bindings from './bindings.js';\n\ndescribeWithMockConnection('ResourceMapping', () => {\n  let debuggerModel: SDK.DebuggerModel.DebuggerModel;\n  let resourceMapping: Bindings.ResourceMapping.ResourceMapping;\n  let uiSourceCode: Workspace.UISourceCode.UISourceCode;\n  let workspace: Workspace.Workspace.WorkspaceImpl;\n  let target: SDK.Target.Target;\n\n  // This test simulates the behavior of the ResourceMapping with the\n  // following document, which contains two inline <script>s, one with\n  // a `//# sourceURL` annotation and one without.\n  //\n  //  <!DOCTYPE html>\n  //  <html>\n  //  <head>\n  //  <meta charset=utf-8>\n  //  <script>\n  //  function foo() { console.log(\"foo\"); }\n  //  foo();\n  //  //# sourceURL=webpack:///src/foo.js\n  //  </script>\n  //  </head>\n  //  <body>\n  //  <script>console.log(\"bar\");</script>\n  //  </body>\n  //  </html>\n  //\n  const url = 'http://example.com/index.html' as Platform.DevToolsPath.UrlString;\n  const SCRIPTS = [\n    {\n      scriptId: '1' as Protocol.Runtime.ScriptId,\n      startLine: 4,\n      startColumn: 8,\n      endLine: 8,\n      endColumn: 0,\n      sourceURL: 'webpack:///src/foo.js' as Platform.DevToolsPath.UrlString,\n      hasSourceURLComment: true,\n    },\n    {\n      scriptId: '2' as Protocol.Runtime.ScriptId,\n      startLine: 11,\n      startColumn: 8,\n      endLine: 11,\n      endColumn: 27,\n      sourceURL: url,\n      hasSourceURLComment: false,\n    },\n  ];\n  const OTHER_SCRIPT_ID = '3' as Protocol.Runtime.ScriptId;\n\n  beforeEach(async () => {\n    target = createTarget();\n    const targetManager = target.targetManager();\n    targetManager.setScopeTarget(target);\n    workspace = Workspace.Workspace.WorkspaceImpl.instance();\n    resourceMapping = new Bindings.ResourceMapping.ResourceMapping(targetManager, workspace);\n    Bindings.CSSWorkspaceBinding.CSSWorkspaceBinding.instance({forceNew: true, resourceMapping, targetManager});\n    Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.instance(\n        {forceNew: true, resourceMapping, targetManager});\n\n    // Inject the HTML document resource.\n    createResource(getMainFrame(target), url, 'text/html', '');\n    uiSourceCode = workspace.uiSourceCodeForURL(url) as Workspace.UISourceCode.UISourceCode;\n    assert.isNotNull(uiSourceCode);\n\n    // Register the inline <script>s.\n    const hash = '';\n    const length = 0;\n    const embedderName = url;\n    const executionContextId = 1;\n    debuggerModel = target.model(SDK.DebuggerModel.DebuggerModel) as SDK.DebuggerModel.DebuggerModel;\n    SCRIPTS.forEach(({scriptId, startLine, startColumn, endLine, endColumn, sourceURL, hasSourceURLComment}) => {\n      debuggerModel.parsedScriptSource(\n          scriptId, sourceURL, startLine, startColumn, endLine, endColumn, executionContextId, hash, undefined, false,\n          undefined, hasSourceURLComment, false, length, false, null, null, null, null, embedderName);\n    });\n    assert.lengthOf(debuggerModel.scripts(), SCRIPTS.length);\n  });\n\n  it('creates UISourceCode for added target', () => {\n    const resourceTreeModel = target.model(SDK.ResourceTreeModel.ResourceTreeModel)!;\n    resourceMapping.modelRemoved(resourceTreeModel);\n    assert.isNull(workspace.uiSourceCodeForURL(url));\n    resourceMapping.modelAdded(resourceTreeModel);\n    assert.isNotNull(workspace.uiSourceCodeForURL(url));\n  });\n\n  it('creates UISourceCode for added out of scope target', () => {\n    SDK.TargetManager.TargetManager.instance().setScopeTarget(null);\n\n    const otherUrl = 'http://example.com/other.html' as Platform.DevToolsPath.UrlString;\n    createResource(getMainFrame(target), otherUrl, 'text/html', '');\n    uiSourceCode = workspace.uiSourceCodeForURL(otherUrl) as Workspace.UISourceCode.UISourceCode;\n    assert.isNotNull(uiSourceCode);\n  });\n\n  describe('uiLocationToJSLocations', () => {\n    it('does not map locations outside of <script> tags', () => {\n      assert.isEmpty(resourceMapping.uiLocationToJSLocations(uiSourceCode, 0, 0));\n      SCRIPTS.forEach(({startLine, startColumn, endLine, endColumn}) => {\n        assert.isEmpty(resourceMapping.uiLocationToJSLocations(uiSourceCode, startLine, startColumn - 1));\n        assert.isEmpty(resourceMapping.uiLocationToJSLocations(uiSourceCode, endLine, endColumn));\n      });\n      assert.isEmpty(resourceMapping.uiLocationToJSLocations(uiSourceCode, 12, 1));\n    });\n\n    it('correctly maps inline <script> with a //# sourceURL annotation', () => {\n      const {scriptId, startLine, startColumn, endLine, endColumn} = SCRIPTS[0];\n\n      // Debugger locations in scripts with sourceURL annotations are relative to the beginning\n      // of the script, rather than relative to the start of the surrounding document.\n      assert.deepEqual(resourceMapping.uiLocationToJSLocations(uiSourceCode, startLine, startColumn), [\n        debuggerModel.createRawLocationByScriptId(scriptId, 0, 0),\n      ]);\n      assert.deepEqual(resourceMapping.uiLocationToJSLocations(uiSourceCode, startLine, startColumn + 3), [\n        // This location does not actually exist in the simulated document, but\n        // the ResourceMapping doesn't know (and shouldn't care) about that.\n        debuggerModel.createRawLocationByScriptId(scriptId, 0, 3),\n      ]);\n      assert.deepEqual(resourceMapping.uiLocationToJSLocations(uiSourceCode, startLine + 1, 5), [\n        debuggerModel.createRawLocationByScriptId(scriptId, 1, 5),\n      ]);\n      assert.deepEqual(resourceMapping.uiLocationToJSLocations(uiSourceCode, endLine - 1, endColumn), [\n        debuggerModel.createRawLocationByScriptId(scriptId, endLine - startLine - 1, endColumn),\n      ]);\n    });\n\n    it('correctly maps inline <script> without //# sourceURL annotation', () => {\n      const {scriptId, startLine, startColumn, endLine, endColumn} = SCRIPTS[1];\n\n      // Debugger locations in scripts without sourceURL annotations are relative to the\n      // beginning of the surrounding document, so this is basically a 1-1 mapping.\n      assert.strictEqual(endLine, startLine);\n      for (let column = startColumn; column < endColumn; ++column) {\n        assert.deepEqual(resourceMapping.uiLocationToJSLocations(uiSourceCode, startLine, column), [\n          debuggerModel.createRawLocationByScriptId(scriptId, startLine, column),\n        ]);\n      }\n    });\n  });\n\n  describe('uiLocationRangeToRSLocationRanges', () => {\n    it('correctly reports all inline <script>s when querying the whole document', () => {\n      const rawLocationRanges = resourceMapping.uiLocationRangeToJSLocationRanges(\n          uiSourceCode, new TextUtils.TextRange.TextRange(0, 0, 14, 0));\n      assert.exists(rawLocationRanges);\n      assert.lengthOf(rawLocationRanges, SCRIPTS.length);\n      for (let i = 0; i < SCRIPTS.length; ++i) {\n        let {startLine, startColumn, endLine, endColumn} = SCRIPTS[i];\n        const {scriptId, hasSourceURLComment} = SCRIPTS[i];\n        const {start, end} = rawLocationRanges[i];\n        assert.strictEqual(start.scriptId, scriptId);\n        assert.strictEqual(end.scriptId, scriptId);\n        if (hasSourceURLComment) {\n          if (endLine === startLine) {\n            endColumn -= startColumn;\n          }\n          endLine -= startLine;\n          startLine = 0;\n          startColumn = 0;\n        }\n        assert.strictEqual(start.lineNumber, startLine);\n        assert.strictEqual(start.columnNumber, startColumn);\n        assert.strictEqual(end.lineNumber, endLine);\n        assert.strictEqual(end.columnNumber, endColumn);\n      }\n    });\n  });\n\n  describe('jsLocationToUILocation', () => {\n    it('does not map locations of unrelated scripts', () => {\n      assert.isNull(\n          resourceMapping.jsLocationToUILocation(debuggerModel.createRawLocationByScriptId(OTHER_SCRIPT_ID, 1, 1)));\n      SCRIPTS.forEach(({startLine, startColumn, endLine, endColumn}) => {\n        // Check that we also don't reverse map locations that overlap with the existing script locations.\n        assert.isNull(resourceMapping.jsLocationToUILocation(\n            debuggerModel.createRawLocationByScriptId(OTHER_SCRIPT_ID, startLine, startColumn)));\n        assert.isNull(resourceMapping.jsLocationToUILocation(\n            debuggerModel.createRawLocationByScriptId(OTHER_SCRIPT_ID, endLine, endColumn)));\n      });\n    });\n\n    it('correctly maps inline <script> with //# sourceURL annotation', () => {\n      const {scriptId, startLine, startColumn, endLine, endColumn} = SCRIPTS[0];\n\n      // Debugger locations in scripts with sourceURL annotations are relative to the beginning\n      // of the script, rather than relative to the start of the surrounding document.\n      assert.deepEqual(\n          resourceMapping.jsLocationToUILocation(debuggerModel.createRawLocationByScriptId(scriptId, 0, 0)),\n          new Workspace.UISourceCode.UILocation(uiSourceCode, startLine, startColumn));\n      assert.deepEqual(\n          resourceMapping.jsLocationToUILocation(debuggerModel.createRawLocationByScriptId(scriptId, 0, 55)),\n          // This location does not actually exist in the simulated document, but\n          // the ResourceMapping doesn't know (and shouldn't care) about that.\n          new Workspace.UISourceCode.UILocation(uiSourceCode, startLine, startColumn + 55));\n      assert.deepEqual(\n          resourceMapping.jsLocationToUILocation(debuggerModel.createRawLocationByScriptId(scriptId, 2, 0)),\n          new Workspace.UISourceCode.UILocation(uiSourceCode, startLine + 2, 0));\n      assert.deepEqual(\n          resourceMapping.jsLocationToUILocation(\n              debuggerModel.createRawLocationByScriptId(scriptId, endLine - startLine, endColumn)),\n          new Workspace.UISourceCode.UILocation(uiSourceCode, endLine, endColumn));\n    });\n\n    it('correctly maps inline <script> without //# sourceURL annotation', () => {\n      const {scriptId, startLine, startColumn, endLine, endColumn} = SCRIPTS[1];\n\n      // Debugger locations in scripts without sourceURL annotations are relative to the\n      // beginning of the surrounding document, so this is basically a 1-1 mapping.\n      assert.strictEqual(endLine, startLine);\n      for (let column = startColumn; column < endColumn; ++column) {\n        assert.deepEqual(\n            resourceMapping.jsLocationToUILocation(\n                debuggerModel.createRawLocationByScriptId(scriptId, startLine, column)),\n            new Workspace.UISourceCode.UILocation(uiSourceCode, startLine, column));\n      }\n    });\n  });\n\n  describe('getMappedLines', () => {\n    it('reports line numbers for all inline scripts', () => {\n      const expectedLines = new Set();\n      SCRIPTS.forEach(({startLine, endLine}) => {\n        for (let line = startLine; line <= endLine; ++line) {\n          expectedLines.add(line);\n        }\n      });\n      const mappedLines = resourceMapping.getMappedLines(uiSourceCode);\n      assert.deepEqual(mappedLines, expectedLines);\n    });\n  });\n});\n"]}