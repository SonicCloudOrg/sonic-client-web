{"version":3,"file":"ResourceScriptMapping.js","sourceRoot":"","sources":["../../../../../../front_end/models/bindings/ResourceScriptMapping.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2012 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport * as TextUtils from '../text_utils/text_utils.js';\nimport * as Workspace from '../workspace/workspace.js';\n\nimport {ContentProviderBasedProject} from './ContentProviderBasedProject.js';\nimport {type DebuggerSourceMapping, DebuggerWorkspaceBinding} from './DebuggerWorkspaceBinding.js';\nimport {NetworkProject} from './NetworkProject.js';\nimport {metadataForURL} from './ResourceUtils.js';\n\nconst UIStrings = {\n  /**\n   *@description Error text displayed in the console when editing a live script fails. LiveEdit is\n   *the name of the feature for editing code that is already running.\n   *@example {warning} PH1\n   */\n  liveEditFailed: '`LiveEdit` failed: {PH1}',\n  /**\n   *@description Error text displayed in the console when compiling a live-edited script fails. LiveEdit is\n   *the name of the feature for editing code that is already running.\n   *@example {connection lost} PH1\n   */\n  liveEditCompileFailed: '`LiveEdit` compile failed: {PH1}',\n};\nconst str_ = i18n.i18n.registerUIStrings('models/bindings/ResourceScriptMapping.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class ResourceScriptMapping implements DebuggerSourceMapping {\n  readonly debuggerModel: SDK.DebuggerModel.DebuggerModel;\n  #workspace: Workspace.Workspace.WorkspaceImpl;\n  readonly debuggerWorkspaceBinding: DebuggerWorkspaceBinding;\n  readonly #uiSourceCodeToScriptFile: Map<Workspace.UISourceCode.UISourceCode, ResourceScriptFile>;\n  readonly #projects: Map<string, ContentProviderBasedProject>;\n  readonly #scriptToUISourceCode: Map<SDK.Script.Script, Workspace.UISourceCode.UISourceCode>;\n  readonly #eventListeners: Common.EventTarget.EventDescriptor[];\n\n  constructor(\n      debuggerModel: SDK.DebuggerModel.DebuggerModel, workspace: Workspace.Workspace.WorkspaceImpl,\n      debuggerWorkspaceBinding: DebuggerWorkspaceBinding) {\n    this.debuggerModel = debuggerModel;\n    this.#workspace = workspace;\n    this.debuggerWorkspaceBinding = debuggerWorkspaceBinding;\n    this.#uiSourceCodeToScriptFile = new Map();\n\n    this.#projects = new Map();\n\n    this.#scriptToUISourceCode = new Map();\n    const runtimeModel = debuggerModel.runtimeModel();\n    this.#eventListeners = [\n      this.debuggerModel.addEventListener(\n          SDK.DebuggerModel.Events.ParsedScriptSource, event => this.addScript(event.data), this),\n      this.debuggerModel.addEventListener(SDK.DebuggerModel.Events.GlobalObjectCleared, this.globalObjectCleared, this),\n      runtimeModel.addEventListener(\n          SDK.RuntimeModel.Events.ExecutionContextDestroyed, this.executionContextDestroyed, this),\n      runtimeModel.target().targetManager().addEventListener(\n          SDK.TargetManager.Events.InspectedURLChanged, this.inspectedURLChanged, this),\n    ];\n  }\n\n  private project(script: SDK.Script.Script): ContentProviderBasedProject {\n    const prefix = script.isContentScript() ? 'js:extensions:' : 'js::';\n    const projectId = prefix + this.debuggerModel.target().id() + ':' + script.frameId;\n    let project = this.#projects.get(projectId);\n    if (!project) {\n      const projectType = script.isContentScript() ? Workspace.Workspace.projectTypes.ContentScripts :\n                                                     Workspace.Workspace.projectTypes.Network;\n      project = new ContentProviderBasedProject(\n          this.#workspace, projectId, projectType, '' /* displayName */, false /* isServiceProject */);\n      NetworkProject.setTargetForProject(project, this.debuggerModel.target());\n      this.#projects.set(projectId, project);\n    }\n    return project;\n  }\n\n  uiSourceCodeForScript(script: SDK.Script.Script): Workspace.UISourceCode.UISourceCode|null {\n    return this.#scriptToUISourceCode.get(script) ?? null;\n  }\n\n  rawLocationToUILocation(rawLocation: SDK.DebuggerModel.Location): Workspace.UISourceCode.UILocation|null {\n    const script = rawLocation.script();\n    if (!script) {\n      return null;\n    }\n    const uiSourceCode = this.#scriptToUISourceCode.get(script);\n    if (!uiSourceCode) {\n      return null;\n    }\n    const scriptFile = this.#uiSourceCodeToScriptFile.get(uiSourceCode);\n    if (!scriptFile) {\n      return null;\n    }\n    if ((scriptFile.hasDivergedFromVM() && !scriptFile.isMergingToVM()) || scriptFile.isDivergingFromVM()) {\n      return null;\n    }\n    if (scriptFile.script !== script) {\n      return null;\n    }\n    const {lineNumber, columnNumber = 0} = rawLocation;\n    return uiSourceCode.uiLocation(lineNumber, columnNumber);\n  }\n\n  uiLocationToRawLocations(uiSourceCode: Workspace.UISourceCode.UISourceCode, lineNumber: number, columnNumber: number):\n      SDK.DebuggerModel.Location[] {\n    const scriptFile = this.#uiSourceCodeToScriptFile.get(uiSourceCode);\n    if (!scriptFile) {\n      return [];\n    }\n\n    const {script} = scriptFile;\n    if (!script) {\n      return [];\n    }\n\n    return [this.debuggerModel.createRawLocation(script, lineNumber, columnNumber)];\n  }\n\n  uiLocationRangeToRawLocationRanges(\n      uiSourceCode: Workspace.UISourceCode.UISourceCode,\n      {startLine, startColumn, endLine, endColumn}: TextUtils.TextRange.TextRange):\n      SDK.DebuggerModel.LocationRange[]|null {\n    const scriptFile = this.#uiSourceCodeToScriptFile.get(uiSourceCode);\n    if (!scriptFile) {\n      return null;\n    }\n\n    const {script} = scriptFile;\n    if (!script) {\n      return null;\n    }\n\n    const start = this.debuggerModel.createRawLocation(script, startLine, startColumn);\n    const end = this.debuggerModel.createRawLocation(script, endLine, endColumn);\n    return [{start, end}];\n  }\n\n  private inspectedURLChanged(event: Common.EventTarget.EventTargetEvent<SDK.Target.Target>): void {\n    for (let target: SDK.Target.Target|null = this.debuggerModel.target(); target !== event.data;\n         target = target.parentTarget()) {\n      if (target === null) {\n        return;\n      }\n    }\n\n    // Just remove and readd all scripts to ensure their URLs are reflected correctly.\n    for (const script of Array.from(this.#scriptToUISourceCode.keys())) {\n      this.removeScripts([script]);\n      this.addScript(script);\n    }\n  }\n\n  private addScript(script: SDK.Script.Script): void {\n    // Ignore live edit scripts here.\n    if (script.isLiveEdit() || script.isBreakpointCondition) {\n      return;\n    }\n\n    let url = script.sourceURL;\n    if (!url) {\n      return;\n    }\n\n    if (script.hasSourceURL) {\n      // Try to resolve `//# sourceURL=` annotations relative to\n      // the base URL, according to the sourcemap specification.\n      url = SDK.SourceMapManager.SourceMapManager.resolveRelativeSourceURL(script.debuggerModel.target(), url);\n    } else {\n      // Ignore inline <script>s without `//# sourceURL` annotation here.\n      if (script.isInlineScript()) {\n        return;\n      }\n\n      // Filter out embedder injected content scripts.\n      if (script.isContentScript()) {\n        const parsedURL = new Common.ParsedURL.ParsedURL(url);\n        if (!parsedURL.isValid) {\n          return;\n        }\n      }\n    }\n\n    // Remove previous UISourceCode, if any\n    const project = this.project(script);\n    const oldUISourceCode = project.uiSourceCodeForURL(url);\n    if (oldUISourceCode) {\n      const oldScriptFile = this.#uiSourceCodeToScriptFile.get(oldUISourceCode);\n      if (oldScriptFile && oldScriptFile.script) {\n        this.removeScripts([oldScriptFile.script]);\n      }\n    }\n\n    // Create UISourceCode.\n    const originalContentProvider = script.originalContentProvider();\n    const uiSourceCode = project.createUISourceCode(url, originalContentProvider.contentType());\n    NetworkProject.setInitialFrameAttribution(uiSourceCode, script.frameId);\n    const metadata = metadataForURL(this.debuggerModel.target(), script.frameId, url);\n\n    // Bind UISourceCode to scripts.\n    const scriptFile = new ResourceScriptFile(this, uiSourceCode, script);\n    this.#uiSourceCodeToScriptFile.set(uiSourceCode, scriptFile);\n    this.#scriptToUISourceCode.set(script, uiSourceCode);\n\n    const mimeType = script.isWasm() ? 'application/wasm' : 'text/javascript';\n    project.addUISourceCodeWithProvider(uiSourceCode, originalContentProvider, metadata, mimeType);\n    void this.debuggerWorkspaceBinding.updateLocations(script);\n  }\n\n  scriptFile(uiSourceCode: Workspace.UISourceCode.UISourceCode): ResourceScriptFile|null {\n    return this.#uiSourceCodeToScriptFile.get(uiSourceCode) || null;\n  }\n\n  private removeScripts(scripts: SDK.Script.Script[]): void {\n    const uiSourceCodesByProject =\n        new Platform.MapUtilities.Multimap<ContentProviderBasedProject, Workspace.UISourceCode.UISourceCode>();\n    for (const script of scripts) {\n      const uiSourceCode = this.#scriptToUISourceCode.get(script);\n      if (!uiSourceCode) {\n        continue;\n      }\n      const scriptFile = this.#uiSourceCodeToScriptFile.get(uiSourceCode);\n      if (scriptFile) {\n        scriptFile.dispose();\n      }\n\n      this.#uiSourceCodeToScriptFile.delete(uiSourceCode);\n      this.#scriptToUISourceCode.delete(script);\n\n      uiSourceCodesByProject.set(uiSourceCode.project() as ContentProviderBasedProject, uiSourceCode);\n      void this.debuggerWorkspaceBinding.updateLocations(script);\n    }\n    for (const project of uiSourceCodesByProject.keysArray()) {\n      const uiSourceCodes = uiSourceCodesByProject.get(project);\n      // Check if all the ui source codes in the project are in |uiSourceCodes|.\n      let allInProjectRemoved = true;\n      for (const projectSourceCode of project.uiSourceCodes()) {\n        if (!uiSourceCodes.has(projectSourceCode)) {\n          allInProjectRemoved = false;\n          break;\n        }\n      }\n      // Drop the whole project if no source codes are left in it.\n      if (allInProjectRemoved) {\n        this.#projects.delete(project.id());\n        project.removeProject();\n      } else {\n        // Otherwise, announce the removal of each UI source code individually.\n        uiSourceCodes.forEach(c => project.removeUISourceCode(c.url()));\n      }\n    }\n  }\n\n  private executionContextDestroyed(event: Common.EventTarget.EventTargetEvent<SDK.RuntimeModel.ExecutionContext>):\n      void {\n    const executionContext = event.data;\n    this.removeScripts(this.debuggerModel.scriptsForExecutionContext(executionContext));\n  }\n\n  private globalObjectCleared(): void {\n    const scripts = Array.from(this.#scriptToUISourceCode.keys());\n    this.removeScripts(scripts);\n  }\n\n  resetForTest(): void {\n    this.globalObjectCleared();\n  }\n\n  dispose(): void {\n    Common.EventTarget.removeEventListeners(this.#eventListeners);\n    this.globalObjectCleared();\n  }\n}\n\nexport class ResourceScriptFile extends Common.ObjectWrapper.ObjectWrapper<ResourceScriptFile.EventTypes> {\n  readonly #resourceScriptMapping: ResourceScriptMapping;\n  readonly uiSourceCode: Workspace.UISourceCode.UISourceCode;\n  readonly script: SDK.Script.Script|null;\n  #scriptSource?: string|null;\n  #isDivergingFromVMInternal?: boolean;\n  #hasDivergedFromVMInternal?: boolean;\n  #isMergingToVMInternal?: boolean;\n  #updateMutex = new Common.Mutex.Mutex();\n  constructor(\n      resourceScriptMapping: ResourceScriptMapping, uiSourceCode: Workspace.UISourceCode.UISourceCode,\n      script: SDK.Script.Script) {\n    super();\n    this.#resourceScriptMapping = resourceScriptMapping;\n    this.uiSourceCode = uiSourceCode;\n    this.script = this.uiSourceCode.contentType().isScript() ? script : null;\n\n    this.uiSourceCode.addEventListener(Workspace.UISourceCode.Events.WorkingCopyChanged, this.workingCopyChanged, this);\n    this.uiSourceCode.addEventListener(\n        Workspace.UISourceCode.Events.WorkingCopyCommitted, this.workingCopyCommitted, this);\n  }\n\n  private isDiverged(): boolean {\n    if (this.uiSourceCode.isDirty()) {\n      return true;\n    }\n    if (!this.script) {\n      return false;\n    }\n    if (typeof this.#scriptSource === 'undefined' || this.#scriptSource === null) {\n      return false;\n    }\n    const workingCopy = this.uiSourceCode.workingCopy();\n    if (!workingCopy) {\n      return false;\n    }\n\n    // Match ignoring sourceURL.\n    if (!workingCopy.startsWith(this.#scriptSource.trimEnd())) {\n      return true;\n    }\n    const suffix = this.uiSourceCode.workingCopy().substr(this.#scriptSource.length);\n    return Boolean(suffix.length) && !suffix.match(SDK.Script.sourceURLRegex);\n  }\n\n  private workingCopyChanged(): void {\n    void this.update();\n  }\n\n  private workingCopyCommitted(): void {\n    if (this.uiSourceCode.project().canSetFileContent()) {\n      return;\n    }\n    if (!this.script) {\n      return;\n    }\n\n    const source = this.uiSourceCode.workingCopy();\n    void this.script.editSource(source).then(({status, exceptionDetails}) => {\n      void this.scriptSourceWasSet(source, status, exceptionDetails);\n    });\n  }\n\n  async scriptSourceWasSet(\n      source: string, status: Protocol.Debugger.SetScriptSourceResponseStatus,\n      exceptionDetails?: Protocol.Runtime.ExceptionDetails): Promise<void> {\n    if (status === Protocol.Debugger.SetScriptSourceResponseStatus.Ok) {\n      this.#scriptSource = source;\n    }\n    await this.update();\n\n    if (status === Protocol.Debugger.SetScriptSourceResponseStatus.Ok) {\n      return;\n    }\n\n    if (!exceptionDetails) {\n      // TODO(crbug.com/1334484): Instead of to the console, report these errors in an \"info bar\" at the bottom\n      //                          of the text editor, similar to e.g. source mapping errors.\n      Common.Console.Console.instance().addMessage(\n          i18nString(UIStrings.liveEditFailed, {PH1: getErrorText(status)}), Common.Console.MessageLevel.Warning);\n      return;\n    }\n    const messageText = i18nString(UIStrings.liveEditCompileFailed, {PH1: exceptionDetails.text});\n    this.uiSourceCode.addLineMessage(\n        Workspace.UISourceCode.Message.Level.Error, messageText, exceptionDetails.lineNumber,\n        exceptionDetails.columnNumber);\n\n    function getErrorText(status: Protocol.Debugger.SetScriptSourceResponseStatus): string {\n      switch (status) {\n        case Protocol.Debugger.SetScriptSourceResponseStatus.BlockedByActiveFunction:\n          return 'Functions that are on the stack (currently being executed) can not be edited';\n        case Protocol.Debugger.SetScriptSourceResponseStatus.BlockedByActiveGenerator:\n          return 'Async functions/generators that are active can not be edited';\n        case Protocol.Debugger.SetScriptSourceResponseStatus.BlockedByTopLevelEsModuleChange:\n          return 'The top-level of ES modules can not be edited';\n        case Protocol.Debugger.SetScriptSourceResponseStatus.CompileError:\n        case Protocol.Debugger.SetScriptSourceResponseStatus.Ok:\n          throw new Error('Compile errors and Ok status must not be reported on the console');\n      }\n    }\n  }\n\n  private async update(): Promise<void> {\n    // Do not interleave \"divergeFromVM\" with \"mergeToVM\" calls.\n    const release = await this.#updateMutex.acquire();\n    const diverged = this.isDiverged();\n    if (diverged && !this.#hasDivergedFromVMInternal) {\n      await this.divergeFromVM();\n    } else if (!diverged && this.#hasDivergedFromVMInternal) {\n      await this.mergeToVM();\n    }\n    release();\n  }\n\n  private async divergeFromVM(): Promise<void> {\n    if (this.script) {\n      this.#isDivergingFromVMInternal = true;\n      await this.#resourceScriptMapping.debuggerWorkspaceBinding.updateLocations(this.script);\n      this.#isDivergingFromVMInternal = undefined;\n      this.#hasDivergedFromVMInternal = true;\n      this.dispatchEventToListeners(ResourceScriptFile.Events.DidDivergeFromVM);\n    }\n  }\n\n  private async mergeToVM(): Promise<void> {\n    if (this.script) {\n      this.#hasDivergedFromVMInternal = undefined;\n      this.#isMergingToVMInternal = true;\n      await this.#resourceScriptMapping.debuggerWorkspaceBinding.updateLocations(this.script);\n      this.#isMergingToVMInternal = undefined;\n      this.dispatchEventToListeners(ResourceScriptFile.Events.DidMergeToVM);\n    }\n  }\n\n  hasDivergedFromVM(): boolean {\n    return Boolean(this.#hasDivergedFromVMInternal);\n  }\n\n  isDivergingFromVM(): boolean {\n    return Boolean(this.#isDivergingFromVMInternal);\n  }\n\n  isMergingToVM(): boolean {\n    return Boolean(this.#isMergingToVMInternal);\n  }\n\n  checkMapping(): void {\n    if (!this.script || typeof this.#scriptSource !== 'undefined') {\n      this.mappingCheckedForTest();\n      return;\n    }\n    void this.script.requestContentData().then(content => {\n      this.#scriptSource = TextUtils.ContentData.ContentData.textOr(content, null);\n      void this.update().then(() => this.mappingCheckedForTest());\n    });\n  }\n\n  private mappingCheckedForTest(): void {\n  }\n\n  dispose(): void {\n    this.uiSourceCode.removeEventListener(\n        Workspace.UISourceCode.Events.WorkingCopyChanged, this.workingCopyChanged, this);\n    this.uiSourceCode.removeEventListener(\n        Workspace.UISourceCode.Events.WorkingCopyCommitted, this.workingCopyCommitted, this);\n  }\n\n  addSourceMapURL(sourceMapURL: Platform.DevToolsPath.UrlString): void {\n    if (!this.script) {\n      return;\n    }\n    this.script.debuggerModel.setSourceMapURL(this.script, sourceMapURL);\n  }\n\n  addDebugInfoURL(debugInfoURL: Platform.DevToolsPath.UrlString): void {\n    if (!this.script) {\n      return;\n    }\n    const {pluginManager} = DebuggerWorkspaceBinding.instance();\n    pluginManager.setDebugInfoURL(this.script, debugInfoURL);\n  }\n\n  hasSourceMapURL(): boolean {\n    return Boolean(this.script?.sourceMapURL);\n  }\n\n  async missingSymbolFiles(): Promise<SDK.DebuggerModel.MissingDebugFiles[]|null> {\n    if (!this.script) {\n      return null;\n    }\n    const {pluginManager} = this.#resourceScriptMapping.debuggerWorkspaceBinding;\n    const sources = await pluginManager.getSourcesForScript(this.script);\n    return sources && 'missingSymbolFiles' in sources ? sources.missingSymbolFiles : null;\n  }\n}\n\nexport namespace ResourceScriptFile {\n  export const enum Events {\n    DidMergeToVM = 'DidMergeToVM',\n    DidDivergeFromVM = 'DidDivergeFromVM',\n  }\n\n  export type EventTypes = {\n    [Events.DidMergeToVM]: void,\n    [Events.DidDivergeFromVM]: void,\n  };\n}\n"]}