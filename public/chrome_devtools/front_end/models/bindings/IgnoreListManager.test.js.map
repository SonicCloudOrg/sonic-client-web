{"version":3,"file":"IgnoreListManager.test.js","sourceRoot":"","sources":["../../../../../../front_end/models/bindings/IgnoreListManager.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport {createTarget} from '../../testing/EnvironmentHelpers.js';\nimport {describeWithMockConnection} from '../../testing/MockConnection.js';\nimport {createResource, getMainFrame} from '../../testing/ResourceTreeHelpers.js';\nimport {createContentProviderUISourceCode} from '../../testing/UISourceCodeHelpers.js';\nimport * as Workspace from '../workspace/workspace.js';\n\nimport * as Bindings from './bindings.js';\n\n// Same as in IgnoreListManager.ts.\nconst UIStrings = {\n  removeFromIgnoreList: 'Remove from ignore list',\n  addScriptToIgnoreList: 'Add script to ignore list',\n  addDirectoryToIgnoreList: 'Add directory to ignore list',\n  addAllContentScriptsToIgnoreList: 'Add all extension scripts to ignore list',\n  addAllThirdPartyScriptsToIgnoreList: 'Add all third-party scripts to ignore list',\n};\n\nconst sourceMapThirdPartyFolderUrl = 'http://a.b.c/lib' as Platform.DevToolsPath.UrlString;\nconst sourceMapThirdPartyUrl = 'http://a.b.c/lib/source1.ts' as Platform.DevToolsPath.UrlString;\nconst sourceMapNodeModulesUrl = 'http://a.b.c/node_modules/library/source3.ts' as Platform.DevToolsPath.UrlString;\nconst sourceMapFolderUrl = 'http://a.b.c/myapp' as Platform.DevToolsPath.UrlString;\nconst sourceMapFile1Url = 'http://a.b.c/myapp/file1.ts' as Platform.DevToolsPath.UrlString;\nconst sourceMapFile2Url = 'http://a.b.c/myapp/file2.ts' as Platform.DevToolsPath.UrlString;\n\nconst sourceMap = {\n  version: 3,\n  file: './foo.js',\n  mappings: '',\n  sources: [sourceMapThirdPartyUrl, sourceMapFile1Url, sourceMapFile2Url, sourceMapNodeModulesUrl],\n  sourcesContent: ['// File 1\\n'],\n  names: [],\n  sourceRoot: '',\n  x_google_ignoreList: [0],\n};\n\nfunction notNull<T>(val: T|null|undefined): T {\n  assert.exists(val);\n  return val;\n}\n\ndescribeWithMockConnection('IgnoreListManager', () => {\n  let debuggerModel: SDK.DebuggerModel.DebuggerModel;\n  let ignoreListManager: Bindings.IgnoreListManager.IgnoreListManager;\n\n  let uiSourceCode: Workspace.UISourceCode.UISourceCode;\n  let webpackUiSourceCode: Workspace.UISourceCode.UISourceCode;\n  let thirdPartyUiSourceCode: Workspace.UISourceCode.UISourceCode;\n  let nodeModulesUiSourceCode: Workspace.UISourceCode.UISourceCode;\n  let sourceMapFile1UiSourceCode: Workspace.UISourceCode.UISourceCode;\n  let sourceMapFile2UiSourceCode: Workspace.UISourceCode.UISourceCode;\n  let contentScriptUiSourceCode: Workspace.UISourceCode.UISourceCode;\n\n  // This test simulates the behavior of the IgnoreListManager with the\n  // following document, which contains two inline <script>s, one with\n  // a `//# sourceURL` annotation and one without.\n  //\n  //  <!DOCTYPE html>\n  //  <html>\n  //  <head>\n  //  <meta charset=utf-8>\n  //  <script>\n  //  function foo() { console.log(\"foo\"); }\n  //  foo();\n  //  //# sourceURL=webpack:///src/foo.js\n  //  </script>\n  //  </head>\n  //  <body>\n  //  <script>console.log(\"bar\");</script>\n  //  </body>\n  //  </html>\n  //\n  const url = 'http://example.com/index.html' as Platform.DevToolsPath.UrlString;\n  const webpackUrl = 'webpack:///src/subfolder/foo.js' as Platform.DevToolsPath.UrlString;\n  const webpackFolderUrl = 'webpack:///src' as Platform.DevToolsPath.UrlString;\n  const webpackSubfolderUrl = 'webpack:///src/subfolder' as Platform.DevToolsPath.UrlString;\n  const contentScriptFolderUrl = 'chrome-extension://abc' as Platform.DevToolsPath.UrlString;\n  const contentScriptUrl = 'chrome-extension://abc/content.js' as Platform.DevToolsPath.UrlString;\n  const SCRIPTS = [\n    {\n      scriptId: '1' as Protocol.Runtime.ScriptId,\n      startLine: 4,\n      startColumn: 8,\n      endLine: 8,\n      endColumn: 0,\n      sourceURL: webpackUrl,\n      hasSourceURLComment: true,\n      executionContextAuxData: undefined,\n    },\n    {\n      scriptId: '2' as Protocol.Runtime.ScriptId,\n      startLine: 11,\n      startColumn: 8,\n      endLine: 11,\n      endColumn: 27,\n      sourceURL: url,\n      sourceMapURL: 'data:,' + encodeURIComponent(JSON.stringify(sourceMap)),\n      hasSourceURLComment: false,\n    },\n    {\n      scriptId: '3' as Protocol.Runtime.ScriptId,\n      startLine: 4,\n      startColumn: 8,\n      endLine: 8,\n      endColumn: 0,\n      sourceURL: contentScriptUrl,\n      executionContextAuxData: {isDefault: false},\n      hasSourceURLComment: true,\n    },\n  ];\n  const ALL_URLS = [...sourceMap.sources, ...SCRIPTS.map(({sourceURL}) => sourceURL)];\n\n  beforeEach(async () => {\n    const forceNew = true;\n    const target = createTarget();\n    const targetManager = target.targetManager();\n    SDK.PageResourceLoader.PageResourceLoader.instance({forceNew, maxConcurrentLoads: 1, loadOverride: null});\n    const workspace = Workspace.Workspace.WorkspaceImpl.instance();\n    const resourceMapping = new Bindings.ResourceMapping.ResourceMapping(targetManager, workspace);\n    const debuggerWorkspaceBinding =\n        Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.instance({forceNew, resourceMapping, targetManager});\n    ignoreListManager = Bindings.IgnoreListManager.IgnoreListManager.instance({forceNew, debuggerWorkspaceBinding});\n\n    // Inject the HTML document resource.\n    createResource(getMainFrame(target), url, 'text/html', '');\n    uiSourceCode = notNull(workspace.uiSourceCodeForURL(url));\n\n    // Register the inline <script>s.\n    const hash = '';\n    const length = 0;\n    const embedderName = url;\n    const executionContextId = 1;\n    debuggerModel = target.model(SDK.DebuggerModel.DebuggerModel) as SDK.DebuggerModel.DebuggerModel;\n    SCRIPTS.forEach(({\n                      scriptId,\n                      startLine,\n                      startColumn,\n                      endLine,\n                      endColumn,\n                      executionContextAuxData,\n                      sourceURL,\n                      hasSourceURLComment,\n                      sourceMapURL,\n                    }) => {\n      debuggerModel.parsedScriptSource(\n          scriptId, sourceURL, startLine, startColumn, endLine, endColumn, executionContextId, hash,\n          executionContextAuxData, false, sourceMapURL, hasSourceURLComment, false, length, false, null, null, null,\n          null, embedderName);\n    });\n    assert.lengthOf(debuggerModel.scripts(), SCRIPTS.length);\n    webpackUiSourceCode = notNull(workspace.uiSourceCodeForURL(webpackUrl));\n    contentScriptUiSourceCode = notNull(workspace.uiSourceCodeForURL(contentScriptUrl));\n    thirdPartyUiSourceCode = await debuggerWorkspaceBinding.waitForUISourceCodeAdded(sourceMapThirdPartyUrl, target);\n    sourceMapFile1UiSourceCode = notNull(workspace.uiSourceCodeForURL(sourceMapFile1Url));\n    sourceMapFile2UiSourceCode = notNull(workspace.uiSourceCodeForURL(sourceMapFile2Url));\n    nodeModulesUiSourceCode = notNull(workspace.uiSourceCodeForURL(sourceMapNodeModulesUrl));\n  });\n\n  // Wrapper around getIgnoreListURLContextMenuItems to make its result more convenient for testing\n  function getContextMenu(uiSourceCode: Workspace.UISourceCode.UISourceCode):\n      {items: Array<string>, callbacks: Map<string, () => void>} {\n    const items: Array<string> = [];\n    const callbacks: Map<string, () => void> = new Map();\n\n    for (const {text, callback} of ignoreListManager.getIgnoreListURLContextMenuItems(uiSourceCode)) {\n      items.push(text);\n      callbacks.set(text, callback);\n    }\n    return {items, callbacks};\n  }\n\n  // Wrapper around getIgnoreListFolderContextMenuItems to make its result more convenient for testing\n  function getFolderContextMenu(url: Platform.DevToolsPath.UrlString):\n      {items: Array<string>, callbacks: Map<string, () => void>} {\n    const items: Array<string> = [];\n    const callbacks: Map<string, () => void> = new Map();\n    const workspace = Workspace.Workspace.WorkspaceImpl.instance();\n    const options: Bindings.IgnoreListManager.IgnoreListGeneralRules = {\n      isContentScript: url === contentScriptFolderUrl,\n      isKnownThirdParty: url === sourceMapThirdPartyFolderUrl,\n      isCurrentlyIgnoreListed: ALL_URLS.every(\n          scriptUrl => !scriptUrl.startsWith(url) ||\n              ignoreListManager.isUserOrSourceMapIgnoreListedUISourceCode(\n                  notNull(workspace.uiSourceCodeForURL(scriptUrl)))),\n    };\n\n    for (const {text, callback} of ignoreListManager.getIgnoreListFolderContextMenuItems(url, options)) {\n      items.push(text);\n      callbacks.set(text, callback);\n    }\n    return {items, callbacks};\n  }\n\n  it('default is do not ignore', () => {\n    assert.isFalse(ignoreListManager.isUserOrSourceMapIgnoreListedUISourceCode(uiSourceCode));\n    assert.isFalse(ignoreListManager.isUserOrSourceMapIgnoreListedUISourceCode(webpackUiSourceCode));\n  });\n\n  it('default is ignore third party', () => {\n    assert.isTrue(ignoreListManager.isUserOrSourceMapIgnoreListedUISourceCode(thirdPartyUiSourceCode));\n  });\n\n  it('default is ignore content scripts from extensions', () => {\n    assert.isTrue(ignoreListManager.isUserOrSourceMapIgnoreListedUISourceCode(contentScriptUiSourceCode));\n  });\n\n  it('script context menu enables and disables ignore listing', () => {\n    let {items, callbacks} = getContextMenu(webpackUiSourceCode);\n\n    assert.sameMembers(items, [UIStrings.addScriptToIgnoreList]);\n\n    notNull(callbacks.get(UIStrings.addScriptToIgnoreList))();\n\n    assert.isFalse(ignoreListManager.isUserOrSourceMapIgnoreListedUISourceCode(uiSourceCode));\n    assert.isTrue(ignoreListManager.isUserOrSourceMapIgnoreListedUISourceCode(webpackUiSourceCode));\n\n    ({items, callbacks} = getContextMenu(webpackUiSourceCode));\n\n    assert.sameMembers(items, [UIStrings.removeFromIgnoreList]);\n\n    notNull(callbacks.get(UIStrings.removeFromIgnoreList))();\n\n    assert.isFalse(ignoreListManager.isUserOrSourceMapIgnoreListedUISourceCode(uiSourceCode));\n    assert.isFalse(ignoreListManager.isUserOrSourceMapIgnoreListedUISourceCode(webpackUiSourceCode));\n  });\n\n  it('script context menu enables and disables ignore listing for content scripts', () => {\n    assert.isFalse(ignoreListManager.isUserOrSourceMapIgnoreListedUISourceCode(uiSourceCode));\n    assert.isTrue(ignoreListManager.isUserOrSourceMapIgnoreListedUISourceCode(contentScriptUiSourceCode));\n\n    let {items, callbacks} = getContextMenu(contentScriptUiSourceCode);\n\n    assert.sameMembers(items, [UIStrings.removeFromIgnoreList]);\n\n    notNull(callbacks.get(UIStrings.removeFromIgnoreList))();\n\n    assert.isFalse(ignoreListManager.isUserOrSourceMapIgnoreListedUISourceCode(uiSourceCode));\n    assert.isFalse(ignoreListManager.isUserOrSourceMapIgnoreListedUISourceCode(contentScriptUiSourceCode));\n\n    ({items, callbacks} = getContextMenu(contentScriptUiSourceCode));\n    assert.sameMembers(items, [UIStrings.addScriptToIgnoreList, UIStrings.addAllContentScriptsToIgnoreList]);\n\n    notNull(callbacks.get(UIStrings.addAllContentScriptsToIgnoreList))();\n\n    assert.isFalse(ignoreListManager.isUserOrSourceMapIgnoreListedUISourceCode(uiSourceCode));\n    assert.isTrue(ignoreListManager.isUserOrSourceMapIgnoreListedUISourceCode(contentScriptUiSourceCode));\n  });\n\n  it('folder context menu enables and disables ignore listing for content scripts', () => {\n    assert.isFalse(ignoreListManager.isUserOrSourceMapIgnoreListedUISourceCode(uiSourceCode));\n    assert.isTrue(ignoreListManager.isUserOrSourceMapIgnoreListedUISourceCode(contentScriptUiSourceCode));\n\n    let {items, callbacks} = getFolderContextMenu(contentScriptFolderUrl);\n\n    assert.sameMembers(items, [UIStrings.removeFromIgnoreList]);\n\n    notNull(callbacks.get(UIStrings.removeFromIgnoreList))();\n\n    assert.isFalse(ignoreListManager.isUserOrSourceMapIgnoreListedUISourceCode(uiSourceCode));\n    assert.isFalse(ignoreListManager.isUserOrSourceMapIgnoreListedUISourceCode(contentScriptUiSourceCode));\n\n    ({items, callbacks} = getFolderContextMenu(contentScriptFolderUrl));\n    assert.sameMembers(items, [UIStrings.addDirectoryToIgnoreList, UIStrings.addAllContentScriptsToIgnoreList]);\n\n    notNull(callbacks.get(UIStrings.addAllContentScriptsToIgnoreList))();\n\n    assert.isFalse(ignoreListManager.isUserOrSourceMapIgnoreListedUISourceCode(uiSourceCode));\n    assert.isTrue(ignoreListManager.isUserOrSourceMapIgnoreListedUISourceCode(contentScriptUiSourceCode));\n  });\n\n  it('script context menu enables and disables ignore listing for third party scripts', () => {\n    let {items, callbacks} = getContextMenu(thirdPartyUiSourceCode);\n\n    assert.sameMembers(items, [UIStrings.removeFromIgnoreList]);\n\n    notNull(callbacks.get(UIStrings.removeFromIgnoreList))();\n\n    assert.isFalse(ignoreListManager.isUserOrSourceMapIgnoreListedUISourceCode(uiSourceCode));\n    assert.isFalse(ignoreListManager.isUserOrSourceMapIgnoreListedUISourceCode(thirdPartyUiSourceCode));\n\n    ({items, callbacks} = getContextMenu(thirdPartyUiSourceCode));\n\n    assert.sameMembers(items, [UIStrings.addScriptToIgnoreList, UIStrings.addAllThirdPartyScriptsToIgnoreList]);\n\n    notNull(callbacks.get(UIStrings.addAllThirdPartyScriptsToIgnoreList))();\n\n    assert.isFalse(ignoreListManager.isUserOrSourceMapIgnoreListedUISourceCode(uiSourceCode));\n    assert.isTrue(ignoreListManager.isUserOrSourceMapIgnoreListedUISourceCode(thirdPartyUiSourceCode));\n  });\n\n  it('folder context menu enables and disables ignore listing for third party scripts', () => {\n    let {items, callbacks} = getFolderContextMenu(sourceMapThirdPartyFolderUrl);\n\n    assert.sameMembers(items, [UIStrings.removeFromIgnoreList]);\n\n    notNull(callbacks.get(UIStrings.removeFromIgnoreList))();\n\n    assert.isFalse(ignoreListManager.isUserOrSourceMapIgnoreListedUISourceCode(uiSourceCode));\n    assert.isFalse(ignoreListManager.isUserOrSourceMapIgnoreListedUISourceCode(thirdPartyUiSourceCode));\n\n    ({items, callbacks} = getFolderContextMenu(sourceMapThirdPartyFolderUrl));\n\n    assert.sameMembers(items, [UIStrings.addDirectoryToIgnoreList, UIStrings.addAllThirdPartyScriptsToIgnoreList]);\n\n    notNull(callbacks.get(UIStrings.addAllThirdPartyScriptsToIgnoreList))();\n\n    assert.isFalse(ignoreListManager.isUserOrSourceMapIgnoreListedUISourceCode(uiSourceCode));\n    assert.isTrue(ignoreListManager.isUserOrSourceMapIgnoreListedUISourceCode(thirdPartyUiSourceCode));\n  });\n\n  it('folder context menu disables default node_modules ignore listing rule', () => {\n    assert.isTrue(ignoreListManager.isUserOrSourceMapIgnoreListedUISourceCode(nodeModulesUiSourceCode));\n\n    const {items, callbacks} = getFolderContextMenu(sourceMapNodeModulesUrl);\n\n    assert.sameMembers(items, [UIStrings.removeFromIgnoreList]);\n\n    notNull(callbacks.get(UIStrings.removeFromIgnoreList))();\n\n    assert.isFalse(ignoreListManager.isUserOrSourceMapIgnoreListedUISourceCode(nodeModulesUiSourceCode));\n  });\n\n  it('folder context menu enables and disables ignore listing', () => {\n    let {items, callbacks} = getFolderContextMenu(webpackFolderUrl);\n\n    assert.sameMembers(items, [UIStrings.addDirectoryToIgnoreList]);\n\n    notNull(callbacks.get(UIStrings.addDirectoryToIgnoreList))();\n\n    assert.isFalse(ignoreListManager.isUserOrSourceMapIgnoreListedUISourceCode(uiSourceCode));\n    assert.isTrue(ignoreListManager.isUserOrSourceMapIgnoreListedUISourceCode(webpackUiSourceCode));\n\n    ({items, callbacks} = getFolderContextMenu(webpackFolderUrl));\n\n    assert.sameMembers(items, [UIStrings.removeFromIgnoreList]);\n\n    notNull(callbacks.get(UIStrings.removeFromIgnoreList))();\n\n    assert.isFalse(ignoreListManager.isUserOrSourceMapIgnoreListedUISourceCode(uiSourceCode));\n    assert.isFalse(ignoreListManager.isUserOrSourceMapIgnoreListedUISourceCode(webpackUiSourceCode));\n  });\n\n  it('ignore listed folder can be reenabled by script context menu', () => {\n    let {items, callbacks} = getFolderContextMenu(webpackFolderUrl);\n\n    assert.sameMembers(items, [UIStrings.addDirectoryToIgnoreList]);\n\n    notNull(callbacks.get(UIStrings.addDirectoryToIgnoreList))();\n\n    assert.isFalse(ignoreListManager.isUserOrSourceMapIgnoreListedUISourceCode(uiSourceCode));\n    assert.isTrue(ignoreListManager.isUserOrSourceMapIgnoreListedUISourceCode(webpackUiSourceCode));\n\n    ({items, callbacks} = getContextMenu(webpackUiSourceCode));\n\n    assert.sameMembers(items, [UIStrings.removeFromIgnoreList]);\n\n    notNull(callbacks.get(UIStrings.removeFromIgnoreList))();\n\n    assert.isFalse(ignoreListManager.isUserOrSourceMapIgnoreListedUISourceCode(uiSourceCode));\n    assert.isFalse(ignoreListManager.isUserOrSourceMapIgnoreListedUISourceCode(webpackUiSourceCode));\n\n    ({items, callbacks} = getFolderContextMenu(webpackFolderUrl));\n\n    assert.sameMembers(items, [UIStrings.addDirectoryToIgnoreList]);\n\n    notNull(callbacks.get(UIStrings.addDirectoryToIgnoreList))();\n\n    assert.isFalse(ignoreListManager.isUserOrSourceMapIgnoreListedUISourceCode(uiSourceCode));\n    assert.isTrue(ignoreListManager.isUserOrSourceMapIgnoreListedUISourceCode(webpackUiSourceCode));\n  });\n\n  it('ignore listed folder can be reenabled by subfolder context menu', () => {\n    let {items, callbacks} = getFolderContextMenu(webpackFolderUrl);\n\n    assert.sameMembers(items, [UIStrings.addDirectoryToIgnoreList]);\n\n    notNull(callbacks.get(UIStrings.addDirectoryToIgnoreList))();\n\n    assert.isFalse(ignoreListManager.isUserOrSourceMapIgnoreListedUISourceCode(uiSourceCode));\n    assert.isTrue(ignoreListManager.isUserOrSourceMapIgnoreListedUISourceCode(webpackUiSourceCode));\n\n    ({items, callbacks} = getFolderContextMenu(webpackSubfolderUrl));\n\n    assert.sameMembers(items, [UIStrings.removeFromIgnoreList]);\n\n    notNull(callbacks.get(UIStrings.removeFromIgnoreList))();\n\n    assert.isFalse(ignoreListManager.isUserOrSourceMapIgnoreListedUISourceCode(uiSourceCode));\n    assert.isFalse(ignoreListManager.isUserOrSourceMapIgnoreListedUISourceCode(webpackUiSourceCode));\n\n    ({items, callbacks} = getFolderContextMenu(webpackFolderUrl));\n\n    assert.sameMembers(items, [UIStrings.addDirectoryToIgnoreList]);\n\n    notNull(callbacks.get(UIStrings.addDirectoryToIgnoreList))();\n\n    assert.isFalse(ignoreListManager.isUserOrSourceMapIgnoreListedUISourceCode(uiSourceCode));\n    assert.isTrue(ignoreListManager.isUserOrSourceMapIgnoreListedUISourceCode(webpackUiSourceCode));\n  });\n\n  it('enable ignore listing undoes disable', () => {\n    // Ignore the folder\n    let {items, callbacks} = getFolderContextMenu(sourceMapFolderUrl);\n\n    assert.sameMembers(items, [UIStrings.addDirectoryToIgnoreList]);\n\n    notNull(callbacks.get(UIStrings.addDirectoryToIgnoreList))();\n\n    assert.isFalse(ignoreListManager.isUserOrSourceMapIgnoreListedUISourceCode(uiSourceCode));\n    assert.isTrue(ignoreListManager.isUserOrSourceMapIgnoreListedUISourceCode(sourceMapFile1UiSourceCode));\n    assert.isTrue(ignoreListManager.isUserOrSourceMapIgnoreListedUISourceCode(sourceMapFile2UiSourceCode));\n\n    // Disable the folder ignore list rule by way of the script context menu\n    ({items, callbacks} = getContextMenu(sourceMapFile1UiSourceCode));\n\n    assert.sameMembers(items, [UIStrings.removeFromIgnoreList]);\n\n    notNull(callbacks.get(UIStrings.removeFromIgnoreList))();\n\n    assert.isFalse(ignoreListManager.isUserOrSourceMapIgnoreListedUISourceCode(sourceMapFile1UiSourceCode));\n    assert.isFalse(ignoreListManager.isUserOrSourceMapIgnoreListedUISourceCode(sourceMapFile2UiSourceCode));\n\n    // Verify that we have option to add folder to ignore list (but we won't use it)\n    ({items, callbacks} = getFolderContextMenu(sourceMapFolderUrl));\n\n    assert.sameMembers(items, [UIStrings.addDirectoryToIgnoreList]);\n\n    // Reenable from same context menu on same file\n    ({items, callbacks} = getContextMenu(sourceMapFile1UiSourceCode));\n\n    assert.sameMembers(items, [UIStrings.addScriptToIgnoreList]);\n\n    notNull(callbacks.get(UIStrings.addScriptToIgnoreList))();\n\n    // This undoes the disable -- reenabling the directory rule\n    assert.isTrue(ignoreListManager.isUserOrSourceMapIgnoreListedUISourceCode(sourceMapFile1UiSourceCode));\n    assert.isTrue(ignoreListManager.isUserOrSourceMapIgnoreListedUISourceCode(sourceMapFile2UiSourceCode));\n\n    // Verify that we have option to remove folder from ignore list\n    ({items, callbacks} = getFolderContextMenu(sourceMapFolderUrl));\n\n    assert.sameMembers(items, [UIStrings.removeFromIgnoreList]);\n    // Remove folder from ignore list to verify there are no other ignore listing rules\n    notNull(callbacks.get(UIStrings.removeFromIgnoreList))();\n\n    assert.isFalse(ignoreListManager.isUserOrSourceMapIgnoreListedUISourceCode(sourceMapFile1UiSourceCode));\n    assert.isFalse(ignoreListManager.isUserOrSourceMapIgnoreListedUISourceCode(sourceMapFile2UiSourceCode));\n  });\n\n  it('enable ignore listing does not undo disable if done from a different file', () => {\n    // Ignore the folder\n    let {items, callbacks} = getFolderContextMenu(sourceMapFolderUrl);\n\n    assert.sameMembers(items, [UIStrings.addDirectoryToIgnoreList]);\n\n    notNull(callbacks.get(UIStrings.addDirectoryToIgnoreList))();\n\n    assert.isFalse(ignoreListManager.isUserOrSourceMapIgnoreListedUISourceCode(uiSourceCode));\n    assert.isTrue(ignoreListManager.isUserOrSourceMapIgnoreListedUISourceCode(sourceMapFile1UiSourceCode));\n    assert.isTrue(ignoreListManager.isUserOrSourceMapIgnoreListedUISourceCode(sourceMapFile2UiSourceCode));\n\n    // Disable the folder ignore list rule by way of the script context menu\n    ({items, callbacks} = getContextMenu(sourceMapFile1UiSourceCode));\n\n    assert.sameMembers(items, [UIStrings.removeFromIgnoreList]);\n\n    notNull(callbacks.get(UIStrings.removeFromIgnoreList))();\n\n    assert.isFalse(ignoreListManager.isUserOrSourceMapIgnoreListedUISourceCode(sourceMapFile1UiSourceCode));\n    assert.isFalse(ignoreListManager.isUserOrSourceMapIgnoreListedUISourceCode(sourceMapFile2UiSourceCode));\n\n    // Enable ignore listing on a different file in same folder\n    ({items, callbacks} = getContextMenu(sourceMapFile2UiSourceCode));\n\n    assert.sameMembers(items, [UIStrings.addScriptToIgnoreList]);\n\n    notNull(callbacks.get(UIStrings.addScriptToIgnoreList))();\n\n    // This creates a rule for just that file\n    assert.isFalse(ignoreListManager.isUserOrSourceMapIgnoreListedUISourceCode(sourceMapFile1UiSourceCode));\n    assert.isTrue(ignoreListManager.isUserOrSourceMapIgnoreListedUISourceCode(sourceMapFile2UiSourceCode));\n  });\n\n  it('script context menu enables global ignore listing toggle', () => {\n    let {items, callbacks} = getContextMenu(webpackUiSourceCode);\n\n    assert.sameMembers(items, [UIStrings.addScriptToIgnoreList]);\n\n    notNull(callbacks.get(UIStrings.addScriptToIgnoreList))();\n\n    assert.isFalse(ignoreListManager.isUserOrSourceMapIgnoreListedUISourceCode(uiSourceCode));\n    assert.isTrue(ignoreListManager.isUserOrSourceMapIgnoreListedUISourceCode(webpackUiSourceCode));\n\n    ignoreListManager.enableIgnoreListing = false;\n\n    assert.isFalse(ignoreListManager.isUserOrSourceMapIgnoreListedUISourceCode(uiSourceCode));\n    assert.isFalse(ignoreListManager.isUserOrSourceMapIgnoreListedUISourceCode(webpackUiSourceCode));\n\n    ({items, callbacks} = getContextMenu(webpackUiSourceCode));\n\n    assert.sameMembers(items, [UIStrings.addScriptToIgnoreList]);\n\n    notNull(callbacks.get(UIStrings.addScriptToIgnoreList))();\n    assert.isTrue(ignoreListManager.enableIgnoreListing);\n\n    assert.isFalse(ignoreListManager.isUserOrSourceMapIgnoreListedUISourceCode(uiSourceCode));\n    assert.isTrue(ignoreListManager.isUserOrSourceMapIgnoreListedUISourceCode(webpackUiSourceCode));\n  });\n\n  it('content script context menu enables global ignore listing toggle', () => {\n    ignoreListManager.enableIgnoreListing = false;\n\n    const {items, callbacks} = getContextMenu(contentScriptUiSourceCode);\n\n    assert.sameMembers(items, [UIStrings.addScriptToIgnoreList, UIStrings.addAllContentScriptsToIgnoreList]);\n\n    notNull(callbacks.get(UIStrings.addAllContentScriptsToIgnoreList))();\n\n    assert.isTrue(ignoreListManager.enableIgnoreListing);\n    assert.isTrue(ignoreListManager.isUserOrSourceMapIgnoreListedUISourceCode(contentScriptUiSourceCode));\n  });\n\n  it('third party script context menu enables global ignore listing toggle', () => {\n    ignoreListManager.enableIgnoreListing = false;\n\n    assert.isFalse(ignoreListManager.isUserOrSourceMapIgnoreListedUISourceCode(thirdPartyUiSourceCode));\n\n    const {items, callbacks} = getContextMenu(thirdPartyUiSourceCode);\n\n    assert.sameMembers(items, [UIStrings.addScriptToIgnoreList, UIStrings.addAllThirdPartyScriptsToIgnoreList]);\n\n    notNull(callbacks.get(UIStrings.addAllThirdPartyScriptsToIgnoreList))();\n\n    assert.isTrue(ignoreListManager.enableIgnoreListing);\n    assert.isTrue(ignoreListManager.isUserOrSourceMapIgnoreListedUISourceCode(thirdPartyUiSourceCode));\n  });\n\n  it('provides no context menu items when all contents in folder are individually ignored', () => {\n    let {items, callbacks} = getContextMenu(webpackUiSourceCode);\n\n    assert.sameMembers(items, [UIStrings.addScriptToIgnoreList]);\n\n    // Disable webpack script\n    notNull(callbacks.get(UIStrings.addScriptToIgnoreList))();\n\n    assert.isTrue(ignoreListManager.isUserOrSourceMapIgnoreListedUISourceCode(webpackUiSourceCode));\n\n    // Get context menu for folder only containing the script we disabled\n    ({items, callbacks} = getFolderContextMenu(webpackFolderUrl));\n\n    // Verify that no context menu items are provided\n    assert.sameMembers(items, []);\n  });\n\n  describe('isUserOrSourceMapIgnoreListedUISourceCode', () => {\n    it('ignores UISourceCodes that are marked', () => {\n      const {uiSourceCode} = createContentProviderUISourceCode({\n        url: 'debugger://foo' as Platform.DevToolsPath.UrlString,\n        projectType: Workspace.Workspace.projectTypes.Debugger,\n        mimeType: 'text/javascript',\n      });\n      uiSourceCode.markAsUnconditionallyIgnoreListed();\n\n      assert.isTrue(ignoreListManager.isUserOrSourceMapIgnoreListedUISourceCode(uiSourceCode));\n    });\n  });\n});\n"]}