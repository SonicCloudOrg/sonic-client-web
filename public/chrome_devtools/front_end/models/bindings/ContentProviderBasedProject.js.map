{"version":3,"file":"ContentProviderBasedProject.js","sourceRoot":"","sources":["../../../../../../front_end/models/bindings/ContentProviderBasedProject.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2013 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport type * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as TextUtils from '../text_utils/text_utils.js';\nimport * as Workspace from '../workspace/workspace.js';\n\nconst UIStrings = {\n  /**\n   * @description Error message that is displayed in the Sources panel when can't be loaded.\n   */\n  unknownErrorLoadingFile: 'Unknown error loading file',\n};\nconst str_ = i18n.i18n.registerUIStrings('models/bindings/ContentProviderBasedProject.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\ninterface UISourceCodeData {\n  mimeType: string;\n  metadata: Workspace.UISourceCode.UISourceCodeMetadata|null;\n  contentProvider: TextUtils.ContentProvider.ContentProvider;\n}\n\nexport class ContentProviderBasedProject extends Workspace.Workspace.ProjectStore {\n  readonly #isServiceProjectInternal: boolean;\n  readonly #uiSourceCodeToData: WeakMap<Workspace.UISourceCode.UISourceCode, UISourceCodeData>;\n  constructor(\n      workspace: Workspace.Workspace.WorkspaceImpl, id: string, type: Workspace.Workspace.projectTypes,\n      displayName: string, isServiceProject: boolean) {\n    super(workspace, id, type, displayName);\n    this.#isServiceProjectInternal = isServiceProject;\n    this.#uiSourceCodeToData = new WeakMap();\n    workspace.addProject(this);\n  }\n\n  async requestFileContent(uiSourceCode: Workspace.UISourceCode.UISourceCode):\n      Promise<TextUtils.ContentData.ContentDataOrError> {\n    const {contentProvider} = this.#uiSourceCodeToData.get(uiSourceCode) as UISourceCodeData;\n    try {\n      return await contentProvider.requestContentData();\n    } catch (err) {\n      // TODO(rob.paveza): CRBug 1013683 - Consider propagating exceptions full-stack\n      return {\n        error: err ? String(err) : i18nString(UIStrings.unknownErrorLoadingFile),\n      };\n    }\n  }\n\n  isServiceProject(): boolean {\n    return this.#isServiceProjectInternal;\n  }\n\n  async requestMetadata(uiSourceCode: Workspace.UISourceCode.UISourceCode):\n      Promise<Workspace.UISourceCode.UISourceCodeMetadata|null> {\n    const {metadata} = this.#uiSourceCodeToData.get(uiSourceCode) as UISourceCodeData;\n    return metadata;\n  }\n\n  canSetFileContent(): boolean {\n    return false;\n  }\n\n  async setFileContent(_uiSourceCode: Workspace.UISourceCode.UISourceCode, _newContent: string, _isBase64: boolean):\n      Promise<void> {\n  }\n\n  fullDisplayName(uiSourceCode: Workspace.UISourceCode.UISourceCode): string {\n    let parentPath = uiSourceCode.parentURL().replace(/^(?:https?|file)\\:\\/\\//, '');\n    try {\n      parentPath = decodeURI(parentPath);\n    } catch (e) {\n    }\n    return parentPath + '/' + uiSourceCode.displayName(true);\n  }\n\n  mimeType(uiSourceCode: Workspace.UISourceCode.UISourceCode): string {\n    const {mimeType} = (this.#uiSourceCodeToData.get(uiSourceCode) as UISourceCodeData);\n    return mimeType;\n  }\n\n  canRename(): boolean {\n    return false;\n  }\n\n  override rename(\n      uiSourceCode: Workspace.UISourceCode.UISourceCode, newName: Platform.DevToolsPath.RawPathString,\n      callback:\n          (arg0: boolean, arg1?: string|undefined, arg2?: Platform.DevToolsPath.UrlString|undefined,\n           arg3?: Common.ResourceType.ResourceType|undefined) => void): void {\n    const path = uiSourceCode.url();\n    this.performRename(path, newName, (success: boolean, newName?: string) => {\n      if (success && newName) {\n        this.renameUISourceCode(uiSourceCode, newName);\n      }\n      callback(success, newName);\n    });\n  }\n\n  override excludeFolder(_path: Platform.DevToolsPath.UrlString): void {\n  }\n\n  canExcludeFolder(_path: Platform.DevToolsPath.EncodedPathString): boolean {\n    return false;\n  }\n\n  async createFile(\n      _path: Platform.DevToolsPath.EncodedPathString, _name: string|null, _content: string,\n      _isBase64?: boolean): Promise<Workspace.UISourceCode.UISourceCode|null> {\n    return null;\n  }\n\n  canCreateFile(): boolean {\n    return false;\n  }\n\n  override deleteFile(_uiSourceCode: Workspace.UISourceCode.UISourceCode): void {\n  }\n\n  override remove(): void {\n  }\n\n  performRename(\n      path: Platform.DevToolsPath.UrlString, newName: string,\n      callback: (arg0: boolean, arg1?: string|undefined) => void): void {\n    callback(false);\n  }\n\n  searchInFileContent(\n      uiSourceCode: Workspace.UISourceCode.UISourceCode, query: string, caseSensitive: boolean,\n      isRegex: boolean): Promise<TextUtils.ContentProvider.SearchMatch[]> {\n    const {contentProvider} = this.#uiSourceCodeToData.get(uiSourceCode) as UISourceCodeData;\n    return contentProvider.searchInContent(query, caseSensitive, isRegex);\n  }\n\n  async findFilesMatchingSearchRequest(\n      searchConfig: Workspace.SearchConfig.SearchConfig, filesMatchingFileQuery: Workspace.UISourceCode.UISourceCode[],\n      progress: Common.Progress.Progress):\n      Promise<Map<Workspace.UISourceCode.UISourceCode, TextUtils.ContentProvider.SearchMatch[]|null>> {\n    const result = new Map();\n    progress.setTotalWork(filesMatchingFileQuery.length);\n    await Promise.all(filesMatchingFileQuery.map(searchInContent.bind(this)));\n    progress.done();\n    return result;\n\n    async function searchInContent(\n        this: ContentProviderBasedProject, uiSourceCode: Workspace.UISourceCode.UISourceCode): Promise<void> {\n      let allMatchesFound = true;\n      let matches: TextUtils.ContentProvider.SearchMatch[] = [];\n      for (const query of searchConfig.queries().slice()) {\n        const searchMatches =\n            await this.searchInFileContent(uiSourceCode, query, !searchConfig.ignoreCase(), searchConfig.isRegex());\n        if (!searchMatches.length) {\n          allMatchesFound = false;\n          break;\n        }\n        matches = Platform.ArrayUtilities.mergeOrdered(\n            matches, searchMatches as TextUtils.ContentProvider.SearchMatch[],\n            TextUtils.ContentProvider.SearchMatch.comparator);\n      }\n      if (allMatchesFound) {\n        result.set(uiSourceCode, matches);\n      }\n      progress.incrementWorked(1);\n    }\n  }\n\n  override indexContent(progress: Common.Progress.Progress): void {\n    queueMicrotask(progress.done.bind(progress));\n  }\n\n  addUISourceCodeWithProvider(\n      uiSourceCode: Workspace.UISourceCode.UISourceCode, contentProvider: TextUtils.ContentProvider.ContentProvider,\n      metadata: Workspace.UISourceCode.UISourceCodeMetadata|null, mimeType: string): void {\n    this.#uiSourceCodeToData.set(uiSourceCode, {mimeType, metadata, contentProvider});\n    this.addUISourceCode(uiSourceCode);\n  }\n\n  addContentProvider(\n      url: Platform.DevToolsPath.UrlString, contentProvider: TextUtils.ContentProvider.ContentProvider,\n      mimeType: string): Workspace.UISourceCode.UISourceCode {\n    const uiSourceCode = this.createUISourceCode(url, contentProvider.contentType());\n    this.addUISourceCodeWithProvider(uiSourceCode, contentProvider, null, mimeType);\n    return uiSourceCode;\n  }\n\n  reset(): void {\n    this.removeProject();\n    this.workspace().addProject(this);\n  }\n\n  dispose(): void {\n    this.removeProject();\n  }\n}\n"]}