{"version":3,"file":"ResourceScriptMapping.test.js","sourceRoot":"","sources":["../../../../../../front_end/models/bindings/ResourceScriptMapping.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport {createTarget} from '../../testing/EnvironmentHelpers.js';\nimport {describeWithMockConnection} from '../../testing/MockConnection.js';\nimport {MockProtocolBackend} from '../../testing/MockScopeChain.js';\nimport * as TextUtils from '../text_utils/text_utils.js';\nimport * as Workspace from '../workspace/workspace.js';\n\nimport * as Bindings from './bindings.js';\n\ndescribeWithMockConnection('ResourceScriptMapping', () => {\n  const url = 'http://localhost/example.js' as Platform.DevToolsPath.UrlString;\n  let target: SDK.Target.Target;\n  let backend: MockProtocolBackend;\n  let resourceScriptMapping: Bindings.ResourceScriptMapping.ResourceScriptMapping;\n  const contentWithSourceUrl = `console.log(\"Hi!\");\n  debugger;\n  console.log(\"There!\");\n//# sourceURL=test.js`;\n  const contentWithoutSourceUrl = `console.log(\"Hi!\");\n  debugger;\n  console.log(\"There!\");`;\n\n  beforeEach(() => {\n    const workspace = Workspace.Workspace.WorkspaceImpl.instance();\n    const targetManager = SDK.TargetManager.TargetManager.instance();\n    const resourceMapping = new Bindings.ResourceMapping.ResourceMapping(targetManager, workspace);\n    const debuggerWorkspaceBinding = Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.instance({\n      forceNew: true,\n      resourceMapping,\n      targetManager,\n    });\n    Bindings.IgnoreListManager.IgnoreListManager.instance({forceNew: true, debuggerWorkspaceBinding});\n    target = createTarget();\n    backend = new MockProtocolBackend();\n    resourceScriptMapping = new Bindings.ResourceScriptMapping.ResourceScriptMapping(\n        target.model(SDK.DebuggerModel.DebuggerModel) as SDK.DebuggerModel.DebuggerModel, workspace,\n        debuggerWorkspaceBinding);\n  });\n\n  describe('uiLocationRangeToRawLocationRanges', () => {\n    it('maps UI location ranges on first line in scripts without sourceURL', async () => {\n      const script =\n          await backend.addScript(target, {content: contentWithoutSourceUrl, url, hasSourceURL: false}, null);\n      const uiSourceCode = resourceScriptMapping.uiSourceCodeForScript(script);\n      assert.exists(uiSourceCode);\n\n      const rawLocationRanges = resourceScriptMapping.uiLocationRangeToRawLocationRanges(\n          uiSourceCode, new TextUtils.TextRange.TextRange(0, 1, 0, 4));\n      assert.exists(rawLocationRanges);\n      assert.lengthOf(rawLocationRanges, 1);\n      assert.strictEqual(rawLocationRanges[0].start.lineNumber, 0);\n      assert.strictEqual(rawLocationRanges[0].start.columnNumber, 1);\n      assert.strictEqual(rawLocationRanges[0].end.lineNumber, 0);\n      assert.strictEqual(rawLocationRanges[0].end.columnNumber, 4);\n    });\n\n    it('maps UI location ranges in inline scripts without sourceURL', async () => {\n      const script =\n          await backend.addScript(target, {content: contentWithoutSourceUrl, url, hasSourceURL: false}, null);\n      const uiSourceCode = resourceScriptMapping.uiSourceCodeForScript(script);\n      assert.exists(uiSourceCode);\n\n      const rawLocationRanges = resourceScriptMapping.uiLocationRangeToRawLocationRanges(\n          uiSourceCode, new TextUtils.TextRange.TextRange(1, 2, 2, 4));\n      assert.exists(rawLocationRanges);\n      assert.lengthOf(rawLocationRanges, 1);\n      assert.strictEqual(rawLocationRanges[0].start.lineNumber, 1);\n      assert.strictEqual(rawLocationRanges[0].start.columnNumber, 2);\n      assert.strictEqual(rawLocationRanges[0].end.lineNumber, 2);\n      assert.strictEqual(rawLocationRanges[0].end.columnNumber, 4);\n    });\n\n    it('maps UI locations in inline scripts with sourceURL', async () => {\n      const script = await backend.addScript(target, {content: contentWithSourceUrl, url, hasSourceURL: true}, null);\n      const uiSourceCode = resourceScriptMapping.uiSourceCodeForScript(script);\n      assert.exists(uiSourceCode);\n\n      const rawLocationRanges = resourceScriptMapping.uiLocationRangeToRawLocationRanges(\n          uiSourceCode, new TextUtils.TextRange.TextRange(4, 2, 4, 4));\n      assert.exists(rawLocationRanges);\n      assert.lengthOf(rawLocationRanges, 1);\n      assert.strictEqual(rawLocationRanges[0].start.lineNumber, 4);\n      assert.strictEqual(rawLocationRanges[0].start.columnNumber, 2);\n      assert.strictEqual(rawLocationRanges[0].end.lineNumber, 4);\n      assert.strictEqual(rawLocationRanges[0].end.columnNumber, 4);\n    });\n  });\n\n  it('does not create a mapping UISourceCode for conditional breakpoint scripts', async () => {\n    const content = 'x === 5\\n\\n//# sourceURL=debugger://breakpoint';\n    const script = await backend.addScript(\n        target, {content, url: SDK.DebuggerModel.COND_BREAKPOINT_SOURCE_URL, hasSourceURL: true}, null);\n    assert.isTrue(script.isBreakpointCondition);\n\n    const uiSourceCode = resourceScriptMapping.uiSourceCodeForScript(script);\n\n    assert.isNull(uiSourceCode);\n  });\n\n  it('does not create a mapping UISourceCode for logpoint scripts', async () => {\n    const content = 'console.log(x)\\n\\n//# sourceURL=debugger://logpoint';\n    const script = await backend.addScript(\n        target, {content, url: SDK.DebuggerModel.LOGPOINT_SOURCE_URL, hasSourceURL: true}, null);\n    assert.isTrue(script.isBreakpointCondition);\n\n    const uiSourceCode = resourceScriptMapping.uiSourceCodeForScript(script);\n\n    assert.isNull(uiSourceCode);\n  });\n});\n"]}