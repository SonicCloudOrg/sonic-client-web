{"version":3,"file":"DebuggerWorkspaceBinding.js","sourceRoot":"","sources":["../../../../../../front_end/models/bindings/DebuggerWorkspaceBinding.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,MAAM,MAAM,6BAA6B,CAAC;AACtD,OAAO,KAAK,QAAQ,MAAM,iCAAiC,CAAC;AAC5D,OAAO,KAAK,GAAG,MAAM,uBAAuB,CAAC;AAG7C,OAAO,KAAK,SAAS,MAAM,2BAA2B,CAAC;AAEvD,OAAO,EAAC,qBAAqB,EAAC,MAAM,4BAA4B,CAAC;AACjE,OAAO,EAAC,6BAA6B,EAAC,MAAM,8BAA8B,CAAC;AAC3E,OAAO,EAAC,oBAAoB,EAAC,MAAM,2BAA2B,CAAC;AAC/D,OAAO,EAAC,iBAAiB,EAAC,MAAM,wBAAwB,CAAC;AACzD,OAAO,EAA2C,oBAAoB,EAAC,MAAM,mBAAmB,CAAC;AACjG,OAAO,EAAC,cAAc,EAAC,MAAM,qBAAqB,CAAC;AAEnD,OAAO,EAA0B,qBAAqB,EAAC,MAAM,4BAA4B,CAAC;AAE1F,IAAI,gCAAoE,CAAC;AAEzE,MAAM,OAAO,wBAAwB;IAC1B,eAAe,CAAkB;IACjC,eAAe,CAA0B;IACzC,oBAAoB,CAAkD;IACtE,qBAAqB,CAA8D;IACnF,aAAa,CAAgC;IAEtD,YAAoB,eAAgC,EAAE,aAA8C;QAClG,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;QAEvC,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;QAE1B,IAAI,CAAC,oBAAoB,GAAG,IAAI,GAAG,EAAE,CAAC;QACtC,aAAa,CAAC,gBAAgB,CAC1B,GAAG,CAAC,aAAa,CAAC,aAAa,EAAE,GAAG,CAAC,aAAa,CAAC,MAAM,CAAC,mBAAmB,EAAE,IAAI,CAAC,mBAAmB,EAAE,IAAI,CAAC,CAAC;QACnH,aAAa,CAAC,gBAAgB,CAC1B,GAAG,CAAC,aAAa,CAAC,aAAa,EAAE,GAAG,CAAC,aAAa,CAAC,MAAM,CAAC,eAAe,EAAE,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;QAC3G,aAAa,CAAC,aAAa,CAAC,GAAG,CAAC,aAAa,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;QAEnE,IAAI,CAAC,qBAAqB,GAAG,IAAI,GAAG,EAAE,CAAC;QAEvC,IAAI,CAAC,aAAa,GAAG,IAAI,6BAA6B,CAAC,aAAa,EAAE,eAAe,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;IACzG,CAAC;IAED,MAAM,CAAC,QAAQ,CAAC,OAIZ,EAAC,QAAQ,EAAE,IAAI,EAAE,eAAe,EAAE,IAAI,EAAE,aAAa,EAAE,IAAI,EAAC;QAC9D,MAAM,EAAC,QAAQ,EAAE,eAAe,EAAE,aAAa,EAAC,GAAG,IAAI,CAAC;QACxD,IAAI,CAAC,gCAAgC,IAAI,QAAQ,EAAE,CAAC;YAClD,IAAI,CAAC,eAAe,IAAI,CAAC,aAAa,EAAE,CAAC;gBACvC,MAAM,IAAI,KAAK,CACX,kGACI,IAAI,KAAK,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;YAC/B,CAAC;YAED,gCAAgC,GAAG,IAAI,wBAAwB,CAAC,eAAe,EAAE,aAAa,CAAC,CAAC;QAClG,CAAC;QAED,OAAO,gCAAgC,CAAC;IAC1C,CAAC;IAED,MAAM,CAAC,cAAc;QACnB,gCAAgC,GAAG,SAAS,CAAC;IAC/C,CAAC;IAED,gBAAgB,CAAC,aAAoC;QACnD,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IAC3C,CAAC;IAED,mBAAmB,CAAC,aAAoC;QACtD,MAAM,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;QAC1D,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE,CAAC;YACjB,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QACxC,CAAC;IACH,CAAC;IAEO,KAAK,CAAC,qBAAqB,CAAC,IAAgC,EAAE,SAAsC;QAE1G,SAAS,SAAS,CAAC,QAAoC,EAAE,KAAsC;YAC7F,MAAM,EAAC,KAAK,EAAE,GAAG,EAAC,GAAG,KAAK,CAAC;YAC3B,IAAI,KAAK,CAAC,QAAQ,KAAK,QAAQ,CAAC,QAAQ,EAAE,CAAC;gBACzC,OAAO,KAAK,CAAC;YACf,CAAC;YACD,IAAI,QAAQ,CAAC,UAAU,GAAG,KAAK,CAAC,UAAU,IAAI,QAAQ,CAAC,UAAU,GAAG,GAAG,CAAC,UAAU,EAAE,CAAC;gBACnF,OAAO,KAAK,CAAC;YACf,CAAC;YACD,IAAI,QAAQ,CAAC,UAAU,KAAK,KAAK,CAAC,UAAU,IAAI,QAAQ,CAAC,YAAY,GAAG,KAAK,CAAC,YAAY,EAAE,CAAC;gBAC3F,OAAO,KAAK,CAAC;YACf,CAAC;YACD,IAAI,QAAQ,CAAC,UAAU,KAAK,GAAG,CAAC,UAAU,IAAI,QAAQ,CAAC,YAAY,IAAI,GAAG,CAAC,YAAY,EAAE,CAAC;gBACxF,OAAO,KAAK,CAAC;YACf,CAAC;YACD,OAAO,IAAI,CAAC;QACd,CAAC;QAED,MAAM,WAAW,GAAG,SAAS,CAAC,QAAQ,EAAE,CAAC;QACzC,IAAI,CAAC,WAAW,EAAE,CAAC;YACjB,OAAO,EAAE,CAAC;QACZ,CAAC;QACD,MAAM,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;QACzC,IAAI,MAAM,GAAsC,EAAE,CAAC;QACnD,IAAI,IAAI,uDAAuC,EAAE,CAAC;YAChD,+BAA+B;YAC/B,OAAO,MAAM,aAAa,CAAC,wBAAwB,CAAC,WAAW,CAAC,CAAC;QACnE,CAAC;QACD,MAAM,UAAU,GAAG,MAAM,aAAa,CAAC,uBAAuB,CAAC,WAAW,CAAC,CAAC;QAC5E,IAAI,UAAU,EAAE,CAAC;YACf,MAAM,GAAG,MAAM,aAAa,CAAC,6BAA6B,CAC7C,UAAU,CAAC,YAAY,EAAE,UAAU,CAAC,UAAU,EAAE,UAAU,CAAC,YAAY,CAAC;gBACjF,EAAE,CAAC;YACP,6DAA6D;YAC7D,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,SAAS,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC,CAAC;YAC/D,IAAI,IAAI,yDAAwC,EAAE,CAAC;gBACjD,iCAAiC;gBACjC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,aAAa,CAAC,uBAAuB,CAAC,WAAW,CAAC,CAAC,CAAC;YACnF,CAAC;YACD,OAAO,MAAM,CAAC;QAChB,CAAC;QAED,MAAM,eAAe,GAAG,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,WAAW,CAAC,aAAa,CAAC,EAAE,eAAe,CAAC;QAClG,IAAI,CAAC,eAAe,EAAE,CAAC;YACrB,OAAO,EAAE,CAAC;QACZ,CAAC;QACD,MAAM,GAAG,eAAe,CAAC,sCAAsC,CAAC,WAAW,CAAC,CAAC;QAC7E,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,SAAS,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC,CAAC;QAC/D,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,UAAU,CAAC,aAA8C;QACvD,aAAa,CAAC,uBAAuB,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QACnE,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,aAAa,EAAE,IAAI,SAAS,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC,CAAC;QACjF,aAAa,CAAC,gCAAgC,CAAC,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IACxF,CAAC;IAED,YAAY,CAAC,aAA8C;QACzD,aAAa,CAAC,gCAAgC,CAAC,IAAI,CAAC,CAAC;QACrD,MAAM,SAAS,GAAG,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;QAC/D,IAAI,SAAS,EAAE,CAAC;YACd,SAAS,CAAC,OAAO,EAAE,CAAC;YACpB,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;QAClD,CAAC;IACH,CAAC;IAED;;;OAGG;IACH,KAAK,CAAC,iCAAiC;QACrC,MAAM,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;IAChD,CAAC;IAEO,wBAAwB,CAAC,OAA+D;QAC9F,KAAK,OAAO,CAAC,IAAI,CAAC,GAAG,EAAE;YACrB,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QAC7C,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IAC1C,CAAC;IAED,KAAK,CAAC,eAAe,CAAC,MAAyB;QAC7C,MAAM,SAAS,GAAG,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;QACtE,IAAI,SAAS,EAAE,CAAC;YACd,MAAM,aAAa,GAAG,SAAS,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;YACxD,IAAI,CAAC,wBAAwB,CAAC,aAAa,CAAC,CAAC;YAC7C,MAAM,aAAa,CAAC;QACtB,CAAC;IACH,CAAC;IAED,KAAK,CAAC,kBAAkB,CACpB,WAAuC,EAAE,cAAqD,EAC9F,YAA8B;QAChC,MAAM,SAAS,GAAG,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;QAC3E,IAAI,CAAC,SAAS,EAAE,CAAC;YACf,OAAO,IAAI,CAAC;QACd,CAAC;QACD,MAAM,mBAAmB,GAAG,SAAS,CAAC,kBAAkB,CAAC,WAAW,EAAE,cAAc,EAAE,YAAY,CAAC,CAAC;QACpG,IAAI,CAAC,wBAAwB,CAAC,mBAAmB,CAAC,CAAC;QACnD,OAAO,mBAAmB,CAAC;IAC7B,CAAC;IAED,KAAK,CAAC,oCAAoC,CACtC,YAA0C,EAAE,cAAqD,EACjG,YAA8B;QAChC,OAAO,CAAC,MAAM,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QACxC,MAAM,eAAe,GACjB,0BAA0B,CAAC,gCAAgC,CAAC,YAAY,EAAE,IAAI,EAAE,cAAc,EAAE,YAAY,CAAC,CAAC;QAClH,IAAI,CAAC,wBAAwB,CAAC,eAAe,CAAC,CAAC;QAC/C,OAAO,eAAe,CAAC;IACzB,CAAC;IAED,KAAK,CAAC,2BAA2B,CAC7B,QAAoC,EAAE,cAAqD,EAC3F,YAA8B;QAChC,MAAM,MAAM,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC;QACjC,IAAI,CAAC,MAAM,EAAE,CAAC;YACZ,OAAO,IAAI,CAAC;QACd,CAAC;QACD,MAAM,aAAa,GAAG,QAAQ,CAAC,aAAa,CAAC;QAC7C,MAAM,mBAAmB,GAAG,IAAI,CAAC,kBAAkB,CAAC,QAAQ,EAAE,cAAc,EAAE,YAAY,CAAC,CAAC;QAC5F,IAAI,CAAC,wBAAwB,CAAC,mBAAmB,CAAC,CAAC;QACnD,MAAM,YAAY,GAAG,MAAM,mBAAmB,CAAC;QAC/C,IAAI,CAAC,YAAY,EAAE,CAAC;YAClB,OAAO,IAAI,CAAC;QACd,CAAC;QACD,IAAI,CAAC,6BAA6B,CAAC,aAAa,EAAE,YAAY,CAAC,CAAC;QAChE,OAAO,YAAY,CAAC;IACtB,CAAC;IAED,KAAK,CAAC,uBAAuB,CAAC,WAAuC;QAEnE,KAAK,MAAM,aAAa,IAAI,IAAI,CAAC,eAAe,EAAE,CAAC;YACjD,MAAM,UAAU,GAAG,aAAa,CAAC,uBAAuB,CAAC,WAAW,CAAC,CAAC;YACtE,IAAI,UAAU,EAAE,CAAC;gBACf,OAAO,UAAU,CAAC;YACpB,CAAC;QACH,CAAC;QACD,MAAM,UAAU,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,WAAW,CAAC,CAAC;QACjF,IAAI,UAAU,EAAE,CAAC;YACf,OAAO,UAAU,CAAC;QACpB,CAAC;QACD,MAAM,SAAS,GAAG,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;QAC3E,OAAO,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,uBAAuB,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;IAC3E,CAAC;IAED,iCAAiC,CAC7B,aAA8C,EAAE,GAAoC,EACpF,eAAwB;QAC1B,MAAM,SAAS,GAAG,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;QAC/D,IAAI,CAAC,SAAS,EAAE,CAAC;YACf,OAAO,IAAI,CAAC;QACd,CAAC;QACD,OAAO,SAAS,CAAC,eAAe,CAAC,kBAAkB,CAAC,GAAG,EAAE,eAAe,CAAC,CAAC;IAC5E,CAAC;IAED,KAAK,CAAC,wCAAwC,CAC1C,aAA8C,EAAE,GAAoC,EACpF,eAAwB;QAC1B,MAAM,YAAY,GAAG,IAAI,CAAC,iCAAiC,CAAC,aAAa,EAAE,GAAG,EAAE,eAAe,CAAC,CAAC;QACjG,OAAO,YAAY,IAAI,IAAI,CAAC,wBAAwB,CAAC,GAAG,EAAE,aAAa,CAAC,MAAM,EAAE,CAAC,CAAC;IACpF,CAAC;IAED,KAAK,CAAC,qDAAqD,CACvD,aAA8C,EAC9C,GAAoC;QACtC,MAAM,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,aAAa,EAAE,GAAG,CAAC,CAAC;QAC/E,OAAO,YAAY,IAAI,IAAI,CAAC,wBAAwB,CAAC,GAAG,EAAE,aAAa,CAAC,MAAM,EAAE,CAAC,CAAC;IACpF,CAAC;IAED,qBAAqB,CAAC,MAAyB;QAC7C,MAAM,SAAS,GAAG,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;QACtE,IAAI,CAAC,SAAS,EAAE,CAAC;YACf,OAAO,IAAI,CAAC;QACd,CAAC;QACD,OAAO,SAAS,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC;IACjD,CAAC;IAED,wBAAwB,CAAC,GAAoC,EAAE,MAAyB;QAEtF,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE;YAC3B,MAAM,SAAS,GAAG,SAAS,CAAC,SAAS,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC;YAC/D,MAAM,UAAU,GAAG,SAAS,CAAC,gBAAgB,CAAC,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC,iBAAiB,EAAE,KAAK,CAAC,EAAE;gBAClG,MAAM,YAAY,GAAG,KAAK,CAAC,IAAI,CAAC;gBAChC,IAAI,YAAY,CAAC,GAAG,EAAE,KAAK,GAAG,IAAI,cAAc,CAAC,qBAAqB,CAAC,YAAY,CAAC,KAAK,MAAM,EAAE,CAAC;oBAChG,SAAS,CAAC,mBAAmB,CAAC,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC,iBAAiB,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC;oBACjG,OAAO,CAAC,YAAY,CAAC,CAAC;gBACxB,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,KAAK,CAAC,wBAAwB,CAC1B,YAAiD,EAAE,UAAkB,EACrE,YAAqB;QACvB,KAAK,MAAM,aAAa,IAAI,IAAI,CAAC,eAAe,EAAE,CAAC;YACjD,MAAM,SAAS,GAAG,aAAa,CAAC,wBAAwB,CAAC,YAAY,EAAE,UAAU,EAAE,YAAY,CAAC,CAAC;YACjG,IAAI,SAAS,CAAC,MAAM,EAAE,CAAC;gBACrB,OAAO,SAAS,CAAC;YACnB,CAAC;QACH,CAAC;QACD,MAAM,SAAS,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC,wBAAwB,CAAC,YAAY,EAAE,UAAU,EAAE,YAAY,CAAC,CAAC;QAC5G,IAAI,SAAS,EAAE,CAAC;YACd,OAAO,SAAS,CAAC;QACnB,CAAC;QACD,KAAK,MAAM,SAAS,IAAI,IAAI,CAAC,oBAAoB,CAAC,MAAM,EAAE,EAAE,CAAC;YAC3D,MAAM,SAAS,GAAG,SAAS,CAAC,wBAAwB,CAAC,YAAY,EAAE,UAAU,EAAE,YAAY,CAAC,CAAC;YAC7F,IAAI,SAAS,CAAC,MAAM,EAAE,CAAC;gBACrB,OAAO,SAAS,CAAC;YACnB,CAAC;QACH,CAAC;QACD,OAAO,EAAE,CAAC;IACZ,CAAC;IAED;;;;;;;;;;;;;;;;;;;OAmBG;IACH,KAAK,CAAC,kCAAkC,CACpC,YAAiD,EACjD,SAAwC;QAC1C,KAAK,MAAM,aAAa,IAAI,IAAI,CAAC,eAAe,EAAE,CAAC;YACjD,MAAM,MAAM,GAAG,aAAa,CAAC,kCAAkC,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;YACzF,IAAI,MAAM,EAAE,CAAC;gBACX,OAAO,MAAM,CAAC;YAChB,CAAC;QACH,CAAC;QACD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC,kCAAkC,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;QACpG,IAAI,MAAM,EAAE,CAAC;YACX,OAAO,MAAM,CAAC;QAChB,CAAC;QACD,KAAK,MAAM,SAAS,IAAI,IAAI,CAAC,oBAAoB,CAAC,MAAM,EAAE,EAAE,CAAC;YAC3D,MAAM,MAAM,GAAG,SAAS,CAAC,kCAAkC,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;YACrF,IAAI,MAAM,EAAE,CAAC;gBACX,OAAO,MAAM,CAAC;YAChB,CAAC;QACH,CAAC;QACD,OAAO,EAAE,CAAC;IACZ,CAAC;IAED,gDAAgD,CAC5C,YAAiD,EAAE,UAAkB,EACrE,YAAoB;QACtB,OAAO,CAAC,MAAM,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAC;QACtD,MAAM,SAAS,GAAG,EAAE,CAAC;QACrB,KAAK,MAAM,SAAS,IAAI,IAAI,CAAC,oBAAoB,CAAC,MAAM,EAAE,EAAE,CAAC;YAC3D,SAAS,CAAC,IAAI,CAAC,GAAG,SAAS,CAAC,wBAAwB,CAAC,YAAY,EAAE,UAAU,EAAE,YAAY,CAAC,CAAC,CAAC;QAChG,CAAC;QACD,OAAO,SAAS,CAAC;IACnB,CAAC;IAED,KAAK,CAAC,mBAAmB,CAAC,UAA6C;QACrE,MAAM,YAAY,GACd,MAAM,IAAI,CAAC,wBAAwB,CAAC,UAAU,CAAC,YAAY,EAAE,UAAU,CAAC,UAAU,EAAE,UAAU,CAAC,YAAY,CAAC,CAAC;QACjH,KAAK,MAAM,QAAQ,IAAI,YAAY,EAAE,CAAC;YACpC,MAAM,mBAAmB,GAAG,MAAM,IAAI,CAAC,uBAAuB,CAAC,QAAQ,CAAC,CAAC;YACzE,IAAI,mBAAmB,EAAE,CAAC;gBACxB,OAAO,mBAAmB,CAAC;YAC7B,CAAC;QACH,CAAC;QACD,OAAO,UAAU,CAAC;IACpB,CAAC;IAED;;;;;;;;;OASG;IACH,KAAK,CAAC,cAAc,CAAC,YAAiD;QACpE,KAAK,MAAM,SAAS,IAAI,IAAI,CAAC,oBAAoB,CAAC,MAAM,EAAE,EAAE,CAAC;YAC3D,MAAM,WAAW,GAAG,SAAS,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;YAC3D,IAAI,WAAW,KAAK,IAAI,EAAE,CAAC;gBACzB,OAAO,WAAW,CAAC;YACrB,CAAC;QACH,CAAC;QACD,OAAO,MAAM,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;IAC/D,CAAC;IAED,UAAU,CAAC,YAAiD,EAAE,aAA8C;QAE1G,MAAM,SAAS,GAAG,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;QAC/D,OAAO,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,wBAAwB,EAAE,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;IAC1F,CAAC;IAED,sBAAsB,CAAC,YAAiD;QACtE,MAAM,OAAO,GAAG,IAAI,GAAG,EAAqB,CAAC;QAC7C,IAAI,CAAC,aAAa,CAAC,sBAAsB,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;QAC/F,KAAK,MAAM,SAAS,IAAI,IAAI,CAAC,oBAAoB,CAAC,MAAM,EAAE,EAAE,CAAC;YAC3D,MAAM,kBAAkB,GAAG,SAAS,CAAC,wBAAwB,EAAE,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;YACzF,IAAI,kBAAkB,IAAI,kBAAkB,CAAC,MAAM,EAAE,CAAC;gBACpD,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC;YACzC,CAAC;YACD,SAAS,CAAC,eAAe,CAAC,sBAAsB,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;QACxG,CAAC;QACD,OAAO,CAAC,GAAG,OAAO,CAAC,CAAC;IACtB,CAAC;IAED,8BAA8B,CAAC,YAAiD;QAC9E,MAAM,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,sBAAsB,CAAC,YAAY,CAAC,CAAC;QACxE,OAAO,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC,CAAC;IACxD,CAAC;IAEO,mBAAmB,CAAC,KAA2E;QACrG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IACzB,CAAC;IAEO,KAAK,CAAC,aAA8C;QAC1D,MAAM,SAAS,GAAG,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;QAC/D,IAAI,CAAC,SAAS,EAAE,CAAC;YACf,OAAO;QACT,CAAC;QACD,KAAK,MAAM,QAAQ,IAAI,SAAS,CAAC,kBAAkB,CAAC,MAAM,EAAE,EAAE,CAAC;YAC7D,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC;QACpC,CAAC;QACD,SAAS,CAAC,kBAAkB,CAAC,KAAK,EAAE,CAAC;IACvC,CAAC;IAED,YAAY,CAAC,MAAyB;QACpC,MAAM,aAAa,GAAI,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,aAAa,CAAC,aAAa,CAAqC,CAAC;QACzG,MAAM,SAAS,GAAG,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;QAC/D,IAAI,SAAS,EAAE,CAAC;YACd,SAAS,CAAC,wBAAwB,EAAE,CAAC,YAAY,EAAE,CAAC;QACtD,CAAC;IACH,CAAC;IAEO,6BAA6B,CAAC,aAA8C,EAAE,QAAkB;QACtG,MAAM,SAAS,GAAG,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;QAC/D,IAAI,SAAS,EAAE,CAAC;YACd,MAAM,SAAS,GAAG,SAAS,CAAC,kBAAkB,CAAC;YAC/C,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAC1B,CAAC;IACH,CAAC;IAED,kBAAkB,CAAC,QAAkB;QACnC,MAAM,SAAS,GAAG,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,QAAQ,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;QACpF,IAAI,SAAS,EAAE,CAAC;YACd,SAAS,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;QACtC,CAAC;IACH,CAAC;IAEO,eAAe,CAAC,KAA2E;QACjG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IACzB,CAAC;IAEO,KAAK,CAAC,WAAW,CACrB,qBAA8D,EAC9D,mBAAoD;QACtD,uEAAuE;QACvE,MAAM,EAAC,UAAU,EAAE,CAAC,KAAK,CAAC,EAAC,GAAG,qBAAqB,CAAC;QACpD,IAAI,CAAC,KAAK,EAAE,CAAC;YACX,OAAO,KAAK,CAAC;QACf,CAAC;QACD,MAAM,gBAAgB,GAAG,KAAK,CAAC,gBAAgB,EAAE,CAAC;QAClD,IAAI,CAAC,mBAAmB,IAAI,qBAAqB,CAAC,MAAM,0DAA6C;YACjG,CAAC,gBAAgB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,oBAAoB,CAAC,CAAC,GAAG,EAAE;YACzG,CAAC,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC;YACzD,OAAO,IAAI,CAAC;QACd,CAAC;QACD,MAAM,UAAU,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;QACtF,IAAI,UAAU,EAAE,CAAC;YACf,OAAO,IAAI,CAAC;QACd,CAAC;QAED,OAAO,mBAAmB,CAAC,MAAM,EAAE,KAAK,gBAAgB,CAAC,MAAM,EAAE;YAC7D,mBAAmB,CAAC,YAAY,KAAK,gBAAgB,CAAC,YAAY;YAClE,mBAAmB,CAAC,UAAU,KAAK,gBAAgB,CAAC,UAAU,CAAC;IACrE,CAAC;CACF;AAED,MAAM,SAAS;IACJ,cAAc,CAAkC;IAChD,yBAAyB,CAA2B;IAC7D,kBAAkB,CAAgB;IAClC,eAAe,CAAuB;IAC7B,gBAAgB,CAAkB;IAC3C,sBAAsB,CAAwB;IACrC,eAAe,CAAwB;IACvC,UAAU,CAAmD;IAEtE,YAAY,aAA8C,EAAE,wBAAkD;QAC5G,IAAI,CAAC,cAAc,GAAG,aAAa,CAAC;QACpC,IAAI,CAAC,yBAAyB,GAAG,wBAAwB,CAAC;QAE1D,IAAI,CAAC,kBAAkB,GAAG,IAAI,GAAG,EAAE,CAAC;QAEpC,MAAM,EAAC,SAAS,EAAC,GAAG,wBAAwB,CAAC,eAAe,CAAC;QAC7D,IAAI,CAAC,eAAe,GAAG,IAAI,oBAAoB,CAAC,aAAa,EAAE,SAAS,EAAE,wBAAwB,CAAC,CAAC;QACpG,IAAI,CAAC,gBAAgB,GAAG,wBAAwB,CAAC,eAAe,CAAC;QACjE,IAAI,CAAC,sBAAsB,GAAG,IAAI,qBAAqB,CAAC,aAAa,EAAE,SAAS,EAAE,wBAAwB,CAAC,CAAC;QAC5G,IAAI,CAAC,eAAe,GAAG,IAAI,qBAAqB,CAAC,aAAa,EAAE,SAAS,EAAE,wBAAwB,CAAC,CAAC;QAErG,IAAI,CAAC,UAAU,GAAG,IAAI,QAAQ,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;IACzD,CAAC;IAED,KAAK,CAAC,kBAAkB,CACpB,WAAuC,EAAE,cAAqD,EAC9F,YAA8B;QAChC,OAAO,CAAC,MAAM,CAAC,WAAW,CAAC,QAAQ,KAAK,EAAE,CAAC,CAAC;QAC5C,MAAM,QAAQ,GAAG,WAAW,CAAC,QAAQ,CAAC;QACtC,MAAM,QAAQ,GAAG,IAAI,QAAQ,CAAC,QAAQ,EAAE,WAAW,EAAE,IAAI,CAAC,yBAAyB,EAAE,cAAc,EAAE,YAAY,CAAC,CAAC;QACnH,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;QACxC,MAAM,QAAQ,CAAC,MAAM,EAAE,CAAC;QACxB,OAAO,QAAQ,CAAC;IAClB,CAAC;IAED,eAAe,CAAC,QAAkB;QAChC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;IACtD,CAAC;IAED,KAAK,CAAC,eAAe,CAAC,MAAyB;QAC7C,MAAM,QAAQ,GAAG,EAAE,CAAC;QACpB,KAAK,MAAM,QAAQ,IAAI,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC;YAC5D,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC;QACnC,CAAC;QACD,MAAM,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IAC9B,CAAC;IAED,uBAAuB,CAAC,WAAuC;QAC7D,IAAI,UAAU,GAAG,IAAI,CAAC,eAAe,CAAC,uBAAuB,CAAC,WAAW,CAAC,CAAC;QAC3E,UAAU,GAAG,UAAU,IAAI,IAAI,CAAC,sBAAsB,CAAC,uBAAuB,CAAC,WAAW,CAAC,CAAC;QAC5F,UAAU,GAAG,UAAU,IAAI,IAAI,CAAC,gBAAgB,CAAC,sBAAsB,CAAC,WAAW,CAAC,CAAC;QACrF,UAAU,GAAG,UAAU,IAAI,IAAI,CAAC,eAAe,CAAC,uBAAuB,CAAC,WAAW,CAAC,CAAC;QACrF,OAAO,UAAU,CAAC;IACpB,CAAC;IAED,qBAAqB,CAAC,MAAyB;QAC7C,IAAI,YAAY,GAA6C,IAAI,CAAC;QAClE,YAAY,GAAG,YAAY,IAAI,IAAI,CAAC,sBAAsB,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC;QACzF,YAAY,GAAG,YAAY,IAAI,IAAI,CAAC,gBAAgB,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC;QACnF,YAAY,GAAG,YAAY,IAAI,IAAI,CAAC,eAAe,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC;QAClF,OAAO,YAAY,CAAC;IACtB,CAAC;IAED,wBAAwB,CACpB,YAAiD,EAAE,UAAkB,EACrE,eAAiC,CAAC;QACpC,0GAA0G;QAC1G,IAAI,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,wBAAwB,CAAC,YAAY,EAAE,UAAU,EAAE,YAAY,CAAC,CAAC;QACtG,SAAS,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC;YAC1B,SAAS,CAAC,CAAC;YACX,IAAI,CAAC,sBAAsB,CAAC,wBAAwB,CAAC,YAAY,EAAE,UAAU,EAAE,YAAY,CAAC,CAAC;QACjG,SAAS,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC;YAC1B,SAAS,CAAC,CAAC;YACX,IAAI,CAAC,gBAAgB,CAAC,uBAAuB,CAAC,YAAY,EAAE,UAAU,EAAE,YAAY,CAAC,CAAC;QAC1F,SAAS,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC;YAC1B,SAAS,CAAC,CAAC;YACX,IAAI,CAAC,eAAe,CAAC,wBAAwB,CAAC,YAAY,EAAE,UAAU,EAAE,YAAY,CAAC,CAAC;QAC1F,OAAO,SAAS,CAAC;IACnB,CAAC;IAED,kCAAkC,CAC9B,YAAiD,EACjD,SAAwC;QAC1C,IAAI,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,kCAAkC,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;QAC9F,MAAM,KAAK,IAAI,CAAC,sBAAsB,CAAC,kCAAkC,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;QACnG,MAAM,KAAK,IAAI,CAAC,gBAAgB,CAAC,iCAAiC,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;QAC5F,MAAM,KAAK,IAAI,CAAC,eAAe,CAAC,kCAAkC,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;QAC5F,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,cAAc,CAAC,YAAiD;QAC9D,MAAM,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;QACtE,kFAAkF;QAClF,2DAA2D;QAC3D,mFAAmF;QACnF,OAAO,WAAW,CAAC;IACrB,CAAC;IAED,OAAO;QACL,IAAI,CAAC,cAAc,CAAC,uBAAuB,CAAC,IAAI,CAAC,CAAC;QAClD,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,CAAC;QAC/B,IAAI,CAAC,sBAAsB,CAAC,OAAO,EAAE,CAAC;QACtC,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,CAAC;IACjC,CAAC;IAED,wBAAwB;QACtB,OAAO,IAAI,CAAC,sBAAsB,CAAC;IACrC,CAAC;CACF;AAED,MAAM,OAAO,QAAS,SAAQ,oBAAoB;IACvC,QAAQ,CAAS;IACjB,WAAW,CAA6B;IACxC,QAAQ,CAA2B;IAE5C,YACI,QAAgB,EAAE,WAAuC,EAAE,OAAiC,EAC5F,cAAqD,EAAE,YAA8B;QACvF,KAAK,CAAC,cAAc,EAAE,YAAY,CAAC,CAAC;QACpC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;IAC1B,CAAC;IAEQ,KAAK,CAAC,UAAU;QACvB,MAAM,qBAAqB,GAAG,IAAI,CAAC,WAAW,CAAC;QAC/C,OAAO,IAAI,CAAC,QAAQ,CAAC,uBAAuB,CAAC,qBAAqB,CAAC,CAAC;IACtE,CAAC;IAEQ,OAAO;QACd,KAAK,CAAC,OAAO,EAAE,CAAC;QAChB,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;IACzC,CAAC;IAEQ,KAAK,CAAC,cAAc;QAC3B,MAAM,UAAU,GAAG,MAAM,IAAI,CAAC,UAAU,EAAE,CAAC;QAC3C,IAAI,CAAC,UAAU,EAAE,CAAC;YAChB,OAAO,KAAK,CAAC;QACf,CAAC;QACD,OAAO,iBAAiB,CAAC,QAAQ,EAAE,CAAC,yCAAyC,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;IACzG,CAAC;CACF;AAED,MAAM,0BAA2B,SAAQ,oBAAoB;IAC3D,gBAAgB,CAAU;IAC1B,QAAQ,CAAoB;IAC5B,UAAU,CAAsB;IAChC,YAAY,cAAqD,EAAE,YAA8B;QAC/F,KAAK,CAAC,cAAc,EAAE,YAAY,CAAC,CAAC;QACpC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAC7B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;IACzB,CAAC;IAED,MAAM,CAAC,KAAK,CAAC,gCAAgC,CACzC,YAA0C,EAAE,OAAiC,EAC7E,cAAqD,EACrD,YAA8B;QAChC,MAAM,QAAQ,GAAG,IAAI,0BAA0B,CAAC,cAAc,EAAE,YAAY,CAAC,CAAC;QAC9E,MAAM,iBAAiB,GAAG,YAAY,CAAC,GAAG,CACtC,WAAW,CAAC,EAAE,CAAC,OAAO,CAAC,kBAAkB,CAAC,WAAW,EAAE,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,YAAY,CAAC,CAAC,CAAC;QAClH,QAAQ,CAAC,UAAU,GAAI,CAAC,MAAM,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,CAAgB,CAAC;QACrG,MAAM,QAAQ,CAAC,cAAc,EAAE,CAAC;QAChC,OAAO,QAAQ,CAAC;IAClB,CAAC;IAEQ,KAAK,CAAC,UAAU;QACvB,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;IAC3D,CAAC;IAEQ,KAAK,CAAC,cAAc;QAC3B,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC;IAChE,CAAC;IAEQ,OAAO;QACd,KAAK,CAAC,OAAO,EAAE,CAAC;QAChB,IAAI,IAAI,CAAC,UAAU,EAAE,CAAC;YACpB,KAAK,MAAM,QAAQ,IAAI,IAAI,CAAC,UAAU,EAAE,CAAC;gBACvC,QAAQ,CAAC,OAAO,EAAE,CAAC;YACrB,CAAC;QACH,CAAC;QACD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;IACvB,CAAC;IAEO,KAAK,CAAC,cAAc;QAC1B,IAAI,IAAI,CAAC,gBAAgB,EAAE,CAAC;YAC1B,OAAO;QACT,CAAC;QACD,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAC7B,cAAc,CAAC,GAAG,EAAE;YAClB,KAAK,IAAI,CAAC,cAAc,EAAE,CAAC;QAC7B,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,KAAK,CAAC,cAAc;QAC1B,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAC9B,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;YACrD,OAAO;QACT,CAAC;QAED,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;QACnC,KAAK,MAAM,QAAQ,IAAI,IAAI,CAAC,UAAU,EAAE,CAAC;YACvC,IAAI,CAAC,CAAC,MAAM,QAAQ,CAAC,cAAc,EAAE,CAAC,EAAE,CAAC;gBACvC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;gBACzB,MAAM;YACR,CAAC;QACH,CAAC;QACD,KAAK,IAAI,CAAC,MAAM,EAAE,CAAC;IACrB,CAAC;CACF","sourcesContent":["// Copyright 2014 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport type * as TextUtils from '../text_utils/text_utils.js';\nimport * as Workspace from '../workspace/workspace.js';\n\nimport {CompilerScriptMapping} from './CompilerScriptMapping.js';\nimport {DebuggerLanguagePluginManager} from './DebuggerLanguagePlugins.js';\nimport {DefaultScriptMapping} from './DefaultScriptMapping.js';\nimport {IgnoreListManager} from './IgnoreListManager.js';\nimport {type LiveLocation, type LiveLocationPool, LiveLocationWithPool} from './LiveLocation.js';\nimport {NetworkProject} from './NetworkProject.js';\nimport {type ResourceMapping} from './ResourceMapping.js';\nimport {type ResourceScriptFile, ResourceScriptMapping} from './ResourceScriptMapping.js';\n\nlet debuggerWorkspaceBindingInstance: DebuggerWorkspaceBinding|undefined;\n\nexport class DebuggerWorkspaceBinding implements SDK.TargetManager.SDKModelObserver<SDK.DebuggerModel.DebuggerModel> {\n  readonly resourceMapping: ResourceMapping;\n  readonly #sourceMappings: DebuggerSourceMapping[];\n  readonly #debuggerModelToData: Map<SDK.DebuggerModel.DebuggerModel, ModelData>;\n  readonly #liveLocationPromises: Set<Promise<void|Location|StackTraceTopFrameLocation|null>>;\n  readonly pluginManager: DebuggerLanguagePluginManager;\n\n  private constructor(resourceMapping: ResourceMapping, targetManager: SDK.TargetManager.TargetManager) {\n    this.resourceMapping = resourceMapping;\n\n    this.#sourceMappings = [];\n\n    this.#debuggerModelToData = new Map();\n    targetManager.addModelListener(\n        SDK.DebuggerModel.DebuggerModel, SDK.DebuggerModel.Events.GlobalObjectCleared, this.globalObjectCleared, this);\n    targetManager.addModelListener(\n        SDK.DebuggerModel.DebuggerModel, SDK.DebuggerModel.Events.DebuggerResumed, this.debuggerResumed, this);\n    targetManager.observeModels(SDK.DebuggerModel.DebuggerModel, this);\n\n    this.#liveLocationPromises = new Set();\n\n    this.pluginManager = new DebuggerLanguagePluginManager(targetManager, resourceMapping.workspace, this);\n  }\n\n  static instance(opts: {\n    forceNew: boolean|null,\n    resourceMapping: ResourceMapping|null,\n    targetManager: SDK.TargetManager.TargetManager|null,\n  } = {forceNew: null, resourceMapping: null, targetManager: null}): DebuggerWorkspaceBinding {\n    const {forceNew, resourceMapping, targetManager} = opts;\n    if (!debuggerWorkspaceBindingInstance || forceNew) {\n      if (!resourceMapping || !targetManager) {\n        throw new Error(\n            `Unable to create DebuggerWorkspaceBinding: resourceMapping and targetManager must be provided: ${\n                new Error().stack}`);\n      }\n\n      debuggerWorkspaceBindingInstance = new DebuggerWorkspaceBinding(resourceMapping, targetManager);\n    }\n\n    return debuggerWorkspaceBindingInstance;\n  }\n\n  static removeInstance(): void {\n    debuggerWorkspaceBindingInstance = undefined;\n  }\n\n  addSourceMapping(sourceMapping: DebuggerSourceMapping): void {\n    this.#sourceMappings.push(sourceMapping);\n  }\n\n  removeSourceMapping(sourceMapping: DebuggerSourceMapping): void {\n    const index = this.#sourceMappings.indexOf(sourceMapping);\n    if (index !== -1) {\n      this.#sourceMappings.splice(index, 1);\n    }\n  }\n\n  private async computeAutoStepRanges(mode: SDK.DebuggerModel.StepMode, callFrame: SDK.DebuggerModel.CallFrame):\n      Promise<SDK.DebuggerModel.LocationRange[]> {\n    function contained(location: SDK.DebuggerModel.Location, range: SDK.DebuggerModel.LocationRange): boolean {\n      const {start, end} = range;\n      if (start.scriptId !== location.scriptId) {\n        return false;\n      }\n      if (location.lineNumber < start.lineNumber || location.lineNumber > end.lineNumber) {\n        return false;\n      }\n      if (location.lineNumber === start.lineNumber && location.columnNumber < start.columnNumber) {\n        return false;\n      }\n      if (location.lineNumber === end.lineNumber && location.columnNumber >= end.columnNumber) {\n        return false;\n      }\n      return true;\n    }\n\n    const rawLocation = callFrame.location();\n    if (!rawLocation) {\n      return [];\n    }\n    const pluginManager = this.pluginManager;\n    let ranges: SDK.DebuggerModel.LocationRange[] = [];\n    if (mode === SDK.DebuggerModel.StepMode.StepOut) {\n      // Step out of inline function.\n      return await pluginManager.getInlinedFunctionRanges(rawLocation);\n    }\n    const uiLocation = await pluginManager.rawLocationToUILocation(rawLocation);\n    if (uiLocation) {\n      ranges = await pluginManager.uiLocationToRawLocationRanges(\n                   uiLocation.uiSourceCode, uiLocation.lineNumber, uiLocation.columnNumber) ||\n          [];\n      // TODO(bmeurer): Remove the {rawLocation} from the {ranges}?\n      ranges = ranges.filter(range => contained(rawLocation, range));\n      if (mode === SDK.DebuggerModel.StepMode.StepOver) {\n        // Step over an inlined function.\n        ranges = ranges.concat(await pluginManager.getInlinedCalleesRanges(rawLocation));\n      }\n      return ranges;\n    }\n\n    const compilerMapping = this.#debuggerModelToData.get(rawLocation.debuggerModel)?.compilerMapping;\n    if (!compilerMapping) {\n      return [];\n    }\n    ranges = compilerMapping.getLocationRangesForSameSourceLocation(rawLocation);\n    ranges = ranges.filter(range => contained(rawLocation, range));\n    return ranges;\n  }\n\n  modelAdded(debuggerModel: SDK.DebuggerModel.DebuggerModel): void {\n    debuggerModel.setBeforePausedCallback(this.shouldPause.bind(this));\n    this.#debuggerModelToData.set(debuggerModel, new ModelData(debuggerModel, this));\n    debuggerModel.setComputeAutoStepRangesCallback(this.computeAutoStepRanges.bind(this));\n  }\n\n  modelRemoved(debuggerModel: SDK.DebuggerModel.DebuggerModel): void {\n    debuggerModel.setComputeAutoStepRangesCallback(null);\n    const modelData = this.#debuggerModelToData.get(debuggerModel);\n    if (modelData) {\n      modelData.dispose();\n      this.#debuggerModelToData.delete(debuggerModel);\n    }\n  }\n\n  /**\n   * The promise returned by this function is resolved once all *currently*\n   * pending LiveLocations are processed.\n   */\n  async pendingLiveLocationChangesPromise(): Promise<void|Location|StackTraceTopFrameLocation|null> {\n    await Promise.all(this.#liveLocationPromises);\n  }\n\n  private recordLiveLocationChange(promise: Promise<void|Location|StackTraceTopFrameLocation|null>): void {\n    void promise.then(() => {\n      this.#liveLocationPromises.delete(promise);\n    });\n    this.#liveLocationPromises.add(promise);\n  }\n\n  async updateLocations(script: SDK.Script.Script): Promise<void> {\n    const modelData = this.#debuggerModelToData.get(script.debuggerModel);\n    if (modelData) {\n      const updatePromise = modelData.updateLocations(script);\n      this.recordLiveLocationChange(updatePromise);\n      await updatePromise;\n    }\n  }\n\n  async createLiveLocation(\n      rawLocation: SDK.DebuggerModel.Location, updateDelegate: (arg0: LiveLocation) => Promise<void>,\n      locationPool: LiveLocationPool): Promise<Location|null> {\n    const modelData = this.#debuggerModelToData.get(rawLocation.debuggerModel);\n    if (!modelData) {\n      return null;\n    }\n    const liveLocationPromise = modelData.createLiveLocation(rawLocation, updateDelegate, locationPool);\n    this.recordLiveLocationChange(liveLocationPromise);\n    return liveLocationPromise;\n  }\n\n  async createStackTraceTopFrameLiveLocation(\n      rawLocations: SDK.DebuggerModel.Location[], updateDelegate: (arg0: LiveLocation) => Promise<void>,\n      locationPool: LiveLocationPool): Promise<LiveLocation> {\n    console.assert(rawLocations.length > 0);\n    const locationPromise =\n        StackTraceTopFrameLocation.createStackTraceTopFrameLocation(rawLocations, this, updateDelegate, locationPool);\n    this.recordLiveLocationChange(locationPromise);\n    return locationPromise;\n  }\n\n  async createCallFrameLiveLocation(\n      location: SDK.DebuggerModel.Location, updateDelegate: (arg0: LiveLocation) => Promise<void>,\n      locationPool: LiveLocationPool): Promise<Location|null> {\n    const script = location.script();\n    if (!script) {\n      return null;\n    }\n    const debuggerModel = location.debuggerModel;\n    const liveLocationPromise = this.createLiveLocation(location, updateDelegate, locationPool);\n    this.recordLiveLocationChange(liveLocationPromise);\n    const liveLocation = await liveLocationPromise;\n    if (!liveLocation) {\n      return null;\n    }\n    this.registerCallFrameLiveLocation(debuggerModel, liveLocation);\n    return liveLocation;\n  }\n\n  async rawLocationToUILocation(rawLocation: SDK.DebuggerModel.Location):\n      Promise<Workspace.UISourceCode.UILocation|null> {\n    for (const sourceMapping of this.#sourceMappings) {\n      const uiLocation = sourceMapping.rawLocationToUILocation(rawLocation);\n      if (uiLocation) {\n        return uiLocation;\n      }\n    }\n    const uiLocation = await this.pluginManager.rawLocationToUILocation(rawLocation);\n    if (uiLocation) {\n      return uiLocation;\n    }\n    const modelData = this.#debuggerModelToData.get(rawLocation.debuggerModel);\n    return modelData ? modelData.rawLocationToUILocation(rawLocation) : null;\n  }\n\n  uiSourceCodeForSourceMapSourceURL(\n      debuggerModel: SDK.DebuggerModel.DebuggerModel, url: Platform.DevToolsPath.UrlString,\n      isContentScript: boolean): Workspace.UISourceCode.UISourceCode|null {\n    const modelData = this.#debuggerModelToData.get(debuggerModel);\n    if (!modelData) {\n      return null;\n    }\n    return modelData.compilerMapping.uiSourceCodeForURL(url, isContentScript);\n  }\n\n  async uiSourceCodeForSourceMapSourceURLPromise(\n      debuggerModel: SDK.DebuggerModel.DebuggerModel, url: Platform.DevToolsPath.UrlString,\n      isContentScript: boolean): Promise<Workspace.UISourceCode.UISourceCode> {\n    const uiSourceCode = this.uiSourceCodeForSourceMapSourceURL(debuggerModel, url, isContentScript);\n    return uiSourceCode || this.waitForUISourceCodeAdded(url, debuggerModel.target());\n  }\n\n  async uiSourceCodeForDebuggerLanguagePluginSourceURLPromise(\n      debuggerModel: SDK.DebuggerModel.DebuggerModel,\n      url: Platform.DevToolsPath.UrlString): Promise<Workspace.UISourceCode.UISourceCode|null> {\n    const uiSourceCode = this.pluginManager.uiSourceCodeForURL(debuggerModel, url);\n    return uiSourceCode || this.waitForUISourceCodeAdded(url, debuggerModel.target());\n  }\n\n  uiSourceCodeForScript(script: SDK.Script.Script): Workspace.UISourceCode.UISourceCode|null {\n    const modelData = this.#debuggerModelToData.get(script.debuggerModel);\n    if (!modelData) {\n      return null;\n    }\n    return modelData.uiSourceCodeForScript(script);\n  }\n\n  waitForUISourceCodeAdded(url: Platform.DevToolsPath.UrlString, target: SDK.Target.Target):\n      Promise<Workspace.UISourceCode.UISourceCode> {\n    return new Promise(resolve => {\n      const workspace = Workspace.Workspace.WorkspaceImpl.instance();\n      const descriptor = workspace.addEventListener(Workspace.Workspace.Events.UISourceCodeAdded, event => {\n        const uiSourceCode = event.data;\n        if (uiSourceCode.url() === url && NetworkProject.targetForUISourceCode(uiSourceCode) === target) {\n          workspace.removeEventListener(Workspace.Workspace.Events.UISourceCodeAdded, descriptor.listener);\n          resolve(uiSourceCode);\n        }\n      });\n    });\n  }\n\n  async uiLocationToRawLocations(\n      uiSourceCode: Workspace.UISourceCode.UISourceCode, lineNumber: number,\n      columnNumber?: number): Promise<SDK.DebuggerModel.Location[]> {\n    for (const sourceMapping of this.#sourceMappings) {\n      const locations = sourceMapping.uiLocationToRawLocations(uiSourceCode, lineNumber, columnNumber);\n      if (locations.length) {\n        return locations;\n      }\n    }\n    const locations = await this.pluginManager.uiLocationToRawLocations(uiSourceCode, lineNumber, columnNumber);\n    if (locations) {\n      return locations;\n    }\n    for (const modelData of this.#debuggerModelToData.values()) {\n      const locations = modelData.uiLocationToRawLocations(uiSourceCode, lineNumber, columnNumber);\n      if (locations.length) {\n        return locations;\n      }\n    }\n    return [];\n  }\n\n  /**\n   * Computes all the raw location ranges that intersect with the {@link textRange} in the given\n   * {@link uiSourceCode}. The reverse mappings of the returned ranges must not be fully contained\n   * with the {@link textRange} and it's the responsibility of the caller to appropriately filter or\n   * clamp if desired.\n   *\n   * It's important to note that for a contiguous range in the {@link uiSourceCode} there can be a\n   * variety of non-contiguous raw location ranges that intersect with the {@link textRange}. A\n   * simple example is that of an HTML document with multiple inline `<script>`s in the same line,\n   * so just asking for the raw locations in this single line will return a set of location ranges\n   * in different scripts.\n   *\n   * This method returns an empty array if this {@link uiSourceCode} is not provided by any of the\n   * mappings for this instance.\n   *\n   * @param uiSourceCode the {@link UISourceCode} to which the {@link textRange} belongs.\n   * @param textRange the text range in terms of the UI.\n   * @returns the list of raw location ranges that intersect with the text range or `[]` if\n   *          the {@link uiSourceCode} does not belong to this instance.\n   */\n  async uiLocationRangeToRawLocationRanges(\n      uiSourceCode: Workspace.UISourceCode.UISourceCode,\n      textRange: TextUtils.TextRange.TextRange): Promise<SDK.DebuggerModel.LocationRange[]> {\n    for (const sourceMapping of this.#sourceMappings) {\n      const ranges = sourceMapping.uiLocationRangeToRawLocationRanges(uiSourceCode, textRange);\n      if (ranges) {\n        return ranges;\n      }\n    }\n    const ranges = await this.pluginManager.uiLocationRangeToRawLocationRanges(uiSourceCode, textRange);\n    if (ranges) {\n      return ranges;\n    }\n    for (const modelData of this.#debuggerModelToData.values()) {\n      const ranges = modelData.uiLocationRangeToRawLocationRanges(uiSourceCode, textRange);\n      if (ranges) {\n        return ranges;\n      }\n    }\n    return [];\n  }\n\n  uiLocationToRawLocationsForUnformattedJavaScript(\n      uiSourceCode: Workspace.UISourceCode.UISourceCode, lineNumber: number,\n      columnNumber: number): SDK.DebuggerModel.Location[] {\n    console.assert(uiSourceCode.contentType().isScript());\n    const locations = [];\n    for (const modelData of this.#debuggerModelToData.values()) {\n      locations.push(...modelData.uiLocationToRawLocations(uiSourceCode, lineNumber, columnNumber));\n    }\n    return locations;\n  }\n\n  async normalizeUILocation(uiLocation: Workspace.UISourceCode.UILocation): Promise<Workspace.UISourceCode.UILocation> {\n    const rawLocations =\n        await this.uiLocationToRawLocations(uiLocation.uiSourceCode, uiLocation.lineNumber, uiLocation.columnNumber);\n    for (const location of rawLocations) {\n      const uiLocationCandidate = await this.rawLocationToUILocation(location);\n      if (uiLocationCandidate) {\n        return uiLocationCandidate;\n      }\n    }\n    return uiLocation;\n  }\n\n  /**\n   * Computes the set of lines in the {@link uiSourceCode} that map to scripts by either looking at\n   * the debug info (if any) or checking for inline scripts within documents. If this set cannot be\n   * computed or all the lines in the {@link uiSourceCode} correspond to lines in a script, `null`\n   * is returned here.\n   *\n   * @param uiSourceCode the source entity.\n   * @returns a set of known mapped lines for {@link uiSourceCode} or `null` if it's impossible to\n   *          determine the set or the {@link uiSourceCode} does not map to or include any scripts.\n   */\n  async getMappedLines(uiSourceCode: Workspace.UISourceCode.UISourceCode): Promise<Set<number>|null> {\n    for (const modelData of this.#debuggerModelToData.values()) {\n      const mappedLines = modelData.getMappedLines(uiSourceCode);\n      if (mappedLines !== null) {\n        return mappedLines;\n      }\n    }\n    return await this.pluginManager.getMappedLines(uiSourceCode);\n  }\n\n  scriptFile(uiSourceCode: Workspace.UISourceCode.UISourceCode, debuggerModel: SDK.DebuggerModel.DebuggerModel):\n      ResourceScriptFile|null {\n    const modelData = this.#debuggerModelToData.get(debuggerModel);\n    return modelData ? modelData.getResourceScriptMapping().scriptFile(uiSourceCode) : null;\n  }\n\n  scriptsForUISourceCode(uiSourceCode: Workspace.UISourceCode.UISourceCode): SDK.Script.Script[] {\n    const scripts = new Set<SDK.Script.Script>();\n    this.pluginManager.scriptsForUISourceCode(uiSourceCode).forEach(script => scripts.add(script));\n    for (const modelData of this.#debuggerModelToData.values()) {\n      const resourceScriptFile = modelData.getResourceScriptMapping().scriptFile(uiSourceCode);\n      if (resourceScriptFile && resourceScriptFile.script) {\n        scripts.add(resourceScriptFile.script);\n      }\n      modelData.compilerMapping.scriptsForUISourceCode(uiSourceCode).forEach(script => scripts.add(script));\n    }\n    return [...scripts];\n  }\n\n  supportsConditionalBreakpoints(uiSourceCode: Workspace.UISourceCode.UISourceCode): boolean {\n    const scripts = this.pluginManager.scriptsForUISourceCode(uiSourceCode);\n    return scripts.every(script => script.isJavaScript());\n  }\n\n  private globalObjectCleared(event: Common.EventTarget.EventTargetEvent<SDK.DebuggerModel.DebuggerModel>): void {\n    this.reset(event.data);\n  }\n\n  private reset(debuggerModel: SDK.DebuggerModel.DebuggerModel): void {\n    const modelData = this.#debuggerModelToData.get(debuggerModel);\n    if (!modelData) {\n      return;\n    }\n    for (const location of modelData.callFrameLocations.values()) {\n      this.removeLiveLocation(location);\n    }\n    modelData.callFrameLocations.clear();\n  }\n\n  resetForTest(target: SDK.Target.Target): void {\n    const debuggerModel = (target.model(SDK.DebuggerModel.DebuggerModel) as SDK.DebuggerModel.DebuggerModel);\n    const modelData = this.#debuggerModelToData.get(debuggerModel);\n    if (modelData) {\n      modelData.getResourceScriptMapping().resetForTest();\n    }\n  }\n\n  private registerCallFrameLiveLocation(debuggerModel: SDK.DebuggerModel.DebuggerModel, location: Location): void {\n    const modelData = this.#debuggerModelToData.get(debuggerModel);\n    if (modelData) {\n      const locations = modelData.callFrameLocations;\n      locations.add(location);\n    }\n  }\n\n  removeLiveLocation(location: Location): void {\n    const modelData = this.#debuggerModelToData.get(location.rawLocation.debuggerModel);\n    if (modelData) {\n      modelData.disposeLocation(location);\n    }\n  }\n\n  private debuggerResumed(event: Common.EventTarget.EventTargetEvent<SDK.DebuggerModel.DebuggerModel>): void {\n    this.reset(event.data);\n  }\n\n  private async shouldPause(\n      debuggerPausedDetails: SDK.DebuggerModel.DebuggerPausedDetails,\n      autoSteppingContext: SDK.DebuggerModel.Location|null): Promise<boolean> {\n    // This function returns false if the debugger should continue stepping\n    const {callFrames: [frame]} = debuggerPausedDetails;\n    if (!frame) {\n      return false;\n    }\n    const functionLocation = frame.functionLocation();\n    if (!autoSteppingContext || debuggerPausedDetails.reason !== Protocol.Debugger.PausedEventReason.Step ||\n        !functionLocation || !frame.script.isWasm() || !Common.Settings.moduleSetting('wasm-auto-stepping').get() ||\n        !this.pluginManager.hasPluginForScript(frame.script)) {\n      return true;\n    }\n    const uiLocation = await this.pluginManager.rawLocationToUILocation(frame.location());\n    if (uiLocation) {\n      return true;\n    }\n\n    return autoSteppingContext.script() !== functionLocation.script() ||\n        autoSteppingContext.columnNumber !== functionLocation.columnNumber ||\n        autoSteppingContext.lineNumber !== functionLocation.lineNumber;\n  }\n}\n\nclass ModelData {\n  readonly #debuggerModel: SDK.DebuggerModel.DebuggerModel;\n  readonly #debuggerWorkspaceBinding: DebuggerWorkspaceBinding;\n  callFrameLocations: Set<Location>;\n  #defaultMapping: DefaultScriptMapping;\n  readonly #resourceMapping: ResourceMapping;\n  #resourceScriptMapping: ResourceScriptMapping;\n  readonly compilerMapping: CompilerScriptMapping;\n  readonly #locations: Platform.MapUtilities.Multimap<string, Location>;\n\n  constructor(debuggerModel: SDK.DebuggerModel.DebuggerModel, debuggerWorkspaceBinding: DebuggerWorkspaceBinding) {\n    this.#debuggerModel = debuggerModel;\n    this.#debuggerWorkspaceBinding = debuggerWorkspaceBinding;\n\n    this.callFrameLocations = new Set();\n\n    const {workspace} = debuggerWorkspaceBinding.resourceMapping;\n    this.#defaultMapping = new DefaultScriptMapping(debuggerModel, workspace, debuggerWorkspaceBinding);\n    this.#resourceMapping = debuggerWorkspaceBinding.resourceMapping;\n    this.#resourceScriptMapping = new ResourceScriptMapping(debuggerModel, workspace, debuggerWorkspaceBinding);\n    this.compilerMapping = new CompilerScriptMapping(debuggerModel, workspace, debuggerWorkspaceBinding);\n\n    this.#locations = new Platform.MapUtilities.Multimap();\n  }\n\n  async createLiveLocation(\n      rawLocation: SDK.DebuggerModel.Location, updateDelegate: (arg0: LiveLocation) => Promise<void>,\n      locationPool: LiveLocationPool): Promise<Location> {\n    console.assert(rawLocation.scriptId !== '');\n    const scriptId = rawLocation.scriptId;\n    const location = new Location(scriptId, rawLocation, this.#debuggerWorkspaceBinding, updateDelegate, locationPool);\n    this.#locations.set(scriptId, location);\n    await location.update();\n    return location;\n  }\n\n  disposeLocation(location: Location): void {\n    this.#locations.delete(location.scriptId, location);\n  }\n\n  async updateLocations(script: SDK.Script.Script): Promise<void> {\n    const promises = [];\n    for (const location of this.#locations.get(script.scriptId)) {\n      promises.push(location.update());\n    }\n    await Promise.all(promises);\n  }\n\n  rawLocationToUILocation(rawLocation: SDK.DebuggerModel.Location): Workspace.UISourceCode.UILocation|null {\n    let uiLocation = this.compilerMapping.rawLocationToUILocation(rawLocation);\n    uiLocation = uiLocation || this.#resourceScriptMapping.rawLocationToUILocation(rawLocation);\n    uiLocation = uiLocation || this.#resourceMapping.jsLocationToUILocation(rawLocation);\n    uiLocation = uiLocation || this.#defaultMapping.rawLocationToUILocation(rawLocation);\n    return uiLocation;\n  }\n\n  uiSourceCodeForScript(script: SDK.Script.Script): Workspace.UISourceCode.UISourceCode|null {\n    let uiSourceCode: Workspace.UISourceCode.UISourceCode|null = null;\n    uiSourceCode = uiSourceCode || this.#resourceScriptMapping.uiSourceCodeForScript(script);\n    uiSourceCode = uiSourceCode || this.#resourceMapping.uiSourceCodeForScript(script);\n    uiSourceCode = uiSourceCode || this.#defaultMapping.uiSourceCodeForScript(script);\n    return uiSourceCode;\n  }\n\n  uiLocationToRawLocations(\n      uiSourceCode: Workspace.UISourceCode.UISourceCode, lineNumber: number,\n      columnNumber: number|undefined = 0): SDK.DebuggerModel.Location[] {\n    // TODO(crbug.com/1153123): Revisit the `#columnNumber = 0` and also preserve `undefined` for source maps?\n    let locations = this.compilerMapping.uiLocationToRawLocations(uiSourceCode, lineNumber, columnNumber);\n    locations = locations.length ?\n        locations :\n        this.#resourceScriptMapping.uiLocationToRawLocations(uiSourceCode, lineNumber, columnNumber);\n    locations = locations.length ?\n        locations :\n        this.#resourceMapping.uiLocationToJSLocations(uiSourceCode, lineNumber, columnNumber);\n    locations = locations.length ?\n        locations :\n        this.#defaultMapping.uiLocationToRawLocations(uiSourceCode, lineNumber, columnNumber);\n    return locations;\n  }\n\n  uiLocationRangeToRawLocationRanges(\n      uiSourceCode: Workspace.UISourceCode.UISourceCode,\n      textRange: TextUtils.TextRange.TextRange): SDK.DebuggerModel.LocationRange[]|null {\n    let ranges = this.compilerMapping.uiLocationRangeToRawLocationRanges(uiSourceCode, textRange);\n    ranges ??= this.#resourceScriptMapping.uiLocationRangeToRawLocationRanges(uiSourceCode, textRange);\n    ranges ??= this.#resourceMapping.uiLocationRangeToJSLocationRanges(uiSourceCode, textRange);\n    ranges ??= this.#defaultMapping.uiLocationRangeToRawLocationRanges(uiSourceCode, textRange);\n    return ranges;\n  }\n\n  getMappedLines(uiSourceCode: Workspace.UISourceCode.UISourceCode): Set<number>|null {\n    const mappedLines = this.compilerMapping.getMappedLines(uiSourceCode);\n    // TODO(crbug.com/1411431): The scripts from the ResourceMapping appear over time,\n    // and there's currently no way to inform the UI to update.\n    // mappedLines = mappedLines ?? this.#resourceMapping.getMappedLines(uiSourceCode);\n    return mappedLines;\n  }\n\n  dispose(): void {\n    this.#debuggerModel.setBeforePausedCallback(null);\n    this.compilerMapping.dispose();\n    this.#resourceScriptMapping.dispose();\n    this.#defaultMapping.dispose();\n  }\n\n  getResourceScriptMapping(): ResourceScriptMapping {\n    return this.#resourceScriptMapping;\n  }\n}\n\nexport class Location extends LiveLocationWithPool {\n  readonly scriptId: string;\n  readonly rawLocation: SDK.DebuggerModel.Location;\n  readonly #binding: DebuggerWorkspaceBinding;\n\n  constructor(\n      scriptId: string, rawLocation: SDK.DebuggerModel.Location, binding: DebuggerWorkspaceBinding,\n      updateDelegate: (arg0: LiveLocation) => Promise<void>, locationPool: LiveLocationPool) {\n    super(updateDelegate, locationPool);\n    this.scriptId = scriptId;\n    this.rawLocation = rawLocation;\n    this.#binding = binding;\n  }\n\n  override async uiLocation(): Promise<Workspace.UISourceCode.UILocation|null> {\n    const debuggerModelLocation = this.rawLocation;\n    return this.#binding.rawLocationToUILocation(debuggerModelLocation);\n  }\n\n  override dispose(): void {\n    super.dispose();\n    this.#binding.removeLiveLocation(this);\n  }\n\n  override async isIgnoreListed(): Promise<boolean> {\n    const uiLocation = await this.uiLocation();\n    if (!uiLocation) {\n      return false;\n    }\n    return IgnoreListManager.instance().isUserOrSourceMapIgnoreListedUISourceCode(uiLocation.uiSourceCode);\n  }\n}\n\nclass StackTraceTopFrameLocation extends LiveLocationWithPool {\n  #updateScheduled: boolean;\n  #current: LiveLocation|null;\n  #locations: LiveLocation[]|null;\n  constructor(updateDelegate: (arg0: LiveLocation) => Promise<void>, locationPool: LiveLocationPool) {\n    super(updateDelegate, locationPool);\n    this.#updateScheduled = true;\n    this.#current = null;\n    this.#locations = null;\n  }\n\n  static async createStackTraceTopFrameLocation(\n      rawLocations: SDK.DebuggerModel.Location[], binding: DebuggerWorkspaceBinding,\n      updateDelegate: (arg0: LiveLocation) => Promise<void>,\n      locationPool: LiveLocationPool): Promise<StackTraceTopFrameLocation> {\n    const location = new StackTraceTopFrameLocation(updateDelegate, locationPool);\n    const locationsPromises = rawLocations.map(\n        rawLocation => binding.createLiveLocation(rawLocation, location.scheduleUpdate.bind(location), locationPool));\n    location.#locations = ((await Promise.all(locationsPromises)).filter(l => Boolean(l)) as Location[]);\n    await location.updateLocation();\n    return location;\n  }\n\n  override async uiLocation(): Promise<Workspace.UISourceCode.UILocation|null> {\n    return this.#current ? this.#current.uiLocation() : null;\n  }\n\n  override async isIgnoreListed(): Promise<boolean> {\n    return this.#current ? this.#current.isIgnoreListed() : false;\n  }\n\n  override dispose(): void {\n    super.dispose();\n    if (this.#locations) {\n      for (const location of this.#locations) {\n        location.dispose();\n      }\n    }\n    this.#locations = null;\n    this.#current = null;\n  }\n\n  private async scheduleUpdate(): Promise<void> {\n    if (this.#updateScheduled) {\n      return;\n    }\n    this.#updateScheduled = true;\n    queueMicrotask(() => {\n      void this.updateLocation();\n    });\n  }\n\n  private async updateLocation(): Promise<void> {\n    this.#updateScheduled = false;\n    if (!this.#locations || this.#locations.length === 0) {\n      return;\n    }\n\n    this.#current = this.#locations[0];\n    for (const location of this.#locations) {\n      if (!(await location.isIgnoreListed())) {\n        this.#current = location;\n        break;\n      }\n    }\n    void this.update();\n  }\n}\n\nexport interface DebuggerSourceMapping {\n  rawLocationToUILocation(rawLocation: SDK.DebuggerModel.Location): Workspace.UISourceCode.UILocation|null;\n\n  uiLocationToRawLocations(\n      uiSourceCode: Workspace.UISourceCode.UISourceCode, lineNumber: number,\n      columnNumber?: number): SDK.DebuggerModel.Location[];\n\n  uiLocationRangeToRawLocationRanges(\n      uiSourceCode: Workspace.UISourceCode.UISourceCode,\n      textRange: TextUtils.TextRange.TextRange): SDK.DebuggerModel.LocationRange[]|null;\n}\n"]}