{"version":3,"file":"PresentationConsoleMessageHelper.js","sourceRoot":"","sources":["../../../../../../front_end/models/bindings/PresentationConsoleMessageHelper.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2012 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport type * as Common from '../../core/common/common.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as TextUtils from '../text_utils/text_utils.js';\nimport * as Workspace from '../workspace/workspace.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport type * as Platform from '../../core/platform/platform.js';\n\nimport {DebuggerWorkspaceBinding} from './DebuggerWorkspaceBinding.js';\n\nimport {LiveLocationPool, LiveLocationWithPool, type LiveLocation} from './LiveLocation.js';\nimport {CSSWorkspaceBinding} from './CSSWorkspaceBinding.js';\n\nexport interface MessageSource {\n  url?: Platform.DevToolsPath.UrlString;\n  line: number;\n  column: number;\n  scriptId?: Protocol.Runtime.ScriptId;\n  stackTrace?: Protocol.Runtime.StackTrace;\n}\n\nexport class PresentationSourceFrameMessageManager implements\n    SDK.TargetManager.SDKModelObserver<SDK.DebuggerModel.DebuggerModel>,\n    SDK.TargetManager.SDKModelObserver<SDK.CSSModel.CSSModel> {\n  #targetToMessageHelperMap = new WeakMap<SDK.Target.Target, PresentationSourceFrameMessageHelper>();\n  constructor() {\n    SDK.TargetManager.TargetManager.instance().observeModels(SDK.DebuggerModel.DebuggerModel, this);\n    SDK.TargetManager.TargetManager.instance().observeModels(SDK.CSSModel.CSSModel, this);\n  }\n\n  modelAdded(model: SDK.DebuggerModel.DebuggerModel|SDK.CSSModel.CSSModel): void {\n    const target = model.target();\n    const helper = this.#targetToMessageHelperMap.get(target) ?? new PresentationSourceFrameMessageHelper();\n    if (model instanceof SDK.DebuggerModel.DebuggerModel) {\n      helper.setDebuggerModel(model);\n    } else {\n      helper.setCSSModel(model);\n    }\n    this.#targetToMessageHelperMap.set(target, helper);\n  }\n\n  modelRemoved(model: SDK.DebuggerModel.DebuggerModel|SDK.CSSModel.CSSModel): void {\n    const target = model.target();\n    const helper = this.#targetToMessageHelperMap.get(target);\n    helper?.clear();\n  }\n\n  addMessage(message: Workspace.UISourceCode.Message, source: MessageSource, target: SDK.Target.Target): void {\n    const helper = this.#targetToMessageHelperMap.get(target);\n    void helper?.addMessage(message, source);\n  }\n\n  clear(): void {\n    for (const target of SDK.TargetManager.TargetManager.instance().targets()) {\n      const helper = this.#targetToMessageHelperMap.get(target);\n      helper?.clear();\n    }\n  }\n}\n\nexport class PresentationConsoleMessageManager {\n  #sourceFrameMessageManager = new PresentationSourceFrameMessageManager();\n\n  constructor() {\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.ConsoleModel.ConsoleModel, SDK.ConsoleModel.Events.MessageAdded,\n        event => this.consoleMessageAdded(event.data));\n    SDK.ConsoleModel.ConsoleModel.allMessagesUnordered().forEach(this.consoleMessageAdded, this);\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.ConsoleModel.ConsoleModel, SDK.ConsoleModel.Events.ConsoleCleared,\n        () => this.#sourceFrameMessageManager.clear());\n  }\n\n  private consoleMessageAdded(consoleMessage: SDK.ConsoleModel.ConsoleMessage): void {\n    const runtimeModel = consoleMessage.runtimeModel();\n    if (!consoleMessage.isErrorOrWarning() || !consoleMessage.runtimeModel() ||\n        consoleMessage.source === Protocol.Log.LogEntrySource.Violation || !runtimeModel) {\n      return;\n    }\n    const level = consoleMessage.level === Protocol.Log.LogEntryLevel.Error ?\n        Workspace.UISourceCode.Message.Level.Error :\n        Workspace.UISourceCode.Message.Level.Warning;\n    this.#sourceFrameMessageManager.addMessage(\n        new Workspace.UISourceCode.Message(level, consoleMessage.messageText), consoleMessage, runtimeModel.target());\n  }\n}\n\nexport class PresentationSourceFrameMessageHelper {\n  #debuggerModel?: SDK.DebuggerModel.DebuggerModel;\n  #cssModel?: SDK.CSSModel.CSSModel;\n  #presentationMessages: Map<Platform.DevToolsPath.UrlString, Array<{\n                               source: MessageSource,\n                               presentation: PresentationSourceFrameMessage,\n                             }>> = new Map();\n  readonly #locationPool: LiveLocationPool;\n\n  constructor() {\n    this.#locationPool = new LiveLocationPool();\n\n    Workspace.Workspace.WorkspaceImpl.instance().addEventListener(\n        Workspace.Workspace.Events.UISourceCodeAdded, this.#uiSourceCodeAdded.bind(this));\n  }\n\n  setDebuggerModel(debuggerModel: SDK.DebuggerModel.DebuggerModel): void {\n    if (this.#debuggerModel) {\n      throw new Error('Cannot set DebuggerModel twice');\n    }\n    this.#debuggerModel = debuggerModel;\n    // TODO(dgozman): queueMicrotask because we race with DebuggerWorkspaceBinding on ParsedScriptSource event delivery.\n    debuggerModel.addEventListener(SDK.DebuggerModel.Events.ParsedScriptSource, event => {\n      queueMicrotask(() => {\n        this.#parsedScriptSource(event);\n      });\n    });\n    debuggerModel.addEventListener(SDK.DebuggerModel.Events.GlobalObjectCleared, this.#debuggerReset, this);\n  }\n\n  setCSSModel(cssModel: SDK.CSSModel.CSSModel): void {\n    if (this.#cssModel) {\n      throw new Error('Cannot set CSSModel twice');\n    }\n    this.#cssModel = cssModel;\n    cssModel.addEventListener(\n        SDK.CSSModel.Events.StyleSheetAdded, event => queueMicrotask(() => this.#styleSheetAdded(event)));\n  }\n\n  async addMessage(message: Workspace.UISourceCode.Message, source: MessageSource): Promise<void> {\n    const presentation = new PresentationSourceFrameMessage(message, this.#locationPool);\n    const location = this.#rawLocation(source) ?? this.#cssLocation(source) ?? this.#uiLocation(source);\n    if (location) {\n      await presentation.updateLocationSource(location);\n    }\n    if (source.url) {\n      let messages = this.#presentationMessages.get(source.url);\n      if (!messages) {\n        messages = [];\n        this.#presentationMessages.set(source.url, messages);\n      }\n      messages.push({source, presentation});\n    }\n  }\n\n  #uiLocation(source: MessageSource): Workspace.UISourceCode.UILocation|null {\n    if (!source.url) {\n      return null;\n    }\n\n    const uiSourceCode = Workspace.Workspace.WorkspaceImpl.instance().uiSourceCodeForURL(source.url);\n    if (!uiSourceCode) {\n      return null;\n    }\n    return new Workspace.UISourceCode.UILocation(uiSourceCode, source.line, source.column);\n  }\n\n  #cssLocation(source: MessageSource): SDK.CSSModel.CSSLocation|null {\n    if (!this.#cssModel || !source.url) {\n      return null;\n    }\n    const locations = this.#cssModel.createRawLocationsByURL(source.url, source.line, source.column);\n    return locations[0] ?? null;\n  }\n\n  #rawLocation(source: MessageSource): SDK.DebuggerModel.Location|null {\n    if (!this.#debuggerModel) {\n      return null;\n    }\n    if (source.scriptId) {\n      return this.#debuggerModel.createRawLocationByScriptId(source.scriptId, source.line, source.column);\n    }\n    const callFrame = source.stackTrace && source.stackTrace.callFrames ? source.stackTrace.callFrames[0] : null;\n    if (callFrame) {\n      return this.#debuggerModel.createRawLocationByScriptId(\n          callFrame.scriptId, callFrame.lineNumber, callFrame.columnNumber);\n    }\n    if (source.url) {\n      return this.#debuggerModel.createRawLocationByURL(source.url, source.line, source.column);\n    }\n    return null;\n  }\n\n  #parsedScriptSource(event: Common.EventTarget.EventTargetEvent<SDK.Script.Script>): void {\n    const script = event.data;\n    const messages = this.#presentationMessages.get(script.sourceURL);\n\n    const promises: Promise<void>[] = [];\n    for (const {presentation, source} of messages ?? []) {\n      const rawLocation = this.#rawLocation(source);\n      if (rawLocation && script.scriptId === rawLocation.scriptId) {\n        promises.push(presentation.updateLocationSource(rawLocation));\n      }\n    }\n\n    void Promise.all(promises).then(this.parsedScriptSourceForTest.bind(this));\n  }\n\n  parsedScriptSourceForTest(): void {\n  }\n\n  #uiSourceCodeAdded(event: Common.EventTarget.EventTargetEvent<Workspace.UISourceCode.UISourceCode>): void {\n    const uiSourceCode = event.data;\n    const messages = this.#presentationMessages.get(uiSourceCode.url());\n\n    const promises: Promise<void>[] = [];\n    for (const {presentation, source} of messages ?? []) {\n      promises.push(presentation.updateLocationSource(\n          new Workspace.UISourceCode.UILocation(uiSourceCode, source.line, source.column)));\n    }\n    void Promise.all(promises).then(this.uiSourceCodeAddedForTest.bind(this));\n  }\n\n  uiSourceCodeAddedForTest(): void {\n  }\n\n  #styleSheetAdded(event: Common.EventTarget\n                       .EventTargetEvent<SDK.CSSStyleSheetHeader.CSSStyleSheetHeader, SDK.CSSModel.EventTypes>): void {\n    const header = event.data;\n    const messages = this.#presentationMessages.get(header.sourceURL);\n\n    const promises: Promise<void>[] = [];\n    for (const {source, presentation} of messages ?? []) {\n      if (header.containsLocation(source.line, source.column)) {\n        promises.push(\n            presentation.updateLocationSource(new SDK.CSSModel.CSSLocation(header, source.line, source.column)));\n      }\n    }\n    void Promise.all(promises).then(this.styleSheetAddedForTest.bind(this));\n  }\n\n  styleSheetAddedForTest(): void {\n  }\n\n  clear(): void {\n    this.#debuggerReset();\n  }\n\n  #debuggerReset(): void {\n    const presentations = Array.from(this.#presentationMessages.values()).flat();\n    for (const {presentation} of presentations) {\n      presentation.dispose();\n    }\n    this.#presentationMessages.clear();\n    this.#locationPool.disposeAll();\n  }\n}\n\nclass FrozenLiveLocation extends LiveLocationWithPool {\n  #uiLocation: Workspace.UISourceCode.UILocation;\n  constructor(\n      uiLocation: Workspace.UISourceCode.UILocation, updateDelegate: (arg0: LiveLocation) => Promise<void>,\n      locationPool: LiveLocationPool) {\n    super(updateDelegate, locationPool);\n    this.#uiLocation = uiLocation;\n  }\n\n  override async isIgnoreListed(): Promise<boolean> {\n    return false;\n  }\n\n  override async uiLocation(): Promise<Workspace.UISourceCode.UILocation|null> {\n    return this.#uiLocation;\n  }\n}\n\nexport class PresentationSourceFrameMessage {\n  #uiSourceCode?: Workspace.UISourceCode.UISourceCode;\n  #liveLocation?: LiveLocation;\n  readonly #locationPool: LiveLocationPool;\n  readonly #message: Workspace.UISourceCode.Message;\n\n  constructor(message: Workspace.UISourceCode.Message, locationPool: LiveLocationPool) {\n    this.#message = message;\n    this.#locationPool = locationPool;\n  }\n\n  async updateLocationSource(source: SDK.DebuggerModel.Location|Workspace.UISourceCode.UILocation|\n                             SDK.CSSModel.CSSLocation): Promise<void> {\n    if (source instanceof SDK.DebuggerModel.Location) {\n      await DebuggerWorkspaceBinding.instance().createLiveLocation(\n          source, this.#updateLocation.bind(this), this.#locationPool);\n    } else if (source instanceof SDK.CSSModel.CSSLocation) {\n      await CSSWorkspaceBinding.instance().createLiveLocation(\n          source, this.#updateLocation.bind(this), this.#locationPool);\n    } else if (source instanceof Workspace.UISourceCode.UILocation) {\n      if (!this.#liveLocation) {  // Don't \"downgrade\" the location if a debugger or css mapping was already successful\n        this.#liveLocation = new FrozenLiveLocation(source, this.#updateLocation.bind(this), this.#locationPool);\n        await this.#liveLocation.update();\n      }\n    }\n  }\n\n  async #updateLocation(liveLocation: LiveLocation): Promise<void> {\n    if (this.#uiSourceCode) {\n      this.#uiSourceCode.removeMessage(this.#message);\n    }\n    if (liveLocation !== this.#liveLocation) {\n      this.#uiSourceCode?.removeMessage(this.#message);\n      this.#liveLocation?.dispose();\n      this.#liveLocation = liveLocation;\n    }\n    const uiLocation = await liveLocation.uiLocation();\n    if (!uiLocation) {\n      return;\n    }\n    this.#message.range =\n        TextUtils.TextRange.TextRange.createFromLocation(uiLocation.lineNumber, uiLocation.columnNumber || 0);\n    this.#uiSourceCode = uiLocation.uiSourceCode;\n    this.#uiSourceCode.addMessage(this.#message);\n  }\n\n  dispose(): void {\n    this.#uiSourceCode?.removeMessage(this.#message);\n    this.#liveLocation?.dispose();\n  }\n}\n"]}