{"version":3,"file":"ContentProviderBasedProject.test.js","sourceRoot":"","sources":["../../../../../../front_end/models/bindings/ContentProviderBasedProject.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport {createContentProviderUISourceCodes} from '../../testing/UISourceCodeHelpers.js';\nimport * as Workspace from '../workspace/workspace.js';\n\ntype UrlString = Platform.DevToolsPath.UrlString;\n\ndescribe('ContentProviderBasedProject', () => {\n  beforeEach(() => {\n    Workspace.Workspace.WorkspaceImpl.instance({forceNew: true});\n  });\n\n  describe('findFilesMatchingSearchRequest', () => {\n    it('filters UISourceCodes based on search query', async () => {\n      const {project, uiSourceCodes} = createContentProviderUISourceCodes({\n        items: [\n          {\n            url: 'http://example.com/a.js' as UrlString,\n            mimeType: 'text/javascript',\n            content: 'Single line with \"foo\"\\n',\n          },\n          {\n            url: 'http://example.com/b.js' as UrlString,\n            mimeType: 'text/javascript',\n            content: 'Single line with \"bar\"\\n',\n          },\n        ],\n      });\n      const searchConfig = new Workspace.SearchConfig.SearchConfig('foo', false, false);\n\n      const result =\n          await project.findFilesMatchingSearchRequest(searchConfig, uiSourceCodes, new Common.Progress.Progress());\n\n      assert.hasAllKeys(result, [uiSourceCodes[0]]);\n    });\n\n    it('only includes files if all query parts are found in that file', async () => {\n      const {project, uiSourceCodes} = createContentProviderUISourceCodes({\n        items: [\n          {\n            url: 'http://example.com/a.js' as UrlString,\n            mimeType: 'text/javascript',\n            content: 'Single line with \"foo\"\\n',\n          },\n          {\n            url: 'http://example.com/b.js' as UrlString,\n            mimeType: 'text/javascript',\n            content: 'Single line with \"bar\"\\n',\n          },\n        ],\n      });\n      const searchConfig = new Workspace.SearchConfig.SearchConfig('\"bar\"\"line\"', false, false);\n\n      const result =\n          await project.findFilesMatchingSearchRequest(searchConfig, uiSourceCodes, new Common.Progress.Progress());\n\n      assert.hasAllKeys(result, [uiSourceCodes[1]]);\n    });\n\n    it('does include search matches in the result', async () => {\n      const {project, uiSourceCodes} = createContentProviderUISourceCodes({\n        items: [\n          {\n            url: 'http://example.com/a.js' as UrlString,\n            mimeType: 'text/javascript',\n            content: 'Single line with \"foo\"\\n',\n          },\n          {\n            url: 'http://example.com/b.js' as UrlString,\n            mimeType: 'text/javascript',\n            content: 'Single line with \"bar\"\\n',\n          },\n        ],\n      });\n      const searchConfig = new Workspace.SearchConfig.SearchConfig('line', false, false);\n\n      const result =\n          await project.findFilesMatchingSearchRequest(searchConfig, uiSourceCodes, new Common.Progress.Progress());\n\n      assert.hasAllKeys(result, uiSourceCodes);\n      assert.deepEqual(\n          result.get(uiSourceCodes[0]),\n          [{lineNumber: 0, lineContent: 'Single line with \"foo\"', columnNumber: 7, matchLength: 4}]);\n      assert.deepEqual(\n          result.get(uiSourceCodes[1]),\n          [{lineNumber: 0, lineContent: 'Single line with \"bar\"', columnNumber: 7, matchLength: 4}]);\n    });\n\n    it('updates the progress per file', async () => {\n      const {project, uiSourceCodes} = createContentProviderUISourceCodes({\n        items: [\n          {\n            url: 'http://example.com/a.js' as UrlString,\n            mimeType: 'text/javascript',\n            content: 'Single line with \"foo\"\\n',\n          },\n          {\n            url: 'http://example.com/b.js' as UrlString,\n            mimeType: 'text/javascript',\n            content: 'Single line with \"bar\"\\n',\n          },\n        ],\n      });\n      const searchConfig = new Workspace.SearchConfig.SearchConfig('foo', false, false);\n      const progress = sinon.spy(new Common.Progress.Progress());\n\n      await project.findFilesMatchingSearchRequest(searchConfig, uiSourceCodes, progress);\n\n      assert.isTrue(progress.setTotalWork.calledOnceWithExactly(2));\n      assert.isTrue(progress.incrementWorked.calledTwice);\n      assert.isTrue(progress.done.calledOnce);\n    });\n  });\n});\n"]}