{"version":3,"file":"UISourceCode.test.js","sourceRoot":"","sources":["../../../../../../front_end/models/workspace/UISourceCode.test.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAG7B,OAAO,EAAC,uBAAuB,EAAC,MAAM,sCAAsC,CAAC;AAC7E,OAAO,KAAK,SAAS,MAAM,6BAA6B,CAAC;AAEzD,OAAO,KAAK,SAAS,MAAM,gBAAgB,CAAC;AAE5C,QAAQ,CAAC,cAAc,EAAE,GAAG,EAAE;IAC5B,EAAE,CAAC,iBAAiB,EAAE,KAAK,IAAI,EAAE;QAC/B,MAAM,SAAS,GAAG,uBAAuB,CAAC,sDAAsD,CAAC,CAAC;QAElG,MAAM,MAAM,GAAG,SAAS,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;QAEpC,MAAM,CAAC,WAAW,CAAC,MAAM,EAAE,kBAAkB,CAAC,CAAC;IACjD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,gBAAgB,EAAE,KAAK,IAAI,EAAE;QAC9B,MAAM,SAAS,GAAG,uBAAuB,CAAC,sBAAsB,CAAC,CAAC;QAElE,MAAM,MAAM,GAAG,SAAS,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;QAEnC,MAAM,CAAC,WAAW,CAAC,MAAM,EAAE,sBAAsB,CAAC,CAAC;IACrD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,kCAAkC,EAAE,KAAK,IAAI,EAAE;QAChD,MAAM,SAAS,GAAG,uBAAuB,CAAC,sBAAsB,CAAC,CAAC;QAClE,SAAS,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;QAEtD,MAAM,MAAM,GAAG,SAAS,CAAC,GAAG,CAAC,mBAAmB,EAAE,CAAC;QAEnD,MAAM,CAAC,WAAW,CAAC,MAAM,EAAE,kCAAkC,CAAC,CAAC;IACjE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,uBAAuB,EAAE,KAAK,IAAI,EAAE;QACrC,MAAM,SAAS,GAAG,uBAAuB,CAAC,sDAAsD,CAAC,CAAC;QAElG,MAAM,MAAM,GAAG,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC;QAEzC,MAAM,CAAC,WAAW,CAAC,MAAM,EAAE,qCAAqC,CAAC,CAAC;IACpE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mBAAmB,EAAE,KAAK,IAAI,EAAE;QACjC,MAAM,SAAS,GAAG,uBAAuB,CAAC,sDAAsD,CAAC,CAAC;QAElG,MAAM,MAAM,GAAG,SAAS,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC;QAEtC,MAAM,CAAC,WAAW,CAAC,MAAM,EAAE,6BAA6B,CAAC,CAAC;IAC5D,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,iCAAiC,EAAE,KAAK,IAAI,EAAE;QAC/C,MAAM,GAAG,GAAG,sCAAsC;YAC9C,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,cAAc,CAAC;QACvC,MAAM,SAAS,GAAG,uBAAuB,CAAC,GAAG,CAAC,CAAC;QAE/C,MAAM,MAAM,GAAG,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QAEhD,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,6CAA6C,CAAC,CAAC;QAChH,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,sCAAsC,CAAC,CAAC;IAC9E,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mCAAmC,EAAE,KAAK,IAAI,EAAE;QACjD,MAAM,GAAG,GAAG,sCAAsC;YAC9C,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,cAAc,CAAC;QACvC,MAAM,SAAS,GAAG,uBAAuB,CAAC,GAAG,CAAC,CAAC;QAE/C,MAAM,MAAM,GAAG,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QAE/C,MAAM,CAAC,WAAW,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,cAAc,CAAC,CAAC;IACjE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,8BAA8B,EAAE,KAAK,IAAI,EAAE;QAC5C,MAAM,SAAS,GAAG,uBAAuB,EAAE,CAAC;QAC5C,SAAS,CAAC,WAAW,CAAC,eAAe,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAErD,MAAM,MAAM,GAAG,MAAM,SAAS,CAAC,GAAG,CAAC,eAAe,EAAE,CAAC;QAErD,MAAM,CAAC,WAAW,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IACnC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,8BAA8B,EAAE,KAAK,IAAI,EAAE;QAC5C,MAAM,SAAS,GAAG,uBAAuB,EAAE,CAAC;QAC5C,SAAS,CAAC,WAAW,CAAC,eAAe,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;QAE3D,MAAM,MAAM,GAAG,SAAS,CAAC,GAAG,CAAC,eAAe,EAAE,CAAC;QAE/C,MAAM,CAAC,WAAW,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;IAC1C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,sBAAsB,EAAE,KAAK,IAAI,EAAE;QACpC,MAAM,SAAS,GAAG,uBAAuB,EAAE,CAAC;QAC5C,SAAS,CAAC,WAAW,CAAC,QAAQ,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;QAEpD,MAAM,MAAM,GAAG,SAAS,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;QAExC,MAAM,CAAC,WAAW,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;IAC1C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,yBAAyB,EAAE,KAAK,IAAI,EAAE;QACvC,MAAM,SAAS,GAAG,uBAAuB,CAAC,sDAAsD,CAAC,CAAC;QAElG,MAAM,MAAM,GAAG,SAAS,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;QAE3C,MAAM,CAAC,WAAW,CAAC,MAAM,EAAE,kBAAkB,CAAC,CAAC;IACjD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,sDAAsD,EAAE,KAAK,IAAI,EAAE;QACpE,MAAM,SAAS,GAAG,uBAAuB,EAAE,CAAC;QAC5C,SAAS,CAAC,WAAW,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAE9C,MAAM,MAAM,GAAG,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC;QAEzC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;IACxB,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,sBAAsB,EAAE,KAAK,IAAI,EAAE;QACpC,MAAM,SAAS,GAAG,uBAAuB,EAAE,CAAC;QAC5C,SAAS,CAAC,WAAW,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC;QACrG,MAAM,oBAAoB,GAAG,cAAqD,CAAC;QACnF,SAAS,CAAC,WAAW,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,YAAY,EAAE,oBAAoB,EAAE,aAAa,EAAE,EAAE;YAC3F,aAAa,CAAC,IAAI,EAAE,oBAAoB,CAAC,CAAC;QAC5C,CAAC,CAAC,CAAC;QAEH,MAAM,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,oBAAoB,CAAC,CAAC;QAEjD,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,EAAE,EAAE,cAAc,CAAC,CAAC;IAC3D,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,yDAAyD,EAAE,KAAK,IAAI,EAAE;QACvE,MAAM,SAAS,GAAG,uBAAuB,EAAE,CAAC;QAE5C,SAAS,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC;QAEvB,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;IAC5D,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,wBAAwB,EAAE,KAAK,IAAI,EAAE;QACtC,MAAM,SAAS,GAAG,uBAAuB,CAAC,sDAAsD,CAAC,CAAC;QAElG,MAAM,MAAM,GAAG,SAAS,CAAC,GAAG,CAAC,UAAU,EAAE,CAAC;QAE1C,MAAM,CAAC,WAAW,CAAC,MAAM,EAAE,sDAAsD,CAAC,CAAC;IACrF,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,yBAAyB,EAAE,KAAK,IAAI,EAAE;QACvC,MAAM,SAAS,GAAG,uBAAuB,EAAE,CAAC;QAE5C,MAAM,MAAM,GAAG,SAAS,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;QAE3C,MAAM,CAAC,WAAW,CAAC,MAAM,EAAE,SAAS,CAAC,eAAe,CAAC,CAAC;IACxD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,qBAAqB,EAAE,KAAK,IAAI,EAAE;QACnC,MAAM,SAAS,GAAG,uBAAuB,EAAE,CAAC;QAC5C,MAAM,WAAW,GAAG,IAAI,SAAS,CAAC,WAAW,CAAC,WAAW,CAAC,SAAS,EAAE,KAAK,EAAE,YAAY,CAAC,CAAC;QAC1F,SAAS,CAAC,WAAW,CAAC,kBAAkB,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;QAE/D,MAAM,MAAM,GAAG,MAAM,SAAS,CAAC,GAAG,CAAC,cAAc,EAAE,CAAC;QAEpD,MAAM,CAAC,SAAS,CAAC,MAAM,EAAE,WAAW,CAAC,gBAAgB,EAAE,CAAC,CAAC;IAC3D,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,iCAAiC,EAAE,KAAK,IAAI,EAAE;QAC/C,MAAM,SAAS,GAAG,uBAAuB,EAAE,CAAC;QAC5C,MAAM,mBAAmB,GAAG,IAAI,SAAS,CAAC,WAAW,CAAC,WAAW,CAAC,UAAU,EAAE,IAAI,EAAE,kBAAkB,CAAC,CAAC;QACxG,SAAS,CAAC,WAAW,CAAC,kBAAkB,CAAC,QAAQ,CAAC,mBAAmB,CAAC,CAAC;QAEvE,MAAM,EAAC,SAAS,EAAC,GAAG,MAAM,SAAS,CAAC,GAAG,CAAC,cAAc,EAAE,CAAC;QAEzD,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;IAC3B,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,oBAAoB,EAAE,KAAK,IAAI,EAAE;QAClC,MAAM,SAAS,GAAG,uBAAuB,EAAE,CAAC;QAC5C,SAAS,CAAC,WAAW,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC;QAErG,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;QACzC,MAAM,MAAM,GAAG,MAAM,SAAS,CAAC,GAAG,CAAC,cAAc,EAAE,CAAC;QAEpD,MAAM,CAAC,SAAS,CAAC,MAAM,EAAE,EAAC,OAAO,EAAE,aAAa,EAAE,SAAS,EAAE,KAAK,EAAC,CAAC,CAAC;IACvE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,gCAAgC,EAAE,KAAK,IAAI,EAAE;QAC9C,MAAM,SAAS,GAAG,uBAAuB,EAAE,CAAC;QAC5C,SAAS,CAAC,WAAW,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC;QAErG,MAAM,gBAAgB,GAAG,SAAS,CAAC,GAAG,CAAC,UAAU,EAAE,CAAC;QACpD,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;QACzC,MAAM,eAAe,GAAG,SAAS,CAAC,GAAG,CAAC,UAAU,EAAE,CAAC;QAEnD,MAAM,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;QACjC,MAAM,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;IACjC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,wBAAwB,EAAE,KAAK,IAAI,EAAE;QACtC,MAAM,SAAS,GAAG,uBAAuB,EAAE,CAAC;QAC5C,SAAS,CAAC,WAAW,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC;QAErG,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC,sBAAsB,CAAC,CAAC;QACrD,MAAM,MAAM,GAAG,SAAS,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;QAE3C,MAAM,CAAC,WAAW,CAAC,MAAM,EAAE,sBAAsB,CAAC,CAAC;IACrD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,wBAAwB,EAAE,KAAK,IAAI,EAAE;QACtC,MAAM,SAAS,GAAG,uBAAuB,EAAE,CAAC;QAC5C,SAAS,CAAC,WAAW,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC;QACrG,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC,sBAAsB,CAAC,CAAC;QAErD,SAAS,CAAC,GAAG,CAAC,gBAAgB,EAAE,CAAC;QACjC,MAAM,MAAM,GAAG,SAAS,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;QAE3C,MAAM,CAAC,WAAW,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;IACjC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,iBAAiB,EAAE,KAAK,IAAI,EAAE;QAC/B,MAAM,SAAS,GAAG,uBAAuB,EAAE,CAAC;QAC5C,SAAS,CAAC,WAAW,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC;QAErG,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;QAC/C,MAAM,MAAM,GAAG,MAAM,SAAS,CAAC,GAAG,CAAC,cAAc,EAAE,CAAC;QAEpD,MAAM,CAAC,SAAS,CAAC,MAAM,EAAE,EAAC,OAAO,EAAE,aAAa,EAAE,SAAS,EAAE,KAAK,EAAC,CAAC,CAAC;IACvE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,sCAAsC,EAAE,KAAK,IAAI,EAAE;QACpD,MAAM,SAAS,GAAG,uBAAuB,EAAE,CAAC;QAC5C,SAAS,CAAC,WAAW,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC;QAErG,SAAS,CAAC,GAAG,CAAC,oBAAoB,CAAC,GAAG,EAAE;YACtC,OAAO,kBAAkB,CAAC;QAC5B,CAAC,CAAC,CAAC;QACH,MAAM,UAAU,GAAG,SAAS,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;QAE/C,MAAM,CAAC,WAAW,CAAC,UAAU,EAAE,kBAAkB,CAAC,CAAC;IACrD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,oCAAoC,EAAE,KAAK,IAAI,EAAE;QAClD,MAAM,SAAS,GAAG,uBAAuB,EAAE,CAAC;QAC5C,SAAS,CAAC,WAAW,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC;QAErG,MAAM,aAAa,GAAG,SAAS,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;QAC9C,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC,sBAAsB,CAAC,CAAC;QACrD,MAAM,YAAY,GAAG,SAAS,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;QAE7C,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;QAC9B,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;IAC9B,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,sBAAsB,EAAE,KAAK,IAAI,EAAE;QACpC,MAAM,SAAS,GAAG,uBAAuB,CAAC,+CAA+C,CAAC,CAAC;QAE3F,MAAM,MAAM,GAAG,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC;QAEzC,MAAM,CAAC,WAAW,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;IACrC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,yBAAyB,EAAE,KAAK,IAAI,EAAE;QACvC,MAAM,SAAS,GAAG,uBAAuB,EAAE,CAAC;QAC5C,SAAS,CAAC,WAAW,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC;QAErG,MAAM,gBAAgB,GAAG,SAAS,CAAC,GAAG,CAAC,UAAU,EAAE,CAAC;QACpD,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC,sBAAsB,CAAC,CAAC;QACrD,SAAS,CAAC,GAAG,CAAC,iBAAiB,EAAE,CAAC;QAClC,MAAM,eAAe,GAAG,SAAS,CAAC,GAAG,CAAC,UAAU,EAAE,CAAC;QAEnD,MAAM,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;QACjC,MAAM,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;IACjC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,oBAAoB,EAAE,KAAK,IAAI,EAAE;QAClC,MAAM,SAAS,GAAG,uBAAuB,EAAE,CAAC;QAC5C,SAAS,CAAC,WAAW,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC;QACrG,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,iBAAiB,EAAE,KAAK,CAAC,CAAC;QAEnD,MAAM,MAAM,GAAG,SAAS,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;QAEvC,MAAM,CAAC,WAAW,CAAC,MAAM,EAAE,iBAAiB,CAAC,CAAC;IAChD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,uBAAuB,EAAE,KAAK,IAAI,EAAE;QACrC,MAAM,SAAS,GAAG,uBAAuB,EAAE,CAAC;QAC5C,MAAM,mBAAmB,GAAG,EAAC,KAAK,EAAE,eAAe,EAAC,CAAC;QACrD,SAAS,CAAC,WAAW,CAAC,kBAAkB,CAAC,QAAQ,CAAC,mBAAmB,CAAC,CAAC;QACvE,SAAS,CAAC,WAAW,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC;QACrG,MAAM,SAAS,CAAC,GAAG,CAAC,cAAc,EAAE,CAAC;QAErC,MAAM,MAAM,GAAG,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC;QAEzC,MAAM,CAAC,WAAW,CAAC,MAAM,EAAE,eAAe,CAAC,CAAC;IAC9C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,oBAAoB,EAAE,KAAK,IAAI,EAAE;QAClC,MAAM,SAAS,GAAG,uBAAuB,EAAE,CAAC;QAC5C,SAAS,CAAC,WAAW,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC;QACrG,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,iBAAiB,EAAE,KAAK,CAAC,CAAC;QAEnD,MAAM,MAAM,GAAG,MAAM,SAAS,CAAC,GAAG,CAAC,eAAe,CAAC,SAAS,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;QAE3E,MAAM,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAC,UAAU,EAAE,CAAC,EAAE,WAAW,EAAE,iBAAiB,EAAE,YAAY,EAAE,CAAC,EAAE,WAAW,EAAE,CAAC,EAAC,CAAC,CAAC,CAAC;IAC/G,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,gCAAgC,EAAE,KAAK,IAAI,EAAE;QAC9C,MAAM,SAAS,GAAG,uBAAuB,EAAE,CAAC;QAC5C,SAAS,CAAC,WAAW,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC;QAErG,MAAM,wBAAwB,GAAG,SAAS,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;QAC/D,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,iBAAiB,EAAE,IAAI,CAAC,CAAC;QAClD,MAAM,uBAAuB,GAAG,SAAS,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;QAE9D,MAAM,CAAC,OAAO,CAAC,wBAAwB,CAAC,CAAC;QACzC,MAAM,CAAC,MAAM,CAAC,uBAAuB,CAAC,CAAC;IACzC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,wBAAwB,EAAE,KAAK,IAAI,EAAE;QACtC,MAAM,SAAS,GAAG,uBAAuB,EAAE,CAAC;QAC5C,SAAS,CAAC,WAAW,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC;QAErG,MAAM,MAAM,GAAG,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;QAE3C,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;QACzC,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,YAAY,EAAE,SAAS,CAAC,GAAG,CAAC,CAAC;IACzD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,iBAAiB,EAAE,KAAK,IAAI,EAAE;QAC/B,MAAM,SAAS,GAAG,uBAAuB,EAAE,CAAC;QAC5C,MAAM,WAAW,GAAG,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;QAE7E,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;QACtC,MAAM,MAAM,GAAG,SAAS,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;QAExC,MAAM,cAAc,GAAG,IAAI,GAAG,CAAiC,CAAC,WAAW,CAAC,CAAC,CAAC;QAC9E,MAAM,CAAC,SAAS,CAAC,MAAM,EAAE,cAAc,CAAC,CAAC;IAC3C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,sBAAsB,EAAE,KAAK,IAAI,EAAE;QACpC,MAAM,SAAS,GAAG,uBAAuB,EAAE,CAAC;QAE5C,SAAS,CAAC,GAAG,CAAC,cAAc,2DAA6C,iBAAiB,EAAE,CAAC,CAAC,CAAC;QAC/F,MAAM,WAAW,GAAG,SAAS,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;QAC7C,MAAM,YAAY,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC;QAEvD,MAAM,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;QACxC,MAAM,CAAC,WAAW,CAAC,YAAY,CAAC,aAAa,EAAE,OAAO,CAAC,CAAC;QACxD,MAAM,CAAC,WAAW,CAAC,YAAY,CAAC,YAAY,EAAE,iBAAiB,CAAC,CAAC;QACjE,MAAM,CAAC,WAAW,CAAC,YAAY,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;QACpD,MAAM,CAAC,WAAW,CAAC,YAAY,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;IACpD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,oBAAoB,EAAE,KAAK,IAAI,EAAE;QAClC,MAAM,SAAS,GAAG,uBAAuB,EAAE,CAAC;QAC5C,MAAM,WAAW,GAAG,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;QAC7E,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;QAEtC,MAAM,oBAAoB,GAAG,SAAS,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC;QAC3D,SAAS,CAAC,GAAG,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;QACzC,MAAM,mBAAmB,GAAG,SAAS,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC;QAE1D,MAAM,CAAC,WAAW,CAAC,oBAAoB,EAAE,CAAC,CAAC,CAAC;QAC5C,MAAM,CAAC,WAAW,CAAC,mBAAmB,EAAE,CAAC,CAAC,CAAC;IAC7C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,yBAAyB,EAAE,KAAK,IAAI,EAAE;QACvC,MAAM,SAAS,GAAG,uBAAuB,EAAE,CAAC;QAE5C,SAAS,CAAC,GAAG,CAAC,iBAAiB,CAAC,cAAc,EAAE,cAAc,CAAC,CAAC;QAEhE,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,GAAG,CAAC,iBAAiB,CAAC,cAAc,CAAC,EAAE,cAAc,CAAC,CAAC;IACtF,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,qBAAqB,EAAE,KAAK,IAAI,EAAE;QACnC,MAAM,SAAS,GAAG,uBAAuB,EAAE,CAAC;QAE5C,SAAS,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;QAE5B,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC,CAAC;IAC9C,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAEH,QAAQ,CAAC,YAAY,EAAE,GAAG,EAAE;IAC1B,EAAE,CAAC,wDAAwD,EAAE,GAAG,EAAE;QAChE,MAAM,YAAY,GAAG,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;QACnF,YAAY,CAAC,QAAQ,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC;QAClD,MAAM,UAAU,GAAG,IAAI,SAAS,CAAC,YAAY,CAAC,UAAU,CAAC,YAAY,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;QAC9E,MAAM,oBAAoB,GAAG,UAAU,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;QAChE,MAAM,uBAAuB,GAAG,UAAU,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;QACpE,MAAM,CAAC,WAAW,CAAC,oBAAoB,EAAE,KAAK,CAAC,CAAC;QAChD,MAAM,CAAC,WAAW,CAAC,oBAAoB,EAAE,uBAAuB,CAAC,CAAC;IACpE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,+BAA+B,EAAE,GAAG,EAAE;QACvC,MAAM,YAAY,GAAG,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;QACnF,MAAM,UAAU,GAAG,IAAI,SAAS,CAAC,YAAY,CAAC,UAAU,CAAC,YAAY,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;QAC9E,MAAM,MAAM,GAAG,UAAU,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;QACnD,MAAM,CAAC,WAAW,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;IAClC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,0CAA0C,EAAE,GAAG,EAAE;QAClD,MAAM,YAAY,GAAG,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;QACnF,MAAM,UAAU,GAAG,IAAI,SAAS,CAAC,YAAY,CAAC,UAAU,CAAC,YAAY,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;QAC9E,MAAM,MAAM,GAAG,UAAU,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;QAClD,MAAM,CAAC,WAAW,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;IACrC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,qCAAqC,EAAE,GAAG,EAAE;QAC7C,MAAM,YAAY,GAAG,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;QACnF,YAAY,CAAC,WAAW,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;QAC5C,MAAM,UAAU,GAAG,IAAI,SAAS,CAAC,YAAY,CAAC,UAAU,CAAC,YAAY,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;QAC9E,MAAM,MAAM,GAAG,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC,cAAc,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAChF,MAAM,CAAC,WAAW,CAAC,MAAM,EAAE,cAAc,CAAC,CAAC;IAC7C,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Platform from '../../core/platform/platform.js';\nimport {setupMockedUISourceCode} from '../../testing/UISourceCodeHelpers.js';\nimport * as TextUtils from '../text_utils/text_utils.js';\n\nimport * as Workspace from './workspace.js';\n\ndescribe('UISourceCode', () => {\n  it('can return name', async () => {\n    const sutObject = setupMockedUISourceCode('http://www.example.com:8080/testing/test?isTest=true');\n\n    const result = sutObject.sut.name();\n\n    assert.strictEqual(result, 'test?isTest=true');\n  });\n\n  it('can return url', async () => {\n    const sutObject = setupMockedUISourceCode('https://example.com/');\n\n    const result = sutObject.sut.url();\n\n    assert.strictEqual(result, 'https://example.com/');\n  });\n\n  it('can return canononical script ID', async () => {\n    const sutObject = setupMockedUISourceCode('https://example.com/');\n    sutObject.contentTypeStub.name.returns('nameExample');\n\n    const result = sutObject.sut.canononicalScriptId();\n\n    assert.strictEqual(result, 'nameExample,https://example.com/');\n  });\n\n  it('can return parent URL', async () => {\n    const sutObject = setupMockedUISourceCode('http://www.example.com:8080/testing/test?isTest=true');\n\n    const result = sutObject.sut.parentURL();\n\n    assert.strictEqual(result, 'http://www.example.com:8080/testing');\n  });\n\n  it('can return origin', async () => {\n    const sutObject = setupMockedUISourceCode('http://www.example.com:8080/testing/test?isTest=true');\n\n    const result = sutObject.sut.origin();\n\n    assert.strictEqual(result, 'http://www.example.com:8080');\n  });\n\n  it('can return trimmed display name', async () => {\n    const url = 'http://www.example.com:8080/testing/' +\n        'test'.repeat(30) + '?isTest=true';\n    const sutObject = setupMockedUISourceCode(url);\n\n    const result = sutObject.sut.displayName(false);\n\n    assert.isTrue('test'.repeat(30).startsWith(result.slice(0, -1)), 'display name does not show the correct text');\n    assert.isTrue(result.endsWith('…'), 'display name does not end with \\'…\\'');\n  });\n\n  it('can return untrimmed display name', async () => {\n    const url = 'http://www.example.com:8080/testing/' +\n        'test'.repeat(30) + '?isTest=true';\n    const sutObject = setupMockedUISourceCode(url);\n\n    const result = sutObject.sut.displayName(true);\n\n    assert.strictEqual(result, 'test'.repeat(30) + '?isTest=true');\n  });\n\n  it('can request project metadata', async () => {\n    const sutObject = setupMockedUISourceCode();\n    sutObject.projectStub.requestMetadata.resolves(null);\n\n    const result = await sutObject.sut.requestMetadata();\n\n    assert.strictEqual(result, null);\n  });\n\n  it('can return full display name', async () => {\n    const sutObject = setupMockedUISourceCode();\n    sutObject.projectStub.fullDisplayName.returns('Test Name');\n\n    const result = sutObject.sut.fullDisplayName();\n\n    assert.strictEqual(result, 'Test Name');\n  });\n\n  it('can return MIME type', async () => {\n    const sutObject = setupMockedUISourceCode();\n    sutObject.projectStub.mimeType.returns('Test Type');\n\n    const result = sutObject.sut.mimeType();\n\n    assert.strictEqual(result, 'Test Type');\n  });\n\n  it('can return display name', async () => {\n    const sutObject = setupMockedUISourceCode('http://www.example.com:8080/testing/test?isTest=true');\n\n    const result = sutObject.sut.displayName();\n\n    assert.strictEqual(result, 'test?isTest=true');\n  });\n\n  it('can return whether or not the project can be renamed', async () => {\n    const sutObject = setupMockedUISourceCode();\n    sutObject.projectStub.canRename.returns(true);\n\n    const result = sutObject.sut.canRename();\n\n    assert.isTrue(result);\n  });\n\n  it('can rename a project', async () => {\n    const sutObject = setupMockedUISourceCode();\n    sutObject.projectStub.workspace.returns(sinon.createStubInstance(Workspace.Workspace.WorkspaceImpl));\n    const rawPathstringExample = 'newName.html' as Platform.DevToolsPath.RawPathString;\n    sutObject.projectStub.rename.callsFake((uiSourceCode, rawPathstringExample, innerCallback) => {\n      innerCallback(true, rawPathstringExample);\n    });\n\n    await sutObject.sut.rename(rawPathstringExample);\n\n    assert.strictEqual(sutObject.sut.name(), 'newName.html');\n  });\n\n  it('deletes file by calling the project deleteFile function', async () => {\n    const sutObject = setupMockedUISourceCode();\n\n    sutObject.sut.remove();\n\n    sinon.assert.calledOnce(sutObject.projectStub.deleteFile);\n  });\n\n  it('can return content URL', async () => {\n    const sutObject = setupMockedUISourceCode('http://www.example.com:8080/testing/test?isTest=true');\n\n    const result = sutObject.sut.contentURL();\n\n    assert.strictEqual(result, 'http://www.example.com:8080/testing/test?isTest=true');\n  });\n\n  it('can return content type', async () => {\n    const sutObject = setupMockedUISourceCode();\n\n    const result = sutObject.sut.contentType();\n\n    assert.strictEqual(result, sutObject.contentTypeStub);\n  });\n\n  it('can request content', async () => {\n    const sutObject = setupMockedUISourceCode();\n    const contentData = new TextUtils.ContentData.ContentData('Example', false, 'text/plain');\n    sutObject.projectStub.requestFileContent.resolves(contentData);\n\n    const result = await sutObject.sut.requestContent();\n\n    assert.deepEqual(result, contentData.asDeferedContent());\n  });\n\n  it('check if the content is encoded', async () => {\n    const sutObject = setupMockedUISourceCode();\n    const deferredContentStub = new TextUtils.ContentData.ContentData('AQIDBA==', true, 'application/wasm');\n    sutObject.projectStub.requestFileContent.resolves(deferredContentStub);\n\n    const {isEncoded} = await sutObject.sut.requestContent();\n\n    assert.isTrue(isEncoded);\n  });\n\n  it('can commit content', async () => {\n    const sutObject = setupMockedUISourceCode();\n    sutObject.projectStub.workspace.returns(sinon.createStubInstance(Workspace.Workspace.WorkspaceImpl));\n\n    sutObject.sut.addRevision('New Content');\n    const result = await sutObject.sut.requestContent();\n\n    assert.deepEqual(result, {content: 'New Content', isEncoded: false});\n  });\n\n  it('can check if there are commits', async () => {\n    const sutObject = setupMockedUISourceCode();\n    sutObject.projectStub.workspace.returns(sinon.createStubInstance(Workspace.Workspace.WorkspaceImpl));\n\n    const hasCommitsBefore = sutObject.sut.hasCommits();\n    sutObject.sut.addRevision('New Content');\n    const hasCommitsAfter = sutObject.sut.hasCommits();\n\n    assert.isFalse(hasCommitsBefore);\n    assert.isTrue(hasCommitsAfter);\n  });\n\n  it('can set a working copy', async () => {\n    const sutObject = setupMockedUISourceCode();\n    sutObject.projectStub.workspace.returns(sinon.createStubInstance(Workspace.Workspace.WorkspaceImpl));\n\n    sutObject.sut.setWorkingCopy('Working Copy Example');\n    const result = sutObject.sut.workingCopy();\n\n    assert.strictEqual(result, 'Working Copy Example');\n  });\n\n  it('can reset working copy', async () => {\n    const sutObject = setupMockedUISourceCode();\n    sutObject.projectStub.workspace.returns(sinon.createStubInstance(Workspace.Workspace.WorkspaceImpl));\n    sutObject.sut.setWorkingCopy('Working Copy Example');\n\n    sutObject.sut.resetWorkingCopy();\n    const result = sutObject.sut.workingCopy();\n\n    assert.strictEqual(result, '');\n  });\n\n  it('can set content', async () => {\n    const sutObject = setupMockedUISourceCode();\n    sutObject.projectStub.workspace.returns(sinon.createStubInstance(Workspace.Workspace.WorkspaceImpl));\n\n    sutObject.sut.setContent('New Content', false);\n    const result = await sutObject.sut.requestContent();\n\n    assert.deepEqual(result, {content: 'New Content', isEncoded: false});\n  });\n\n  it('can set working copy getter function', async () => {\n    const sutObject = setupMockedUISourceCode();\n    sutObject.projectStub.workspace.returns(sinon.createStubInstance(Workspace.Workspace.WorkspaceImpl));\n\n    sutObject.sut.setWorkingCopyGetter(() => {\n      return 'Example Function';\n    });\n    const newContent = sutObject.sut.workingCopy();\n\n    assert.strictEqual(newContent, 'Example Function');\n  });\n\n  it('can check if working copy is dirty', async () => {\n    const sutObject = setupMockedUISourceCode();\n    sutObject.projectStub.workspace.returns(sinon.createStubInstance(Workspace.Workspace.WorkspaceImpl));\n\n    const isDirtyBefore = sutObject.sut.isDirty();\n    sutObject.sut.setWorkingCopy('Working Copy Example');\n    const isDirtyAfter = sutObject.sut.isDirty();\n\n    assert.isFalse(isDirtyBefore);\n    assert.isTrue(isDirtyAfter);\n  });\n\n  it('can return extension', async () => {\n    const sutObject = setupMockedUISourceCode('http://www.example.com:8080/testing/test.html');\n\n    const result = sutObject.sut.extension();\n\n    assert.strictEqual(result, 'html');\n  });\n\n  it('can commit working copy', async () => {\n    const sutObject = setupMockedUISourceCode();\n    sutObject.projectStub.workspace.returns(sinon.createStubInstance(Workspace.Workspace.WorkspaceImpl));\n\n    const hasCommitsBefore = sutObject.sut.hasCommits();\n    sutObject.sut.setWorkingCopy('Working Copy Example');\n    sutObject.sut.commitWorkingCopy();\n    const hasCommitsAfter = sutObject.sut.hasCommits();\n\n    assert.isFalse(hasCommitsBefore);\n    assert.isTrue(hasCommitsAfter);\n  });\n\n  it('can return content', async () => {\n    const sutObject = setupMockedUISourceCode();\n    sutObject.projectStub.workspace.returns(sinon.createStubInstance(Workspace.Workspace.WorkspaceImpl));\n    sutObject.sut.setContent('Example Content', false);\n\n    const result = sutObject.sut.content();\n\n    assert.strictEqual(result, 'Example Content');\n  });\n\n  it('can return load error', async () => {\n    const sutObject = setupMockedUISourceCode();\n    const deferredContentStub = {error: 'Example Error'};\n    sutObject.projectStub.requestFileContent.resolves(deferredContentStub);\n    sutObject.projectStub.workspace.returns(sinon.createStubInstance(Workspace.Workspace.WorkspaceImpl));\n    await sutObject.sut.requestContent();\n\n    const result = sutObject.sut.loadError();\n\n    assert.strictEqual(result, 'Example Error');\n  });\n\n  it('can search content', async () => {\n    const sutObject = setupMockedUISourceCode();\n    sutObject.projectStub.workspace.returns(sinon.createStubInstance(Workspace.Workspace.WorkspaceImpl));\n    sutObject.sut.setContent('Example Content', false);\n\n    const result = await sutObject.sut.searchInContent('Content', true, false);\n\n    assert.deepEqual(result, [{lineNumber: 0, lineContent: 'Example Content', columnNumber: 8, matchLength: 7}]);\n  });\n\n  it('can check if content is loaded', async () => {\n    const sutObject = setupMockedUISourceCode();\n    sutObject.projectStub.workspace.returns(sinon.createStubInstance(Workspace.Workspace.WorkspaceImpl));\n\n    const contentLoadedCheckBefore = sutObject.sut.contentLoaded();\n    sutObject.sut.setContent('Example Content', true);\n    const contentLoadedCheckAfter = sutObject.sut.contentLoaded();\n\n    assert.isFalse(contentLoadedCheckBefore);\n    assert.isTrue(contentLoadedCheckAfter);\n  });\n\n  it('can return UI location', async () => {\n    const sutObject = setupMockedUISourceCode();\n    sutObject.projectStub.workspace.returns(sinon.createStubInstance(Workspace.Workspace.WorkspaceImpl));\n\n    const result = sutObject.sut.uiLocation(5);\n\n    assert.strictEqual(result.lineNumber, 5);\n    assert.strictEqual(result.uiSourceCode, sutObject.sut);\n  });\n\n  it('can add message', async () => {\n    const sutObject = setupMockedUISourceCode();\n    const messageStub = sinon.createStubInstance(Workspace.UISourceCode.Message);\n\n    sutObject.sut.addMessage(messageStub);\n    const result = sutObject.sut.messages();\n\n    const expectedResult = new Set<Workspace.UISourceCode.Message>([messageStub]);\n    assert.deepEqual(result, expectedResult);\n  });\n\n  it('can add line message', async () => {\n    const sutObject = setupMockedUISourceCode();\n\n    sutObject.sut.addLineMessage(Workspace.UISourceCode.Message.Level.Error, 'Example Message', 5);\n    const messagesSet = sutObject.sut.messages();\n    const addedMessage = messagesSet.values().next().value;\n\n    assert.strictEqual(messagesSet.size, 1);\n    assert.strictEqual(addedMessage.levelInternal, 'Error');\n    assert.strictEqual(addedMessage.textInternal, 'Example Message');\n    assert.strictEqual(addedMessage.range.startLine, 5);\n    assert.strictEqual(addedMessage.range.endLine, 5);\n  });\n\n  it('can remove message', async () => {\n    const sutObject = setupMockedUISourceCode();\n    const messageStub = sinon.createStubInstance(Workspace.UISourceCode.Message);\n    sutObject.sut.addMessage(messageStub);\n\n    const messagesLengthBefore = sutObject.sut.messages().size;\n    sutObject.sut.removeMessage(messageStub);\n    const messagesLengthAfter = sutObject.sut.messages().size;\n\n    assert.strictEqual(messagesLengthBefore, 1);\n    assert.strictEqual(messagesLengthAfter, 0);\n  });\n\n  it('can set decoration data', async () => {\n    const sutObject = setupMockedUISourceCode();\n\n    sutObject.sut.setDecorationData('example type', 'example data');\n\n    assert.strictEqual(sutObject.sut.getDecorationData('example type'), 'example data');\n  });\n\n  it('can disable editing', async () => {\n    const sutObject = setupMockedUISourceCode();\n\n    sutObject.sut.disableEdit();\n\n    assert.isTrue(sutObject.sut.editDisabled());\n  });\n});\n\ndescribe('UILocation', () => {\n  it('formats column as base 16 for WebAssembly source files', () => {\n    const uiSourceCode = sinon.createStubInstance(Workspace.UISourceCode.UISourceCode);\n    uiSourceCode.mimeType.returns('application/wasm');\n    const uiLocation = new Workspace.UISourceCode.UILocation(uiSourceCode, 0, 15);\n    const actualWithShowColumn = uiLocation.lineAndColumnText(true);\n    const actualWithoutShowColumn = uiLocation.lineAndColumnText(false);\n    assert.strictEqual(actualWithShowColumn, '0xf');\n    assert.strictEqual(actualWithShowColumn, actualWithoutShowColumn);\n  });\n\n  it('formats line for source files', () => {\n    const uiSourceCode = sinon.createStubInstance(Workspace.UISourceCode.UISourceCode);\n    const uiLocation = new Workspace.UISourceCode.UILocation(uiSourceCode, 0, 15);\n    const actual = uiLocation.lineAndColumnText(false);\n    assert.strictEqual(actual, '1');\n  });\n\n  it('formats line and column for source files', () => {\n    const uiSourceCode = sinon.createStubInstance(Workspace.UISourceCode.UISourceCode);\n    const uiLocation = new Workspace.UISourceCode.UILocation(uiSourceCode, 0, 15);\n    const actual = uiLocation.lineAndColumnText(true);\n    assert.strictEqual(actual, '1:16');\n  });\n\n  it('formats the link text with location', () => {\n    const uiSourceCode = sinon.createStubInstance(Workspace.UISourceCode.UISourceCode);\n    uiSourceCode.displayName.returns('test.js');\n    const uiLocation = new Workspace.UISourceCode.UILocation(uiSourceCode, 0, 15);\n    const actual = uiLocation.linkText(false /* skipTrim */, true /* showColumn */);\n    assert.strictEqual(actual, 'test.js:1:16');\n  });\n});\n"]}