{"version":3,"file":"WorkspaceImpl.test.js","sourceRoot":"","sources":["../../../../../../front_end/models/workspace/WorkspaceImpl.test.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAG7B,OAAO,KAAK,QAAQ,MAAM,yBAAyB,CAAC;AACpD,OAAO,KAAK,SAAS,MAAM,2BAA2B,CAAC;AAEvD,QAAQ,CAAC,eAAe,EAAE,GAAG,EAAE;IAC7B,EAAE,CAAC,iCAAiC,EAAE,GAAG,EAAE;QACzC,MAAM,SAAS,GAAG,SAAS,CAAC,SAAS,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAC,QAAQ,EAAE,IAAI,EAAC,CAAC,CAAC;QAE/E,SAAS,CAAC,SAAS,CAAC,aAAa,CAAC,cAAc,EAAE,CAAC;QAEnD,MAAM,QAAQ,GAAG,SAAS,CAAC,SAAS,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC;QAC9D,MAAM,CAAC,cAAc,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;IAC7C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,qDAAqD,EAAE,GAAG,EAAE;QAC7D,MAAM,GAAG,GAAG,SAAS,CAAC,SAAS,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAC,QAAQ,EAAE,IAAI,EAAC,CAAC,CAAC;QACzE,MAAM,WAAW,GAAG,KAAK,CAAC,kBAAkB,CAAC,QAAQ,CAAC,2BAA2B,CAAC,2BAA2B,CAAC,CAAC;QAC/G,MAAM,gBAAgB,GAAG,kBAAkB,CAAC;QAC5C,MAAM,UAAU,GAAG,sBAAyD,CAAC;QAC7E,WAAW,CAAC,EAAE,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;QACzC,MAAM,gBAAgB,GAAG,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;QACvF,WAAW,CAAC,kBAAkB,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;QAC9E,GAAG,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;QAE5B,MAAM,MAAM,GAAG,GAAG,CAAC,YAAY,CAAC,gBAAgB,EAAE,UAAU,CAAC,CAAC;QAE9D,MAAM,CAAC,WAAW,CAAC,MAAM,EAAE,gBAAgB,CAAC,CAAC;IAC/C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,0CAA0C,EAAE,KAAK,IAAI,EAAE;QACxD,MAAM,GAAG,GAAG,SAAS,CAAC,SAAS,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAC,QAAQ,EAAE,IAAI,EAAC,CAAC,CAAC;QACzE,MAAM,UAAU,GAAG,sBAAyD,CAAC;QAC7E,MAAM,WAAW,GAAG,KAAK,CAAC,kBAAkB,CAAC,QAAQ,CAAC,2BAA2B,CAAC,2BAA2B,CAAC,CAAC;QAC/G,GAAG,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;QAE5B,GAAG,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAC;QAEnC,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,kBAAkB,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3E,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,iDAAiD,EAAE,KAAK,IAAI,EAAE;QAC/D,MAAM,GAAG,GAAG,SAAS,CAAC,SAAS,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAC,QAAQ,EAAE,IAAI,EAAC,CAAC,CAAC;QACzE,MAAM,gBAAgB,GAAG,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;QACvF,MAAM,WAAW,GAAG,KAAK,CAAC,kBAAkB,CAAC,QAAQ,CAAC,2BAA2B,CAAC,2BAA2B,CAAC,CAAC;QAC/G,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,SAAS,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;QACpE,WAAW,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;QACtD,GAAG,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;QAE5B,MAAM,MAAM,GAAG,GAAG,CAAC,2BAA2B,CAAC,SAAS,CAAC,SAAS,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;QAE1F,MAAM,CAAC,eAAe,CAAC,MAAM,EAAE,CAAC,gBAAgB,CAAC,CAAC,CAAC;IACrD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,sBAAsB,EAAE,GAAG,EAAE;QAC9B,MAAM,GAAG,GAAG,SAAS,CAAC,SAAS,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAC,QAAQ,EAAE,IAAI,EAAC,CAAC,CAAC;QACzE,MAAM,WAAW,GAAG,KAAK,CAAC,kBAAkB,CAAC,QAAQ,CAAC,2BAA2B,CAAC,2BAA2B,CAAC,CAAC;QAC/G,GAAG,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;QAE5B,GAAG,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;QAE/B,MAAM,CAAC,eAAe,CAAC,GAAG,CAAC,QAAQ,EAAE,EAAE,EAAE,CAAC,CAAC;IAC7C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,8BAA8B,EAAE,GAAG,EAAE;QACtC,MAAM,GAAG,GAAG,SAAS,CAAC,SAAS,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAC,QAAQ,EAAE,IAAI,EAAC,CAAC,CAAC;QACzE,MAAM,WAAW,GAAG,KAAK,CAAC,kBAAkB,CAAC,QAAQ,CAAC,2BAA2B,CAAC,2BAA2B,CAAC,CAAC;QAC/G,MAAM,gBAAgB,GAAG,kBAAkB,CAAC;QAC5C,WAAW,CAAC,EAAE,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;QACzC,GAAG,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;QAE5B,MAAM,MAAM,GAAG,GAAG,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;QAE7C,MAAM,CAAC,eAAe,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;IAC9C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,2BAA2B,EAAE,GAAG,EAAE;QACnC,MAAM,GAAG,GAAG,SAAS,CAAC,SAAS,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAC,QAAQ,EAAE,IAAI,EAAC,CAAC,CAAC;QACzE,MAAM,YAAY,GAAG,KAAK,CAAC,kBAAkB,CAAC,QAAQ,CAAC,2BAA2B,CAAC,2BAA2B,CAAC,CAAC;QAChH,MAAM,YAAY,GAAG,KAAK,CAAC,kBAAkB,CAAC,QAAQ,CAAC,2BAA2B,CAAC,2BAA2B,CAAC,CAAC;QAChH,YAAY,CAAC,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAChC,YAAY,CAAC,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAChC,GAAG,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;QAC7B,GAAG,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;QAE7B,MAAM,MAAM,GAAG,GAAG,CAAC,QAAQ,EAAE,CAAC;QAE9B,MAAM,CAAC,eAAe,CAAC,MAAM,EAAE,CAAC,YAAY,EAAE,YAAY,CAAC,CAAC,CAAC;IAC/D,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,8CAA8C,EAAE,GAAG,EAAE;QACtD,MAAM,GAAG,GAAG,SAAS,CAAC,SAAS,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAC,QAAQ,EAAE,IAAI,EAAC,CAAC,CAAC;QACzE,MAAM,YAAY,GAAG,KAAK,CAAC,kBAAkB,CAAC,QAAQ,CAAC,2BAA2B,CAAC,2BAA2B,CAAC,CAAC;QAChH,MAAM,YAAY,GAAG,KAAK,CAAC,kBAAkB,CAAC,QAAQ,CAAC,2BAA2B,CAAC,2BAA2B,CAAC,CAAC;QAChH,YAAY,CAAC,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAChC,YAAY,CAAC,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAChC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,SAAS,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;QACrE,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,SAAS,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;QACtE,GAAG,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;QAC7B,GAAG,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;QAE7B,MAAM,MAAM,GAAG,GAAG,CAAC,eAAe,CAAC,SAAS,CAAC,SAAS,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;QAE9E,MAAM,CAAC,eAAe,CAAC,MAAM,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC;IACjD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,iDAAiD,EAAE,KAAK,IAAI,EAAE;QAC/D,MAAM,GAAG,GAAG,SAAS,CAAC,SAAS,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAC,QAAQ,EAAE,IAAI,EAAC,CAAC,CAAC;QACzE,MAAM,gBAAgB,GAAG,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;QACvF,MAAM,WAAW,GAAG,KAAK,CAAC,kBAAkB,CAAC,QAAQ,CAAC,2BAA2B,CAAC,2BAA2B,CAAC,CAAC;QAC/G,WAAW,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;QACtD,GAAG,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;QAE5B,MAAM,MAAM,GAAG,GAAG,CAAC,aAAa,EAAE,CAAC;QAEnC,MAAM,CAAC,eAAe,CAAC,MAAM,EAAE,CAAC,gBAAgB,CAAC,CAAC,CAAC;IACrD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,4CAA4C,EAAE,KAAK,IAAI,EAAE;QAC1D,MAAM,GAAG,GAAG,SAAS,CAAC,SAAS,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAC,QAAQ,EAAE,IAAI,EAAC,CAAC,CAAC;QAEzE,MAAM,MAAM,GAAG,GAAG,CAAC,oCAAoC,EAAE,CAAC;QAE1D,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;IACzB,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,6BAA6B,EAAE,KAAK,IAAI,EAAE;QAC3C,MAAM,GAAG,GAAG,SAAS,CAAC,SAAS,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAC,QAAQ,EAAE,IAAI,EAAC,CAAC,CAAC;QAEzE,GAAG,CAAC,uCAAuC,CAAC,IAAI,CAAC,CAAC;QAElD,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,oCAAoC,EAAE,CAAC,CAAC;IAC5D,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAEH,QAAQ,CAAC,cAAc,EAAE,GAAG,EAAE;IAC5B,EAAE,CAAC,oFAAoF,EAAE,GAAG,EAAE;QAC5F,MAAM,aAAa,GAAG,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;QAClF,MAAM,kBAAkB,GAAG,sBAAyD,CAAC;QACrF,MAAM,oBAAoB,GACtB,uDAA0F,CAAC;QAC/F,MAAM,gBAAgB,GAAG,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;QACvF,gBAAgB,CAAC,GAAG,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC;QACjD,MAAM,eAAe,GAAG,IAAI,QAAQ,CAAC,2BAA2B,CAAC,2BAA2B,CACxF,aAAa,EACb,kBAAkB,EAClB,SAAS,CAAC,SAAS,CAAC,YAAY,CAAC,QAAQ,EACzC,oBAAoB,EACpB,KAAK,CACR,CAAC;QACF,eAAe,CAAC,eAAe,CAAC,gBAAgB,CAAC,CAAC;QAElD,eAAe,CAAC,kBAAkB,CAAC,gBAAgB,EAAE,oBAAoB,CAAC,CAAC;QAE3E,MAAM,CAAC,MAAM,CAAC,eAAe,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,CAAC,CAAC;QACtE,MAAM,CAAC,SAAS,CAAC,eAAe,CAAC,kBAAkB,CAC/C,iEAAoG,CAAC,CAAC,CAAC;IAC7G,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mFAAmF,EAAE,GAAG,EAAE;QAC3F,MAAM,aAAa,GAAG,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;QAClF,MAAM,kBAAkB,GAAG,sBAAyD,CAAC;QACrF,MAAM,gBAAgB,GAAG,4BAA+D,CAAC;QACzF,MAAM,oBAAoB,GACtB,uDAA0F,CAAC;QAC/F,MAAM,gBAAgB,GAAG,KAAK,CAAC,kBAAkB,CAAC,SAAS,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;QACvF,gBAAgB,CAAC,GAAG,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC;QACjD,gBAAgB,CAAC,SAAS,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;QACrD,MAAM,eAAe,GAAG,IAAI,QAAQ,CAAC,2BAA2B,CAAC,2BAA2B,CACxF,aAAa,EACb,kBAAkB,EAClB,SAAS,CAAC,SAAS,CAAC,YAAY,CAAC,QAAQ,EACzC,oBAAoB,EACpB,KAAK,CACR,CAAC;QACF,eAAe,CAAC,eAAe,CAAC,gBAAgB,CAAC,CAAC;QAElD,eAAe,CAAC,kBAAkB,CAAC,gBAAgB,EAAE,oBAAoB,CAAC,CAAC;QAE3E,MAAM,CAAC,MAAM,CAAC,eAAe,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,CAAC,CAAC;QACtE,MAAM,CAAC,SAAS,CAAC,eAAe,CAAC,kBAAkB,CAC/C,4FAC+B,CAAC,CAAC,CAAC;IACxC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as Bindings from '../bindings/bindings.js';\nimport * as Workspace from '../workspace/workspace.js';\n\ndescribe('WorkspaceImpl', () => {\n  it('can remove the current instance', () => {\n    const sutBefore = Workspace.Workspace.WorkspaceImpl.instance({forceNew: true});\n\n    Workspace.Workspace.WorkspaceImpl.removeInstance();\n\n    const sutAfter = Workspace.Workspace.WorkspaceImpl.instance();\n    assert.notStrictEqual(sutBefore, sutAfter);\n  });\n\n  it('can retrieve UI source code with project Id and URL', () => {\n    const sut = Workspace.Workspace.WorkspaceImpl.instance({forceNew: true});\n    const projectStub = sinon.createStubInstance(Bindings.ContentProviderBasedProject.ContentProviderBasedProject);\n    const exampleProjectID = 'exampleProjectID';\n    const exampleUrl = 'https://example.com/' as Platform.DevToolsPath.UrlString;\n    projectStub.id.returns(exampleProjectID);\n    const uiSourceCodeStub = sinon.createStubInstance(Workspace.UISourceCode.UISourceCode);\n    projectStub.uiSourceCodeForURL.withArgs(exampleUrl).returns(uiSourceCodeStub);\n    sut.addProject(projectStub);\n\n    const result = sut.uiSourceCode(exampleProjectID, exampleUrl);\n\n    assert.strictEqual(result, uiSourceCodeStub);\n  });\n\n  it('can return the UI source code from a URL', async () => {\n    const sut = Workspace.Workspace.WorkspaceImpl.instance({forceNew: true});\n    const exampleUrl = 'https://example.com/' as Platform.DevToolsPath.UrlString;\n    const projectStub = sinon.createStubInstance(Bindings.ContentProviderBasedProject.ContentProviderBasedProject);\n    sut.addProject(projectStub);\n\n    sut.uiSourceCodeForURL(exampleUrl);\n\n    assert.isTrue(projectStub.uiSourceCodeForURL.calledOnceWith(exampleUrl));\n  });\n\n  it('can return the UI source code from project type', async () => {\n    const sut = Workspace.Workspace.WorkspaceImpl.instance({forceNew: true});\n    const uiSourceCodeStub = sinon.createStubInstance(Workspace.UISourceCode.UISourceCode);\n    const projectStub = sinon.createStubInstance(Bindings.ContentProviderBasedProject.ContentProviderBasedProject);\n    projectStub.type.returns(Workspace.Workspace.projectTypes.Debugger);\n    projectStub.uiSourceCodes.returns([uiSourceCodeStub]);\n    sut.addProject(projectStub);\n\n    const result = sut.uiSourceCodesForProjectType(Workspace.Workspace.projectTypes.Debugger);\n\n    assert.deepStrictEqual(result, [uiSourceCodeStub]);\n  });\n\n  it('can remove a project', () => {\n    const sut = Workspace.Workspace.WorkspaceImpl.instance({forceNew: true});\n    const projectStub = sinon.createStubInstance(Bindings.ContentProviderBasedProject.ContentProviderBasedProject);\n    sut.addProject(projectStub);\n\n    sut.removeProject(projectStub);\n\n    assert.deepStrictEqual(sut.projects(), []);\n  });\n\n  it('can retrieve a project by ID', () => {\n    const sut = Workspace.Workspace.WorkspaceImpl.instance({forceNew: true});\n    const projectStub = sinon.createStubInstance(Bindings.ContentProviderBasedProject.ContentProviderBasedProject);\n    const exampleProjectID = 'exampleProjectID';\n    projectStub.id.returns(exampleProjectID);\n    sut.addProject(projectStub);\n\n    const result = sut.project(exampleProjectID);\n\n    assert.deepStrictEqual(result, projectStub);\n  });\n\n  it('can retrieve all projects', () => {\n    const sut = Workspace.Workspace.WorkspaceImpl.instance({forceNew: true});\n    const projectStub0 = sinon.createStubInstance(Bindings.ContentProviderBasedProject.ContentProviderBasedProject);\n    const projectStub1 = sinon.createStubInstance(Bindings.ContentProviderBasedProject.ContentProviderBasedProject);\n    projectStub0.id.returns('ID_0');\n    projectStub1.id.returns('ID_1');\n    sut.addProject(projectStub0);\n    sut.addProject(projectStub1);\n\n    const result = sut.projects();\n\n    assert.deepStrictEqual(result, [projectStub0, projectStub1]);\n  });\n\n  it('can retrieve all projects for a certain type', () => {\n    const sut = Workspace.Workspace.WorkspaceImpl.instance({forceNew: true});\n    const projectStub0 = sinon.createStubInstance(Bindings.ContentProviderBasedProject.ContentProviderBasedProject);\n    const projectStub1 = sinon.createStubInstance(Bindings.ContentProviderBasedProject.ContentProviderBasedProject);\n    projectStub0.id.returns('ID_0');\n    projectStub1.id.returns('ID_1');\n    projectStub0.type.returns(Workspace.Workspace.projectTypes.Debugger);\n    projectStub1.type.returns(Workspace.Workspace.projectTypes.Formatter);\n    sut.addProject(projectStub0);\n    sut.addProject(projectStub1);\n\n    const result = sut.projectsForType(Workspace.Workspace.projectTypes.Debugger);\n\n    assert.deepStrictEqual(result, [projectStub0]);\n  });\n\n  it('can return the UI source code from project type', async () => {\n    const sut = Workspace.Workspace.WorkspaceImpl.instance({forceNew: true});\n    const uiSourceCodeStub = sinon.createStubInstance(Workspace.UISourceCode.UISourceCode);\n    const projectStub = sinon.createStubInstance(Bindings.ContentProviderBasedProject.ContentProviderBasedProject);\n    projectStub.uiSourceCodes.returns([uiSourceCodeStub]);\n    sut.addProject(projectStub);\n\n    const result = sut.uiSourceCodes();\n\n    assert.deepStrictEqual(result, [uiSourceCodeStub]);\n  });\n\n  it('can check if there are tracking extensions', async () => {\n    const sut = Workspace.Workspace.WorkspaceImpl.instance({forceNew: true});\n\n    const result = sut.hasResourceContentTrackingExtensions();\n\n    assert.isFalse(result);\n  });\n\n  it('can set tracking extensions', async () => {\n    const sut = Workspace.Workspace.WorkspaceImpl.instance({forceNew: true});\n\n    sut.setHasResourceContentTrackingExtensions(true);\n\n    assert.isTrue(sut.hasResourceContentTrackingExtensions());\n  });\n});\n\ndescribe('ProjectStore', () => {\n  it('allows renaming for file names with special characters when there is no parent URL', () => {\n    const workspaceStub = sinon.createStubInstance(Workspace.Workspace.WorkspaceImpl);\n    const originalUrlExample = 'https://example.com/' as Platform.DevToolsPath.UrlString;\n    const nameWithSpecialChars =\n        'equals=question?percent%space dollar$semi;hash#amper&' as Platform.DevToolsPath.UrlString;\n    const uiSourceCodeStub = sinon.createStubInstance(Workspace.UISourceCode.UISourceCode);\n    uiSourceCodeStub.url.returns(originalUrlExample);\n    const projectInstance = new Bindings.ContentProviderBasedProject.ContentProviderBasedProject(\n        workspaceStub,\n        'exampleProjectID',\n        Workspace.Workspace.projectTypes.Debugger,\n        'exampleDisplayName',\n        false,\n    );\n    projectInstance.addUISourceCode(uiSourceCodeStub);\n\n    projectInstance.renameUISourceCode(uiSourceCodeStub, nameWithSpecialChars);\n\n    assert.isNull(projectInstance.uiSourceCodeForURL(originalUrlExample));\n    assert.isNotNull(projectInstance.uiSourceCodeForURL(\n        'equals=question%3Fpercent%25space%20dollar$semi%3Bhash%23amper&' as Platform.DevToolsPath.UrlString));\n  });\n\n  it('allows renaming for file names with special characters when there is a parent URL', () => {\n    const workspaceStub = sinon.createStubInstance(Workspace.Workspace.WorkspaceImpl);\n    const originalUrlExample = 'https://example.com/' as Platform.DevToolsPath.UrlString;\n    const parentUrlExample = 'https://parent.example.com' as Platform.DevToolsPath.UrlString;\n    const nameWithSpecialChars =\n        'equals=question?percent%space dollar$semi;hash#amper&' as Platform.DevToolsPath.UrlString;\n    const uiSourceCodeStub = sinon.createStubInstance(Workspace.UISourceCode.UISourceCode);\n    uiSourceCodeStub.url.returns(originalUrlExample);\n    uiSourceCodeStub.parentURL.returns(parentUrlExample);\n    const projectInstance = new Bindings.ContentProviderBasedProject.ContentProviderBasedProject(\n        workspaceStub,\n        'exampleProjectID',\n        Workspace.Workspace.projectTypes.Debugger,\n        'exampleDisplayName',\n        false,\n    );\n    projectInstance.addUISourceCode(uiSourceCodeStub);\n\n    projectInstance.renameUISourceCode(uiSourceCodeStub, nameWithSpecialChars);\n\n    assert.isNull(projectInstance.uiSourceCodeForURL(originalUrlExample));\n    assert.isNotNull(projectInstance.uiSourceCodeForURL(\n        'https://parent.example.com/equals=question%3Fpercent%25space%20dollar$semi%3Bhash%23amper&' as\n        Platform.DevToolsPath.UrlString));\n  });\n});\n"]}