{"version":3,"file":"LiveMetrics.js","sourceRoot":"","sources":["../../../../../../front_end/models/live-metrics/LiveMetrics.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as Protocol from '../../generated/protocol.js';\n\nimport * as Spec from './web-vitals-injected/spec/spec.js';\n\nconst LIVE_METRICS_WORLD_NAME = 'live_metrics_world';\n\nlet liveMetricsInstance: LiveMetrics;\n\nclass InjectedScript {\n  static #injectedScript?: string;\n  static async get(): Promise<string> {\n    if (!this.#injectedScript) {\n      const url = new URL('./web-vitals-injected/web-vitals-injected.generated.js', import.meta.url);\n      const result = await fetch(url);\n      this.#injectedScript = await result.text();\n    }\n    return this.#injectedScript;\n  }\n}\n\nexport class LiveMetrics extends Common.ObjectWrapper.ObjectWrapper<EventTypes> implements SDK.TargetManager.Observer {\n  #target?: SDK.Target.Target;\n  #scriptIdentifier?: Protocol.Page.ScriptIdentifier;\n  #lastResetContextId?: Protocol.Runtime.ExecutionContextId;\n  #lcpValue?: LCPValue;\n  #clsValue?: CLSValue;\n  #inpValue?: INPValue;\n  #interactions: InteractionValue[] = [];\n  #mutex = new Common.Mutex.Mutex();\n\n  private constructor() {\n    super();\n    SDK.TargetManager.TargetManager.instance().observeTargets(this);\n  }\n\n  static instance(opts: {forceNew: boolean|null} = {forceNew: null}): LiveMetrics {\n    const {forceNew} = opts;\n    if (!liveMetricsInstance || forceNew) {\n      liveMetricsInstance = new LiveMetrics();\n    }\n\n    return liveMetricsInstance;\n  }\n\n  get lcpValue(): LCPValue|undefined {\n    return this.#lcpValue;\n  }\n\n  get clsValue(): CLSValue|undefined {\n    return this.#clsValue;\n  }\n\n  get inpValue(): INPValue|undefined {\n    return this.#inpValue;\n  }\n\n  get interactions(): InteractionValue[] {\n    return this.#interactions;\n  }\n\n  /**\n   * DOM nodes can't be sent over a runtime binding, so we have to retrieve\n   * them separately.\n   */\n  async #resolveDomNode(index: number, executionContextId: Protocol.Runtime.ExecutionContextId):\n      Promise<SDK.DOMModel.DOMNode|null> {\n    if (!this.#target) {\n      return null;\n    }\n\n    const runtimeModel = this.#target.model(SDK.RuntimeModel.RuntimeModel);\n    if (!runtimeModel) {\n      return null;\n    }\n\n    const domModel = this.#target.model(SDK.DOMModel.DOMModel);\n    if (!domModel) {\n      return null;\n    }\n\n    const {result} = await this.#target.runtimeAgent().invoke_evaluate({\n      expression: `window.getNodeForIndex(${index})`,\n      contextId: executionContextId,\n    });\n\n    if (!result) {\n      return null;\n    }\n\n    const remoteObject = runtimeModel.createRemoteObject(result);\n    return domModel.pushObjectAsNodeToFrontend(remoteObject);\n  }\n\n  async #handleWebVitalsEvent(\n      webVitalsEvent: Spec.WebVitalsEvent, executionContextId: Protocol.Runtime.ExecutionContextId): Promise<void> {\n    switch (webVitalsEvent.name) {\n      case 'LCP': {\n        const lcpEvent: LCPValue = {\n          value: webVitalsEvent.value,\n          rating: webVitalsEvent.rating,\n        };\n        if (webVitalsEvent.nodeIndex !== undefined) {\n          const node = await this.#resolveDomNode(webVitalsEvent.nodeIndex, executionContextId);\n          if (node) {\n            lcpEvent.node = node;\n          }\n        }\n\n        this.#lcpValue = lcpEvent;\n        break;\n      }\n      case 'CLS': {\n        const event: CLSValue = {\n          value: webVitalsEvent.value,\n          rating: webVitalsEvent.rating,\n        };\n        this.#clsValue = event;\n        break;\n      }\n      case 'INP': {\n        const inpEvent: INPValue = {\n          value: webVitalsEvent.value,\n          rating: webVitalsEvent.rating,\n          interactionType: webVitalsEvent.interactionType,\n        };\n        if (webVitalsEvent.nodeIndex !== undefined) {\n          const node = await this.#resolveDomNode(webVitalsEvent.nodeIndex, executionContextId);\n          if (node) {\n            inpEvent.node = node;\n          }\n        }\n\n        this.#inpValue = inpEvent;\n        break;\n      }\n      case 'Interaction': {\n        const {nodeIndex, ...rest} = webVitalsEvent;\n        const interactionEvent: InteractionValue = rest;\n        if (nodeIndex !== undefined) {\n          const node = await this.#resolveDomNode(nodeIndex, executionContextId);\n          if (node) {\n            interactionEvent.node = node;\n          }\n        }\n\n        this.#interactions.push(interactionEvent);\n        break;\n      }\n      case 'reset': {\n        this.#lcpValue = undefined;\n        this.#clsValue = undefined;\n        this.#inpValue = undefined;\n        this.#interactions = [];\n        break;\n      }\n    }\n    this.dispatchEventToListeners(Events.Status, {\n      lcp: this.#lcpValue,\n      cls: this.#clsValue,\n      inp: this.#inpValue,\n      interactions: this.#interactions,\n    });\n  }\n\n  async #onBindingCalled(event: {data: Protocol.Runtime.BindingCalledEvent}): Promise<void> {\n    const {data} = event;\n    if (data.name !== Spec.EVENT_BINDING_NAME) {\n      return;\n    }\n\n    const webVitalsEvent = JSON.parse(data.payload) as Spec.WebVitalsEvent;\n\n    // Previously injected scripts will persist if DevTools is closed and reopened.\n    // Ensure we only handle events from the same execution context as the most recent \"reset\" event.\n    // \"reset\" events are only emitted once when the script is injected.\n    if (webVitalsEvent.name === 'reset') {\n      this.#lastResetContextId = data.executionContextId;\n    } else if (this.#lastResetContextId !== data.executionContextId) {\n      return;\n    }\n\n    // Async tasks can be performed while handling an event (e.g. resolving DOM node)\n    // Use a mutex here to ensure the events are handled in the order they are received.\n    await this.#mutex.run(async () => {\n      await this.#handleWebVitalsEvent(webVitalsEvent, data.executionContextId);\n    });\n  }\n\n  targetAdded(target: SDK.Target.Target): void {\n    if (target !== SDK.TargetManager.TargetManager.instance().primaryPageTarget()) {\n      return;\n    }\n    void this.#enable(target);\n  }\n\n  targetRemoved(target: SDK.Target.Target): void {\n    if (target !== SDK.TargetManager.TargetManager.instance().primaryPageTarget()) {\n      return;\n    }\n    void this.#disable();\n  }\n\n  async #enable(target: SDK.Target.Target): Promise<void> {\n    if (this.#target) {\n      return;\n    }\n\n    const runtimeModel = target.model(SDK.RuntimeModel.RuntimeModel);\n    if (!runtimeModel) {\n      return;\n    }\n\n    runtimeModel.addEventListener(SDK.RuntimeModel.Events.BindingCalled, this.#onBindingCalled, this);\n\n    await runtimeModel.addBinding({\n      name: Spec.EVENT_BINDING_NAME,\n      executionContextName: LIVE_METRICS_WORLD_NAME,\n    });\n\n    const source = await InjectedScript.get();\n\n    const {identifier} = await target.pageAgent().invoke_addScriptToEvaluateOnNewDocument({\n      source,\n      worldName: LIVE_METRICS_WORLD_NAME,\n      runImmediately: true,\n    });\n    this.#scriptIdentifier = identifier;\n\n    this.#target = target;\n  }\n\n  async #disable(): Promise<void> {\n    if (!this.#target) {\n      return;\n    }\n\n    const runtimeModel = this.#target.model(SDK.RuntimeModel.RuntimeModel);\n    if (!runtimeModel) {\n      return;\n    }\n\n    if (this.#scriptIdentifier) {\n      await this.#target.pageAgent().invoke_removeScriptToEvaluateOnNewDocument({\n        identifier: this.#scriptIdentifier,\n      });\n    }\n\n    await runtimeModel.removeBinding({\n      name: Spec.EVENT_BINDING_NAME,\n    });\n\n    runtimeModel.removeEventListener(SDK.RuntimeModel.Events.BindingCalled, this.#onBindingCalled, this);\n\n    this.#target = undefined;\n  }\n}\n\nexport const enum Events {\n  Status = 'status',\n}\n\nexport type MetricValue = Pick<Spec.MetricChangeEvent, 'value'|'rating'>;\n\nexport type Rating = Spec.MetricChangeEvent['rating'];\n\nexport interface LCPValue extends MetricValue {\n  node?: SDK.DOMModel.DOMNode;\n}\n\nexport interface INPValue extends MetricValue {\n  interactionType: Spec.INPChangeEvent['interactionType'];\n  node?: SDK.DOMModel.DOMNode;\n}\n\nexport type CLSValue = MetricValue;\n\nexport type InteractionValue = Pick<Spec.InteractionEvent, 'rating'|'interactionType'|'duration'>&{\n  node?: SDK.DOMModel.DOMNode,\n};\n\nexport interface StatusEvent {\n  lcp?: LCPValue;\n  cls?: CLSValue;\n  inp?: INPValue;\n  interactions: InteractionValue[];\n}\n\ntype EventTypes = {\n  [Events.Status]: StatusEvent,\n};\n"]}