{"version":3,"file":"InspectorFrontendHostAPI.js","sourceRoot":"","sources":["../../../../../../front_end/core/host/InspectorFrontendHostAPI.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) 2015 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Platform from '../../core/platform/platform.js';\nimport type * as Root from '../root/root.js';\n\nexport enum Events {\n  AppendedToURL = 'appendedToURL',\n  CanceledSaveURL = 'canceledSaveURL',\n  ColorThemeChanged = 'colorThemeChanged',\n  ContextMenuCleared = 'contextMenuCleared',\n  ContextMenuItemSelected = 'contextMenuItemSelected',\n  DeviceCountUpdated = 'deviceCountUpdated',\n  DevicesDiscoveryConfigChanged = 'devicesDiscoveryConfigChanged',\n  DevicesPortForwardingStatusChanged = 'devicesPortForwardingStatusChanged',\n  DevicesUpdated = 'devicesUpdated',\n  DispatchMessage = 'dispatchMessage',\n  DispatchMessageChunk = 'dispatchMessageChunk',\n  EnterInspectElementMode = 'enterInspectElementMode',\n  EyeDropperPickedColor = 'eyeDropperPickedColor',\n  FileSystemsLoaded = 'fileSystemsLoaded',\n  FileSystemRemoved = 'fileSystemRemoved',\n  FileSystemAdded = 'fileSystemAdded',\n  FileSystemFilesChangedAddedRemoved = 'FileSystemFilesChangedAddedRemoved',\n  IndexingTotalWorkCalculated = 'indexingTotalWorkCalculated',\n  IndexingWorked = 'indexingWorked',\n  IndexingDone = 'indexingDone',\n  KeyEventUnhandled = 'keyEventUnhandled',\n  ReattachRootTarget = 'reattachMainTarget',\n  ReloadInspectedPage = 'reloadInspectedPage',\n  RevealSourceLine = 'revealSourceLine',\n  SavedURL = 'savedURL',\n  SearchCompleted = 'searchCompleted',\n  SetInspectedTabId = 'setInspectedTabId',\n  SetUseSoftMenu = 'setUseSoftMenu',\n  ShowPanel = 'showPanel',\n}\n\nexport const EventDescriptors = [\n  [Events.AppendedToURL, 'appendedToURL', ['url']],\n  [Events.CanceledSaveURL, 'canceledSaveURL', ['url']],\n  [Events.ColorThemeChanged, 'colorThemeChanged', []],\n  [Events.ContextMenuCleared, 'contextMenuCleared', []],\n  [Events.ContextMenuItemSelected, 'contextMenuItemSelected', ['id']],\n  [Events.DeviceCountUpdated, 'deviceCountUpdated', ['count']],\n  [Events.DevicesDiscoveryConfigChanged, 'devicesDiscoveryConfigChanged', ['config']],\n  [Events.DevicesPortForwardingStatusChanged, 'devicesPortForwardingStatusChanged', ['status']],\n  [Events.DevicesUpdated, 'devicesUpdated', ['devices']],\n  [Events.DispatchMessage, 'dispatchMessage', ['messageObject']],\n  [Events.DispatchMessageChunk, 'dispatchMessageChunk', ['messageChunk', 'messageSize']],\n  [Events.EnterInspectElementMode, 'enterInspectElementMode', []],\n  [Events.EyeDropperPickedColor, 'eyeDropperPickedColor', ['color']],\n  [Events.FileSystemsLoaded, 'fileSystemsLoaded', ['fileSystems']],\n  [Events.FileSystemRemoved, 'fileSystemRemoved', ['fileSystemPath']],\n  [Events.FileSystemAdded, 'fileSystemAdded', ['errorMessage', 'fileSystem']],\n  [Events.FileSystemFilesChangedAddedRemoved, 'fileSystemFilesChangedAddedRemoved', ['changed', 'added', 'removed']],\n  [Events.IndexingTotalWorkCalculated, 'indexingTotalWorkCalculated', ['requestId', 'fileSystemPath', 'totalWork']],\n  [Events.IndexingWorked, 'indexingWorked', ['requestId', 'fileSystemPath', 'worked']],\n  [Events.IndexingDone, 'indexingDone', ['requestId', 'fileSystemPath']],\n  [Events.KeyEventUnhandled, 'keyEventUnhandled', ['event']],\n  [Events.ReattachRootTarget, 'reattachMainTarget', []],\n  [Events.ReloadInspectedPage, 'reloadInspectedPage', ['hard']],\n  [Events.RevealSourceLine, 'revealSourceLine', ['url', 'lineNumber', 'columnNumber']],\n  [Events.SavedURL, 'savedURL', ['url', 'fileSystemPath']],\n  [Events.SearchCompleted, 'searchCompleted', ['requestId', 'fileSystemPath', 'files']],\n  [Events.SetInspectedTabId, 'setInspectedTabId', ['tabId']],\n  [Events.SetUseSoftMenu, 'setUseSoftMenu', ['useSoftMenu']],\n  [Events.ShowPanel, 'showPanel', ['panelName']],\n];\n\nexport interface DispatchMessageChunkEvent {\n  messageChunk: string;\n  messageSize: number;\n}\n\nexport interface EyeDropperPickedColorEvent {\n  r: number;\n  g: number;\n  b: number;\n  a: number;\n}\n\nexport interface DevToolsFileSystem {\n  type: string;\n  fileSystemName: string;\n  rootURL: string;\n  fileSystemPath: Platform.DevToolsPath.RawPathString;\n}\n\nexport interface FileSystemAddedEvent {\n  errorMessage?: string;\n  fileSystem: DevToolsFileSystem|null;\n}\n\nexport interface FilesChangedEvent {\n  changed: Platform.DevToolsPath.RawPathString[];\n  added: Platform.DevToolsPath.RawPathString[];\n  removed: Platform.DevToolsPath.RawPathString[];\n}\n\nexport interface IndexingEvent {\n  requestId: number;\n  fileSystemPath: string;\n}\n\nexport interface IndexingTotalWorkCalculatedEvent extends IndexingEvent {\n  totalWork: number;\n}\n\nexport interface IndexingWorkedEvent extends IndexingEvent {\n  worked: number;\n}\n\nexport interface KeyEventUnhandledEvent {\n  type: string;\n  key: string;\n  keyCode: number;\n  modifiers: number;\n}\n\nexport interface RevealSourceLineEvent {\n  url: Platform.DevToolsPath.UrlString;\n  lineNumber: number;\n  columnNumber: number;\n}\n\nexport interface SavedURLEvent {\n  url: Platform.DevToolsPath.RawPathString|Platform.DevToolsPath.UrlString;\n  fileSystemPath: Platform.DevToolsPath.RawPathString|Platform.DevToolsPath.UrlString;\n}\n\nexport interface SearchCompletedEvent {\n  requestId: number;\n  files: Platform.DevToolsPath.RawPathString[];\n}\n\nexport interface DoAidaConversationResult {\n  statusCode?: number;\n  headers?: {\n    [x: string]: string,\n  };\n  netError?: number;\n  netErrorName?: string;\n  error?: string;\n  detail?: string;\n}\n\nexport interface VisualElementImpression {\n  id: number;\n  type: number;\n  parent?: number;\n  context?: number;\n  width?: number;\n  height?: number;\n}\n\nexport interface ImpressionEvent {\n  impressions: VisualElementImpression[];\n}\n\nexport interface ResizeEvent {\n  veid: number;\n  width?: number;\n  height?: number;\n}\n\nexport interface ClickEvent {\n  veid: number;\n  mouseButton?: number;\n  context?: number;\n  doubleClick: boolean;\n}\n\nexport interface HoverEvent {\n  veid: number;\n  time?: number;\n  context?: number;\n}\n\nexport interface DragEvent {\n  veid: number;\n  context?: number;\n}\n\nexport interface ChangeEvent {\n  veid: number;\n  context?: number;\n}\n\nexport interface KeyDownEvent {\n  veid?: number;\n  context?: number;\n}\n\n// While `EventDescriptors` are used to dynamically dispatch host binding events,\n// the `EventTypes` \"type map\" is used for type-checking said events by TypeScript.\n// `EventTypes` is not used at runtime.\n// Please note that the \"dispatch\" side can't be type-checked as the dispatch is\n// done dynamically.\nexport type EventTypes = {\n  [Events.AppendedToURL]: Platform.DevToolsPath.RawPathString|Platform.DevToolsPath.UrlString,\n  [Events.CanceledSaveURL]: Platform.DevToolsPath.UrlString,\n  [Events.ColorThemeChanged]: void,\n  [Events.ContextMenuCleared]: void,\n  [Events.ContextMenuItemSelected]: number,\n  [Events.DeviceCountUpdated]: number,\n  [Events.DevicesDiscoveryConfigChanged]: Adb.Config,\n  [Events.DevicesPortForwardingStatusChanged]: void,\n  [Events.DevicesUpdated]: void,\n  [Events.DispatchMessage]: string,\n  [Events.DispatchMessageChunk]: DispatchMessageChunkEvent,\n  [Events.EnterInspectElementMode]: void,\n  [Events.EyeDropperPickedColor]: EyeDropperPickedColorEvent,\n  [Events.FileSystemsLoaded]: DevToolsFileSystem[],\n  [Events.FileSystemRemoved]: Platform.DevToolsPath.RawPathString,\n  [Events.FileSystemAdded]: FileSystemAddedEvent,\n  [Events.FileSystemFilesChangedAddedRemoved]: FilesChangedEvent,\n  [Events.IndexingTotalWorkCalculated]: IndexingTotalWorkCalculatedEvent,\n  [Events.IndexingWorked]: IndexingWorkedEvent,\n  [Events.IndexingDone]: IndexingEvent,\n  [Events.KeyEventUnhandled]: KeyEventUnhandledEvent,\n  [Events.ReattachRootTarget]: void,\n  [Events.ReloadInspectedPage]: boolean,\n  [Events.RevealSourceLine]: RevealSourceLineEvent,\n  [Events.SavedURL]: SavedURLEvent,\n  [Events.SearchCompleted]: SearchCompletedEvent,\n  [Events.SetInspectedTabId]: string,\n  [Events.SetUseSoftMenu]: boolean,\n  [Events.ShowPanel]: string,\n};\n\nexport interface InspectorFrontendHostAPI {\n  addFileSystem(type?: string): void;\n\n  loadCompleted(): void;\n\n  indexPath(requestId: number, fileSystemPath: Platform.DevToolsPath.RawPathString, excludedFolders: string): void;\n\n  /**\n   * Requests inspected page to be placed atop of the inspector frontend with specified bounds.\n   */\n  setInspectedPageBounds(bounds: {\n    x: number,\n    y: number,\n    width: number,\n    height: number,\n  }): void;\n\n  showCertificateViewer(certChain: string[]): void;\n\n  setWhitelistedShortcuts(shortcuts: string): void;\n\n  setEyeDropperActive(active: boolean): void;\n\n  inspectElementCompleted(): void;\n\n  openInNewTab(url: Platform.DevToolsPath.UrlString): void;\n\n  openSearchResultsInNewTab(query: string): void;\n\n  showItemInFolder(fileSystemPath: Platform.DevToolsPath.RawPathString): void;\n\n  removeFileSystem(fileSystemPath: Platform.DevToolsPath.RawPathString): void;\n\n  requestFileSystems(): void;\n\n  save(url: Platform.DevToolsPath.UrlString, content: string, forceSaveAs: boolean, isBase64: boolean): void;\n\n  append(url: Platform.DevToolsPath.UrlString, content: string): void;\n\n  close(url: Platform.DevToolsPath.UrlString): void;\n\n  searchInPath(requestId: number, fileSystemPath: Platform.DevToolsPath.RawPathString, query: string): void;\n\n  stopIndexing(requestId: number): void;\n\n  bringToFront(): void;\n\n  closeWindow(): void;\n\n  copyText(text: string|null|undefined): void;\n\n  inspectedURLChanged(url: Platform.DevToolsPath.UrlString): void;\n\n  isolatedFileSystem(fileSystemId: string, registeredName: string): FileSystem|null;\n\n  loadNetworkResource(\n      url: string, headers: string, streamId: number, callback: (arg0: LoadNetworkResourceResult) => void): void;\n\n  registerPreference(name: string, options: {synced?: boolean}): void;\n\n  getPreferences(callback: (arg0: {\n                   [x: string]: string,\n                 }) => void): void;\n\n  getPreference(name: string, callback: (arg0: string) => void): void;\n\n  setPreference(name: string, value: string): void;\n\n  removePreference(name: string): void;\n\n  clearPreferences(): void;\n\n  getSyncInformation(callback: (arg0: SyncInformation) => void): void;\n\n  getHostConfig(callback: (arg0: Root.Runtime.HostConfig) => void): void;\n\n  upgradeDraggedFileSystemPermissions(fileSystem: FileSystem): void;\n\n  platform(): string;\n\n  recordCountHistogram(histogramName: string, sample: number, min: number, exclusiveMax: number, bucketSize: number):\n      void;\n\n  recordEnumeratedHistogram(actionName: EnumeratedHistogram, actionCode: number, bucketSize: number): void;\n\n  recordPerformanceHistogram(histogramName: string, duration: number): void;\n\n  recordUserMetricsAction(umaName: string): void;\n\n  sendMessageToBackend(message: string): void;\n\n  setDevicesDiscoveryConfig(config: Adb.Config): void;\n\n  setDevicesUpdatesEnabled(enabled: boolean): void;\n\n  performActionOnRemotePage(pageId: string, action: string): void;\n\n  openRemotePage(browserId: string, url: string): void;\n\n  openNodeFrontend(): void;\n\n  setInjectedScriptForOrigin(origin: string, script: string): void;\n\n  setIsDocked(isDocked: boolean, callback: () => void): void;\n\n  showSurvey(trigger: string, callback: (arg0: ShowSurveyResult) => void): void;\n\n  canShowSurvey(trigger: string, callback: (arg0: CanShowSurveyResult) => void): void;\n\n  zoomFactor(): number;\n\n  zoomIn(): void;\n\n  zoomOut(): void;\n\n  resetZoom(): void;\n\n  showContextMenuAtPoint(x: number, y: number, items: ContextMenuDescriptor[], document: Document): void;\n\n  reattach(callback: () => void): void;\n\n  readyForTest(): void;\n\n  connectionReady(): void;\n\n  setOpenNewWindowForPopups(value: boolean): void;\n\n  isHostedMode(): boolean;\n\n  setAddExtensionCallback(callback: (arg0: ExtensionDescriptor) => void): void;\n\n  initialTargetId(): Promise<string|null>;\n\n  doAidaConversation: (request: string, streamId: number, cb: (result: DoAidaConversationResult) => void) => void;\n  registerAidaClientEvent: (request: string) => void;\n\n  recordImpression(event: ImpressionEvent): void;\n  recordClick(event: ClickEvent): void;\n  recordHover(event: HoverEvent): void;\n  recordDrag(event: DragEvent): void;\n  recordChange(event: ChangeEvent): void;\n  recordKeyDown(event: KeyDownEvent): void;\n}\n\nexport interface ContextMenuDescriptor {\n  type: 'checkbox'|'item'|'separator'|'subMenu';\n  id?: number;\n  label?: string;\n  enabled?: boolean;\n  checked?: boolean;\n  subItems?: ContextMenuDescriptor[];\n  shortcut?: string;\n  jslogContext?: string;\n}\nexport interface LoadNetworkResourceResult {\n  statusCode: number;\n  headers?: {\n    [x: string]: string,\n  };\n  netError?: number;\n  netErrorName?: string;\n  urlValid?: boolean;\n  messageOverride?: string;\n}\nexport interface ExtensionDescriptor {\n  startPage: string;\n  name: string;\n  exposeExperimentalAPIs: boolean;\n  hostsPolicy?: ExtensionHostsPolicy;\n  allowFileAccess?: boolean;\n}\nexport interface ExtensionHostsPolicy {\n  runtimeAllowedHosts: string[];\n  runtimeBlockedHosts: string[];\n}\nexport interface ShowSurveyResult {\n  surveyShown: boolean;\n}\nexport interface CanShowSurveyResult {\n  canShowSurvey: boolean;\n}\nexport interface SyncInformation {\n  /** Whether Chrome Sync is enabled and active */\n  isSyncActive: boolean;\n  /** Whether syncing of Chrome Settings is enabled via Chrome Sync is enabled */\n  arePreferencesSynced?: boolean;\n  /** The email of the account used for syncing */\n  accountEmail?: string;\n  /** The image of the account used for syncing. Its a base64 encoded PNG */\n  accountImage?: string;\n}\n\n/**\n * Enum for recordPerformanceHistogram\n * Warning: There is another definition of this enum in the DevTools code\n * base, keep them in sync:\n * front_end/devtools_compatibility.js\n * @readonly\n */\nexport const enum EnumeratedHistogram {\n  ActionTaken = 'DevTools.ActionTaken',\n  BreakpointEditDialogRevealedFrom = 'DevTools.BreakpointEditDialogRevealedFrom',\n  PanelShown = 'DevTools.PanelShown',\n  PanelShownInLocation = 'DevTools.PanelShownInLocation',\n  SidebarPaneShown = 'DevTools.SidebarPaneShown',\n  KeyboardShortcutFired = 'DevTools.KeyboardShortcutFired',\n  IssueCreated = 'DevTools.IssueCreated',\n  IssuesPanelIssueExpanded = 'DevTools.IssuesPanelIssueExpanded',\n  IssuesPanelOpenedFrom = 'DevTools.IssuesPanelOpenedFrom',\n  IssuesPanelResourceOpened = 'DevTools.IssuesPanelResourceOpened',\n  KeybindSetSettingChanged = 'DevTools.KeybindSetSettingChanged',\n  ExperimentEnabledAtLaunch = 'DevTools.ExperimentEnabledAtLaunch',\n  ExperimentDisabledAtLaunch = 'DevTools.ExperimentDisabledAtLaunch',\n  ExperimentEnabled = 'DevTools.ExperimentEnabled',\n  ExperimentDisabled = 'DevTools.ExperimentDisabled',\n  DeveloperResourceLoaded = 'DevTools.DeveloperResourceLoaded',\n  DeveloperResourceScheme = 'DevTools.DeveloperResourceScheme',\n  Language = 'DevTools.Language',\n  SyncSetting = 'DevTools.SyncSetting',\n  RecordingAssertion = 'DevTools.RecordingAssertion',\n  RecordingCodeToggled = 'DevTools.RecordingCodeToggled',\n  RecordingCopiedToClipboard = 'DevTools.RecordingCopiedToClipboard',\n  RecordingEdited = 'DevTools.RecordingEdited',\n  RecordingExported = 'DevTools.RecordingExported',\n  RecordingReplayFinished = 'DevTools.RecordingReplayFinished',\n  RecordingReplaySpeed = 'DevTools.RecordingReplaySpeed',\n  RecordingReplayStarted = 'DevTools.RecordingReplayStarted',\n  RecordingToggled = 'DevTools.RecordingToggled',\n  SourcesSidebarTabShown = 'DevTools.Sources.SidebarTabShown',\n  SourcesPanelFileDebugged = 'DevTools.SourcesPanelFileDebugged',\n  SourcesPanelFileOpened = 'DevTools.SourcesPanelFileOpened',\n  NetworkPanelResponsePreviewOpened = 'DevTools.NetworkPanelResponsePreviewOpened',\n  StyleTextCopied = 'DevTools.StyleTextCopied',\n  ManifestSectionSelected = 'DevTools.ManifestSectionSelected',\n  CSSHintShown = 'DevTools.CSSHintShown',\n  LighthouseModeRun = 'DevTools.LighthouseModeRun',\n  LighthouseCategoryUsed = 'DevTools.LighthouseCategoryUsed',\n  ColorConvertedFrom = 'DevTools.ColorConvertedFrom',\n  ColorPickerOpenedFrom = 'DevTools.ColorPickerOpenedFrom',\n  CSSPropertyDocumentation = 'DevTools.CSSPropertyDocumentation',\n  SwatchActivated = 'DevTools.SwatchActivated',\n  AnimationPlaybackRateChanged = 'DevTools.AnimationPlaybackRateChanged',\n  AnimationPointDragged = 'DevTools.AnimationPointDragged',\n  LegacyResourceTypeFilterNumberOfSelectedChanged = 'DevTools.LegacyResourceTypeFilterNumberOfSelectedChanged',\n  LegacyResourceTypeFilterItemSelected = 'DevTools.LegacyResourceTypeFilterItemSelected',\n  ResourceTypeFilterNumberOfSelectedChanged = 'DevTools.ResourceTypeFilterNumberOfSelectedChanged',\n  ResourceTypeFilterItemSelected = 'DevTools.ResourceTypeFilterItemSelected',\n  NetworkPanelMoreFiltersNumberOfSelectedChanged = 'DevTools.NetworkPanelMoreFiltersNumberOfSelectedChanged',\n  NetworkPanelMoreFiltersItemSelected = 'DevTools.NetworkPanelMoreFiltersItemSelected',\n}\n"]}