{"version":3,"file":"EventTarget.test.js","sourceRoot":"","sources":["../../../../../../front_end/core/common/EventTarget.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n// Important: This code does not actually run any tests but is used to verify\n//            that the type magic of `EventTarget` behaves as expected w.r.t\n//            to the TypeScript compiler.\n\nimport * as Common from './common.js';\n\nconst enum Events {\n  VoidEvent = 'VoidEvent',\n  NumberEvent = 'NumberEvent',\n  KeyValueEvent = 'KeyValueEvent',\n  BooleanEvent = 'BooleanEvent',\n  UnionEvent = 'UnionEvent',\n}\n\ntype TestEvents = {\n  [Events.VoidEvent]: void,\n  [Events.NumberEvent]: number,\n  [Events.KeyValueEvent]: {key: string, value: number},\n  [Events.BooleanEvent]: boolean,\n  [Events.UnionEvent]: string|null,\n};\n\nclass TypedEventEmitter extends Common.ObjectWrapper.ObjectWrapper<TestEvents> {\n  testValidArgumentTypes() {\n    this.dispatchEventToListeners(Events.VoidEvent);\n    this.dispatchEventToListeners(Events.NumberEvent, 5.0);\n    this.dispatchEventToListeners(Events.KeyValueEvent, {key: 'key', value: 42});\n    this.dispatchEventToListeners(Events.BooleanEvent, true);\n    this.dispatchEventToListeners(Events.UnionEvent, 'foo');\n    this.dispatchEventToListeners(Events.UnionEvent, null);\n  }\n\n  testInvalidArgumentTypes() {\n    // @ts-expect-error undefined instead of no argument provided\n    this.dispatchEventToListeners(Events.VoidEvent, undefined);\n\n    // @ts-expect-error string instead of undefined provided\n    this.dispatchEventToListeners(Events.VoidEvent, 'void');\n\n    // @ts-expect-error string instead of number provided\n    this.dispatchEventToListeners(Events.NumberEvent, 'expected number');\n\n    // @ts-expect-error argument missing\n    this.dispatchEventToListeners(Events.NumberEvent);\n\n    // @ts-expect-error wrong object type provided as payload\n    this.dispatchEventToListeners(Events.KeyValueEvent, {key: 'key', foo: 'foo'});\n\n    // @ts-expect-error unknown event type used\n    this.dispatchEventToListeners('fake', {key: 'key', foo: 'foo'});\n\n    // @ts-expect-error wrong payload not part of the union\n    this.dispatchEventToListeners(Events.UnionEvent, 25);\n  }\n\n  testStringAndSymbolDisallowed() {\n    // @ts-expect-error only keys of `TestEvents` are allowed.\n    this.dispatchEventToListeners('foo');\n\n    // @ts-expect-error only keys of `TestEvents` are allowed.\n    this.dispatchEventToListeners(Symbol('foo'));\n  }\n}\n\nclass VoidTypedEventEmitter extends Common.ObjectWrapper.ObjectWrapper<void> {\n  testInvalidArgumentTypes() {\n    // @ts-expect-error undefined instead of no argument provided\n    this.dispatchEventToListeners(Events.VoidEvent, undefined);\n\n    // @ts-expect-error string instead of undefined provided\n    this.dispatchEventToListeners(Events.VoidEvent, 'void');\n\n    // @ts-expect-error string instead of number provided\n    this.dispatchEventToListeners(Events.NumberEvent, 'expected number');\n\n    // @ts-expect-error argument missing\n    this.dispatchEventToListeners(Events.NumberEvent);\n\n    // @ts-expect-error wrong object type provided as payload\n    this.dispatchEventToListeners(Events.KeyValueEvent, {key: 'key', foo: 'foo'});\n\n    // @ts-expect-error unknown event type used\n    this.dispatchEventToListeners('fake', {key: 'key', foo: 'foo'});\n\n    // @ts-expect-error wrong payload not part of the union\n    this.dispatchEventToListeners(Events.UnionEvent, 25);\n  }\n\n  testStringAndSymbolDisallowed() {\n    // @ts-expect-error only keys of `TestEvents` are allowed.\n    this.dispatchEventToListeners('foo');\n\n    // @ts-expect-error only keys of `TestEvents` are allowed.\n    this.dispatchEventToListeners(Symbol('foo'));\n  }\n}\n\nVoidTypedEventEmitter;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nclass UntypedEventEmitter extends Common.ObjectWrapper.ObjectWrapper<any> {\n  testDispatch() {\n    this.dispatchEventToListeners('foo');\n    this.dispatchEventToListeners(Symbol('number payload'), 25);\n    this.dispatchEventToListeners(Events.VoidEvent);\n    this.dispatchEventToListeners(Events.UnionEvent, 'foo');\n  }\n}\n\nfunction genericListener<T>(): (arg: Common.EventTarget.EventTargetEvent<T>) => void {\n  return (_arg: Common.EventTarget.EventTargetEvent<T>) => {};\n}\n\nconst typedEmitter = new TypedEventEmitter();\n\n(function testValidListeners() {\n  typedEmitter.addEventListener(Events.VoidEvent, genericListener<void>());\n  typedEmitter.addEventListener(Events.NumberEvent, genericListener<number>());\n  typedEmitter.addEventListener(Events.KeyValueEvent, genericListener<{key: string, value: number}>());\n  typedEmitter.addEventListener(Events.BooleanEvent, genericListener<boolean>());\n  typedEmitter.addEventListener(Events.UnionEvent, genericListener<string|null>());\n})();\n\n(function testInvalidListenerArguments() {\n  // @ts-expect-error\n  typedEmitter.addEventListener(Events.VoidEvent, genericListener<number>());\n\n  // @ts-expect-error\n  typedEmitter.addEventListener(Events.NumberEvent, genericListener<void>());\n\n  // @ts-expect-error\n  typedEmitter.addEventListener(Events.KeyValueEvent, genericListener<{foo: string}>());\n\n  // @ts-expect-error\n  typedEmitter.addEventListener(Events.UnionEvent, genericListener<string>());\n})();\n\n(function testInvalidListenerType() {\n  // @ts-expect-error\n  typedEmitter.addEventListener('foo', genericListener());\n\n  // @ts-expect-error\n  typedEmitter.addEventListener(Symbol('foo'), genericListener());\n})();\n\n(function testUnionTypeOnDispatch() {\n  // @ts-expect-error\n  typedEmitter.dispatchEventToListeners<Events.VoidEvent|Events.NumberEvent>(Events.NumberEvent, 5);\n\n  const event: Events = Math.random() < 0.5 ? Events.NumberEvent : Events.BooleanEvent;\n  // @ts-expect-error\n  typedEmitter.dispatchEventToListeners(event, true);\n})();\n\nconst untypedEmitter = new UntypedEventEmitter();\n\n(function testUntypedListeners() {\n  untypedEmitter.addEventListener('foo', genericListener());\n  untypedEmitter.addEventListener(Symbol('foo'), genericListener());\n  untypedEmitter.addEventListener(Events.VoidEvent, genericListener());\n})();\n"]}