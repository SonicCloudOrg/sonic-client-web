{"version":3,"file":"Lazy.test.js","sourceRoot":"","sources":["../../../../../../front_end/core/common/Lazy.test.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,MAAM,MAAM,aAAa,CAAC;AAEtC,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;AAE9B,QAAQ,CAAC,MAAM,EAAE,GAAG,EAAE;IACpB,EAAE,CAAC,yBAAyB,EAAE,GAAG,EAAE;QACjC,MAAM,mBAAmB,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;QAC3C,MAAM,QAAQ,GAAG,mBAAmB,EAAE,CAAC;QACvC,MAAM,QAAQ,GAAG,mBAAmB,EAAE,CAAC;QAEvC,MAAM,CAAC,WAAW,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;QACvC,MAAM,CAAC,cAAc,CAAC,EAAE,EAAE,QAAQ,CAAC,CAAC;IACtC,CAAC,CAAC,CAAC;IACH,EAAE,CAAC,6BAA6B,EAAE,GAAG,EAAE;QACrC,IAAI,SAAS,GAAG,CAAC,CAAC;QAClB,MAAM,iBAAiB,GAAG,IAAI,CAAC,GAAG,EAAE;YAClC,SAAS,EAAE,CAAC;YACZ,MAAM,KAAK,EAAE,CAAC;QAChB,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,MAAM,CAAC,iBAAiB,EAAE,KAAK,CAAC,CAAC;QACxC,qEAAqE;QACrE,gBAAgB;QAChB,MAAM,CAAC,MAAM,CAAC,iBAAiB,EAAE,KAAK,CAAC,CAAC;QACxC,MAAM,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;IACnC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from './common.js';\n\nconst lazy = Common.Lazy.lazy;\n\ndescribe('lazy', () => {\n  it('evaluates callback once', () => {\n    const initializeArrayOnce = lazy(() => []);\n    const arrayOne = initializeArrayOnce();\n    const arrayTwo = initializeArrayOnce();\n\n    assert.strictEqual(arrayOne, arrayTwo);\n    assert.notStrictEqual([], arrayOne);\n  });\n  it('handles callback exceptions', () => {\n    let callCount = 0;\n    const exceptionCallback = lazy(() => {\n      callCount++;\n      throw Error();\n    });\n    assert.throws(exceptionCallback, Error);\n    // Subsequent calls of the function should throw an exception without\n    // re-evaluation\n    assert.throws(exceptionCallback, Error);\n    assert.strictEqual(callCount, 1);\n  });\n});\n"]}