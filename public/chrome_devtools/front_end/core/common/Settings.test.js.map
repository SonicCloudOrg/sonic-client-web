{"version":3,"file":"Settings.test.js","sourceRoot":"","sources":["../../../../../../front_end/core/common/Settings.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from './common.js';\n\nconst SettingsStorage = Common.Settings.SettingsStorage;\nconst VersionController = Common.Settings.VersionController;\n\nclass MockStore implements Common.Settings.SettingsBackingStore {\n  #store = new Map();\n  register() {\n  }\n  set(key: string, value: string) {\n    this.#store.set(key, value);\n  }\n  get(key: string) {\n    return this.#store.get(key);\n  }\n  remove(key: string) {\n    this.#store.delete(key);\n  }\n  clear() {\n    this.#store.clear();\n  }\n}\n\ndescribe('SettingsStorage class', () => {\n  it('is able to set a name', () => {\n    const settingsStorage = new SettingsStorage({});\n    settingsStorage.set('Test Name', 'Test Value');\n    assert.strictEqual(settingsStorage.get('Test Name'), 'Test Value', 'Name was not retrieve correctly');\n  });\n\n  it('is able to check if a name that it has exists', () => {\n    const settingsStorage = new SettingsStorage({});\n    settingsStorage.set('Test Name', 'Test Value');\n    assert.isTrue(settingsStorage.has('Test Name'), 'the class should have that name');\n  });\n\n  it('is able to check if a name that it does not have exists', () => {\n    const settingsStorage = new SettingsStorage({});\n    assert.isFalse(settingsStorage.has('Test Name'), 'the class should not have that name');\n  });\n\n  it('is able to remove a name', () => {\n    const settingsStorage = new SettingsStorage({});\n    settingsStorage.set('Test Name', 'Test Value');\n    settingsStorage.remove('Test Name');\n    assert.isFalse(settingsStorage.has('Test Name'), 'the class should not have that name');\n  });\n\n  it('is able to remove all names', () => {\n    const settingsStorage = new SettingsStorage({});\n    settingsStorage.set('Test Name 1', 'Test Value 1');\n    settingsStorage.set('Test Name 2', 'Test Value 2');\n    settingsStorage.removeAll();\n    assert.isFalse(settingsStorage.has('Test Name 1'), 'the class should not have any names');\n    assert.isFalse(settingsStorage.has('Test Name 2'), 'the class should not have any names');\n  });\n\n  describe('forceGet', () => {\n    it('returns the value of the backing store, not the cached one', async () => {\n      const mockStore = new MockStore();\n      const settingsStorage = new SettingsStorage({}, mockStore);\n      settingsStorage.set('test', 'value');\n\n      mockStore.set('test', 'changed');\n\n      assert.strictEqual(await settingsStorage.forceGet('test'), 'changed');\n      assert.strictEqual(await settingsStorage.forceGet('test'), 'changed');\n    });\n    it('updates the cached value of a SettingsStorage', async () => {\n      const mockStore = new MockStore();\n      const settingsStorage = new SettingsStorage({}, mockStore);\n      settingsStorage.set('test', 'value');\n      mockStore.set('test', 'changed');\n      assert.strictEqual(settingsStorage.get('test'), 'value');\n\n      await settingsStorage.forceGet('test');\n\n      assert.strictEqual(settingsStorage.get('test'), 'changed');\n    });\n    it('leaves the cached value alone if the backing store has the same value', async () => {\n      const mockStore = new MockStore();\n      const settingsStorage = new SettingsStorage({}, mockStore);\n\n      mockStore.set('test', 'value');\n      settingsStorage.set('test', 'value');\n\n      assert.strictEqual(mockStore.get('test'), 'value');\n      assert.strictEqual(await settingsStorage.forceGet('test'), 'value');\n      assert.strictEqual(mockStore.get('test'), 'value');\n      assert.strictEqual(await settingsStorage.forceGet('test'), 'value');\n    });\n  });\n});\n\ndescribe('Settings instance', () => {\n  afterEach(() => {\n    Common.Settings.Settings.removeInstance();\n    Common.Settings.resetSettings();  // Clear SettingsRegistrations.\n  });\n\n  it('can be instantiated in a test', () => {\n    const dummyStorage = new SettingsStorage({});\n\n    const settings = Common.Settings.Settings.instance({\n      forceNew: true,\n      syncedStorage: dummyStorage,\n      globalStorage: dummyStorage,\n      localStorage: dummyStorage,\n    });\n\n    assert.isOk(settings);\n  });\n\n  it('throws when constructed without storage', () => {\n    assert.throws(() => Common.Settings.Settings.instance());\n    assert.throws(\n        () => Common.Settings.Settings.instance(\n            {forceNew: true, syncedStorage: null, globalStorage: null, localStorage: null}));\n  });\n\n  it('stores synced settings in the correct storage', () => {\n    const syncedStorage = new SettingsStorage({});\n    const dummyStorage = new SettingsStorage({});\n    Common.Settings.registerSettingExtension({\n      settingName: 'static-synced-setting',\n      settingType: Common.Settings.SettingType.BOOLEAN,\n      defaultValue: false,\n      storageType: Common.Settings.SettingStorageType.Synced,\n    });\n    const settings = Common.Settings.Settings.instance(\n        {forceNew: true, syncedStorage, globalStorage: dummyStorage, localStorage: dummyStorage});\n\n    const dynamicSetting: Common.Settings.Setting<string> =\n        settings.createSetting('dynamic-synced-setting', 'default val', Common.Settings.SettingStorageType.Synced);\n    dynamicSetting.set('foo value');\n    const staticSetting: Common.Settings.Setting<boolean> = settings.moduleSetting('static-synced-setting');\n    staticSetting.set(true);\n\n    assert.isFalse(dummyStorage.has('dynamic-synced-setting'));\n    assert.isFalse(dummyStorage.has('static-synced-setting'));\n    assert.strictEqual(syncedStorage.get('dynamic-synced-setting'), '\"foo value\"');\n    assert.strictEqual(syncedStorage.get('static-synced-setting'), 'true');\n  });\n\n  it('registers settings with the backing store when creating them', () => {\n    const registeredSettings = new Set<string>();\n    const mockBackingStore: Common.Settings.SettingsBackingStore = {\n      ...Common.Settings.NOOP_STORAGE,\n      register: (name: string) => registeredSettings.add(name),\n    };\n    const storage = new SettingsStorage({}, mockBackingStore, '__prefix__.');\n    Common.Settings.registerSettingExtension({\n      settingName: 'static-global-setting',\n      settingType: Common.Settings.SettingType.BOOLEAN,\n      defaultValue: false,\n      storageType: Common.Settings.SettingStorageType.Global,\n    });\n\n    const settings = Common.Settings.Settings.instance(\n        {forceNew: true, syncedStorage: storage, globalStorage: storage, localStorage: storage});\n    settings.createSetting('dynamic-local-setting', 42, Common.Settings.SettingStorageType.Local);\n    settings.createSetting('dynamic-synced-setting', 'foo', Common.Settings.SettingStorageType.Synced);\n\n    assert.isTrue(registeredSettings.has('__prefix__.static-global-setting'));\n    assert.isTrue(registeredSettings.has('__prefix__.dynamic-local-setting'));\n    assert.isTrue(registeredSettings.has('__prefix__.dynamic-synced-setting'));\n  });\n\n  describe('forceGet', () => {\n    it('triggers a setting changed event in case the value in the backing store got updated and we update the cached value',\n       async () => {\n         const mockStore = new MockStore();\n         const settingsStorage = new SettingsStorage({}, mockStore);\n         mockStore.set('test', '\"old\"');\n         const settings = Common.Settings.Settings.instance({\n           forceNew: true,\n           syncedStorage: settingsStorage,\n           globalStorage: settingsStorage,\n           localStorage: settingsStorage,\n         });\n         const testSetting: Common.Settings.Setting<string> =\n             settings.createSetting('test', 'default val', Common.Settings.SettingStorageType.Global);\n         const changes: string[] = [];\n         testSetting.addChangeListener((event: Common.EventTarget.EventTargetEvent<string>) => {\n           changes.push(event.data);\n         });\n         mockStore.set('test', '\"new\"');\n         assert.strictEqual(await testSetting.forceGet(), 'new');\n         assert.deepEqual(changes, ['new']);\n         assert.strictEqual(mockStore.get('test'), '\"new\"');\n         assert.strictEqual(await settingsStorage.forceGet('test'), '\"new\"');\n         assert.strictEqual(await testSetting.forceGet(), 'new');\n       });\n  });\n});\n\ndescribe('VersionController', () => {\n  let settings: Common.Settings.Settings;\n  let syncedStorage: Common.Settings.SettingsStorage;\n  let globalStorage: Common.Settings.SettingsStorage;\n  let localStorage: Common.Settings.SettingsStorage;\n\n  beforeEach(() => {\n    const mockStore = new MockStore();\n    syncedStorage = new Common.Settings.SettingsStorage({}, mockStore);\n    globalStorage = new Common.Settings.SettingsStorage({}, mockStore);\n    localStorage = new Common.Settings.SettingsStorage({}, mockStore);\n    settings = Common.Settings.Settings.instance({\n      forceNew: true,\n      syncedStorage,\n      globalStorage,\n      localStorage,\n    });\n  });\n\n  afterEach(() => {\n    Common.Settings.Settings.removeInstance();\n  });\n\n  describe('updateVersion', () => {\n    it('initializes version settings with the current version if the setting doesn\\'t exist yet', () => {\n      assert.isFalse(globalStorage.has(VersionController.GLOBAL_VERSION_SETTING_NAME));\n      assert.isFalse(syncedStorage.has(VersionController.SYNCED_VERSION_SETTING_NAME));\n      assert.isFalse(localStorage.has(VersionController.LOCAL_VERSION_SETTING_NAME));\n\n      new VersionController().updateVersion();\n\n      const currentVersion = VersionController.CURRENT_VERSION.toString();\n      assert.strictEqual(globalStorage.get(VersionController.GLOBAL_VERSION_SETTING_NAME), currentVersion);\n      assert.strictEqual(syncedStorage.get(VersionController.SYNCED_VERSION_SETTING_NAME), currentVersion);\n      assert.strictEqual(localStorage.get(VersionController.LOCAL_VERSION_SETTING_NAME), currentVersion);\n    });\n\n    function spyAllUpdateMethods(versionController: Common.Settings.VersionController) {\n      const spies: Array<sinon.SinonSpy<unknown[], unknown>> = [];\n      for (let i = 0; i < VersionController.CURRENT_VERSION; ++i) {\n        spies.push(\n            sinon.spy(versionController, `updateVersionFrom${i}To${i + 1}` as keyof Common.Settings.VersionController));\n      }\n      assert.lengthOf(spies, VersionController.CURRENT_VERSION);\n      return spies;\n    }\n\n    it('does not run any update* methods if no version setting exist yet', () => {\n      const versionController = new VersionController();\n      const spies = spyAllUpdateMethods(versionController);\n\n      versionController.updateVersion();\n\n      for (const spy of spies) {\n        assert.isFalse(spy.called);\n      }\n    });\n\n    it('does not run any update* methods if all version settings are already current', () => {\n      const currentVersion = VersionController.CURRENT_VERSION.toString();\n      globalStorage.set(VersionController.GLOBAL_VERSION_SETTING_NAME, currentVersion);\n      syncedStorage.set(VersionController.SYNCED_VERSION_SETTING_NAME, currentVersion);\n      localStorage.set(VersionController.LOCAL_VERSION_SETTING_NAME, currentVersion);\n      const versionController = new VersionController();\n      const spies = spyAllUpdateMethods(versionController);\n\n      versionController.updateVersion();\n\n      for (const spy of spies) {\n        assert.isFalse(spy.called);\n      }\n    });\n\n    it('runs correct update* methods if the local bucket lags behind', () => {\n      const currentVersion = VersionController.CURRENT_VERSION.toString();\n      const localVersion = (VersionController.CURRENT_VERSION - 3).toString();\n      globalStorage.set(VersionController.GLOBAL_VERSION_SETTING_NAME, currentVersion);\n      syncedStorage.set(VersionController.SYNCED_VERSION_SETTING_NAME, currentVersion);\n      localStorage.set(VersionController.LOCAL_VERSION_SETTING_NAME, localVersion);\n      const versionController = new VersionController();\n      const spies = spyAllUpdateMethods(versionController);\n\n      versionController.updateVersion();\n\n      const expectedUncalledSpies = spies.slice(0, -3);\n      for (const spy of expectedUncalledSpies) {\n        assert.isFalse(spy.called);\n      }\n\n      const expectedCalledSpies = spies.slice(-3);\n      for (const spy of expectedCalledSpies) {\n        assert.isTrue(spy.called);\n      }\n    });\n\n    it('runs correct update* methods if the synced bucket runs ahead', () => {\n      const currentVersion = VersionController.CURRENT_VERSION.toString();\n      const oldVersion = (VersionController.CURRENT_VERSION - 1).toString();\n      globalStorage.set(VersionController.GLOBAL_VERSION_SETTING_NAME, oldVersion);\n      syncedStorage.set(VersionController.SYNCED_VERSION_SETTING_NAME, currentVersion);\n      localStorage.set(VersionController.LOCAL_VERSION_SETTING_NAME, oldVersion);\n      const versionController = new VersionController();\n      const spies = spyAllUpdateMethods(versionController);\n\n      versionController.updateVersion();\n\n      const expectedUncalledSpies = spies.slice(0, -1);\n      for (const spy of expectedUncalledSpies) {\n        assert.isFalse(spy.called);\n      }\n\n      const expectedCalledSpies = spies.slice(-1);\n      for (const spy of expectedCalledSpies) {\n        assert.isTrue(spy.called);\n      }\n    });\n  });\n\n  describe('updateVersionFrom31To32', () => {\n    it('correctly adds resourceTypeName to breakpoints', () => {\n      const versionController = new VersionController();\n      const breakpointsSetting = settings.createLocalSetting('breakpoints', [\n        {url: 'webpack:///src/foo.ts', lineNumber: 4, condition: '', enabled: false},\n        {url: 'foo.js', lineNumber: 1, columnNumber: 42, condition: 'false', enabled: true},\n      ]);\n      versionController.updateVersionFrom31To32();\n      const breakpoints = breakpointsSetting.get();\n      assert.lengthOf(breakpoints, 2);\n      assert.propertyVal(breakpoints[0], 'url', 'webpack:///src/foo.ts');\n      assert.propertyVal(breakpoints[0], 'resourceTypeName', 'script');\n      assert.propertyVal(breakpoints[0], 'lineNumber', 4);\n      assert.notProperty(breakpoints[0], 'columnNumber');\n      assert.propertyVal(breakpoints[0], 'condition', '');\n      assert.propertyVal(breakpoints[0], 'enabled', false);\n      assert.propertyVal(breakpoints[1], 'url', 'foo.js');\n      assert.propertyVal(breakpoints[1], 'resourceTypeName', 'script');\n      assert.propertyVal(breakpoints[1], 'lineNumber', 1);\n      assert.propertyVal(breakpoints[1], 'columnNumber', 42);\n      assert.propertyVal(breakpoints[1], 'condition', 'false');\n      assert.propertyVal(breakpoints[1], 'enabled', true);\n    });\n  });\n\n  describe('updateVersionFrom32To33', () => {\n    it('correctly discards previously viewed files without url properties', () => {\n      const versionController = new VersionController();\n      const previouslyViewedFilesSetting = settings.createLocalSetting('previouslyViewedFiles', [\n        {url: 'http://localhost:3000', scrollLineNumber: 1},\n        {scrollLineNumber: 1},\n        {},\n        {url: 'webpack:///src/foo.ts'},\n      ]);\n      versionController.updateVersionFrom32To33();\n      const previouslyViewedFiles = previouslyViewedFilesSetting.get();\n      assert.lengthOf(previouslyViewedFiles, 2);\n      assert.propertyVal(previouslyViewedFiles[0], 'url', 'http://localhost:3000');\n      assert.notProperty(previouslyViewedFiles[0], 'selectionRange');\n      assert.propertyVal(previouslyViewedFiles[0], 'scrollLineNumber', 1);\n      assert.propertyVal(previouslyViewedFiles[1], 'url', 'webpack:///src/foo.ts');\n      assert.notProperty(previouslyViewedFiles[1], 'selectionRange');\n      assert.notProperty(previouslyViewedFiles[1], 'scrollLineNumber');\n    });\n\n    it('correctly adds resourceTypeName to previously viewed files', () => {\n      const versionController = new VersionController();\n      const previouslyViewedFilesSetting = settings.createLocalSetting('previouslyViewedFiles', [\n        {url: 'http://localhost:3000', scrollLineNumber: 1},\n        {url: 'webpack:///src/foo.ts'},\n      ]);\n      versionController.updateVersionFrom32To33();\n      const previouslyViewedFiles = previouslyViewedFilesSetting.get();\n      assert.lengthOf(previouslyViewedFiles, 2);\n      assert.propertyVal(previouslyViewedFiles[0], 'url', 'http://localhost:3000');\n      assert.propertyVal(previouslyViewedFiles[0], 'resourceTypeName', 'script');\n      assert.notProperty(previouslyViewedFiles[0], 'selectionRange');\n      assert.propertyVal(previouslyViewedFiles[0], 'scrollLineNumber', 1);\n      assert.propertyVal(previouslyViewedFiles[1], 'url', 'webpack:///src/foo.ts');\n      assert.propertyVal(previouslyViewedFiles[1], 'resourceTypeName', 'script');\n      assert.notProperty(previouslyViewedFiles[1], 'selectionRange');\n      assert.notProperty(previouslyViewedFiles[1], 'scrollLineNumber');\n    });\n  });\n\n  describe('updateVersionFrom33To34', () => {\n    it('correctly adds isLogpoint to breakpoints', () => {\n      const versionController = new VersionController();\n      const breakpointsSetting = settings.createLocalSetting('breakpoints', [\n        {\n          url: 'webpack:///src/foo.ts',\n          lineNumber: 4,\n          resourceTypeName: 'script',\n          condition: '/** DEVTOOLS_LOGPOINT */ console.log(foo.property)',\n          enabled: true,\n        },\n        {\n          url: 'foo.js',\n          lineNumber: 1,\n          columnNumber: 42,\n          resourceTypeName: 'script',\n          condition: 'x === 42',\n          enabled: true,\n        },\n        {url: 'bar.js', lineNumber: 5, columnNumber: 1, resourceTypeName: 'script', condition: '', enabled: true},\n      ]);\n\n      versionController.updateVersionFrom33To34();\n      const breakpoints = breakpointsSetting.get();\n\n      assert.propertyVal(breakpoints[0], 'isLogpoint', true);\n      assert.propertyVal(breakpoints[1], 'isLogpoint', false);\n      assert.propertyVal(breakpoints[2], 'isLogpoint', false);\n    });\n  });\n\n  describe('updateVersionFrom34To35', () => {\n    it('removes the logpoint prefix/suffix from logpoints', () => {\n      const versionController = new VersionController();\n      const breakpointsSetting =\n          settings.createLocalSetting('breakpoints', [{\n                                        url: 'webpack:///src/foo.ts',\n                                        lineNumber: 4,\n                                        resourceTypeName: 'script',\n                                        condition: '/** DEVTOOLS_LOGPOINT */ console.log(foo.property)',\n                                        enabled: true,\n                                        isLogpoint: true,\n                                      }]);\n\n      versionController.updateVersionFrom34To35();\n\n      const breakpoints = breakpointsSetting.get();\n      assert.lengthOf(breakpoints, 1);\n      assert.propertyVal(breakpoints[0], 'condition', 'foo.property');\n    });\n\n    it('leaves conditional breakpoints alone', () => {\n      const versionController = new VersionController();\n      const breakpointsSetting = settings.createLocalSetting('breakpoints', [{\n                                                               url: 'webpack:///src/foo.ts',\n                                                               lineNumber: 4,\n                                                               resourceTypeName: 'script',\n                                                               condition: 'x === 42',\n                                                               enabled: true,\n                                                               isLogpoint: false,\n                                                             }]);\n\n      versionController.updateVersionFrom34To35();\n\n      const breakpoints = breakpointsSetting.get();\n      assert.lengthOf(breakpoints, 1);\n      assert.propertyVal(breakpoints[0], 'condition', 'x === 42');\n    });\n  });\n\n  describe('updateVersionFrom35To36', () => {\n    it('update showThirdPartyIssues setting value to true', () => {\n      const versionController = new VersionController();\n      const showThirdPartyIssuesSetting = settings.createLocalSetting('showThirdPartyIssues', false);\n      versionController.updateVersionFrom35To36();\n      assert.isTrue(showThirdPartyIssuesSetting.get());\n    });\n  });\n\n  describe('updateVersionFrom36To37', () => {\n    it('updates all keys to kebab case', () => {\n      const versionController = new VersionController();\n      settings.globalStorage.set('globalSetting1', '');\n      settings.globalStorage.set('globalSetting2', '');\n      settings.localStorage.set('localSetting', '');\n      settings.syncedStorage.set('syncedSetting', '');\n\n      versionController.updateVersionFrom36To37();\n\n      assert.deepEqual(settings.globalStorage.keys(), ['global-setting-1', 'global-setting-2']);\n      assert.deepEqual(settings.localStorage.keys(), ['local-setting']);\n      assert.deepEqual(settings.syncedStorage.keys(), ['synced-setting']);\n    });\n\n    it('keeps kebab case settings as is', () => {\n      const versionController = new VersionController();\n      settings.globalStorage.set('setting', '123');\n      settings.localStorage.set('another-setting', '456');\n\n      versionController.updateVersionFrom36To37();\n\n      assert.deepEqual(settings.globalStorage.keys(), ['setting']);\n      assert.strictEqual(settings.globalStorage.get('setting'), '123');\n      assert.strictEqual(settings.localStorage.get('another-setting'), '456');\n    });\n\n    it('update data grid column weights value', () => {\n      const versionController = new VersionController();\n      settings.globalStorage.set('dataGrid-foo-columnWeights', JSON.stringify({\n        columnOne: 1,\n        columnTwo: 2,\n      }));\n\n      versionController.updateVersionFrom36To37();\n\n      const setting = settings.createSetting('data-grid-foo-column-weights', {});\n\n      assert.deepEqual(setting.get(), {'column-one': 1, 'column-two': 2});\n    });\n\n    it('update view manager settings values', () => {\n      const versionController = new VersionController();\n      settings.globalStorage.set('viewsLocationOverride', JSON.stringify({\n        somePanel: 'main',\n        other_panel: 'drawer',\n      }));\n      settings.globalStorage.set('closeableTabs', JSON.stringify({\n        somePanel: false,\n        other_panel: true,\n      }));\n      settings.globalStorage.set('main-tabOrder', JSON.stringify({\n        somePanel: 2,\n        other_panel: 1,\n      }));\n      settings.globalStorage.set('main-selectedTab', JSON.stringify('somePanel'));\n\n      versionController.updateVersionFrom36To37();\n\n      assert.deepEqual(\n          settings.createSetting('views-location-override', {}).get(), {'some-panel': 'main', 'other-panel': 'drawer'});\n      assert.deepEqual(settings.createSetting('closeable-tabs', {}).get(), {'some-panel': false, 'other-panel': true});\n      assert.deepEqual(settings.createSetting('main-tab-order', {}).get(), {'some-panel': 2, 'other-panel': 1});\n      assert.deepEqual(settings.createSetting('main-selected-tab', '').get(), 'some-panel');\n    });\n  });\n});\n"]}