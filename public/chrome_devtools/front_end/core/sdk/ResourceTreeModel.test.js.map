{"version":3,"file":"ResourceTreeModel.test.js","sourceRoot":"","sources":["../../../../../../front_end/core/sdk/ResourceTreeModel.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Protocol from '../../generated/protocol.js';\nimport {createTarget} from '../../testing/EnvironmentHelpers.js';\nimport {\n  describeWithMockConnection,\n  setMockConnectionResponseHandler,\n} from '../../testing/MockConnection.js';\nimport {\n  addChildFrame,\n  getInitializedResourceTreeModel,\n  getMainFrame,\n  LOADER_ID,\n  MAIN_FRAME_ID,\n  navigate,\n} from '../../testing/ResourceTreeHelpers.js';\n\nimport * as SDK from './sdk.js';\n\ndescribeWithMockConnection('ResourceTreeModel', () => {\n  it('calls clearRequests on reloadPage', async () => {\n    const resourceTreeModel = await getInitializedResourceTreeModel(createTarget());\n    const clearRequests = sinon.stub(SDK.NetworkManager.NetworkManager.prototype, 'clearRequests');\n    resourceTreeModel.reloadPage();\n    assert.isTrue(clearRequests.calledOnce, 'Not called just once');\n  });\n\n  it('calls clearRequests on top frame navigated', () => {\n    const target = createTarget();\n    const clearRequests = sinon.stub(SDK.NetworkManager.NetworkManager.prototype, 'clearRequests');\n    navigate(getMainFrame(target));\n    assert.isTrue(clearRequests.calledOnce, 'Not called just once');\n  });\n\n  it('does not call clearRequests on non-top frame navigated', async () => {\n    const target = createTarget();\n    const clearRequests = sinon.stub(SDK.NetworkManager.NetworkManager.prototype, 'clearRequests');\n    navigate(await addChildFrame(target));\n    assert.isTrue(clearRequests.notCalled, 'Called unexpctedly');\n  });\n\n  it('added frame has storageKey when navigated', async () => {\n    const testKey = 'test-storage-key';\n\n    const target = createTarget();\n    const resourceTreeModel = target.model(SDK.ResourceTreeModel.ResourceTreeModel);\n    assert.isEmpty(resourceTreeModel!.frames());\n    setMockConnectionResponseHandler('Storage.getStorageKeyForFrame', () => ({storageKey: testKey}));\n    navigate(getMainFrame(target));\n    const frames = resourceTreeModel!.frames();\n    assert.lengthOf(frames, 1);\n    const addedFrame = frames[0];\n    const key = await addedFrame.getStorageKey(false);\n    assert.strictEqual(key, testKey);\n  });\n\n  it('storage key gets updated when frame tree changes', async () => {\n    const testKey = 'test-storage-key';\n\n    const target = createTarget();\n    const resourceTreeModel = target.model(SDK.ResourceTreeModel.ResourceTreeModel);\n    assert.isEmpty(resourceTreeModel?.frames());\n    const manager = target.model(SDK.StorageKeyManager.StorageKeyManager);\n    assert.exists(manager);\n    const storageKeyAddedPromise = new Promise<void>(resolve => {\n      manager.addEventListener(SDK.StorageKeyManager.Events.StorageKeyAdded, () => {\n        resolve();\n      });\n    });\n    setMockConnectionResponseHandler('Storage.getStorageKeyForFrame', () => ({storageKey: testKey}));\n    navigate(getMainFrame(target));\n    await storageKeyAddedPromise;\n    assert.strictEqual(resourceTreeModel?.frames().length, 1);\n\n    const mainStorageKeyChangedPromise = new Promise<void>(resolve => {\n      manager.addEventListener(SDK.StorageKeyManager.Events.MainStorageKeyChanged, () => {\n        resolve();\n      });\n    });\n    const storageKeyRemovedPromise = new Promise<void>(resolve => {\n      manager.addEventListener(SDK.StorageKeyManager.Events.StorageKeyRemoved, () => {\n        resolve();\n      });\n    });\n\n    resourceTreeModel?.frameDetached('main' as Protocol.Page.FrameId, false);\n    assert.isEmpty(resourceTreeModel?.frames());\n    await Promise.all([mainStorageKeyChangedPromise, storageKeyRemovedPromise]);\n  });\n\n  function getResourceTreeModel(target: SDK.Target.Target): SDK.ResourceTreeModel.ResourceTreeModel {\n    const resourceTreeModel = target.model(SDK.ResourceTreeModel.ResourceTreeModel);\n    assert.exists(resourceTreeModel);\n    return resourceTreeModel;\n  }\n\n  it('calls reloads only top frames', () => {\n    const tabTarget = createTarget({type: SDK.Target.Type.Tab});\n    const mainFrameTarget = createTarget({parentTarget: tabTarget});\n    const subframeTarget = createTarget({parentTarget: mainFrameTarget});\n    const reloadMainFramePage = sinon.spy(getResourceTreeModel(mainFrameTarget), 'reloadPage');\n    const reloadSubframePage = sinon.spy(getResourceTreeModel(subframeTarget), 'reloadPage');\n    SDK.ResourceTreeModel.ResourceTreeModel.reloadAllPages();\n\n    assert.isTrue(reloadMainFramePage.calledOnce);\n    assert.isTrue(reloadSubframePage.notCalled);\n  });\n\n  it('tags reloads with the targets loaderId', async () => {\n    const target = createTarget();\n    const resourceTreeModel = await getInitializedResourceTreeModel(target);\n\n    const reload = sinon.spy(target.pageAgent(), 'invoke_reload');\n    assert.isNotNull(resourceTreeModel.mainFrame);\n    resourceTreeModel.reloadPage();\n    assert.isTrue(reload.calledOnce);\n    assert.deepStrictEqual(\n        reload.args[0], [{ignoreCache: undefined, loaderId: LOADER_ID, scriptToEvaluateOnLoad: undefined}]);\n  });\n\n  it('identifies not top frame', async () => {\n    const tabTarget = createTarget({type: SDK.Target.Type.Tab});\n    const mainFrameTarget = createTarget({parentTarget: tabTarget});\n    const subframeTarget = createTarget({parentTarget: mainFrameTarget});\n\n    navigate(getMainFrame(mainFrameTarget));\n    navigate(getMainFrame(subframeTarget), {parentId: 'parentId' as Protocol.Page.FrameId});\n    assert.isTrue(getResourceTreeModel(mainFrameTarget).mainFrame!.isOutermostFrame());\n    assert.isFalse(getResourceTreeModel(subframeTarget).mainFrame!.isOutermostFrame());\n  });\n\n  it('emits PrimaryPageChanged event upon prerender activation', async () => {\n    SDK.ChildTargetManager.ChildTargetManager.install();\n    const tabTarget = createTarget({type: SDK.Target.Type.Tab});\n    const childTargetManager = tabTarget.model(SDK.ChildTargetManager.ChildTargetManager);\n    assert.exists(childTargetManager);\n\n    const targetId = 'target_id' as Protocol.Target.TargetID;\n    const targetInfo = {\n      targetId,\n      type: 'page',\n      title: 'title',\n      url: 'http://example.com/prerendered.html',\n      attached: true,\n      canAccessOpener: false,\n      subtype: 'prerender',\n    };\n    childTargetManager.targetCreated({targetInfo});\n    await childTargetManager.attachedToTarget(\n        {sessionId: 'session_id' as Protocol.Target.SessionID, targetInfo, waitingForDebugger: false});\n\n    const prerenderTarget = SDK.TargetManager.TargetManager.instance().targetById(targetId);\n    assert.exists(prerenderTarget);\n    const resourceTreeModel = prerenderTarget.model(SDK.ResourceTreeModel.ResourceTreeModel);\n    assert.exists(resourceTreeModel);\n\n    const primaryPageChangedEvents:\n        {frame: SDK.ResourceTreeModel.ResourceTreeFrame, type: SDK.ResourceTreeModel.PrimaryPageChangeType}[] = [];\n    resourceTreeModel.addEventListener(\n        SDK.ResourceTreeModel.Events.PrimaryPageChanged, event => primaryPageChangedEvents.push(event.data));\n\n    const frame = resourceTreeModel.frameAttached('frame_id' as Protocol.Page.FrameId, null);\n    childTargetManager.targetInfoChanged({targetInfo: {...targetInfo, subtype: undefined}});\n\n    assert.strictEqual(primaryPageChangedEvents.length, 1);\n    assert.strictEqual(primaryPageChangedEvents[0].frame, frame);\n    assert.strictEqual(primaryPageChangedEvents[0].type, SDK.ResourceTreeModel.PrimaryPageChangeType.Activation);\n  });\n\n  it('emits PrimaryPageChanged event only upon navigation of the primary frame', async () => {\n    const tabTarget = createTarget({type: SDK.Target.Type.Tab});\n    const mainFrameTarget = createTarget({parentTarget: tabTarget});\n    const subframeTarget = createTarget({parentTarget: mainFrameTarget});\n    const prerenderTarget = createTarget({parentTarget: tabTarget, subtype: 'prerender'});\n\n    const primaryPageChangedEvents:\n        {frame: SDK.ResourceTreeModel.ResourceTreeFrame, type: SDK.ResourceTreeModel.PrimaryPageChangeType}[] = [];\n\n    [getResourceTreeModel(mainFrameTarget), getResourceTreeModel(subframeTarget), getResourceTreeModel(prerenderTarget)]\n        .forEach(resourceTreeModel => {\n          resourceTreeModel.addEventListener(\n              SDK.ResourceTreeModel.Events.PrimaryPageChanged, event => primaryPageChangedEvents.push(event.data));\n        });\n\n    navigate(getMainFrame(mainFrameTarget));\n    assert.strictEqual(primaryPageChangedEvents.length, 1);\n    assert.strictEqual(primaryPageChangedEvents[0].frame.id, 'main');\n    assert.strictEqual(primaryPageChangedEvents[0].type, SDK.ResourceTreeModel.PrimaryPageChangeType.Navigation);\n\n    navigate(getMainFrame(subframeTarget), {parentId: MAIN_FRAME_ID, id: 'child' as Protocol.Page.FrameId});\n    assert.strictEqual(primaryPageChangedEvents.length, 1);\n\n    navigate(getMainFrame(prerenderTarget));\n    assert.strictEqual(primaryPageChangedEvents.length, 1);\n  });\n\n  it('rebuilds the resource tree upon bfcache-navigation', async () => {\n    const target = createTarget();\n    const frameManager = SDK.FrameManager.FrameManager.instance();\n    const removedFromFrameManagerSpy = sinon.spy(frameManager, 'modelRemoved');\n    const addedToFrameManagerSpy = sinon.spy(frameManager, 'modelAdded');\n    const resourceTreeModel = getResourceTreeModel(target);\n    await resourceTreeModel.once(SDK.ResourceTreeModel.Events.CachedResourcesLoaded);\n    const cachedResourcesLoaded = resourceTreeModel.once(SDK.ResourceTreeModel.Events.CachedResourcesLoaded);\n    const processPendingEventsSpy = sinon.spy(resourceTreeModel, 'processPendingEvents');\n    const initialFrame = resourceTreeModel.frames()[0];\n\n    navigate(getMainFrame(target), {}, Protocol.Page.NavigationType.BackForwardCacheRestore);\n\n    await cachedResourcesLoaded;\n    assert.isTrue(removedFromFrameManagerSpy.calledOnce);\n    assert.isTrue(addedToFrameManagerSpy.calledOnce);\n    assert.isTrue(processPendingEventsSpy.calledTwice);\n\n    const frameAfterNav = resourceTreeModel.frames()[0];\n    assert.strictEqual(\n        initialFrame, frameAfterNav,\n        'Instead of keeping the existing frame, a new frame was created upon bfcache-navigation');\n  });\n});\n"]}