{"version":3,"file":"CookieModel.test.js","sourceRoot":"","sources":["../../../../../../front_end/core/sdk/CookieModel.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport {createTarget} from '../../testing/EnvironmentHelpers.js';\nimport {expectCalled} from '../../testing/ExpectStubCall.js';\nimport {\n  describeWithMockConnection,\n  setMockConnectionResponseHandler,\n} from '../../testing/MockConnection.js';\nimport {createNetworkRequest} from '../../testing/MockNetworkLog.js';\nimport {addChildFrame, createResource, DOMAIN, getMainFrame, navigate} from '../../testing/ResourceTreeHelpers.js';\n\nimport * as SDK from './sdk.js';\n\nconst MAIN_FRAME_RESOURCE_DOMAIN = 'example.org' as Platform.DevToolsPath.UrlString;\nconst CHILD_FRAME_RESOURCE_DOMAIN = 'example.net' as Platform.DevToolsPath.UrlString;\n\ndescribeWithMockConnection('CookieModel', () => {\n  const PROTOCOL_COOKIE = {\n    domain: '.example.com',\n    name: 'name',\n    path: '/test',\n    size: 23,\n    value: 'value',\n    expires: 42,\n    httpOnly: false,\n    secure: false,\n    session: true,\n    sameParty: false,\n    priority: Protocol.Network.CookiePriority.Medium,\n    sourcePort: 80,\n    sourceScheme: Protocol.Network.CookieSourceScheme.NonSecure,\n    partitionKey: undefined,\n  };\n\n  const PROTOCOL_COOKIE_PARTITIONED = {\n    domain: '.example.com',\n    name: 'name',\n    path: '/test',\n    size: 23,\n    value: 'value',\n    expires: 42,\n    httpOnly: false,\n    secure: false,\n    session: true,\n    sameParty: false,\n    priority: Protocol.Network.CookiePriority.Medium,\n    sourcePort: 80,\n    sourceScheme: Protocol.Network.CookieSourceScheme.NonSecure,\n    partitionKey: {topLevelSite: 'https://example.net', hasCrossSiteAncestor: false},\n  };\n\n  it('can retrieve cookies for domain', async () => {\n    // CDP Connection mock: for Network.getCookies, respond with a single cookie.\n    setMockConnectionResponseHandler('Network.getCookies', ({urls}) => {\n      return {\n        cookies: [\n          {...PROTOCOL_COOKIE_PARTITIONED, domain: `.${new URL(urls[0]).host}`},\n        ],\n      };\n    });\n\n    const target = createTarget();\n    const mainFrame = getMainFrame(target);\n    const resourceUrl = (domain: string) => `https://${domain}/resource` as Platform.DevToolsPath.UrlString;\n    createResource(mainFrame, resourceUrl(MAIN_FRAME_RESOURCE_DOMAIN), 'text/html', '');\n    const childFrame = await addChildFrame(target);\n    createResource(childFrame, resourceUrl(CHILD_FRAME_RESOURCE_DOMAIN), 'text/html', '');\n\n    const model = target.model(SDK.CookieModel.CookieModel)!;\n    for (const domain of [DOMAIN, MAIN_FRAME_RESOURCE_DOMAIN, CHILD_FRAME_RESOURCE_DOMAIN]) {\n      const cookies = await model.getCookiesForDomain(`https://${domain}`);\n      assert.isArray(cookies);\n      assert.lengthOf(cookies, 1);\n      assert.strictEqual(cookies[0].domain(), `.${domain}`);\n      assert.strictEqual(cookies[0].name(), 'name');\n      assert.strictEqual(cookies[0].path(), '/test');\n      assert.strictEqual(cookies[0].size(), 23);\n      assert.strictEqual(cookies[0].value(), 'value');\n      assert.strictEqual(cookies[0].expires(), 42000);\n      assert.strictEqual(cookies[0].httpOnly(), false);\n      assert.strictEqual(cookies[0].secure(), false);\n      assert.strictEqual(cookies[0].priority(), Protocol.Network.CookiePriority.Medium);\n      assert.strictEqual(cookies[0].sourcePort(), 80);\n      assert.strictEqual(cookies[0].sourceScheme(), Protocol.Network.CookieSourceScheme.NonSecure);\n      assert.strictEqual(cookies[0].partitionKey().topLevelSite, 'https://example.net');\n      assert.strictEqual(cookies[0].partitionKey().hasCrossSiteAncestor, false);\n    }\n  });\n\n  it('can detect cookie list changes', async () => {\n    setMockConnectionResponseHandler('Network.getCookies', ({urls}) => {\n      return {\n        cookies: [\n          {...PROTOCOL_COOKIE, domain: `.${new URL(urls[0]).host}`},\n        ],\n      };\n    });\n\n    const target = createTarget();\n\n    const dispatchLoadingFinished = () => target.model(SDK.NetworkManager.NetworkManager)!.dispatchEventToListeners(\n        SDK.NetworkManager.Events.LoadingFinished, createNetworkRequest('1'));\n\n    const mainFrame = getMainFrame(target);\n    const model = target.model(SDK.CookieModel.CookieModel)!;\n\n    const eventListener = sinon.stub();\n    model.addEventListener(SDK.CookieModel.Events.CookieListUpdated, eventListener);\n\n    assert.isEmpty(await model.getCookiesForDomain(`https://${MAIN_FRAME_RESOURCE_DOMAIN}`));\n\n    const resourceUrl = (domain: string) => `https://${domain}/main_resource` as Platform.DevToolsPath.UrlString;\n    createResource(mainFrame, resourceUrl(MAIN_FRAME_RESOURCE_DOMAIN), 'text/html', '');\n    dispatchLoadingFinished();\n    await expectCalled(eventListener);\n    assert.isNotEmpty(await model.getCookiesForDomain(`https://${MAIN_FRAME_RESOURCE_DOMAIN}`));\n    assert.isEmpty(await model.getCookiesForDomain(`https://${CHILD_FRAME_RESOURCE_DOMAIN}`));\n\n    eventListener.resetHistory();\n    const childFrame = await addChildFrame(target);\n    createResource(childFrame, resourceUrl(CHILD_FRAME_RESOURCE_DOMAIN), 'text/html', '');\n    dispatchLoadingFinished();\n    await expectCalled(eventListener);\n    assert.isNotEmpty(await model.getCookiesForDomain(`https://${CHILD_FRAME_RESOURCE_DOMAIN}`));\n  });\n\n  it('can detect cookie value changes', async () => {\n    const cookie = PROTOCOL_COOKIE;\n    setMockConnectionResponseHandler('Network.getCookies', () => ({cookies: [cookie]}));\n\n    const target = createTarget();\n    const dispatchLoadingFinished = () => target.model(SDK.NetworkManager.NetworkManager)!.dispatchEventToListeners(\n        SDK.NetworkManager.Events.LoadingFinished, createNetworkRequest('1'));\n\n    const mainFrame = getMainFrame(target);\n    const model = target.model(SDK.CookieModel.CookieModel)!;\n\n    const eventListener = sinon.stub();\n    model.addEventListener(SDK.CookieModel.Events.CookieListUpdated, eventListener);\n\n    createResource(mainFrame, `https://${DOMAIN}/main_resource` as Platform.DevToolsPath.UrlString, 'text/html', '');\n    dispatchLoadingFinished();\n\n    await expectCalled(eventListener);\n    eventListener.resetHistory();\n\n    cookie.value = 'new value';\n\n    dispatchLoadingFinished();\n    await expectCalled(eventListener);\n  });\n\n  it('clears stored blocked cookies on primary page change', async () => {\n    const target = createTarget();\n    const cookieModel = new SDK.CookieModel.CookieModel(target);\n    const cookie = new SDK.Cookie.Cookie('name', 'value');\n    const blockedReason = {\n      attribute: null,\n      uiString: 'Setting this cookie was blocked due to third-party cookie phaseout. Learn more in the Issues tab.',\n    };\n\n    cookieModel.addBlockedCookie(cookie, [blockedReason]);\n    const cookieToBlockedReasons = cookieModel.getCookieToBlockedReasonsMap();\n    assert.strictEqual(cookieToBlockedReasons.size, 1);\n    assert.deepStrictEqual(cookieToBlockedReasons.get(cookie), [blockedReason]);\n\n    navigate(getMainFrame(target));\n    assert.strictEqual(cookieModel.getCookieToBlockedReasonsMap().size, 0);\n  });\n\n  it('can delete unpartitioned and partitioned cookies', async () => {\n    let cookieArray = [PROTOCOL_COOKIE, PROTOCOL_COOKIE_PARTITIONED];\n\n    // CDP Connection mock.\n    setMockConnectionResponseHandler('Network.getCookies', () => {\n      return {\n        cookies: cookieArray,\n      };\n    });\n\n    // CDP Connection mock: simplified implementation for Network.deleteCookies, which deletes the matching cookie from `cookies`.\n    setMockConnectionResponseHandler('Network.deleteCookies', cookieToDelete => {\n      cookieArray = cookieArray.filter(cookie => {\n        return !(\n            cookie.name === cookieToDelete.name && cookie.domain === cookieToDelete.domain &&\n            cookie.path === cookieToDelete.path &&\n            cookie.partitionKey?.topLevelSite === cookieToDelete.partitionKey?.topLevelSite &&\n            cookie.partitionKey?.hasCrossSiteAncestor === cookieToDelete.partitionKey?.hasCrossSiteAncestor);\n      });\n\n      const response = {\n        getError() {\n          return undefined;\n        },\n      };\n      return Promise.resolve(response);\n    });\n\n    const target = createTarget();\n    const model = new SDK.CookieModel.CookieModel(target);\n    const cookies = await model.getCookiesForDomain(`https://${DOMAIN}`);\n    assert.isArray(cookies);\n    assert.lengthOf(cookies, 2);\n\n    await model.deleteCookie(SDK.Cookie.Cookie.fromProtocolCookie(PROTOCOL_COOKIE));\n\n    const cookies2 = await model.getCookiesForDomain(`https://${DOMAIN}`);\n    assert.isArray(cookies2);\n    assert.lengthOf(cookies2, 1);\n\n    assert.strictEqual(cookies2[0].domain(), '.example.com');\n    assert.strictEqual(cookies2[0].name(), 'name');\n    assert.strictEqual(cookies2[0].partitionKey().topLevelSite, 'https://example.net');\n    assert.strictEqual(cookies2[0].partitionKey().hasCrossSiteAncestor, false);\n\n    await model.deleteCookie(SDK.Cookie.Cookie.fromProtocolCookie(PROTOCOL_COOKIE_PARTITIONED));\n\n    const cookies3 = await model.getCookiesForDomain(`https://${DOMAIN}`);\n    assert.isArray(cookies3);\n    assert.lengthOf(cookies3, 0);\n  });\n});\n"]}