{"version":3,"file":"RuntimeModel.test.js","sourceRoot":"","sources":["../../../../../../front_end/core/sdk/RuntimeModel.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Protocol from '../../generated/protocol.js';\nimport {\n  createTarget,\n} from '../../testing/EnvironmentHelpers.js';\nimport {\n  describeWithMockConnection,\n} from '../../testing/MockConnection.js';\nimport type * as Platform from '../platform/platform.js';\n\nimport * as SDK from './sdk.js';\n\ndescribeWithMockConnection('ExecutionContext', () => {\n  function createExecutionContext(target: SDK.Target.Target, name?: string, isDefault?: boolean) {\n    const runtimeModel = target.model(SDK.RuntimeModel.RuntimeModel);\n    assert.exists(runtimeModel);\n    return new SDK.RuntimeModel.ExecutionContext(\n        runtimeModel, 42 as Protocol.Runtime.ExecutionContextId, 'uniqueId', name ?? 'name',\n        'http://www.example.com' as Platform.DevToolsPath.UrlString, Boolean(isDefault));\n  }\n\n  it('can be compared based on target type', () => {\n    const tabTarget = createTarget({type: SDK.Target.Type.Tab});\n    const mainFrameTargetUnderTab = createTarget({type: SDK.Target.Type.Frame, parentTarget: tabTarget});\n    assert.strictEqual(\n        SDK.RuntimeModel.ExecutionContext.comparator(\n            createExecutionContext(mainFrameTargetUnderTab),\n            createExecutionContext(createTarget({type: SDK.Target.Type.Frame, parentTarget: mainFrameTargetUnderTab}))),\n        -1);\n\n    assert.strictEqual(\n        SDK.RuntimeModel.ExecutionContext.comparator(\n            createExecutionContext(createTarget({type: SDK.Target.Type.Frame, parentTarget: mainFrameTargetUnderTab})),\n            createExecutionContext(\n                createTarget({type: SDK.Target.Type.ServiceWorker, parentTarget: mainFrameTargetUnderTab}))),\n        -1);\n\n    assert.strictEqual(\n        SDK.RuntimeModel.ExecutionContext.comparator(\n            createExecutionContext(\n                createTarget({type: SDK.Target.Type.ServiceWorker, parentTarget: mainFrameTargetUnderTab})),\n            createExecutionContext(\n                createTarget({type: SDK.Target.Type.SharedWorker, parentTarget: mainFrameTargetUnderTab}))),\n        -1);\n\n    assert.strictEqual(\n        SDK.RuntimeModel.ExecutionContext.comparator(\n            createExecutionContext(\n                createTarget({type: SDK.Target.Type.ServiceWorker, parentTarget: mainFrameTargetUnderTab})),\n            createExecutionContext(\n                createTarget({type: SDK.Target.Type.Worker, parentTarget: mainFrameTargetUnderTab}))),\n        -1);\n  });\n\n  it('can be compared based on target depth', () => {\n    const tabTarget = createTarget({type: SDK.Target.Type.Tab});\n    const mainFrameTarget = createTarget({type: SDK.Target.Type.Frame, parentTarget: tabTarget});\n    const subframeTarget = createTarget({type: SDK.Target.Type.Frame, parentTarget: mainFrameTarget});\n    assert.strictEqual(\n        SDK.RuntimeModel.ExecutionContext.comparator(\n            createExecutionContext(mainFrameTarget), createExecutionContext(subframeTarget)),\n        -1);\n  });\n\n  it('can be compared based on defaultness', () => {\n    const target = createTarget({type: SDK.Target.Type.Frame});\n    const defaultExecutionContext = createExecutionContext(target, 'name', /* isDefault=*/ true);\n    const notDefaultExecutionContext = createExecutionContext(target, 'name', /* isDefault=*/ false);\n    assert.strictEqual(\n        SDK.RuntimeModel.ExecutionContext.comparator(defaultExecutionContext, notDefaultExecutionContext), -1);\n  });\n\n  it('can be compared based on name', () => {\n    const target = createTarget({type: SDK.Target.Type.Frame});\n    const executionContextA = createExecutionContext(target, /* name=*/ 'a');\n    const executionContextB = createExecutionContext(target, /* name=*/ 'b');\n    assert.strictEqual(SDK.RuntimeModel.ExecutionContext.comparator(executionContextA, executionContextB), -1);\n  });\n});\n"]}