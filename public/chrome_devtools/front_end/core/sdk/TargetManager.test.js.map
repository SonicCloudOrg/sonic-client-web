{"version":3,"file":"TargetManager.test.js","sourceRoot":"","sources":["../../../../../../front_end/core/sdk/TargetManager.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {\n  createTarget,\n} from '../../testing/EnvironmentHelpers.js';\nimport {\n  describeWithMockConnection,\n} from '../../testing/MockConnection.js';\nimport * as Host from '../host/host.js';\nimport type * as Platform from '../platform/platform.js';\n\nimport * as SDK from './sdk.js';\n\ndescribeWithMockConnection('TargetManager', () => {\n  let targetManager: SDK.TargetManager.TargetManager;\n\n  beforeEach(() => {\n    targetManager = SDK.TargetManager.TargetManager.instance();\n  });\n\n  function resourceTreeModel(target: SDK.Target.Target): SDK.ResourceTreeModel.ResourceTreeModel {\n    const model = target.model(SDK.ResourceTreeModel.ResourceTreeModel);\n    assert.exists(model);\n    return model;\n  }\n\n  it('allows observing targets', () => {\n    const observer = sinon.spy(new SDK.TargetManager.Observer());\n    const target1 = createTarget();\n    targetManager.observeTargets(observer);\n    assert.isTrue(observer.targetAdded.calledOnceWith(target1));\n    const target2 = createTarget();\n    assert.isTrue(observer.targetAdded.calledTwice);\n    assert.isTrue(observer.targetAdded.calledWith(target2));\n    target2.dispose('YOLO!');\n    assert.isTrue(observer.targetRemoved.calledOnceWith(target2));\n\n    targetManager.unobserveTargets(observer);\n    createTarget();\n    assert.isTrue(observer.targetAdded.calledTwice);\n  });\n\n  it('allows observing models', () => {\n    const observer = sinon.spy(new SDK.TargetManager.SDKModelObserver<SDK.ResourceTreeModel.ResourceTreeModel>());\n    const target1 = createTarget();\n    targetManager.observeModels(SDK.ResourceTreeModel.ResourceTreeModel, observer);\n    assert.isTrue(observer.modelAdded.calledOnceWith(resourceTreeModel(target1)));\n    const target2 = createTarget();\n    assert.isTrue(observer.modelAdded.calledTwice);\n    assert.isTrue(observer.modelAdded.calledWith(resourceTreeModel(target2)));\n    target2.dispose('YOLO!');\n    assert.isTrue(observer.modelRemoved.calledOnceWith(resourceTreeModel(target2)));\n\n    targetManager.unobserveModels(SDK.ResourceTreeModel.ResourceTreeModel, observer);\n    createTarget();\n    assert.isTrue(observer.modelAdded.calledTwice);\n  });\n\n  it('allows listening to models', () => {\n    const WillReloadPage = SDK.ResourceTreeModel.Events.WillReloadPage;\n    const thisObject = {};\n    const listener = sinon.spy();\n    const target1 = createTarget();\n\n    targetManager.addModelListener(SDK.ResourceTreeModel.ResourceTreeModel, WillReloadPage, listener, thisObject);\n\n    resourceTreeModel(target1).dispatchEventToListeners(WillReloadPage);\n    assert.isTrue(listener.calledOnce);\n    assert.isTrue(listener.calledOn(thisObject));\n\n    const target2 = createTarget();\n    resourceTreeModel(target2).dispatchEventToListeners(WillReloadPage);\n    assert.isTrue(listener.calledTwice);\n    assert.isTrue(listener.calledOn(thisObject));\n\n    targetManager.removeModelListener(SDK.ResourceTreeModel.ResourceTreeModel, WillReloadPage, listener, thisObject);\n    resourceTreeModel(target1).dispatchEventToListeners(WillReloadPage);\n    assert.isTrue(listener.calledTwice);\n  });\n\n  it('allows observing targets in scope', () => {\n    const target1 = createTarget();\n    const target2 = createTarget();\n    targetManager.setScopeTarget(target1);\n    const observer = sinon.spy(new SDK.TargetManager.Observer());\n\n    targetManager.observeTargets(observer, {scoped: true});\n    assert.isTrue(observer.targetAdded.calledOnceWith(target1));\n\n    createTarget({parentTarget: target2});\n    assert.isTrue(observer.targetAdded.calledOnceWith(target1));\n\n    const subtarget1 = createTarget({parentTarget: target1});\n    assert.isTrue(observer.targetAdded.calledTwice);\n    assert.isTrue(observer.targetAdded.calledWith(subtarget1));\n  });\n\n  it('allows observing models in scope', () => {\n    const target1 = createTarget();\n    const target2 = createTarget();\n    targetManager.setScopeTarget(target1);\n    const observer = sinon.spy(new SDK.TargetManager.SDKModelObserver<SDK.ResourceTreeModel.ResourceTreeModel>());\n\n    targetManager.observeModels(SDK.ResourceTreeModel.ResourceTreeModel, observer, {scoped: true});\n    assert.isTrue(observer.modelAdded.calledOnceWith(resourceTreeModel(target1)));\n\n    createTarget({parentTarget: target2});\n    assert.isTrue(observer.modelAdded.calledOnce);\n\n    const subtarget1 = createTarget({parentTarget: target1});\n    assert.isTrue(observer.modelAdded.calledTwice);\n    assert.isTrue(observer.modelAdded.calledWith(resourceTreeModel(subtarget1)));\n  });\n\n  it('calls second observers even if the first is changing the scope', () => {\n    const target1 = createTarget();\n    const target2 = createTarget();\n    targetManager.setScopeTarget(target1);\n    const observer1 = sinon.stub(new SDK.TargetManager.SDKModelObserver<SDK.ResourceTreeModel.ResourceTreeModel>());\n    observer1.modelRemoved.callsFake(() => targetManager.setScopeTarget(target2));\n    const observer2 = sinon.spy(new SDK.TargetManager.SDKModelObserver<SDK.RuntimeModel.RuntimeModel>());\n\n    targetManager.observeModels(SDK.ResourceTreeModel.ResourceTreeModel, observer1, {scoped: true});\n    targetManager.observeModels(SDK.RuntimeModel.RuntimeModel, observer2, {scoped: true});\n\n    target1.dispose('YOLO!');\n    assert.isTrue(observer1.modelRemoved.calledOnce);\n    assert.isTrue(observer2.modelRemoved.calledOnce);\n  });\n\n  it('allows listening to models in scope', () => {\n    const WillReloadPage = SDK.ResourceTreeModel.Events.WillReloadPage;\n    const listener = sinon.spy();\n    const target1 = createTarget();\n    targetManager.setScopeTarget(target1);\n    const thisObject = {};\n\n    targetManager.addModelListener(\n        SDK.ResourceTreeModel.ResourceTreeModel, WillReloadPage, listener, thisObject, {scoped: true});\n\n    resourceTreeModel(target1).dispatchEventToListeners(WillReloadPage);\n    assert.isTrue(listener.calledOnce);\n    assert.isTrue(listener.calledOn(thisObject));\n\n    const target2 = createTarget();\n    resourceTreeModel(target2).dispatchEventToListeners(WillReloadPage);\n    assert.isTrue(listener.calledOnce);\n\n    const subtarget1 = createTarget({parentTarget: target1});\n    resourceTreeModel(subtarget1).dispatchEventToListeners(WillReloadPage);\n    assert.isTrue(listener.calledTwice);\n\n    targetManager.setScopeTarget(target2);\n    resourceTreeModel(target1).dispatchEventToListeners(WillReloadPage);\n    assert.isTrue(listener.calledTwice);\n\n    resourceTreeModel(target2).dispatchEventToListeners(WillReloadPage);\n    assert.isTrue(listener.calledThrice);\n  });\n\n  it('can transition between scopes', () => {\n    const target1 = createTarget();\n    const target2 = createTarget();\n    const targetObserver = sinon.spy(new SDK.TargetManager.Observer());\n    const modelObserver = sinon.spy(new SDK.TargetManager.SDKModelObserver<SDK.ResourceTreeModel.ResourceTreeModel>());\n    const scopeChangeListener = sinon.spy();\n\n    targetManager.observeTargets(targetObserver, {scoped: true});\n    targetManager.observeModels(SDK.ResourceTreeModel.ResourceTreeModel, modelObserver, {scoped: true});\n    targetManager.addScopeChangeListener(scopeChangeListener);\n\n    assert.isTrue(targetObserver.targetAdded.calledOnceWith(target1));\n    assert.isTrue(modelObserver.modelAdded.calledOnce);\n    assert.isFalse(targetObserver.targetRemoved.called);\n    assert.isFalse(modelObserver.modelRemoved.called);\n    assert.isFalse(scopeChangeListener.called);\n\n    targetObserver.targetAdded.resetHistory();\n    modelObserver.modelAdded.resetHistory();\n\n    targetManager.setScopeTarget(target2);\n    assert.isTrue(targetObserver.targetRemoved.calledOnceWith(target1));\n    assert.isTrue(modelObserver.modelRemoved.calledOnce);\n    assert.isTrue(targetObserver.targetAdded.calledOnceWith(target2));\n    assert.isTrue(modelObserver.modelAdded.calledOnce);\n    assert.isTrue(targetObserver.targetAdded.calledAfter(targetObserver.targetRemoved));\n    assert.isTrue(modelObserver.modelAdded.calledAfter(modelObserver.modelRemoved));\n    assert.isTrue(scopeChangeListener.called);\n\n    targetObserver.targetAdded.resetHistory();\n    targetObserver.targetRemoved.resetHistory();\n    modelObserver.modelAdded.resetHistory();\n    modelObserver.modelRemoved.resetHistory();\n    scopeChangeListener.resetHistory();\n\n    targetManager.setScopeTarget(null);\n    assert.isFalse(targetObserver.targetAdded.called);\n    assert.isFalse(modelObserver.modelAdded.calledOnce);\n    assert.isTrue(targetObserver.targetRemoved.calledOnceWith(target1));\n    assert.isTrue(modelObserver.modelRemoved.called);\n    assert.isTrue(scopeChangeListener.called);\n\n    targetObserver.targetAdded.resetHistory();\n    targetObserver.targetRemoved.resetHistory();\n    modelObserver.modelAdded.resetHistory();\n    modelObserver.modelRemoved.resetHistory();\n    scopeChangeListener.resetHistory();\n\n    const target3 = createTarget();\n    assert.isFalse(targetObserver.targetAdded.called);\n    assert.isFalse(modelObserver.modelAdded.called);\n    assert.isFalse(scopeChangeListener.called);\n\n    targetManager.setScopeTarget(target3);\n    assert.isTrue(targetObserver.targetAdded.called);\n    assert.isTrue(modelObserver.modelAdded.called);\n    assert.isTrue(scopeChangeListener.called);\n  });\n\n  it('short-cicuits setting the same scope target', () => {\n    const target1 = createTarget();\n    targetManager.setScopeTarget(target1);\n    const targetObserver = sinon.spy(new SDK.TargetManager.Observer());\n    const modelObserver = sinon.spy(new SDK.TargetManager.SDKModelObserver<SDK.ResourceTreeModel.ResourceTreeModel>());\n\n    targetObserver.targetAdded.resetHistory();\n    targetObserver.targetRemoved.resetHistory();\n    modelObserver.modelAdded.resetHistory();\n    modelObserver.modelRemoved.resetHistory();\n\n    targetManager.setScopeTarget(target1);\n    assert.isFalse(targetObserver.targetAdded.called);\n    assert.isFalse(modelObserver.modelAdded.called);\n    assert.isFalse(targetObserver.targetRemoved.called);\n    assert.isFalse(modelObserver.modelRemoved.called);\n  });\n\n  it('notifies about inspected URL change', () => {\n    const targets = [createTarget(), createTarget()];\n    const inspectedURLChangedHostApi =\n        sinon.spy(Host.InspectorFrontendHost.InspectorFrontendHostInstance, 'inspectedURLChanged');\n    const inspectedURLChangedEventListener = sinon.spy();\n    targetManager.addEventListener(SDK.TargetManager.Events.InspectedURLChanged, inspectedURLChangedEventListener);\n\n    targetManager.setScopeTarget(null);\n    assert.isTrue(inspectedURLChangedHostApi.notCalled && inspectedURLChangedEventListener.notCalled);\n\n    targets.forEach(t => t.setInspectedURL(`https://a.com/${t.id()}` as Platform.DevToolsPath.UrlString));\n    assert.isTrue(inspectedURLChangedHostApi.notCalled && inspectedURLChangedEventListener.notCalled);\n\n    targetManager.setScopeTarget(targets[0]);\n    assert.isTrue(inspectedURLChangedHostApi.calledOnce && inspectedURLChangedEventListener.calledOnce);\n    assert.strictEqual(inspectedURLChangedHostApi.lastCall.firstArg, `https://a.com/${targets[0].id()}`);\n    assert.strictEqual(inspectedURLChangedEventListener.lastCall.firstArg.data, targets[0]);\n\n    targetManager.setScopeTarget(targets[0]);\n    assert.isTrue(inspectedURLChangedHostApi.calledOnce && inspectedURLChangedEventListener.calledOnce);\n\n    targets.forEach(t => t.setInspectedURL(`https://b.com/${t.id()}` as Platform.DevToolsPath.UrlString));\n    assert.isTrue(inspectedURLChangedHostApi.calledTwice && inspectedURLChangedEventListener.calledTwice);\n    assert.strictEqual(inspectedURLChangedHostApi.lastCall.firstArg, `https://b.com/${targets[0].id()}`);\n    assert.strictEqual(inspectedURLChangedEventListener.lastCall.firstArg.data, targets[0]);\n\n    targetManager.setScopeTarget(targets[1]);\n    assert.isTrue(inspectedURLChangedHostApi.calledThrice && inspectedURLChangedEventListener.calledThrice);\n    assert.strictEqual(inspectedURLChangedHostApi.lastCall.firstArg, `https://b.com/${targets[1].id()}`);\n    assert.strictEqual(inspectedURLChangedEventListener.lastCall.firstArg.data, targets[1]);\n\n    targets.forEach(t => t.setInspectedURL(`https://c.com/${t.id()}` as Platform.DevToolsPath.UrlString));\n    assert.strictEqual(inspectedURLChangedHostApi.callCount, 4);\n    assert.strictEqual(inspectedURLChangedEventListener.callCount, 4);\n    assert.strictEqual(inspectedURLChangedHostApi.lastCall.firstArg, `https://c.com/${targets[1].id()}`);\n    assert.strictEqual(inspectedURLChangedEventListener.lastCall.firstArg.data, targets[1]);\n  });\n});\n"]}