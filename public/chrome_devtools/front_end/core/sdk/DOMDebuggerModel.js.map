{"version":3,"file":"DOMDebuggerModel.js","sourceRoot":"","sources":["../../../../../../front_end/core/sdk/DOMDebuggerModel.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as ProtocolProxyApi from '../../generated/protocol-proxy-api.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport * as Common from '../common/common.js';\nimport * as Platform from '../platform/platform.js';\n\nimport {CategorizedBreakpoint, Category} from './CategorizedBreakpoint.js';\nimport {type EventListenerPausedDetailsAuxData, type Location} from './DebuggerModel.js';\nimport {DOMModel, type DOMNode, Events as DOMModelEvents} from './DOMModel.js';\nimport {RemoteObject} from './RemoteObject.js';\nimport {RuntimeModel} from './RuntimeModel.js';\nimport {SDKModel} from './SDKModel.js';\nimport {Capability, type Target} from './Target.js';\nimport {type SDKModelObserver, TargetManager} from './TargetManager.js';\n\nexport class DOMDebuggerModel extends SDKModel<EventTypes> {\n  readonly agent: ProtocolProxyApi.DOMDebuggerApi;\n  readonly #runtimeModelInternal: RuntimeModel;\n  #domModel: DOMModel;\n  #domBreakpointsInternal: DOMBreakpoint[];\n  readonly #domBreakpointsSetting: Common.Settings.Setting<{\n    url: Platform.DevToolsPath.UrlString,\n    path: string,\n    type: Protocol.DOMDebugger.DOMBreakpointType,\n    enabled: boolean,\n  }[]>;\n  suspended = false;\n\n  constructor(target: Target) {\n    super(target);\n    this.agent = target.domdebuggerAgent();\n    this.#runtimeModelInternal = (target.model(RuntimeModel) as RuntimeModel);\n    this.#domModel = (target.model(DOMModel) as DOMModel);\n    this.#domModel.addEventListener(DOMModelEvents.DocumentUpdated, this.documentUpdated, this);\n    this.#domModel.addEventListener(DOMModelEvents.NodeRemoved, this.nodeRemoved, this);\n\n    this.#domBreakpointsInternal = [];\n    this.#domBreakpointsSetting = Common.Settings.Settings.instance().createLocalSetting('dom-breakpoints', []);\n    if (this.#domModel.existingDocument()) {\n      void this.documentUpdated();\n    }\n  }\n\n  runtimeModel(): RuntimeModel {\n    return this.#runtimeModelInternal;\n  }\n\n  override async suspendModel(): Promise<void> {\n    this.suspended = true;\n  }\n\n  override async resumeModel(): Promise<void> {\n    this.suspended = false;\n  }\n\n  async eventListeners(remoteObject: RemoteObject): Promise<EventListener[]> {\n    console.assert(remoteObject.runtimeModel() === this.#runtimeModelInternal);\n    if (!remoteObject.objectId) {\n      return [];\n    }\n\n    const listeners = await this.agent.invoke_getEventListeners({objectId: remoteObject.objectId});\n    const eventListeners = [];\n    for (const payload of listeners.listeners || []) {\n      const location = this.#runtimeModelInternal.debuggerModel().createRawLocationByScriptId(\n          payload.scriptId, payload.lineNumber, payload.columnNumber);\n      if (!location) {\n        continue;\n      }\n      eventListeners.push(new EventListener(\n          this, remoteObject, payload.type, payload.useCapture, payload.passive, payload.once,\n          payload.handler ? this.#runtimeModelInternal.createRemoteObject(payload.handler) : null,\n          payload.originalHandler ? this.#runtimeModelInternal.createRemoteObject(payload.originalHandler) : null,\n          location, null));\n    }\n    return eventListeners;\n  }\n\n  retrieveDOMBreakpoints(): void {\n    void this.#domModel.requestDocument();\n  }\n\n  domBreakpoints(): DOMBreakpoint[] {\n    return this.#domBreakpointsInternal.slice();\n  }\n\n  hasDOMBreakpoint(node: DOMNode, type: Protocol.DOMDebugger.DOMBreakpointType): boolean {\n    return this.#domBreakpointsInternal.some(breakpoint => (breakpoint.node === node && breakpoint.type === type));\n  }\n\n  setDOMBreakpoint(node: DOMNode, type: Protocol.DOMDebugger.DOMBreakpointType): DOMBreakpoint {\n    for (const breakpoint of this.#domBreakpointsInternal) {\n      if (breakpoint.node === node && breakpoint.type === type) {\n        this.toggleDOMBreakpoint(breakpoint, true);\n        return breakpoint;\n      }\n    }\n    const breakpoint = new DOMBreakpoint(this, node, type, true);\n    this.#domBreakpointsInternal.push(breakpoint);\n    this.saveDOMBreakpoints();\n    this.enableDOMBreakpoint(breakpoint);\n    this.dispatchEventToListeners(Events.DOMBreakpointAdded, breakpoint);\n    return breakpoint;\n  }\n\n  removeDOMBreakpoint(node: DOMNode, type: Protocol.DOMDebugger.DOMBreakpointType): void {\n    this.removeDOMBreakpoints(breakpoint => breakpoint.node === node && breakpoint.type === type);\n  }\n\n  removeAllDOMBreakpoints(): void {\n    this.removeDOMBreakpoints(_breakpoint => true);\n  }\n\n  toggleDOMBreakpoint(breakpoint: DOMBreakpoint, enabled: boolean): void {\n    if (enabled === breakpoint.enabled) {\n      return;\n    }\n    breakpoint.enabled = enabled;\n    if (enabled) {\n      this.enableDOMBreakpoint(breakpoint);\n    } else {\n      this.disableDOMBreakpoint(breakpoint);\n    }\n    this.dispatchEventToListeners(Events.DOMBreakpointToggled, breakpoint);\n  }\n\n  private enableDOMBreakpoint(breakpoint: DOMBreakpoint): void {\n    if (breakpoint.node.id) {\n      void this.agent.invoke_setDOMBreakpoint({nodeId: breakpoint.node.id, type: breakpoint.type});\n      breakpoint.node.setMarker(Marker, true);\n    }\n  }\n\n  private disableDOMBreakpoint(breakpoint: DOMBreakpoint): void {\n    if (breakpoint.node.id) {\n      void this.agent.invoke_removeDOMBreakpoint({nodeId: breakpoint.node.id, type: breakpoint.type});\n      breakpoint.node.setMarker(Marker, this.nodeHasBreakpoints(breakpoint.node) ? true : null);\n    }\n  }\n\n  private nodeHasBreakpoints(node: DOMNode): boolean {\n    for (const breakpoint of this.#domBreakpointsInternal) {\n      if (breakpoint.node === node && breakpoint.enabled) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  resolveDOMBreakpointData(auxData: {\n    type: Protocol.DOMDebugger.DOMBreakpointType,\n    nodeId: Protocol.DOM.NodeId,\n    targetNodeId: Protocol.DOM.NodeId,\n    insertion: boolean,\n  }): {\n    type: Protocol.DOMDebugger.DOMBreakpointType,\n    node: DOMNode,\n    targetNode: DOMNode|null,\n    insertion: boolean,\n  }|null {\n    const type = auxData['type'];\n    const node = this.#domModel.nodeForId(auxData['nodeId']);\n    if (!type || !node) {\n      return null;\n    }\n    let targetNode: (DOMNode|null)|null = null;\n    let insertion = false;\n    if (type === Protocol.DOMDebugger.DOMBreakpointType.SubtreeModified) {\n      insertion = auxData['insertion'] || false;\n      targetNode = this.#domModel.nodeForId(auxData['targetNodeId']);\n    }\n    return {type: type, node: node, targetNode: targetNode, insertion: insertion};\n  }\n\n  private currentURL(): Platform.DevToolsPath.UrlString {\n    const domDocument = this.#domModel.existingDocument();\n    return domDocument ? domDocument.documentURL : Platform.DevToolsPath.EmptyUrlString;\n  }\n\n  private async documentUpdated(): Promise<void> {\n    if (this.suspended) {\n      return;\n    }\n    const removed = this.#domBreakpointsInternal;\n    this.#domBreakpointsInternal = [];\n    this.dispatchEventToListeners(Events.DOMBreakpointsRemoved, removed);\n\n    // this.currentURL() is empty when the page is reloaded because the\n    // new document has not been requested yet and the old one has been\n    // removed. Therefore, we need to request the document and wait for it.\n    // Note that requestDocument() caches the document so that it is requested\n    // only once.\n    const document = await this.#domModel.requestDocument();\n    const currentURL = document ? document.documentURL : Platform.DevToolsPath.EmptyUrlString;\n    for (const breakpoint of this.#domBreakpointsSetting.get()) {\n      if (breakpoint.url === currentURL) {\n        void this.#domModel.pushNodeByPathToFrontend(breakpoint.path).then(appendBreakpoint.bind(this, breakpoint));\n      }\n    }\n\n    function appendBreakpoint(\n        this: DOMDebuggerModel, breakpoint: {\n          type: Protocol.DOMDebugger.DOMBreakpointType,\n          enabled: boolean,\n        },\n        nodeId: Protocol.DOM.NodeId|null): void {\n      const node = nodeId ? this.#domModel.nodeForId(nodeId) : null;\n      if (!node) {\n        return;\n      }\n      const domBreakpoint = new DOMBreakpoint(this, node, breakpoint.type, breakpoint.enabled);\n      this.#domBreakpointsInternal.push(domBreakpoint);\n      if (breakpoint.enabled) {\n        this.enableDOMBreakpoint(domBreakpoint);\n      }\n      this.dispatchEventToListeners(Events.DOMBreakpointAdded, domBreakpoint);\n    }\n  }\n\n  private removeDOMBreakpoints(filter: (arg0: DOMBreakpoint) => boolean): void {\n    const removed = [];\n    const left = [];\n    for (const breakpoint of this.#domBreakpointsInternal) {\n      if (filter(breakpoint)) {\n        removed.push(breakpoint);\n        if (breakpoint.enabled) {\n          breakpoint.enabled = false;\n          this.disableDOMBreakpoint(breakpoint);\n        }\n      } else {\n        left.push(breakpoint);\n      }\n    }\n\n    if (!removed.length) {\n      return;\n    }\n    this.#domBreakpointsInternal = left;\n    this.saveDOMBreakpoints();\n    this.dispatchEventToListeners(Events.DOMBreakpointsRemoved, removed);\n  }\n\n  private nodeRemoved(event: Common.EventTarget.EventTargetEvent<{node: DOMNode, parent: DOMNode}>): void {\n    if (this.suspended) {\n      return;\n    }\n    const {node} = event.data;\n    const children = node.children() || [];\n    this.removeDOMBreakpoints(breakpoint => breakpoint.node === node || children.indexOf(breakpoint.node) !== -1);\n  }\n\n  private saveDOMBreakpoints(): void {\n    const currentURL = this.currentURL();\n    const breakpoints = this.#domBreakpointsSetting.get().filter((breakpoint: {\n                                                                   url: Platform.DevToolsPath.UrlString,\n                                                                 }) => breakpoint.url !== currentURL);\n    for (const breakpoint of this.#domBreakpointsInternal) {\n      breakpoints.push(\n          {url: currentURL, path: breakpoint.node.path(), type: breakpoint.type, enabled: breakpoint.enabled});\n    }\n    this.#domBreakpointsSetting.set(breakpoints);\n  }\n}\n\nexport const enum Events {\n  DOMBreakpointAdded = 'DOMBreakpointAdded',\n  DOMBreakpointToggled = 'DOMBreakpointToggled',\n  DOMBreakpointsRemoved = 'DOMBreakpointsRemoved',\n}\n\nexport type EventTypes = {\n  [Events.DOMBreakpointAdded]: DOMBreakpoint,\n  [Events.DOMBreakpointToggled]: DOMBreakpoint,\n  [Events.DOMBreakpointsRemoved]: DOMBreakpoint[],\n};\n\nconst Marker = 'breakpoint-marker';\n\nexport class DOMBreakpoint {\n  domDebuggerModel: DOMDebuggerModel;\n  node: DOMNode;\n  type: Protocol.DOMDebugger.DOMBreakpointType;\n  enabled: boolean;\n\n  constructor(\n      domDebuggerModel: DOMDebuggerModel, node: DOMNode, type: Protocol.DOMDebugger.DOMBreakpointType,\n      enabled: boolean) {\n    this.domDebuggerModel = domDebuggerModel;\n    this.node = node;\n    this.type = type;\n    this.enabled = enabled;\n  }\n}\n\nexport class EventListener {\n  readonly #domDebuggerModelInternal: DOMDebuggerModel;\n  readonly #eventTarget: RemoteObject;\n  readonly #typeInternal: string;\n  readonly #useCaptureInternal: boolean;\n  readonly #passiveInternal: boolean;\n  readonly #onceInternal: boolean;\n  readonly #handlerInternal: RemoteObject|null;\n  readonly #originalHandlerInternal: RemoteObject|null;\n  readonly #locationInternal: Location;\n  readonly #sourceURLInternal: Platform.DevToolsPath.UrlString;\n  readonly #customRemoveFunction: RemoteObject|null;\n  #originInternal: string;\n\n  constructor(\n      domDebuggerModel: DOMDebuggerModel, eventTarget: RemoteObject, type: string, useCapture: boolean,\n      passive: boolean, once: boolean, handler: RemoteObject|null, originalHandler: RemoteObject|null,\n      location: Location, customRemoveFunction: RemoteObject|null, origin?: string) {\n    this.#domDebuggerModelInternal = domDebuggerModel;\n    this.#eventTarget = eventTarget;\n    this.#typeInternal = type;\n    this.#useCaptureInternal = useCapture;\n    this.#passiveInternal = passive;\n    this.#onceInternal = once;\n    this.#handlerInternal = handler;\n    this.#originalHandlerInternal = originalHandler || handler;\n    this.#locationInternal = location;\n    const script = location.script();\n    this.#sourceURLInternal = script ? script.contentURL() : Platform.DevToolsPath.EmptyUrlString;\n    this.#customRemoveFunction = customRemoveFunction;\n    this.#originInternal = origin || EventListener.Origin.Raw;\n  }\n\n  domDebuggerModel(): DOMDebuggerModel {\n    return this.#domDebuggerModelInternal;\n  }\n\n  type(): string {\n    return this.#typeInternal;\n  }\n\n  useCapture(): boolean {\n    return this.#useCaptureInternal;\n  }\n\n  passive(): boolean {\n    return this.#passiveInternal;\n  }\n\n  once(): boolean {\n    return this.#onceInternal;\n  }\n\n  handler(): RemoteObject|null {\n    return this.#handlerInternal;\n  }\n\n  location(): Location {\n    return this.#locationInternal;\n  }\n\n  sourceURL(): Platform.DevToolsPath.UrlString {\n    return this.#sourceURLInternal;\n  }\n\n  originalHandler(): RemoteObject|null {\n    return this.#originalHandlerInternal;\n  }\n\n  canRemove(): boolean {\n    return Boolean(this.#customRemoveFunction) || this.#originInternal !== EventListener.Origin.FrameworkUser;\n  }\n\n  remove(): Promise<void> {\n    if (!this.canRemove()) {\n      return Promise.resolve(undefined);\n    }\n\n    if (this.#originInternal !== EventListener.Origin.FrameworkUser) {\n      function removeListener(\n          this: {\n            removeEventListener: (arg0: string, arg1: () => void, arg2: boolean) => void,\n          },\n          type: string, listener: () => void, useCapture: boolean): void {\n        this.removeEventListener(type, listener, useCapture);\n        // @ts-ignore:\n        if (this['on' + type]) {\n          // @ts-ignore:\n          this['on' + type] = undefined;\n        }\n      }\n\n      return this.#eventTarget\n                 .callFunction(\n                     removeListener,\n                     [\n                       RemoteObject.toCallArgument(this.#typeInternal),\n                       RemoteObject.toCallArgument(this.#originalHandlerInternal),\n                       RemoteObject.toCallArgument(this.#useCaptureInternal),\n                     ])\n                 .then(() => undefined) as Promise<undefined>;\n    }\n\n    if (this.#customRemoveFunction) {\n      function callCustomRemove(\n          this: (arg0: string, arg1: () => void, arg2: boolean, arg3: boolean) => void, type: string,\n          listener: () => void, useCapture: boolean, passive: boolean): void {\n        this.call(null, type, listener, useCapture, passive);\n      }\n\n      return this.#customRemoveFunction\n          .callFunction(\n              callCustomRemove,\n              [\n                RemoteObject.toCallArgument(this.#typeInternal),\n                RemoteObject.toCallArgument(this.#originalHandlerInternal),\n                RemoteObject.toCallArgument(this.#useCaptureInternal),\n                RemoteObject.toCallArgument(this.#passiveInternal),\n              ])\n          .then(() => undefined);\n    }\n    return Promise.resolve(undefined);\n  }\n\n  canTogglePassive(): boolean {\n    return this.#originInternal !== EventListener.Origin.FrameworkUser;\n  }\n\n  togglePassive(): Promise<undefined> {\n    return this.#eventTarget\n        .callFunction(\n            callTogglePassive,\n            [\n              RemoteObject.toCallArgument(this.#typeInternal),\n              RemoteObject.toCallArgument(this.#originalHandlerInternal),\n              RemoteObject.toCallArgument(this.#useCaptureInternal),\n              RemoteObject.toCallArgument(this.#passiveInternal),\n            ])\n        .then(() => undefined);\n\n    function callTogglePassive(\n        this: {\n          addEventListener: (arg0: string, arg1: () => void, arg2: {\n            capture: boolean,\n            passive: boolean,\n          }) => void,\n          removeEventListener: (arg0: string, arg1: () => void, arg2: {\n            capture: boolean,\n          }) => void,\n        },\n        type: string, listener: () => void, useCapture: boolean, passive: boolean): void {\n      this.removeEventListener(type, listener, {capture: useCapture});\n      this.addEventListener(type, listener, {capture: useCapture, passive: !passive});\n    }\n  }\n\n  origin(): string {\n    return this.#originInternal;\n  }\n\n  markAsFramework(): void {\n    this.#originInternal = EventListener.Origin.Framework;\n  }\n\n  isScrollBlockingType(): boolean {\n    return this.#typeInternal === 'touchstart' || this.#typeInternal === 'touchmove' ||\n        this.#typeInternal === 'mousewheel' || this.#typeInternal === 'wheel';\n  }\n}\n\nexport namespace EventListener {\n  export const enum Origin {\n    Raw = 'Raw',\n    Framework = 'Framework',\n    FrameworkUser = 'FrameworkUser',\n  }\n}\n\nexport class CSPViolationBreakpoint extends CategorizedBreakpoint {\n  readonly #typeInternal: Protocol.DOMDebugger.CSPViolationType;\n  constructor(category: Category, type: Protocol.DOMDebugger.CSPViolationType) {\n    super(category, type);\n    this.#typeInternal = type;\n  }\n\n  type(): Protocol.DOMDebugger.CSPViolationType {\n    return this.#typeInternal;\n  }\n}\n\nexport class DOMEventListenerBreakpoint extends CategorizedBreakpoint {\n  readonly eventTargetNames: string[];\n  constructor(eventName: string, eventTargetNames: string[], category: Category) {\n    super(category, eventName);\n    this.eventTargetNames = eventTargetNames;\n  }\n\n  override setEnabled(enabled: boolean): void {\n    if (this.enabled() === enabled) {\n      return;\n    }\n    super.setEnabled(enabled);\n    for (const model of TargetManager.instance().models(DOMDebuggerModel)) {\n      this.updateOnModel(model);\n    }\n  }\n\n  updateOnModel(model: DOMDebuggerModel): void {\n    for (const eventTargetName of this.eventTargetNames) {\n      if (this.enabled()) {\n        void model.agent.invoke_setEventListenerBreakpoint({eventName: this.name, targetName: eventTargetName});\n      } else {\n        void model.agent.invoke_removeEventListenerBreakpoint({eventName: this.name, targetName: eventTargetName});\n      }\n    }\n  }\n\n  static readonly listener = 'listener:';\n}\n\nlet domDebuggerManagerInstance: DOMDebuggerManager;\n\nexport class DOMDebuggerManager implements SDKModelObserver<DOMDebuggerModel> {\n  readonly #xhrBreakpointsSetting: Common.Settings.Setting<{url: string, enabled: boolean}[]>;\n  readonly #xhrBreakpointsInternal: Map<string, boolean>;\n  readonly #cspViolationsToBreakOn: CSPViolationBreakpoint[];\n  readonly #eventListenerBreakpointsInternal: DOMEventListenerBreakpoint[];\n\n  constructor() {\n    this.#xhrBreakpointsSetting = Common.Settings.Settings.instance().createLocalSetting('xhr-breakpoints', []);\n    this.#xhrBreakpointsInternal = new Map();\n    for (const breakpoint of this.#xhrBreakpointsSetting.get()) {\n      this.#xhrBreakpointsInternal.set(breakpoint.url, breakpoint.enabled);\n    }\n\n    this.#cspViolationsToBreakOn = [];\n    this.#cspViolationsToBreakOn.push(new CSPViolationBreakpoint(\n        Category.TrustedTypeViolation, Protocol.DOMDebugger.CSPViolationType.TrustedtypeSinkViolation));\n    this.#cspViolationsToBreakOn.push(new CSPViolationBreakpoint(\n        Category.TrustedTypeViolation, Protocol.DOMDebugger.CSPViolationType.TrustedtypePolicyViolation));\n\n    this.#eventListenerBreakpointsInternal = [];\n    this.createEventListenerBreakpoints(\n        Category.Media,\n        [\n          'play',      'pause',          'playing',    'canplay',    'canplaythrough', 'seeking',\n          'seeked',    'timeupdate',     'ended',      'ratechange', 'durationchange', 'volumechange',\n          'loadstart', 'progress',       'suspend',    'abort',      'error',          'emptied',\n          'stalled',   'loadedmetadata', 'loadeddata', 'waiting',\n        ],\n        ['audio', 'video']);\n    this.createEventListenerBreakpoints(\n        Category.PictureInPicture, ['enterpictureinpicture', 'leavepictureinpicture'], ['video']);\n    this.createEventListenerBreakpoints(Category.PictureInPicture, ['resize'], ['PictureInPictureWindow']);\n    this.createEventListenerBreakpoints(Category.PictureInPicture, ['enter'], ['documentPictureInPicture']);\n    this.createEventListenerBreakpoints(\n        Category.Clipboard, ['copy', 'cut', 'paste', 'beforecopy', 'beforecut', 'beforepaste'], ['*']);\n    this.createEventListenerBreakpoints(\n        Category.Control,\n        [\n          'resize',\n          'scroll',\n          'scrollend',\n          'scrollsnapchange',\n          'scrollsnapchanging',\n          'zoom',\n          'focus',\n          'blur',\n          'select',\n          'change',\n          'submit',\n          'reset',\n        ],\n        ['*']);\n    this.createEventListenerBreakpoints(Category.Device, ['deviceorientation', 'devicemotion'], ['*']);\n    this.createEventListenerBreakpoints(\n        Category.DomMutation,\n        [\n          'DOMActivate',\n          'DOMFocusIn',\n          'DOMFocusOut',\n          'DOMAttrModified',\n          'DOMCharacterDataModified',\n          'DOMNodeInserted',\n          'DOMNodeInsertedIntoDocument',\n          'DOMNodeRemoved',\n          'DOMNodeRemovedFromDocument',\n          'DOMSubtreeModified',\n          'DOMContentLoaded',\n        ],\n        ['*']);\n    this.createEventListenerBreakpoints(\n        Category.DragDrop, ['drag', 'dragstart', 'dragend', 'dragenter', 'dragover', 'dragleave', 'drop'], ['*']);\n\n    this.createEventListenerBreakpoints(Category.Keyboard, ['keydown', 'keyup', 'keypress', 'input'], ['*']);\n    this.createEventListenerBreakpoints(\n        Category.Load,\n        [\n          'load',\n          'beforeunload',\n          'unload',\n          'abort',\n          'error',\n          'hashchange',\n          'popstate',\n          'navigate',\n          'navigatesuccess',\n          'navigateerror',\n          'currentchange',\n          'navigateto',\n          'navigatefrom',\n          'finish',\n          'dispose',\n        ],\n        ['*']);\n    this.createEventListenerBreakpoints(\n        Category.Mouse,\n        [\n          'auxclick',\n          'click',\n          'dblclick',\n          'mousedown',\n          'mouseup',\n          'mouseover',\n          'mousemove',\n          'mouseout',\n          'mouseenter',\n          'mouseleave',\n          'mousewheel',\n          'wheel',\n          'contextmenu',\n        ],\n        ['*']);\n    this.createEventListenerBreakpoints(\n        Category.Pointer,\n        [\n          'pointerover',\n          'pointerout',\n          'pointerenter',\n          'pointerleave',\n          'pointerdown',\n          'pointerup',\n          'pointermove',\n          'pointercancel',\n          'gotpointercapture',\n          'lostpointercapture',\n          'pointerrawupdate',\n        ],\n        ['*']);\n    this.createEventListenerBreakpoints(Category.Touch, ['touchstart', 'touchmove', 'touchend', 'touchcancel'], ['*']);\n    this.createEventListenerBreakpoints(Category.Worker, ['message', 'messageerror'], ['*']);\n    this.createEventListenerBreakpoints(\n        Category.Xhr, ['readystatechange', 'load', 'loadstart', 'loadend', 'abort', 'error', 'progress', 'timeout'],\n        ['xmlhttprequest', 'xmlhttprequestupload']);\n\n    TargetManager.instance().observeModels(DOMDebuggerModel, this);\n  }\n\n  static instance(opts: {\n    forceNew: boolean|null,\n  } = {forceNew: null}): DOMDebuggerManager {\n    const {forceNew} = opts;\n    if (!domDebuggerManagerInstance || forceNew) {\n      domDebuggerManagerInstance = new DOMDebuggerManager();\n    }\n\n    return domDebuggerManagerInstance;\n  }\n\n  cspViolationBreakpoints(): CSPViolationBreakpoint[] {\n    return this.#cspViolationsToBreakOn.slice();\n  }\n\n  private createEventListenerBreakpoints(category: Category, eventNames: string[], eventTargetNames: string[]): void {\n    for (const eventName of eventNames) {\n      this.#eventListenerBreakpointsInternal.push(\n          new DOMEventListenerBreakpoint(eventName, eventTargetNames, category));\n    }\n  }\n\n  resolveEventListenerBreakpoint({eventName, targetName}: EventListenerPausedDetailsAuxData): DOMEventListenerBreakpoint\n      |null {\n    const listenerPrefix = 'listener:';\n    if (eventName.startsWith(listenerPrefix)) {\n      eventName = eventName.substring(listenerPrefix.length);\n    } else {\n      return null;\n    }\n    targetName = (targetName || '*').toLowerCase();\n    let result: DOMEventListenerBreakpoint|null = null;\n    for (const breakpoint of this.#eventListenerBreakpointsInternal) {\n      if (eventName && breakpoint.name === eventName && breakpoint.eventTargetNames.indexOf(targetName) !== -1) {\n        result = breakpoint;\n      }\n      if (!result && eventName && breakpoint.name === eventName && breakpoint.eventTargetNames.indexOf('*') !== -1) {\n        result = breakpoint;\n      }\n    }\n    return result;\n  }\n\n  eventListenerBreakpoints(): DOMEventListenerBreakpoint[] {\n    return this.#eventListenerBreakpointsInternal.slice();\n  }\n\n  updateCSPViolationBreakpoints(): void {\n    const violationTypes = this.#cspViolationsToBreakOn.filter(v => v.enabled()).map(v => v.type());\n    for (const model of TargetManager.instance().models(DOMDebuggerModel)) {\n      this.updateCSPViolationBreakpointsForModel(model, violationTypes);\n    }\n  }\n\n  private updateCSPViolationBreakpointsForModel(\n      model: DOMDebuggerModel, violationTypes: Protocol.DOMDebugger.CSPViolationType[]): void {\n    void model.agent.invoke_setBreakOnCSPViolation({violationTypes: violationTypes});\n  }\n\n  xhrBreakpoints(): Map<string, boolean> {\n    return this.#xhrBreakpointsInternal;\n  }\n\n  private saveXHRBreakpoints(): void {\n    const breakpoints = [];\n    for (const url of this.#xhrBreakpointsInternal.keys()) {\n      breakpoints.push({url: url, enabled: this.#xhrBreakpointsInternal.get(url) || false});\n    }\n    this.#xhrBreakpointsSetting.set(breakpoints);\n  }\n\n  addXHRBreakpoint(url: string, enabled: boolean): void {\n    this.#xhrBreakpointsInternal.set(url, enabled);\n    if (enabled) {\n      for (const model of TargetManager.instance().models(DOMDebuggerModel)) {\n        void model.agent.invoke_setXHRBreakpoint({url});\n      }\n    }\n    this.saveXHRBreakpoints();\n  }\n\n  removeXHRBreakpoint(url: string): void {\n    const enabled = this.#xhrBreakpointsInternal.get(url);\n    this.#xhrBreakpointsInternal.delete(url);\n    if (enabled) {\n      for (const model of TargetManager.instance().models(DOMDebuggerModel)) {\n        void model.agent.invoke_removeXHRBreakpoint({url});\n      }\n    }\n    this.saveXHRBreakpoints();\n  }\n\n  toggleXHRBreakpoint(url: string, enabled: boolean): void {\n    this.#xhrBreakpointsInternal.set(url, enabled);\n    for (const model of TargetManager.instance().models(DOMDebuggerModel)) {\n      if (enabled) {\n        void model.agent.invoke_setXHRBreakpoint({url});\n      } else {\n        void model.agent.invoke_removeXHRBreakpoint({url});\n      }\n    }\n    this.saveXHRBreakpoints();\n  }\n\n  modelAdded(domDebuggerModel: DOMDebuggerModel): void {\n    for (const url of this.#xhrBreakpointsInternal.keys()) {\n      if (this.#xhrBreakpointsInternal.get(url)) {\n        void domDebuggerModel.agent.invoke_setXHRBreakpoint({url: url});\n      }\n    }\n    for (const breakpoint of this.#eventListenerBreakpointsInternal) {\n      if (breakpoint.enabled()) {\n        breakpoint.updateOnModel(domDebuggerModel);\n      }\n    }\n    const violationTypes = this.#cspViolationsToBreakOn.filter(v => v.enabled()).map(v => v.type());\n    this.updateCSPViolationBreakpointsForModel(domDebuggerModel, violationTypes);\n  }\n\n  modelRemoved(_domDebuggerModel: DOMDebuggerModel): void {\n  }\n}\n\nSDKModel.register(DOMDebuggerModel, {capabilities: Capability.DOM, autostart: false});\n"]}