{"version":3,"file":"DOMModel.test.js","sourceRoot":"","sources":["../../../../../../front_end/core/sdk/DOMModel.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Protocol from '../../generated/protocol.js';\nimport {createTarget} from '../../testing/EnvironmentHelpers.js';\nimport {describeWithMockConnection} from '../../testing/MockConnection.js';\n\nimport * as SDK from './sdk.js';\n\ndescribeWithMockConnection('DOMModel', () => {\n  it('updates the document on an documentUpdate event if there already is a previous document', async () => {\n    const parentTarget = createTarget();\n    const target = createTarget({parentTarget});\n    const domModel = target.model(SDK.DOMModel.DOMModel);\n    assert.exists(domModel);\n    assert.exists(domModel.agent);\n\n    domModel.setDocumentForTest({nodeId: 0} as Protocol.DOM.Node);\n    const spy = sinon.spy(domModel.agent, 'invoke_getDocument');\n\n    assert.isTrue(spy.notCalled);\n    assert.isNotNull(domModel.existingDocument());\n\n    domModel.documentUpdated();\n    assert.isTrue(spy.calledOnce);\n  });\n\n  it('does not request document if there is not a previous document', async () => {\n    const parentTarget = createTarget();\n    const target = createTarget({parentTarget});\n    const domModel = target.model(SDK.DOMModel.DOMModel);\n    assert.exists(domModel);\n    assert.exists(domModel.agent);\n\n    domModel.setDocumentForTest(null);\n    const spy = sinon.spy(domModel.agent, 'invoke_getDocument');\n\n    assert.isTrue(spy.notCalled);\n    assert.isNull(domModel.existingDocument());\n\n    domModel.documentUpdated();\n    assert.isTrue(spy.notCalled);\n  });\n\n  describe('DOMNode', () => {\n    describe('simpleSelector', () => {\n      let target: SDK.Target.Target;\n      let model: SDK.DOMModel.DOMModel;\n      beforeEach(() => {\n        target = createTarget();\n\n        const modelBeforeAssertion = target.model(SDK.DOMModel.DOMModel);\n        assert.exists(modelBeforeAssertion);\n        model = modelBeforeAssertion;\n      });\n\n      afterEach(() => {\n        target.dispose('NO_REASON');\n      });\n\n      it('should return localName when it\\'s not an input, it does not have an idea and does not contain any classes',\n         () => {\n           const domNode = SDK.DOMModel.DOMNode.create(model, null, false, {\n             nodeId: 1 as Protocol.DOM.NodeId,\n             backendNodeId: 2 as Protocol.DOM.BackendNodeId,\n             nodeType: Node.ELEMENT_NODE,\n             nodeName: 'div',\n             localName: 'div',\n             nodeValue: '',\n           });\n           assert.strictEqual(domNode.simpleSelector(), 'div');\n         });\n\n      it('should return localName with input type if it is an input and does not contain any idea or classes', () => {\n        const domNode = SDK.DOMModel.DOMNode.create(model, null, false, {\n          nodeId: 1 as Protocol.DOM.NodeId,\n          backendNodeId: 2 as Protocol.DOM.BackendNodeId,\n          nodeType: Node.ELEMENT_NODE,\n          nodeName: 'input',\n          attributes: [\n            'type',\n            'text',\n          ],\n          localName: 'input',\n          nodeValue: '',\n        });\n        assert.strictEqual(domNode.simpleSelector(), 'input[type=\"text\"]');\n      });\n\n      it('should return localName with id if it has an id', () => {\n        const domNode = SDK.DOMModel.DOMNode.create(model, null, false, {\n          nodeId: 1 as Protocol.DOM.NodeId,\n          backendNodeId: 2 as Protocol.DOM.BackendNodeId,\n          nodeType: Node.ELEMENT_NODE,\n          nodeName: 'input',\n          attributes: [\n            'type',\n            'text',\n            'id',\n            'input-with-id',\n          ],\n          localName: 'input',\n          nodeValue: '',\n        });\n        assert.strictEqual(domNode.simpleSelector(), 'input#input-with-id');\n      });\n\n      it('should return localName with classes appended for an input', () => {\n        const domNode = SDK.DOMModel.DOMNode.create(model, null, false, {\n          nodeId: 1 as Protocol.DOM.NodeId,\n          backendNodeId: 2 as Protocol.DOM.BackendNodeId,\n          nodeType: Node.ELEMENT_NODE,\n          nodeName: 'input',\n          attributes: [\n            'type',\n            'text',\n            'class',\n            'first-class second-class',\n          ],\n          localName: 'input',\n          nodeValue: '',\n        });\n        assert.strictEqual(domNode.simpleSelector(), 'input.first-class.second-class');\n      });\n\n      it('should return localName with classes appended for a div without mentioning div', () => {\n        const domNode = SDK.DOMModel.DOMNode.create(model, null, false, {\n          nodeId: 1 as Protocol.DOM.NodeId,\n          backendNodeId: 2 as Protocol.DOM.BackendNodeId,\n          nodeType: Node.ELEMENT_NODE,\n          nodeName: 'div',\n          attributes: [\n            'type',\n            'text',\n            'class',\n            'first-class second-class',\n          ],\n          localName: 'div',\n          nodeValue: '',\n        });\n        assert.strictEqual(domNode.simpleSelector(), '.first-class.second-class');\n      });\n\n      it('should return localName for a pseudo class without pseudo identifier', () => {\n        const domNode = SDK.DOMModel.DOMNode.create(model, null, false, {\n          nodeId: 1 as Protocol.DOM.NodeId,\n          backendNodeId: 2 as Protocol.DOM.BackendNodeId,\n          nodeType: Node.ELEMENT_NODE,\n          nodeName: '::before',\n          localName: '::before',\n          nodeValue: '',\n        });\n        assert.strictEqual(domNode.simpleSelector(), '::before');\n      });\n\n      it('should return localName for a pseudo class with a pseudo identifier', () => {\n        const domNode = SDK.DOMModel.DOMNode.create(model, null, false, {\n          nodeId: 1 as Protocol.DOM.NodeId,\n          backendNodeId: 2 as Protocol.DOM.BackendNodeId,\n          nodeType: Node.ELEMENT_NODE,\n          pseudoIdentifier: 'root',\n          nodeName: '::view-transition-new',\n          localName: '::view-transition-new',\n          nodeValue: '',\n        });\n        assert.strictEqual(domNode.simpleSelector(), '::view-transition-new(root)');\n      });\n    });\n  });\n});\n"]}