{"version":3,"file":"FrameManager.test.js","sourceRoot":"","sources":["../../../../../../front_end/core/sdk/FrameManager.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Protocol from '../../generated/protocol.js';\nimport * as Common from '../common/common.js';\n\nimport * as SDK from './sdk.js';\n\nclass MockResourceTreeModel extends Common.ObjectWrapper.ObjectWrapper<SDK.ResourceTreeModel.EventTypes> {\n  private targetId: Protocol.Target.TargetID|'main';\n\n  constructor(id: Protocol.Target.TargetID|'main') {\n    super();\n    this.targetId = id;\n  }\n\n  target() {\n    return {\n      id: () => this.targetId,\n      parentTarget: () => null,\n    };\n  }\n}\n\nclass MockResourceTreeFrame {\n  targetId: Protocol.Target.TargetID|'main';\n  id: string;\n  getCreationStackTraceData = () => {};\n\n  constructor(frameId: Protocol.Page.FrameId, targetId: Protocol.Target.TargetID|'main') {\n    this.id = frameId;\n    this.targetId = targetId;\n  }\n\n  resourceTreeModel = () => ({\n    target: () => ({\n      id: () => this.targetId,\n    }),\n  });\n\n  isMainFrame = () => true;\n  isOutermostFrame = () => true;\n  setCreationStackTrace = () => {};\n  getAdScriptId = () => null;\n  setAdScriptId = () => {};\n  getDebuggerId = () => null;\n  setDebuggerId = () => {};\n}\n\nfunction mockFrameToObjectForAssertion(mockFrame: MockResourceTreeFrame):\n    {targetId: Protocol.Target.TargetID|'main', id: string} {\n  return {\n    targetId: mockFrame.targetId,\n    id: mockFrame.id,\n  };\n}\n\nconst fakeScriptId = '1' as Protocol.Runtime.ScriptId;\n\ndescribe('FrameManager', () => {\n  type FrameManager = SDK.FrameManager.FrameManager;\n  type ResourceTreeModel = SDK.ResourceTreeModel.ResourceTreeModel;\n\n  function attachMockModel(frameManager: FrameManager, targetId: Protocol.Target.TargetID): ResourceTreeModel {\n    const mockModel = new MockResourceTreeModel(targetId) as unknown as ResourceTreeModel;\n    frameManager.modelAdded(mockModel);\n    return mockModel;\n  }\n\n  function addMockFrame(\n      model: ResourceTreeModel, frameId: Protocol.Page.FrameId): SDK.ResourceTreeModel.ResourceTreeFrame {\n    const targetId = model.target().id();\n    const mockFrame =\n        new MockResourceTreeFrame(frameId, targetId) as unknown as SDK.ResourceTreeModel.ResourceTreeFrame;\n    model.dispatchEventToListeners(SDK.ResourceTreeModel.Events.FrameAdded, mockFrame);\n    return mockFrame;\n  }\n\n  function setupEventSink(\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      frameManager: FrameManager, events: SDK.FrameManager.Events[]): Array<{type: string, data: any}> {\n    const dispatchedEvents: Array<{type: string, data: {}}> = [];\n    for (const event of events) {\n      frameManager.addEventListener(event, e => dispatchedEvents.push({type: event || '', data: e.data}));\n    }\n    return dispatchedEvents;\n  }\n\n  const frameId = 'frame-id' as Protocol.Page.FrameId;\n  const parentFrameId = 'parent-frame-id' as Protocol.Page.FrameId;\n  const childFrameId = 'child-frame-id' as Protocol.Page.FrameId;\n  const targetId = 'target-id' as Protocol.Target.TargetID;\n  const parentTargetId = 'parent-frame-id' as Protocol.Target.TargetID;\n  const childTargetId = 'child-frame-id' as Protocol.Target.TargetID;\n\n  it('collects frames from a ResourceTreeModel', () => {\n    const frameManager = new SDK.FrameManager.FrameManager();\n    const dispatchedEvents = setupEventSink(frameManager, [SDK.FrameManager.Events.FrameAddedToTarget]);\n\n    const mockModel = attachMockModel(frameManager, targetId);\n    addMockFrame(mockModel, frameId);\n\n    const frameIds = dispatchedEvents.map(event => event.data.frame.id);\n    assert.deepStrictEqual(frameIds, [frameId]);\n    const frameFromId = frameManager.getFrame(frameId);\n    assert.strictEqual(frameFromId?.id, frameId);\n  });\n\n  it('handles attachment and detachment of frames', () => {\n    const frameManager = new SDK.FrameManager.FrameManager();\n    const dispatchedEvents = setupEventSink(\n        frameManager, [SDK.FrameManager.Events.FrameAddedToTarget, SDK.FrameManager.Events.FrameRemoved]);\n\n    const mockModel = attachMockModel(frameManager, targetId);\n    addMockFrame(mockModel, parentFrameId);\n    const mockChildFrame = addMockFrame(mockModel, childFrameId);\n    mockModel.dispatchEventToListeners(\n        SDK.ResourceTreeModel.Events.FrameDetached, {frame: mockChildFrame, isSwap: false});\n\n    assert.strictEqual(dispatchedEvents[0].type, 'FrameAddedToTarget');\n    assert.deepEqual(mockFrameToObjectForAssertion(dispatchedEvents[0].data.frame), {\n      targetId: targetId,\n      id: parentFrameId,\n    });\n    assert.strictEqual(dispatchedEvents[1].type, 'FrameAddedToTarget');\n    assert.deepEqual(mockFrameToObjectForAssertion(dispatchedEvents[1].data.frame), {\n      targetId: targetId,\n      id: childFrameId,\n    });\n    assert.strictEqual(dispatchedEvents[2].type, 'FrameRemoved');\n    assert.deepEqual(dispatchedEvents[2].data, {frameId: childFrameId});\n    let frameFromId = frameManager.getFrame(parentFrameId);\n    assert.strictEqual(frameFromId?.id, parentFrameId);\n    assert.strictEqual(frameFromId?.resourceTreeModel().target().id(), targetId as Protocol.Target.TargetID);\n    frameFromId = frameManager.getFrame(childFrameId);\n    assert.strictEqual(frameFromId, null);\n  });\n\n  it('handles removal of target', () => {\n    const frameManager = new SDK.FrameManager.FrameManager();\n    const dispatchedEvents = setupEventSink(\n        frameManager, [SDK.FrameManager.Events.FrameAddedToTarget, SDK.FrameManager.Events.FrameRemoved]);\n\n    const mockModel = attachMockModel(frameManager, targetId);\n    addMockFrame(mockModel, parentFrameId);\n    addMockFrame(mockModel, childFrameId);\n    frameManager.modelRemoved(mockModel);\n\n    assert.strictEqual(dispatchedEvents[0].type, 'FrameAddedToTarget');\n    assert.deepEqual(mockFrameToObjectForAssertion(dispatchedEvents[0].data.frame), {\n      targetId: targetId,\n      id: parentFrameId,\n    });\n    assert.strictEqual(dispatchedEvents[1].type, 'FrameAddedToTarget');\n    assert.deepEqual(mockFrameToObjectForAssertion(dispatchedEvents[1].data.frame), {\n      targetId: targetId,\n      id: childFrameId,\n    });\n    assert.strictEqual(dispatchedEvents[2].type, 'FrameRemoved');\n    assert.deepEqual(dispatchedEvents[2].data, {frameId: parentFrameId});\n    assert.strictEqual(dispatchedEvents[3].type, 'FrameRemoved');\n    assert.deepEqual(dispatchedEvents[3].data, {frameId: childFrameId});\n\n    let frameFromId = frameManager.getFrame(parentFrameId);\n    assert.strictEqual(frameFromId, null);\n    frameFromId = frameManager.getFrame(childFrameId);\n    assert.strictEqual(frameFromId, null);\n  });\n\n  it('handles a frame transferring to a different target', () => {\n    const frameManager = new SDK.FrameManager.FrameManager();\n    const dispatchedEvents = setupEventSink(\n        frameManager, [SDK.FrameManager.Events.FrameAddedToTarget, SDK.FrameManager.Events.FrameRemoved]);\n\n    const mockParentModel = attachMockModel(frameManager, parentTargetId);\n    addMockFrame(mockParentModel, parentFrameId);\n\n    const mockChildModel = attachMockModel(frameManager, childTargetId);\n    const mockChildFrameParentTarget = addMockFrame(mockParentModel, childFrameId);\n    addMockFrame(mockChildModel, childFrameId);\n    mockParentModel.dispatchEventToListeners(\n        SDK.ResourceTreeModel.Events.FrameDetached, {frame: mockChildFrameParentTarget, isSwap: true});\n\n    assert.strictEqual(dispatchedEvents[0].type, 'FrameAddedToTarget');\n    assert.deepEqual(mockFrameToObjectForAssertion(dispatchedEvents[0].data.frame), {\n      targetId: parentTargetId,\n      id: parentFrameId,\n    });\n    assert.strictEqual(dispatchedEvents[1].type, 'FrameAddedToTarget');\n    assert.deepEqual(mockFrameToObjectForAssertion(dispatchedEvents[1].data.frame), {\n      targetId: parentTargetId,\n      id: childFrameId,\n    });\n    assert.strictEqual(dispatchedEvents[2].type, 'FrameAddedToTarget');\n    assert.deepEqual(mockFrameToObjectForAssertion(dispatchedEvents[2].data.frame), {\n      targetId: childTargetId,\n      id: childFrameId,\n    });\n    let frameFromId = frameManager.getFrame(parentFrameId);\n    assert.strictEqual(frameFromId?.id, parentFrameId);\n    assert.strictEqual(frameFromId?.resourceTreeModel().target().id(), parentTargetId as Protocol.Target.TargetID);\n    frameFromId = frameManager.getFrame(childFrameId);\n    assert.strictEqual(frameFromId?.id, childFrameId);\n    assert.strictEqual(frameFromId?.resourceTreeModel().target().id(), childTargetId as Protocol.Target.TargetID);\n  });\n\n  it('transfers frame creation stack traces during OOPIF transfer (case 1)', () => {\n    const frameManager = new SDK.FrameManager.FrameManager();\n    const mockParentModel = attachMockModel(frameManager, parentTargetId);\n    const mockChildModel = attachMockModel(frameManager, childTargetId);\n    const trace = {\n      callFrames: [\n        {\n          functionName: 'function1',\n          url: 'http://www.example.com/script1.js',\n          lineNumber: 15,\n          columnNumber: 10,\n          scriptId: fakeScriptId,\n        },\n        {\n          functionName: 'function2',\n          url: 'http://www.example.com/script2.js',\n          lineNumber: 20,\n          columnNumber: 5,\n          scriptId: fakeScriptId,\n        },\n      ],\n    };\n\n    // step 1) frame added to existing target\n    const frameOldTarget = new SDK.ResourceTreeModel.ResourceTreeFrame(mockParentModel, null, frameId, null, trace);\n    mockParentModel.dispatchEventToListeners(SDK.ResourceTreeModel.Events.FrameAdded, frameOldTarget);\n\n    // step 2) frame added to new target\n    const frameNewTarget = new SDK.ResourceTreeModel.ResourceTreeFrame(mockChildModel, null, frameId, null, null);\n    mockChildModel.dispatchEventToListeners(SDK.ResourceTreeModel.Events.FrameAdded, frameNewTarget);\n\n    // step 3) frame removed from existing target\n    mockParentModel.dispatchEventToListeners(\n        SDK.ResourceTreeModel.Events.FrameDetached, {frame: frameOldTarget, isSwap: true});\n\n    const frame = frameManager.getFrame(frameId);\n    const {creationStackTrace, creationStackTraceTarget} = frame!.getCreationStackTraceData();\n    assert.deepEqual(creationStackTrace, trace);\n    assert.strictEqual(creationStackTraceTarget.id(), parentTargetId);\n  });\n\n  it('transfers frame creation stack traces during OOPIF transfer (case 2)', () => {\n    const frameManager = new SDK.FrameManager.FrameManager();\n    const mockParentModel = attachMockModel(frameManager, parentTargetId);\n    const mockChildModel = attachMockModel(frameManager, childTargetId);\n    const trace = {\n      callFrames: [\n        {\n          functionName: 'function1',\n          url: 'http://www.example.com/script1.js',\n          lineNumber: 15,\n          columnNumber: 10,\n          scriptId: fakeScriptId,\n        },\n        {\n          functionName: 'function2',\n          url: 'http://www.example.com/script2.js',\n          lineNumber: 20,\n          columnNumber: 5,\n          scriptId: fakeScriptId,\n        },\n      ],\n    };\n\n    // step 1) frame added to existing target\n    const frameOldTarget = new SDK.ResourceTreeModel.ResourceTreeFrame(mockParentModel, null, frameId, null, trace);\n    mockParentModel.dispatchEventToListeners(SDK.ResourceTreeModel.Events.FrameAdded, frameOldTarget);\n\n    // step 2) frame removed from existing target\n    mockParentModel.dispatchEventToListeners(\n        SDK.ResourceTreeModel.Events.FrameDetached, {frame: frameOldTarget, isSwap: true});\n\n    // step 3) frame added to new target\n    const frameNewTarget = new SDK.ResourceTreeModel.ResourceTreeFrame(mockChildModel, null, frameId, null, null);\n    mockChildModel.dispatchEventToListeners(SDK.ResourceTreeModel.Events.FrameAdded, frameNewTarget);\n\n    const frame = frameManager.getFrame(frameId);\n    const {creationStackTrace, creationStackTraceTarget} = frame!.getCreationStackTraceData();\n    assert.deepEqual(creationStackTrace, trace);\n    assert.strictEqual(creationStackTraceTarget.id(), parentTargetId);\n  });\n\n  describe('getOutermostFrame', () => {\n    it('returns null when no frames are attached', () => {\n      const frameManager = new SDK.FrameManager.FrameManager();\n      assert.isNull(frameManager.getOutermostFrame());\n    });\n\n    it('returns the top main frame', () => {\n      const frameManager = new SDK.FrameManager.FrameManager();\n\n      const mockModel = attachMockModel(frameManager, targetId);\n      addMockFrame(mockModel, frameId);\n\n      assert.strictEqual(frameManager.getOutermostFrame()?.id, frameId);\n    });\n  });\n});\n"]}