{"version":3,"file":"Resource.js","sourceRoot":"","sources":["../../../../../../front_end/core/sdk/Resource.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/*\n * Copyright (C) 2007, 2008 Apple Inc.  All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport type * as Protocol from '../../generated/protocol.js';\nimport * as TextUtils from '../../models/text_utils/text_utils.js';\nimport * as Common from '../common/common.js';\nimport * as Platform from '../platform/platform.js';\n\nimport {type NetworkRequest} from './NetworkRequest.js';\nimport {type ResourceTreeFrame, type ResourceTreeModel} from './ResourceTreeModel.js';\n\nexport class Resource implements TextUtils.ContentProvider.ContentProvider {\n  readonly #resourceTreeModel: ResourceTreeModel;\n  #requestInternal: NetworkRequest|null;\n  #urlInternal!: Platform.DevToolsPath.UrlString;\n  readonly #documentURLInternal: Platform.DevToolsPath.UrlString;\n  readonly #frameIdInternal: Protocol.Page.FrameId|null;\n  readonly #loaderIdInternal: Protocol.Network.LoaderId|null;\n  readonly #type: Common.ResourceType.ResourceType;\n  #mimeTypeInternal: string;\n  #isGeneratedInternal: boolean;\n  #lastModifiedInternal: Date|null;\n  readonly #contentSizeInternal: number|null;\n  #parsedURLInternal?: Common.ParsedURL.ParsedURL;\n  #contentData: TextUtils.ContentData.ContentData|null = null;\n  /**\n   * There is always at most one CDP \"getResourceContent\" call in-flight. But once it's done\n   * we'll hit the backend again in case we failed.\n   */\n  #pendingContentData: Promise<TextUtils.ContentData.ContentDataOrError>|null = null;\n\n  constructor(\n      resourceTreeModel: ResourceTreeModel, request: NetworkRequest|null, url: Platform.DevToolsPath.UrlString,\n      documentURL: Platform.DevToolsPath.UrlString, frameId: Protocol.Page.FrameId|null,\n      loaderId: Protocol.Network.LoaderId|null, type: Common.ResourceType.ResourceType, mimeType: string,\n      lastModified: Date|null, contentSize: number|null) {\n    this.#resourceTreeModel = resourceTreeModel;\n    this.#requestInternal = request;\n    this.url = url;\n\n    this.#documentURLInternal = documentURL;\n    this.#frameIdInternal = frameId;\n    this.#loaderIdInternal = loaderId;\n    this.#type = type || Common.ResourceType.resourceTypes.Other;\n    this.#mimeTypeInternal = mimeType;\n    this.#isGeneratedInternal = false;\n\n    this.#lastModifiedInternal = lastModified && Platform.DateUtilities.isValid(lastModified) ? lastModified : null;\n    this.#contentSizeInternal = contentSize;\n  }\n\n  lastModified(): Date|null {\n    if (this.#lastModifiedInternal || !this.#requestInternal) {\n      return this.#lastModifiedInternal;\n    }\n    const lastModifiedHeader = this.#requestInternal.responseLastModified();\n    const date = lastModifiedHeader ? new Date(lastModifiedHeader) : null;\n    this.#lastModifiedInternal = date && Platform.DateUtilities.isValid(date) ? date : null;\n    return this.#lastModifiedInternal;\n  }\n\n  contentSize(): number|null {\n    if (typeof this.#contentSizeInternal === 'number' || !this.#requestInternal) {\n      return this.#contentSizeInternal;\n    }\n    return this.#requestInternal.resourceSize;\n  }\n\n  get request(): NetworkRequest|null {\n    return this.#requestInternal;\n  }\n\n  get url(): Platform.DevToolsPath.UrlString {\n    return this.#urlInternal;\n  }\n\n  set url(x: Platform.DevToolsPath.UrlString) {\n    this.#urlInternal = x;\n    this.#parsedURLInternal = new Common.ParsedURL.ParsedURL(x);\n  }\n\n  get parsedURL(): Common.ParsedURL.ParsedURL|undefined {\n    return this.#parsedURLInternal;\n  }\n\n  get documentURL(): Platform.DevToolsPath.UrlString {\n    return this.#documentURLInternal;\n  }\n\n  get frameId(): Protocol.Page.FrameId|null {\n    return this.#frameIdInternal;\n  }\n\n  get loaderId(): Protocol.Network.LoaderId|null {\n    return this.#loaderIdInternal;\n  }\n\n  get displayName(): string {\n    return this.#parsedURLInternal ? this.#parsedURLInternal.displayName : '';\n  }\n\n  resourceType(): Common.ResourceType.ResourceType {\n    return this.#requestInternal ? this.#requestInternal.resourceType() : this.#type;\n  }\n\n  get mimeType(): string {\n    return this.#requestInternal ? this.#requestInternal.mimeType : this.#mimeTypeInternal;\n  }\n\n  get content(): string|null {\n    if (this.#contentData?.isTextContent) {\n      return this.#contentData.text;\n    }\n    return this.#contentData?.base64 ?? null;\n  }\n\n  get isGenerated(): boolean {\n    return this.#isGeneratedInternal;\n  }\n\n  set isGenerated(val: boolean) {\n    this.#isGeneratedInternal = val;\n  }\n\n  contentURL(): Platform.DevToolsPath.UrlString {\n    return this.#urlInternal;\n  }\n\n  contentType(): Common.ResourceType.ResourceType {\n    if (this.resourceType() === Common.ResourceType.resourceTypes.Document &&\n        this.mimeType.indexOf('javascript') !== -1) {\n      return Common.ResourceType.resourceTypes.Script;\n    }\n    return this.resourceType();\n  }\n\n  async requestContent(): Promise<TextUtils.ContentProvider.DeferredContent> {\n    const contentData = await this.requestContentData();\n    return TextUtils.ContentData.ContentData.asDeferredContent(contentData);\n  }\n\n  async requestContentData(): Promise<TextUtils.ContentData.ContentDataOrError> {\n    if (this.#contentData) {\n      return this.#contentData;\n    }\n    if (this.#pendingContentData) {\n      return this.#pendingContentData;\n    }\n    this.#pendingContentData = this.innerRequestContent().then(contentData => {\n      // If an error happended we don't set `this.#contentData` so future `requestContentData` will\n      // attempt again to hit the backend for this Resource.\n      if (!TextUtils.ContentData.ContentData.isError(contentData)) {\n        this.#contentData = contentData;\n      }\n      this.#pendingContentData = null;\n      return contentData;\n    });\n    return this.#pendingContentData;\n  }\n\n  canonicalMimeType(): string {\n    return this.contentType().canonicalMimeType() || this.mimeType;\n  }\n\n  async searchInContent(query: string, caseSensitive: boolean, isRegex: boolean):\n      Promise<TextUtils.ContentProvider.SearchMatch[]> {\n    if (!this.frameId) {\n      return [];\n    }\n    if (this.request) {\n      return this.request.searchInContent(query, caseSensitive, isRegex);\n    }\n    const result = await this.#resourceTreeModel.target().pageAgent().invoke_searchInResource(\n        {frameId: this.frameId, url: this.url, query, caseSensitive, isRegex});\n    return TextUtils.TextUtils.performSearchInSearchMatches(result.result || [], query, caseSensitive, isRegex);\n  }\n\n  async populateImageSource(image: HTMLImageElement): Promise<void> {\n    const contentData = await this.requestContentData();\n    if (TextUtils.ContentData.ContentData.isError(contentData)) {\n      return;\n    }\n    image.src = contentData.asDataUrl() ?? this.#urlInternal;\n  }\n\n  private async innerRequestContent(): Promise<TextUtils.ContentData.ContentDataOrError> {\n    if (this.request) {\n      // The `contentData` promise only resolves once the request is done.\n      return this.request.requestContentData();\n    }\n\n    const response = await this.#resourceTreeModel.target().pageAgent().invoke_getResourceContent(\n        {frameId: this.frameId as Protocol.Page.FrameId, url: this.url});\n    const error = response.getError();\n    if (error) {\n      return {error};\n    }\n    return new TextUtils.ContentData.ContentData(response.content, response.base64Encoded, this.mimeType);\n  }\n\n  hasTextContent(): boolean {\n    if (this.#contentData?.isTextContent) {\n      return true;\n    }\n    return this.#type.isTextType() || Platform.MimeType.isTextType(this.mimeType);\n  }\n\n  frame(): ResourceTreeFrame|null {\n    return this.#frameIdInternal ? this.#resourceTreeModel.frameForId(this.#frameIdInternal) : null;\n  }\n\n  statusCode(): number {\n    return this.#requestInternal ? this.#requestInternal.statusCode : 0;\n  }\n}\n"]}