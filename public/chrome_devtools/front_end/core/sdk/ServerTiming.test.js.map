{"version":3,"file":"ServerTiming.test.js","sourceRoot":"","sources":["../../../../../../front_end/core/sdk/ServerTiming.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {describeWithLocale} from '../../testing/EnvironmentHelpers.js';\n\nimport * as SDK from './sdk.js';\n\ndescribe('ServerTiming', () => {\n  it('can be instantiated correctly', () => {\n    const serverTiming = new SDK.ServerTiming.ServerTiming('example metric', 1, 'example description');\n    assert.strictEqual(serverTiming.metric, 'example metric', 'metric was not set correctly');\n    assert.strictEqual(serverTiming.value, 1, 'value was not set correctly');\n    assert.strictEqual(serverTiming.description, 'example description', 'description was not set correctly');\n  });\n});\n\ndescribeWithLocale('SDK.ServerTiming.ServerTiming.createFromHeaderValue', () => {\n  it('parses headers correctly', () => {\n    // A real-world-like example with some edge cases.\n    const actual = SDK.ServerTiming.ServerTiming.createFromHeaderValue(\n        'lb; desc = \"Load bala\\\\ncer\" ; dur= 42,sql-1 ;desc=\"MySQL lookup server\";dur=100,sql-2;dur =\"900.1\";desc=\"MySQL shard server #1\",fs;\\tdur=600;desc=\"FileSystem\",\\tcache;dur=300;desc=\"\",other;dur=200;desc=\"Database write\",other;dur=110;desc=\"Database read\",cpu;dur=1230;desc=\"Total CPU\"');\n    const expected = [\n      {\n        name: 'lb',\n        desc: 'Load balancer',\n        dur: 42,\n      },\n      {\n        name: 'sql-1',\n        desc: 'MySQL lookup server',\n        dur: 100,\n      },\n      {\n        name: 'sql-2',\n        dur: 900.1,\n        desc: 'MySQL shard server #1',\n      },\n      {\n        name: 'fs',\n        dur: 600,\n        desc: 'FileSystem',\n      },\n      {\n        name: 'cache',\n        dur: 300,\n        desc: '',\n      },\n      {\n        name: 'other',\n        dur: 200,\n        desc: 'Database write',\n      },\n      {\n        name: 'other',\n        dur: 110,\n        desc: 'Database read',\n      },\n      {\n        name: 'cpu',\n        dur: 1230,\n        desc: 'Total CPU',\n      },\n    ];\n    assert.deepEqual(actual, expected);\n  });\n\n  it('parses Server Timing metric names correctly', () => {\n    assert.deepEqual(SDK.ServerTiming.ServerTiming.createFromHeaderValue('metric'), [{name: 'metric'}]);\n    assert.deepEqual(\n        SDK.ServerTiming.ServerTiming.createFromHeaderValue('aB3!#$%&\\'*+-.^_`|~'), [{name: 'aB3!#$%&\\'*+-.^_`|~'}]);\n  });\n\n  it('parses Server Timing metric durations correctly', () => {\n    assert.deepEqual(\n        SDK.ServerTiming.ServerTiming.createFromHeaderValue('metric;dur=123.4'), [{name: 'metric', dur: 123.4}]);\n    assert.deepEqual(\n        SDK.ServerTiming.ServerTiming.createFromHeaderValue('metric;dur=\"123.4\"'), [{name: 'metric', dur: 123.4}]);\n  });\n\n  it('parses Server Timing metric descriptions correctly', () => {\n    assert.deepEqual(SDK.ServerTiming.ServerTiming.createFromHeaderValue('metric;desc=description'), [\n      {name: 'metric', desc: 'description'},\n    ]);\n    assert.deepEqual(SDK.ServerTiming.ServerTiming.createFromHeaderValue('metric;desc=\"description\"'), [\n      {name: 'metric', desc: 'description'},\n    ]);\n    assert.deepEqual(SDK.ServerTiming.ServerTiming.createFromHeaderValue('metric;dur=123.4;desc=description'), [\n      {name: 'metric', dur: 123.4, desc: 'description'},\n    ]);\n    assert.deepEqual(SDK.ServerTiming.ServerTiming.createFromHeaderValue('metric;desc=description;dur=123.4'), [\n      {name: 'metric', desc: 'description', dur: 123.4},\n    ]);\n  });\n\n  it('handles spaces in Server Timing headers correctly', () => {\n    assert.deepEqual(SDK.ServerTiming.ServerTiming.createFromHeaderValue('metric ; '), [{name: 'metric'}]);\n    assert.deepEqual(SDK.ServerTiming.ServerTiming.createFromHeaderValue('metric , '), [{name: 'metric'}]);\n    assert.deepEqual(SDK.ServerTiming.ServerTiming.createFromHeaderValue('metric ; dur = 123.4 ; desc = description'), [\n      {name: 'metric', dur: 123.4, desc: 'description'},\n    ]);\n    assert.deepEqual(SDK.ServerTiming.ServerTiming.createFromHeaderValue('metric ; desc = description ; dur = 123.4'), [\n      {name: 'metric', desc: 'description', dur: 123.4},\n    ]);\n    assert.deepEqual(SDK.ServerTiming.ServerTiming.createFromHeaderValue('metric;desc = \"description\"'), [\n      {name: 'metric', desc: 'description'},\n    ]);\n  });\n\n  it('handles tabs in Server Timing headers correctly', () => {\n    assert.deepEqual(SDK.ServerTiming.ServerTiming.createFromHeaderValue('metric\\t;\\t'), [{name: 'metric'}]);\n    assert.deepEqual(SDK.ServerTiming.ServerTiming.createFromHeaderValue('metric\\t,\\t'), [{name: 'metric'}]);\n    assert.deepEqual(\n        SDK.ServerTiming.ServerTiming.createFromHeaderValue('metric\\t;\\tdur\\t=\\t123.4\\t;\\tdesc\\t=\\tdescription'), [\n          {name: 'metric', dur: 123.4, desc: 'description'},\n        ]);\n    assert.deepEqual(\n        SDK.ServerTiming.ServerTiming.createFromHeaderValue('metric\\t;\\tdesc\\t=\\tdescription\\t;\\tdur\\t=\\t123.4'), [\n          {name: 'metric', desc: 'description', dur: 123.4},\n        ]);\n    assert.deepEqual(SDK.ServerTiming.ServerTiming.createFromHeaderValue('metric;desc\\t=\\t\"description\"'), [\n      {name: 'metric', desc: 'description'},\n    ]);\n  });\n\n  it('handles Server Timing headers with multiple entries correctly', () => {\n    assert.deepEqual(\n        SDK.ServerTiming.ServerTiming.createFromHeaderValue(\n            'metric1;dur=12.3;desc=description1,metric2;dur=45.6;desc=description2,metric3;dur=78.9;desc=description3'),\n        [\n          {name: 'metric1', dur: 12.3, desc: 'description1'},\n          {name: 'metric2', dur: 45.6, desc: 'description2'},\n          {name: 'metric3', dur: 78.9, desc: 'description3'},\n        ]);\n    assert.deepEqual(\n        SDK.ServerTiming.ServerTiming.createFromHeaderValue('metric1,metric2 ,metric3, metric4 , metric5'), [\n          {name: 'metric1'},\n          {name: 'metric2'},\n          {name: 'metric3'},\n          {name: 'metric4'},\n          {name: 'metric5'},\n        ]);\n  });\n\n  it('handles RFC7230 quoted-string Server Timing values correctly', () => {\n    assert.deepEqual(SDK.ServerTiming.ServerTiming.createFromHeaderValue('metric;desc=\"description\"'), [\n      {name: 'metric', desc: 'description'},\n    ]);\n    assert.deepEqual(SDK.ServerTiming.ServerTiming.createFromHeaderValue('metric;desc=\"\\t description \\t\"'), [\n      {name: 'metric', desc: '\\t description \\t'},\n    ]);\n    assert.deepEqual(SDK.ServerTiming.ServerTiming.createFromHeaderValue('metric;desc=\"descr\\\\\"iption\"'), [\n      {name: 'metric', desc: 'descr\"iption'},\n    ]);\n    assert.deepEqual(\n        SDK.ServerTiming.ServerTiming.createFromHeaderValue('metric;desc=\\\\'), [{name: 'metric', desc: ''}]);\n    assert.deepEqual(\n        SDK.ServerTiming.ServerTiming.createFromHeaderValue('metric;desc=\"'), [{name: 'metric', desc: ''}]);\n    assert.deepEqual(\n        SDK.ServerTiming.ServerTiming.createFromHeaderValue('metric;desc=\\\\\\\\'), [{name: 'metric', desc: ''}]);\n    assert.deepEqual(\n        SDK.ServerTiming.ServerTiming.createFromHeaderValue('metric;desc=\\\\\"'), [{name: 'metric', desc: ''}]);\n    assert.deepEqual(\n        SDK.ServerTiming.ServerTiming.createFromHeaderValue('metric;desc=\"\\\\'), [{name: 'metric', desc: ''}]);\n    assert.deepEqual(\n        SDK.ServerTiming.ServerTiming.createFromHeaderValue('metric;desc=\"\"'), [{name: 'metric', desc: ''}]);\n    assert.deepEqual(\n        SDK.ServerTiming.ServerTiming.createFromHeaderValue('metric;desc=\\\\\\\\\\\\'), [{name: 'metric', desc: ''}]);\n    assert.deepEqual(\n        SDK.ServerTiming.ServerTiming.createFromHeaderValue('metric;desc=\\\\\\\\\"'), [{name: 'metric', desc: ''}]);\n    assert.deepEqual(\n        SDK.ServerTiming.ServerTiming.createFromHeaderValue('metric;desc=\\\\\"\\\\'), [{name: 'metric', desc: ''}]);\n    assert.deepEqual(\n        SDK.ServerTiming.ServerTiming.createFromHeaderValue('metric;desc=\\\\\"\"'), [{name: 'metric', desc: ''}]);\n    assert.deepEqual(\n        SDK.ServerTiming.ServerTiming.createFromHeaderValue('metric;desc=\"\\\\\\\\'), [{name: 'metric', desc: ''}]);\n    assert.deepEqual(\n        SDK.ServerTiming.ServerTiming.createFromHeaderValue('metric;desc=\"\\\\\"'), [{name: 'metric', desc: ''}]);\n    assert.deepEqual(\n        SDK.ServerTiming.ServerTiming.createFromHeaderValue('metric;desc=\"\"\\\\'), [{name: 'metric', desc: ''}]);\n    assert.deepEqual(\n        SDK.ServerTiming.ServerTiming.createFromHeaderValue('metric;desc=\"\"\"'), [{name: 'metric', desc: ''}]);\n    assert.deepEqual(\n        SDK.ServerTiming.ServerTiming.createFromHeaderValue('metric;desc=\\\\\\\\\\\\\\\\'), [{name: 'metric', desc: ''}]);\n    assert.deepEqual(\n        SDK.ServerTiming.ServerTiming.createFromHeaderValue('metric;desc=\\\\\\\\\\\\\"'), [{name: 'metric', desc: ''}]);\n    assert.deepEqual(\n        SDK.ServerTiming.ServerTiming.createFromHeaderValue('metric;desc=\\\\\\\\\"\\\\'), [{name: 'metric', desc: ''}]);\n    assert.deepEqual(\n        SDK.ServerTiming.ServerTiming.createFromHeaderValue('metric;desc=\\\\\\\\\"\"'), [{name: 'metric', desc: ''}]);\n    assert.deepEqual(\n        SDK.ServerTiming.ServerTiming.createFromHeaderValue('metric;desc=\\\\\"\\\\\\\\'), [{name: 'metric', desc: ''}]);\n    assert.deepEqual(\n        SDK.ServerTiming.ServerTiming.createFromHeaderValue('metric;desc=\\\\\"\\\\\"'), [{name: 'metric', desc: ''}]);\n    assert.deepEqual(\n        SDK.ServerTiming.ServerTiming.createFromHeaderValue('metric;desc=\\\\\"\"\\\\'), [{name: 'metric', desc: ''}]);\n    assert.deepEqual(\n        SDK.ServerTiming.ServerTiming.createFromHeaderValue('metric;desc=\\\\\"\"\"'), [{name: 'metric', desc: ''}]);\n    assert.deepEqual(\n        SDK.ServerTiming.ServerTiming.createFromHeaderValue('metric;desc=\"\\\\\\\\\\\\'), [{name: 'metric', desc: ''}]);\n    assert.deepEqual(\n        SDK.ServerTiming.ServerTiming.createFromHeaderValue('metric;desc=\"\\\\\\\\\"'), [{name: 'metric', desc: '\\\\'}]);\n    assert.deepEqual(\n        SDK.ServerTiming.ServerTiming.createFromHeaderValue('metric;desc=\"\\\\\"\\\\'), [{name: 'metric', desc: ''}]);\n    assert.deepEqual(\n        SDK.ServerTiming.ServerTiming.createFromHeaderValue('metric;desc=\"\\\\\"\"'), [{name: 'metric', desc: '\"'}]);\n    assert.deepEqual(\n        SDK.ServerTiming.ServerTiming.createFromHeaderValue('metric;desc=\"\"\\\\\\\\'), [{name: 'metric', desc: ''}]);\n    assert.deepEqual(\n        SDK.ServerTiming.ServerTiming.createFromHeaderValue('metric;desc=\"\"\\\\\"'), [{name: 'metric', desc: ''}]);\n    assert.deepEqual(\n        SDK.ServerTiming.ServerTiming.createFromHeaderValue('metric;desc=\"\"\"\\\\'), [{name: 'metric', desc: ''}]);\n    assert.deepEqual(\n        SDK.ServerTiming.ServerTiming.createFromHeaderValue('metric;desc=\"\"\"\"'), [{name: 'metric', desc: ''}]);\n  });\n\n  it('handles case-sensitivity correctly', () => {\n    assert.deepEqual(SDK.ServerTiming.ServerTiming.createFromHeaderValue('metric;DuR=123.4;DeSc=description'), [\n      {name: 'metric', dur: 123.4, desc: 'description'},\n    ]);\n  });\n\n  it('handles duplicate entry names correctly', () => {\n    // Note: also see the tests below that checks for warnings.\n    assert.deepEqual(\n        SDK.ServerTiming.ServerTiming.createFromHeaderValue(\n            'metric;dur=12.3;desc=description1,metric;dur=45.6;desc=description2'),\n        [\n          {name: 'metric', dur: 12.3, desc: 'description1'},\n          {name: 'metric', dur: 45.6, desc: 'description2'},\n        ]);\n  });\n\n  it('handles non-numeric durations correctly', () => {\n    // Non-numeric durations.\n    // Note: also see the tests below that checks for warnings.\n    assert.deepEqual(SDK.ServerTiming.ServerTiming.createFromHeaderValue('metric;dur=foo'), [{name: 'metric', dur: 0}]);\n    assert.deepEqual(\n        SDK.ServerTiming.ServerTiming.createFromHeaderValue('metric;dur=\"foo\"'), [{name: 'metric', dur: 0}]);\n  });\n\n  it('handles incomplete parameters correctly', () => {\n    // Note: also see the tests below that checks for warnings.\n    assert.deepEqual(SDK.ServerTiming.ServerTiming.createFromHeaderValue('metric;dur;dur=123.4;desc=description'), [\n      {name: 'metric', dur: 0, desc: 'description'},\n    ]);\n    assert.deepEqual(SDK.ServerTiming.ServerTiming.createFromHeaderValue('metric;dur=;dur=123.4;desc=description'), [\n      {name: 'metric', dur: 0, desc: 'description'},\n    ]);\n    assert.deepEqual(SDK.ServerTiming.ServerTiming.createFromHeaderValue('metric;desc;desc=description;dur=123.4'), [\n      {name: 'metric', desc: '', dur: 123.4},\n    ]);\n    assert.deepEqual(SDK.ServerTiming.ServerTiming.createFromHeaderValue('metric;desc=;desc=description;dur=123.4'), [\n      {name: 'metric', desc: '', dur: 123.4},\n    ]);\n  });\n\n  it('handles extraneous characters after parameter values correctly', () => {\n    // Note: also see the tests below that checks for warnings.\n    assert.deepEqual(SDK.ServerTiming.ServerTiming.createFromHeaderValue('metric;desc=d1 d2;dur=123.4'), [\n      {name: 'metric', desc: 'd1', dur: 123.4},\n    ]);\n    assert.deepEqual(SDK.ServerTiming.ServerTiming.createFromHeaderValue('metric1;desc=d1 d2,metric2'), [\n      {name: 'metric1', desc: 'd1'},\n      {name: 'metric2'},\n    ]);\n  });\n\n  it('handles extraneous characters after RFC7230 quoted-string parameter values correctly', () => {\n    // Note: also see the tests below that checks for warnings.\n    assert.deepEqual(SDK.ServerTiming.ServerTiming.createFromHeaderValue('metric;desc=\"d1\" d2;dur=123.4'), [\n      {name: 'metric', desc: 'd1', dur: 123.4},\n    ]);\n    assert.deepEqual(SDK.ServerTiming.ServerTiming.createFromHeaderValue('metric1;desc=\"d1\" d2,metric2'), [\n      {name: 'metric1', desc: 'd1'},\n      {name: 'metric2'},\n    ]);\n  });\n\n  it('handles extraneous characters after entry name token correctly', () => {\n    // Note: also see the tests below that checks for warnings.\n    assert.deepEqual(\n        SDK.ServerTiming.ServerTiming.createFromHeaderValue('metric==   \"\"foo;dur=123.4'), [{name: 'metric'}]);\n    assert.deepEqual(\n        SDK.ServerTiming.ServerTiming.createFromHeaderValue('metric1==   \"\"foo,metric2'), [{name: 'metric1'}]);\n  });\n\n  it('handles extraneous characters after parameter name token correctly', () => {\n    // Note: also see the tests below that checks for warnings.\n    assert.deepEqual(\n        SDK.ServerTiming.ServerTiming.createFromHeaderValue('metric;dur foo=12'), [{name: 'metric', dur: 0}]);\n    assert.deepEqual(SDK.ServerTiming.ServerTiming.createFromHeaderValue('metric;foo dur=12'), [{name: 'metric'}]);\n  });\n\n  it('handles bad input resulting in zero entries correctly', () => {\n    assert.deepEqual(SDK.ServerTiming.ServerTiming.createFromHeaderValue(' '), []);\n    assert.deepEqual(SDK.ServerTiming.ServerTiming.createFromHeaderValue('='), []);\n    assert.deepEqual(SDK.ServerTiming.ServerTiming.createFromHeaderValue(';'), []);\n    assert.deepEqual(SDK.ServerTiming.ServerTiming.createFromHeaderValue(','), []);\n    assert.deepEqual(SDK.ServerTiming.ServerTiming.createFromHeaderValue('=;'), []);\n    assert.deepEqual(SDK.ServerTiming.ServerTiming.createFromHeaderValue(';='), []);\n    assert.deepEqual(SDK.ServerTiming.ServerTiming.createFromHeaderValue('=,'), []);\n    assert.deepEqual(SDK.ServerTiming.ServerTiming.createFromHeaderValue(',='), []);\n    assert.deepEqual(SDK.ServerTiming.ServerTiming.createFromHeaderValue(';,'), []);\n    assert.deepEqual(SDK.ServerTiming.ServerTiming.createFromHeaderValue(',;'), []);\n  });\n\n  it('triggers warnings when needed', () => {\n    // TODO: These tests require mocking `Common.console.warn`.\n    // For now, we override `SDK.ServerTiming.ServerTiming.showWarning` to throw an\n    // exception instead of logging it.\n    SDK.ServerTiming.ServerTiming.showWarning = message => {\n      throw new Error(message);\n    };\n\n    assert.throws(() => {\n      SDK.ServerTiming.ServerTiming.createFromHeaderValue('lb=42; \"Load balancer\"');\n    }, /Deprecated syntax found/, 'legacy header syntax should trigger a warning');\n    assert.throws(() => {\n      SDK.ServerTiming.ServerTiming.createFromHeaderValue('sql;desc=\"MySQL\";dur=100;dur=200');\n    }, /Duplicate parameter/, 'duplicate parameters should trigger a warning');\n    assert.throws(() => {\n      SDK.ServerTiming.ServerTiming.createFromHeaderValue('sql;desc;dur=100');\n    }, /No value found for parameter/, 'parameters without a value should trigger a warning');\n    assert.throws(() => {\n      SDK.ServerTiming.ServerTiming.createFromHeaderValue('sql;desc=\"MySQL\";dur=abc');\n    }, /Unable to parse/, 'duration values that cannot be converted to floats should trigger a warning');\n    assert.throws(() => {\n      SDK.ServerTiming.ServerTiming.createFromHeaderValue('sql;desc=\"MySQL\";dur=100;invalid=lol');\n    }, /Unrecognized parameter/, 'invalid parameters should trigger a warning');\n  });\n});\n"]}