{"version":3,"file":"DebuggerModel.test.js","sourceRoot":"","sources":["../../../../../../front_end/core/sdk/DebuggerModel.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Protocol from '../../generated/protocol.js';\nimport * as Bindings from '../../models/bindings/bindings.js';\nimport * as Workspace from '../../models/workspace/workspace.js';\nimport {createTarget} from '../../testing/EnvironmentHelpers.js';\nimport {\n  describeWithMockConnection,\n  dispatchEvent,\n  setMockConnectionResponseHandler,\n} from '../../testing/MockConnection.js';\nimport {MockProtocolBackend} from '../../testing/MockScopeChain.js';\nimport * as Common from '../common/common.js';\nimport type * as Platform from '../platform/platform.js';\n\nimport * as SDK from './sdk.js';\n\nconst SCRIPT_ID_ONE = '1' as Protocol.Runtime.ScriptId;\nconst SCRIPT_ID_TWO = '2' as Protocol.Runtime.ScriptId;\n\ndescribeWithMockConnection('DebuggerModel', () => {\n  describe('breakpoint activation', () => {\n    beforeEach(() => {\n      // Dummy handlers for unblocking target suspension.\n      setMockConnectionResponseHandler('Debugger.setAsyncCallStackDepth', () => ({}));\n      setMockConnectionResponseHandler('Debugger.disable', () => ({}));\n      setMockConnectionResponseHandler('DOM.disable', () => ({}));\n      setMockConnectionResponseHandler('CSS.disable', () => ({}));\n      setMockConnectionResponseHandler('Overlay.disable', () => ({}));\n      setMockConnectionResponseHandler('Overlay.setShowGridOverlays', () => ({}));\n      setMockConnectionResponseHandler('Overlay.setShowFlexOverlays', () => ({}));\n      setMockConnectionResponseHandler('Overlay.setShowScrollSnapOverlays', () => ({}));\n      setMockConnectionResponseHandler('Overlay.setShowContainerQueryOverlays', () => ({}));\n      setMockConnectionResponseHandler('Overlay.setShowIsolatedElements', () => ({}));\n      setMockConnectionResponseHandler('Overlay.setShowViewportSizeOnResize', () => ({}));\n      setMockConnectionResponseHandler('Target.setAutoAttach', () => ({}));\n\n      // Dummy handlers for unblocking target resumption.\n      setMockConnectionResponseHandler('Debugger.enable', () => ({}));\n      setMockConnectionResponseHandler('Debugger.setPauseOnExceptions', () => ({}));\n      setMockConnectionResponseHandler('DOM.enable', () => ({}));\n      setMockConnectionResponseHandler('Overlay.enable', () => ({}));\n      setMockConnectionResponseHandler('CSS.enable', () => ({}));\n    });\n\n    it('deactivates breakpoints on construction with inactive breakpoints', async () => {\n      let breakpointsDeactivated = false;\n      setMockConnectionResponseHandler('Debugger.setBreakpointsActive', request => {\n        if (request.active === false) {\n          breakpointsDeactivated = true;\n        }\n        return {};\n      });\n      Common.Settings.Settings.instance().moduleSetting('breakpoints-active').set(false);\n      createTarget();\n      assert.isTrue(breakpointsDeactivated);\n    });\n\n    it('deactivates breakpoints for suspended target', async () => {\n      let breakpointsDeactivated = false;\n      setMockConnectionResponseHandler('Debugger.setBreakpointsActive', request => {\n        if (request.active === false) {\n          breakpointsDeactivated = true;\n        }\n        return {};\n      });\n\n      const target = createTarget();\n\n      await target.suspend();\n\n      // Deactivate breakpoints while suspended.\n      Common.Settings.Settings.instance().moduleSetting('breakpoints-active').set(false);\n\n      // Verify that the backend received the message.\n      assert.isTrue(breakpointsDeactivated);\n\n      // Resume and verify that the setBreakpointsActive(false) is called again when the target resumes.\n      // This is only needed for older backends (before crbug.com/1357046 is fixed).\n      breakpointsDeactivated = false;\n      await target.resume();\n      assert.isTrue(breakpointsDeactivated);\n    });\n\n    it('activates breakpoints for suspended target', async () => {\n      let breakpointsDeactivated = false;\n      let breakpointsActivated = false;\n      setMockConnectionResponseHandler('Debugger.setBreakpointsActive', request => {\n        if (request.active) {\n          breakpointsActivated = true;\n        } else {\n          breakpointsDeactivated = true;\n        }\n        return {};\n      });\n\n      // Deactivate breakpoints befroe the target is created.\n      Common.Settings.Settings.instance().moduleSetting('breakpoints-active').set(false);\n      const target = createTarget();\n      assert.isTrue(breakpointsDeactivated);\n\n      await target.suspend();\n\n      // Activate breakpoints while suspended.\n      Common.Settings.Settings.instance().moduleSetting('breakpoints-active').set(true);\n\n      // Verify that the backend received the message.\n      assert.isTrue(breakpointsActivated);\n    });\n  });\n\n  describe('createRawLocationFromURL', () => {\n    it('yields correct location in the presence of multiple scripts with the same URL', async () => {\n      const target = createTarget();\n      const debuggerModel = target.model(SDK.DebuggerModel.DebuggerModel);\n      const url = 'http://localhost/index.html';\n      dispatchEvent(target, 'Debugger.scriptParsed', {\n        scriptId: SCRIPT_ID_ONE,\n        url,\n        startLine: 0,\n        startColumn: 0,\n        endLine: 1,\n        endColumn: 10,\n        executionContextId: 1,\n        hash: '',\n        isLiveEdit: false,\n        sourceMapURL: undefined,\n        hasSourceURL: false,\n        length: 10,\n      });\n      dispatchEvent(target, 'Debugger.scriptParsed', {\n        scriptId: SCRIPT_ID_TWO,\n        url,\n        startLine: 20,\n        startColumn: 0,\n        endLine: 21,\n        endColumn: 10,\n        executionContextId: 1,\n        hash: '',\n        isLiveEdit: false,\n        sourceMapURL: undefined,\n        hasSourceURL: false,\n        length: 10,\n      });\n      assert.strictEqual(debuggerModel?.createRawLocationByURL(url, 0)?.scriptId, SCRIPT_ID_ONE);\n      assert.strictEqual(debuggerModel?.createRawLocationByURL(url, 20, 1)?.scriptId, SCRIPT_ID_TWO);\n      assert.strictEqual(debuggerModel?.createRawLocationByURL(url, 5, 5), null);\n    });\n  });\n\n  const breakpointId1 = 'fs.js:1' as Protocol.Debugger.BreakpointId;\n  const breakpointId2 = 'unsupported' as Protocol.Debugger.BreakpointId;\n\n  describe('setBreakpointByURL', () => {\n    it('correctly sets only a single breakpoint in Node.js internal scripts', async () => {\n      setMockConnectionResponseHandler('Debugger.setBreakpointByUrl', ({url}) => {\n        if (url === 'fs.js') {\n          return {\n            breakpointId: breakpointId1,\n            locations: [],\n            getError() {\n              return undefined;\n            },\n          };\n        }\n        return {\n          breakpointId: breakpointId2,\n          locations: [],\n          getError() {\n            return undefined;\n          },\n        };\n      });\n\n      const target = createTarget();\n      target.markAsNodeJSForTest();\n      const model = new SDK.DebuggerModel.DebuggerModel(target);\n      const {breakpointId} = await model.setBreakpointByURL('fs.js' as Platform.DevToolsPath.UrlString, 1);\n      assert.strictEqual(breakpointId, breakpointId1);\n    });\n  });\n\n  describe('scriptsForSourceURL', () => {\n    it('returns the latest script at the front of the result for scripts with the same URL', () => {\n      const target = createTarget();\n      const url = 'http://localhost/index.html';\n      dispatchEvent(target, 'Debugger.scriptParsed', {\n        scriptId: SCRIPT_ID_ONE,\n        url,\n        startLine: 0,\n        startColumn: 0,\n        endLine: 1,\n        endColumn: 10,\n        executionContextId: 1,\n        hash: '',\n        isLiveEdit: false,\n        sourceMapURL: undefined,\n        hasSourceURL: false,\n        length: 10,\n      });\n      dispatchEvent(target, 'Debugger.scriptParsed', {\n        scriptId: SCRIPT_ID_TWO,\n        url,\n        startLine: 20,\n        startColumn: 0,\n        endLine: 21,\n        endColumn: 10,\n        executionContextId: 1,\n        hash: '',\n        isLiveEdit: false,\n        sourceMapURL: undefined,\n        hasSourceURL: false,\n        length: 10,\n      });\n\n      const debuggerModel = target.model(SDK.DebuggerModel.DebuggerModel);\n      const scripts = debuggerModel?.scriptsForSourceURL(url) || [];\n\n      assert.strictEqual(scripts[0].scriptId, SCRIPT_ID_TWO);\n      assert.strictEqual(scripts[1].scriptId, SCRIPT_ID_ONE);\n    });\n  });\n\n  describe('Scope', () => {\n    it('Scope.typeName covers every enum value', async () => {\n      const target = createTarget();\n      const debuggerModel = target.model(SDK.DebuggerModel.DebuggerModel) as SDK.DebuggerModel.DebuggerModel;\n      const scriptUrl = 'https://script-host/script.js' as Platform.DevToolsPath.UrlString;\n      const script = new SDK.Script.Script(\n          debuggerModel, SCRIPT_ID_ONE, scriptUrl, 0, 0, 0, 0, 0, '', false, false, undefined, false, 0, null, null,\n          null, null, null, null);\n      const scopeTypes: Protocol.Debugger.ScopeType[] = [\n        Protocol.Debugger.ScopeType.Global,\n        Protocol.Debugger.ScopeType.Local,\n        Protocol.Debugger.ScopeType.With,\n        Protocol.Debugger.ScopeType.Closure,\n        Protocol.Debugger.ScopeType.Catch,\n        Protocol.Debugger.ScopeType.Block,\n        Protocol.Debugger.ScopeType.Script,\n        Protocol.Debugger.ScopeType.Eval,\n        Protocol.Debugger.ScopeType.Module,\n        Protocol.Debugger.ScopeType.WasmExpressionStack,\n      ];\n      for (const scopeType of scopeTypes) {\n        const payload: Protocol.Debugger.CallFrame = {\n          callFrameId: '0' as Protocol.Debugger.CallFrameId,\n          functionName: 'test',\n          functionLocation: undefined,\n          location: {\n            scriptId: SCRIPT_ID_ONE,\n            lineNumber: 0,\n            columnNumber: 0,\n          },\n          url: 'test-url',\n          scopeChain: [{\n            type: scopeType,\n            object: {type: 'object'} as Protocol.Runtime.RemoteObject,\n          }],\n          this: {type: 'object'} as Protocol.Runtime.RemoteObject,\n          returnValue: undefined,\n          canBeRestarted: false,\n        };\n        const callFrame = new SDK.DebuggerModel.CallFrame(debuggerModel, script, payload, 0);\n        const scope = new SDK.DebuggerModel.Scope(callFrame, 0);\n        assert.notEqual('', scope.typeName());\n      }\n    });\n  });\n\n  describe('pause', () => {\n    let target: SDK.Target.Target;\n    let backend: MockProtocolBackend;\n    let debuggerWorkspaceBinding: Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding;\n\n    beforeEach(() => {\n      target = createTarget({id: 'main' as Protocol.Target.TargetID, name: 'main', type: SDK.Target.Type.Frame});\n      const targetManager = target.targetManager();\n      const workspace = Workspace.Workspace.WorkspaceImpl.instance();\n      const resourceMapping = new Bindings.ResourceMapping.ResourceMapping(targetManager, workspace);\n      debuggerWorkspaceBinding = Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.instance(\n          {forceNew: false, resourceMapping, targetManager});\n      backend = new MockProtocolBackend();\n      Bindings.IgnoreListManager.IgnoreListManager.instance({forceNew: false, debuggerWorkspaceBinding});\n    });\n\n    it('with empty call frame list will invoke plain step-into', async () => {\n      const stepIntoRequestPromise = new Promise<void>(resolve => {\n        setMockConnectionResponseHandler('Debugger.stepInto', () => {\n          resolve();\n          return {};\n        });\n      });\n      backend.dispatchDebuggerPauseWithNoCallFrames(target, Protocol.Debugger.PausedEventReason.Other);\n      await stepIntoRequestPromise;\n    });\n  });\n});\n\ndescribe('DebuggerModel', () => {\n  describe('sortAndMergeRanges', () => {\n    function createRange(\n        scriptId: Protocol.Runtime.ScriptId, startLine: number, startColumn: number, endLine: number,\n        endColumn: number): Protocol.Debugger.LocationRange {\n      return {\n        scriptId,\n        start: {lineNumber: startLine, columnNumber: startColumn},\n        end: {lineNumber: endLine, columnNumber: endColumn},\n      };\n    }\n\n    function sortAndMerge(locationRange: Protocol.Debugger.LocationRange[]) {\n      return SDK.DebuggerModel.sortAndMergeRanges(locationRange.concat());\n    }\n\n    function assertIsMaximallyMerged(locationRange: Protocol.Debugger.LocationRange[]) {\n      for (let i = 1; i < locationRange.length; ++i) {\n        const prev = locationRange[i - 1];\n        const curr = locationRange[i];\n        assert.isTrue(prev.scriptId <= curr.scriptId);\n        if (prev.scriptId === curr.scriptId) {\n          assert.isTrue(prev.end.lineNumber <= curr.start.lineNumber);\n          if (prev.end.lineNumber === curr.start.lineNumber) {\n            assert.isTrue(prev.end.columnNumber <= curr.start.columnNumber);\n          }\n        }\n      }\n    }\n\n    it('can be reduced if equal', () => {\n      const testRange = createRange(SCRIPT_ID_ONE, 0, 3, 3, 3);\n      const locationRangesToBeReduced = [\n        testRange,\n        testRange,\n      ];\n      const reduced = sortAndMerge(locationRangesToBeReduced);\n      assert.deepEqual(reduced, [testRange]);\n      assertIsMaximallyMerged(reduced);\n    });\n\n    it('can be reduced if overlapping (multiple ranges)', () => {\n      const locationRangesToBeReduced = [\n        createRange(SCRIPT_ID_ONE, 0, 5, 5, 3),\n        createRange(SCRIPT_ID_ONE, 0, 3, 3, 3),\n        createRange(SCRIPT_ID_ONE, 5, 3, 10, 10),\n        createRange(SCRIPT_ID_TWO, 5, 4, 10, 10),\n      ];\n      const locationRangesExpected = [\n        createRange(SCRIPT_ID_ONE, 0, 3, 10, 10),\n        locationRangesToBeReduced[3],\n      ];\n      const reduced = sortAndMerge(locationRangesToBeReduced);\n      assert.deepEqual(reduced, locationRangesExpected);\n      assertIsMaximallyMerged(reduced);\n    });\n\n    it('can be reduced if overlapping (same start, different end)', () => {\n      const locationRangesToBeReduced = [\n        createRange(SCRIPT_ID_ONE, 0, 5, 5, 3),\n        createRange(SCRIPT_ID_ONE, 0, 5, 3, 3),\n      ];\n      const locationRangesExpected = [\n        createRange(SCRIPT_ID_ONE, 0, 5, 5, 3),\n      ];\n      const reduced = sortAndMerge(locationRangesToBeReduced);\n      assert.deepEqual(reduced, locationRangesExpected);\n      assertIsMaximallyMerged(reduced);\n    });\n\n    it('can be reduced if overlapping (different start, same end)', () => {\n      const locationRangesToBeReduced = [\n        createRange(SCRIPT_ID_ONE, 0, 3, 5, 3),\n        createRange(SCRIPT_ID_ONE, 0, 5, 5, 3),\n      ];\n      const locationRangesExpected = [\n        createRange(SCRIPT_ID_ONE, 0, 3, 5, 3),\n      ];\n      const reduced = sortAndMerge(locationRangesToBeReduced);\n      assert.deepEqual(reduced, locationRangesExpected);\n      assertIsMaximallyMerged(reduced);\n    });\n\n    it('can be reduced if overlapping (start == other.end)', () => {\n      const locationRangesToBeReduced = [\n        createRange(SCRIPT_ID_ONE, 0, 3, 5, 3),\n        createRange(SCRIPT_ID_ONE, 5, 3, 10, 3),\n      ];\n      const locationRangesExpected = [\n        createRange(SCRIPT_ID_ONE, 0, 3, 10, 3),\n      ];\n      const reduced = sortAndMerge(locationRangesToBeReduced);\n      assert.deepEqual(reduced, locationRangesExpected);\n      assertIsMaximallyMerged(reduced);\n    });\n  });\n});\n"]}