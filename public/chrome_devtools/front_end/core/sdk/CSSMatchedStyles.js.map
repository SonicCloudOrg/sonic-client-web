{"version":3,"file":"CSSMatchedStyles.js","sourceRoot":"","sources":["../../../../../../front_end/core/sdk/CSSMatchedStyles.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2016 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Protocol from '../../generated/protocol.js';\nimport * as Platform from '../platform/platform.js';\n\nimport {cssMetadata} from './CSSMetadata.js';\nimport {type CSSModel} from './CSSModel.js';\nimport {type CSSProperty} from './CSSProperty.js';\nimport * as PropertyParser from './CSSPropertyParser.js';\nimport {\n  CSSFontPaletteValuesRule,\n  CSSKeyframesRule,\n  CSSPositionFallbackRule,\n  CSSPositionTryRule,\n  CSSPropertyRule,\n  CSSStyleRule,\n} from './CSSRule.js';\nimport {CSSStyleDeclaration, Type} from './CSSStyleDeclaration.js';\nimport {type DOMNode} from './DOMModel.js';\n\nfunction containsStyle(styles: CSSStyleDeclaration[]|Set<CSSStyleDeclaration>, query: CSSStyleDeclaration): boolean {\n  if (!query.styleSheetId || !query.range) {\n    return false;\n  }\n  for (const style of styles) {\n    if (query.styleSheetId === style.styleSheetId && style.range && query.range.equal(style.range)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction containsCustomProperties(style: CSSStyleDeclaration): boolean {\n  const properties = style.allProperties();\n  return properties.some(property => cssMetadata().isCustomProperty(property.name));\n}\n\nfunction containsInherited(style: CSSStyleDeclaration): boolean {\n  const properties = style.allProperties();\n  for (let i = 0; i < properties.length; ++i) {\n    const property = properties[i];\n    // Does this style contain non-overridden inherited property?\n    if (property.activeInStyle() && cssMetadata().isPropertyInherited(property.name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction cleanUserAgentPayload(payload: Protocol.CSS.RuleMatch[]): Protocol.CSS.RuleMatch[] {\n  for (const ruleMatch of payload) {\n    cleanUserAgentSelectors(ruleMatch);\n  }\n\n  // Merge UA rules that are sequential and have similar selector/media.\n  const cleanMatchedPayload = [];\n  for (const ruleMatch of payload) {\n    const lastMatch = cleanMatchedPayload[cleanMatchedPayload.length - 1];\n    if (!lastMatch || ruleMatch.rule.origin !== 'user-agent' || lastMatch.rule.origin !== 'user-agent' ||\n        ruleMatch.rule.selectorList.text !== lastMatch.rule.selectorList.text ||\n        mediaText(ruleMatch) !== mediaText(lastMatch)) {\n      cleanMatchedPayload.push(ruleMatch);\n      continue;\n    }\n    mergeRule(ruleMatch, lastMatch);\n  }\n  return cleanMatchedPayload;\n\n  function mergeRule(from: Protocol.CSS.RuleMatch, to: Protocol.CSS.RuleMatch): void {\n    const shorthands = (new Map() as Map<string, string>);\n    const properties = (new Map() as Map<string, string>);\n    for (const entry of to.rule.style.shorthandEntries) {\n      shorthands.set(entry.name, entry.value);\n    }\n    for (const entry of to.rule.style.cssProperties) {\n      properties.set(entry.name, entry.value);\n    }\n    for (const entry of from.rule.style.shorthandEntries) {\n      shorthands.set(entry.name, entry.value);\n    }\n    for (const entry of from.rule.style.cssProperties) {\n      properties.set(entry.name, entry.value);\n    }\n    to.rule.style.shorthandEntries = [...shorthands.entries()].map(([name, value]) => ({name, value}));\n    to.rule.style.cssProperties = [...properties.entries()].map(([name, value]) => ({name, value}));\n  }\n\n  function mediaText(ruleMatch: Protocol.CSS.RuleMatch): string|null {\n    if (!ruleMatch.rule.media) {\n      return null;\n    }\n    return ruleMatch.rule.media.map(media => media.text).join(', ');\n  }\n\n  function cleanUserAgentSelectors(ruleMatch: Protocol.CSS.RuleMatch): void {\n    const {matchingSelectors, rule} = ruleMatch;\n    if (rule.origin !== 'user-agent' || !matchingSelectors.length) {\n      return;\n    }\n    rule.selectorList.selectors = rule.selectorList.selectors.filter((item, i) => matchingSelectors.includes(i));\n    rule.selectorList.text = rule.selectorList.selectors.map(item => item.text).join(', ');\n    ruleMatch.matchingSelectors = matchingSelectors.map((item, i) => i);\n  }\n}\n\n/**\n * Return a mapping of the highlight names in the specified RuleMatch to\n * the indices of selectors in that selector list with that highlight name.\n *\n * For example, consider the following ruleset:\n * span::highlight(foo), div, #mySpan::highlight(bar), .highlighted::highlight(foo) {\n *   color: blue;\n * }\n *\n * For a <span id=\"mySpan\" class=\"highlighted\"></span>, a RuleMatch for that span\n * would have matchingSelectors [0, 2, 3] indicating that the span\n * matches all of the highlight selectors.\n *\n * For that RuleMatch, this function would produce the following map:\n * {\n *  \"foo\": [0, 3],\n *  \"bar\": [2]\n * }\n *\n * @param ruleMatch\n * @returns A mapping of highlight names to lists of indices into the selector\n * list associated with ruleMatch. The indices correspond to the selectors in the rule\n * associated with the key's highlight name.\n */\nfunction customHighlightNamesToMatchingSelectorIndices(ruleMatch: Protocol.CSS.RuleMatch): Map<string, number[]> {\n  const highlightNamesToMatchingSelectors = new Map<string, number[]>();\n\n  for (let i = 0; i < ruleMatch.matchingSelectors.length; i++) {\n    const matchingSelectorIndex = ruleMatch.matchingSelectors[i];\n    const selectorText = ruleMatch.rule.selectorList.selectors[matchingSelectorIndex].text;\n    const highlightNameMatch = selectorText.match(/::highlight\\((.*)\\)/);\n    if (highlightNameMatch) {\n      const highlightName = highlightNameMatch[1];\n      const selectorsForName = highlightNamesToMatchingSelectors.get(highlightName);\n      if (selectorsForName) {\n        selectorsForName.push(matchingSelectorIndex);\n      } else {\n        highlightNamesToMatchingSelectors.set(highlightName, [matchingSelectorIndex]);\n      }\n    }\n  }\n  return highlightNamesToMatchingSelectors;\n}\n\nfunction queryMatches(style: CSSStyleDeclaration): boolean {\n  if (!style.parentRule) {\n    return true;\n  }\n  const parentRule = style.parentRule as CSSStyleRule;\n  const queries = [...parentRule.media, ...parentRule.containerQueries, ...parentRule.supports, ...parentRule.scopes];\n  for (const query of queries) {\n    if (!query.active()) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport interface CSSMatchedStylesPayload {\n  cssModel: CSSModel;\n  node: DOMNode;\n  inlinePayload: Protocol.CSS.CSSStyle|null;\n  attributesPayload: Protocol.CSS.CSSStyle|null;\n  matchedPayload: Protocol.CSS.RuleMatch[];\n  pseudoPayload: Protocol.CSS.PseudoElementMatches[];\n  inheritedPayload: Protocol.CSS.InheritedStyleEntry[];\n  inheritedPseudoPayload: Protocol.CSS.InheritedPseudoElementMatches[];\n  animationsPayload: Protocol.CSS.CSSKeyframesRule[];\n  parentLayoutNodeId: Protocol.DOM.NodeId|undefined;\n  positionFallbackRules: Protocol.CSS.CSSPositionFallbackRule[];\n  positionTryRules: Protocol.CSS.CSSPositionTryRule[];\n  propertyRules: Protocol.CSS.CSSPropertyRule[];\n  cssPropertyRegistrations: Protocol.CSS.CSSPropertyRegistration[];\n  fontPaletteValuesRule: Protocol.CSS.CSSFontPaletteValuesRule|undefined;\n}\n\nexport class CSSRegisteredProperty {\n  #registration: Protocol.CSS.CSSPropertyRegistration|CSSPropertyRule;\n  #cssModel: CSSModel;\n  #style: CSSStyleDeclaration|undefined;\n  constructor(cssModel: CSSModel, registration: CSSPropertyRule|Protocol.CSS.CSSPropertyRegistration) {\n    this.#cssModel = cssModel;\n    this.#registration = registration;\n  }\n\n  isAtProperty(): boolean {\n    return this.#registration instanceof CSSPropertyRule;\n  }\n\n  propertyName(): string {\n    return this.#registration instanceof CSSPropertyRule ? this.#registration.propertyName().text :\n                                                           this.#registration.propertyName;\n  }\n\n  initialValue(): string|null {\n    return this.#registration instanceof CSSPropertyRule ? this.#registration.initialValue() :\n                                                           this.#registration.initialValue?.text ?? null;\n  }\n\n  inherits(): boolean {\n    return this.#registration instanceof CSSPropertyRule ? this.#registration.inherits() : this.#registration.inherits;\n  }\n\n  syntax(): string {\n    return this.#registration instanceof CSSPropertyRule ? this.#registration.syntax() :\n                                                           `\"${this.#registration.syntax}\"`;\n  }\n\n  #asCSSProperties(): Protocol.CSS.CSSProperty[] {\n    if (this.#registration instanceof CSSPropertyRule) {\n      return [];\n    }\n    const {inherits, initialValue, syntax} = this.#registration;\n    const properties = [\n      {name: 'inherits', value: `${inherits}`},\n      {name: 'syntax', value: `\"${syntax}\"`},\n    ];\n    if (initialValue !== undefined) {\n      properties.push({name: 'initial-value', value: initialValue.text});\n    }\n    return properties;\n  }\n\n  style(): CSSStyleDeclaration {\n    if (!this.#style) {\n      this.#style = this.#registration instanceof CSSPropertyRule ?\n          this.#registration.style :\n          new CSSStyleDeclaration(\n              this.#cssModel, null, {cssProperties: this.#asCSSProperties(), shorthandEntries: []}, Type.Pseudo);\n    }\n    return this.#style;\n  }\n}\n\nexport class CSSMatchedStyles {\n  #cssModelInternal: CSSModel;\n  #nodeInternal: DOMNode;\n  #addedStyles: Map<CSSStyleDeclaration, DOMNode>;\n  #matchingSelectors: Map<number, Map<string, boolean>>;\n  #keyframesInternal: CSSKeyframesRule[];\n  #registeredProperties: CSSRegisteredProperty[];\n  #registeredPropertyMap = new Map<string, CSSRegisteredProperty>();\n  #nodeForStyleInternal: Map<CSSStyleDeclaration, DOMNode|null>;\n  #inheritedStyles: Set<CSSStyleDeclaration>;\n  #styleToDOMCascade: Map<CSSStyleDeclaration, DOMInheritanceCascade>;\n  #parentLayoutNodeId: Protocol.DOM.NodeId|undefined;\n  #positionFallbackRules: CSSPositionFallbackRule[];\n  #positionTryRules: CSSPositionTryRule[];\n  #mainDOMCascade?: DOMInheritanceCascade;\n  #pseudoDOMCascades?: Map<Protocol.DOM.PseudoType, DOMInheritanceCascade>;\n  #customHighlightPseudoDOMCascades?: Map<string, DOMInheritanceCascade>;\n  readonly #fontPaletteValuesRule: CSSFontPaletteValuesRule|undefined;\n\n  static async create(payload: CSSMatchedStylesPayload): Promise<CSSMatchedStyles> {\n    const cssMatchedStyles = new CSSMatchedStyles(payload);\n    await cssMatchedStyles.init(payload);\n    return cssMatchedStyles;\n  }\n\n  private constructor({\n    cssModel,\n    node,\n    animationsPayload,\n    parentLayoutNodeId,\n    positionFallbackRules,\n    positionTryRules,\n    propertyRules,\n    cssPropertyRegistrations,\n    fontPaletteValuesRule,\n  }: CSSMatchedStylesPayload) {\n    this.#cssModelInternal = cssModel;\n    this.#nodeInternal = node;\n    this.#addedStyles = new Map();\n    this.#matchingSelectors = new Map();\n    this.#registeredProperties = [\n      ...propertyRules.map(rule => new CSSPropertyRule(cssModel, rule)),\n      ...cssPropertyRegistrations,\n    ].map(r => new CSSRegisteredProperty(cssModel, r));\n    this.#keyframesInternal = [];\n    if (animationsPayload) {\n      this.#keyframesInternal = animationsPayload.map(rule => new CSSKeyframesRule(cssModel, rule));\n    }\n    this.#positionFallbackRules = positionFallbackRules.map(rule => new CSSPositionFallbackRule(cssModel, rule));\n    this.#positionTryRules = positionTryRules.map(rule => new CSSPositionTryRule(cssModel, rule));\n    this.#parentLayoutNodeId = parentLayoutNodeId;\n    this.#fontPaletteValuesRule =\n        fontPaletteValuesRule ? new CSSFontPaletteValuesRule(cssModel, fontPaletteValuesRule) : undefined;\n\n    this.#nodeForStyleInternal = new Map();\n    this.#inheritedStyles = new Set();\n    this.#styleToDOMCascade = new Map();\n    this.#registeredPropertyMap = new Map();\n  }\n\n  private async init({\n    matchedPayload,\n    inheritedPayload,\n    inlinePayload,\n    attributesPayload,\n    pseudoPayload,\n    inheritedPseudoPayload,\n  }: CSSMatchedStylesPayload): Promise<void> {\n    matchedPayload = cleanUserAgentPayload(matchedPayload);\n    for (const inheritedResult of inheritedPayload) {\n      inheritedResult.matchedCSSRules = cleanUserAgentPayload(inheritedResult.matchedCSSRules);\n    }\n\n    this.#mainDOMCascade =\n        await this.buildMainCascade(inlinePayload, attributesPayload, matchedPayload, inheritedPayload);\n    [this.#pseudoDOMCascades, this.#customHighlightPseudoDOMCascades] =\n        this.buildPseudoCascades(pseudoPayload, inheritedPseudoPayload);\n\n    for (const domCascade of Array.from(this.#customHighlightPseudoDOMCascades.values())\n             .concat(Array.from(this.#pseudoDOMCascades.values()))\n             .concat(this.#mainDOMCascade)) {\n      for (const style of domCascade.styles()) {\n        this.#styleToDOMCascade.set(style, domCascade);\n      }\n    }\n\n    for (const prop of this.#registeredProperties) {\n      this.#registeredPropertyMap.set(prop.propertyName(), prop);\n    }\n  }\n\n  private async buildMainCascade(\n      inlinePayload: Protocol.CSS.CSSStyle|null, attributesPayload: Protocol.CSS.CSSStyle|null,\n      matchedPayload: Protocol.CSS.RuleMatch[],\n      inheritedPayload: Protocol.CSS.InheritedStyleEntry[]): Promise<DOMInheritanceCascade> {\n    const nodeCascades: NodeCascade[] = [];\n\n    const nodeStyles: CSSStyleDeclaration[] = [];\n\n    function addAttributesStyle(this: CSSMatchedStyles): void {\n      if (!attributesPayload) {\n        return;\n      }\n      const style = new CSSStyleDeclaration(this.#cssModelInternal, null, attributesPayload, Type.Attributes);\n      this.#nodeForStyleInternal.set(style, this.#nodeInternal);\n      nodeStyles.push(style);\n    }\n\n    // Inline style has the greatest specificity.\n    if (inlinePayload && this.#nodeInternal.nodeType() === Node.ELEMENT_NODE) {\n      const style = new CSSStyleDeclaration(this.#cssModelInternal, null, inlinePayload, Type.Inline);\n      this.#nodeForStyleInternal.set(style, this.#nodeInternal);\n      nodeStyles.push(style);\n    }\n\n    // Add rules in reverse order to match the cascade order.\n    let addedAttributesStyle;\n    for (let i = matchedPayload.length - 1; i >= 0; --i) {\n      const rule = new CSSStyleRule(this.#cssModelInternal, matchedPayload[i].rule);\n      if ((rule.isInjected() || rule.isUserAgent()) && !addedAttributesStyle) {\n        // Show element's Style Attributes after all author rules.\n        addedAttributesStyle = true;\n        addAttributesStyle.call(this);\n      }\n      this.#nodeForStyleInternal.set(rule.style, this.#nodeInternal);\n      nodeStyles.push(rule.style);\n      this.addMatchingSelectors(this.#nodeInternal, rule, matchedPayload[i].matchingSelectors);\n    }\n\n    if (!addedAttributesStyle) {\n      addAttributesStyle.call(this);\n    }\n    nodeCascades.push(new NodeCascade(this, nodeStyles, false /* #isInherited */));\n\n    // Walk the node structure and identify styles with inherited properties.\n    let parentNode: (DOMNode|null) = this.#nodeInternal.parentNode;\n    const traverseParentInFlatTree = async(node: DOMNode): Promise<DOMNode|null> => {\n      if (node.hasAssignedSlot()) {\n        return await node.assignedSlot?.deferredNode.resolvePromise() ?? null;\n      }\n\n      return node.parentNode;\n    };\n\n    for (let i = 0; parentNode && inheritedPayload && i < inheritedPayload.length; ++i) {\n      const inheritedStyles = [];\n      const entryPayload = inheritedPayload[i];\n      const inheritedInlineStyle = entryPayload.inlineStyle ?\n          new CSSStyleDeclaration(this.#cssModelInternal, null, entryPayload.inlineStyle, Type.Inline) :\n          null;\n      if (inheritedInlineStyle && containsInherited(inheritedInlineStyle)) {\n        this.#nodeForStyleInternal.set(inheritedInlineStyle, parentNode);\n        inheritedStyles.push(inheritedInlineStyle);\n        this.#inheritedStyles.add(inheritedInlineStyle);\n      }\n\n      const inheritedMatchedCSSRules = entryPayload.matchedCSSRules || [];\n      for (let j = inheritedMatchedCSSRules.length - 1; j >= 0; --j) {\n        const inheritedRule = new CSSStyleRule(this.#cssModelInternal, inheritedMatchedCSSRules[j].rule);\n        this.addMatchingSelectors(parentNode, inheritedRule, inheritedMatchedCSSRules[j].matchingSelectors);\n        if (!containsInherited(inheritedRule.style)) {\n          continue;\n        }\n        if (!containsCustomProperties(inheritedRule.style)) {\n          if (containsStyle(nodeStyles, inheritedRule.style) ||\n              containsStyle(this.#inheritedStyles, inheritedRule.style)) {\n            continue;\n          }\n        }\n        this.#nodeForStyleInternal.set(inheritedRule.style, parentNode);\n        inheritedStyles.push(inheritedRule.style);\n        this.#inheritedStyles.add(inheritedRule.style);\n      }\n      parentNode = await traverseParentInFlatTree(parentNode);\n      nodeCascades.push(new NodeCascade(this, inheritedStyles, true /* #isInherited */));\n    }\n\n    return new DOMInheritanceCascade(nodeCascades, this.#registeredProperties);\n  }\n\n  /**\n   * Pseudo rule matches received via the inspector protocol are grouped by pseudo type.\n   * For custom highlight pseudos, we need to instead group the rule matches by highlight\n   * name in order to produce separate cascades for each highlight name. This is necessary\n   * so that styles of ::highlight(foo) are not shown as overriding styles of ::highlight(bar).\n   *\n   * This helper function takes a list of rule matches and generates separate NodeCascades\n   * for each custom highlight name that was matched.\n   */\n  private buildSplitCustomHighlightCascades(\n      rules: Protocol.CSS.RuleMatch[], node: DOMNode, isInherited: boolean,\n      pseudoCascades: Map<string, NodeCascade[]>): void {\n    const splitHighlightRules = new Map<string, CSSStyleDeclaration[]>();\n\n    for (let j = rules.length - 1; j >= 0; --j) {\n      const highlightNamesToMatchingSelectorIndices = customHighlightNamesToMatchingSelectorIndices(rules[j]);\n\n      for (const [highlightName, matchingSelectors] of highlightNamesToMatchingSelectorIndices) {\n        const pseudoRule = new CSSStyleRule(this.#cssModelInternal, rules[j].rule);\n        this.#nodeForStyleInternal.set(pseudoRule.style, node);\n        if (isInherited) {\n          this.#inheritedStyles.add(pseudoRule.style);\n        }\n        this.addMatchingSelectors(node, pseudoRule, matchingSelectors);\n\n        const ruleListForHighlightName = splitHighlightRules.get(highlightName);\n        if (ruleListForHighlightName) {\n          ruleListForHighlightName.push(pseudoRule.style);\n        } else {\n          splitHighlightRules.set(highlightName, [pseudoRule.style]);\n        }\n      }\n    }\n\n    for (const [highlightName, highlightStyles] of splitHighlightRules) {\n      const nodeCascade = new NodeCascade(this, highlightStyles, isInherited, true /* #isHighlightPseudoCascade*/);\n      const cascadeListForHighlightName = pseudoCascades.get(highlightName);\n      if (cascadeListForHighlightName) {\n        cascadeListForHighlightName.push(nodeCascade);\n      } else {\n        pseudoCascades.set(highlightName, [nodeCascade]);\n      }\n    }\n  }\n\n  private buildPseudoCascades(\n      pseudoPayload: Protocol.CSS.PseudoElementMatches[],\n      inheritedPseudoPayload: Protocol.CSS.InheritedPseudoElementMatches[]):\n      [Map<Protocol.DOM.PseudoType, DOMInheritanceCascade>, Map<string, DOMInheritanceCascade>] {\n    const pseudoInheritanceCascades = new Map<Protocol.DOM.PseudoType, DOMInheritanceCascade>();\n    const customHighlightPseudoInheritanceCascades = new Map<string, DOMInheritanceCascade>();\n    if (!pseudoPayload) {\n      return [pseudoInheritanceCascades, customHighlightPseudoInheritanceCascades];\n    }\n\n    const pseudoCascades = new Map<Protocol.DOM.PseudoType, NodeCascade[]>();\n    const customHighlightPseudoCascades = new Map<string, NodeCascade[]>();\n    for (let i = 0; i < pseudoPayload.length; ++i) {\n      const entryPayload = pseudoPayload[i];\n      // PseudoElement nodes are not created unless \"content\" css property is set.\n      const pseudoElement = this.#nodeInternal.pseudoElements().get(entryPayload.pseudoType)?.at(-1) || null;\n      const pseudoStyles = [];\n      const rules = entryPayload.matches || [];\n\n      if (entryPayload.pseudoType === Protocol.DOM.PseudoType.Highlight) {\n        this.buildSplitCustomHighlightCascades(\n            rules, this.#nodeInternal, false /* #isInherited */, customHighlightPseudoCascades);\n      } else {\n        for (let j = rules.length - 1; j >= 0; --j) {\n          const pseudoRule = new CSSStyleRule(this.#cssModelInternal, rules[j].rule);\n          pseudoStyles.push(pseudoRule.style);\n          const nodeForStyle =\n              cssMetadata().isHighlightPseudoType(entryPayload.pseudoType) ? this.#nodeInternal : pseudoElement;\n          this.#nodeForStyleInternal.set(pseudoRule.style, nodeForStyle);\n          if (nodeForStyle) {\n            this.addMatchingSelectors(nodeForStyle, pseudoRule, rules[j].matchingSelectors);\n          }\n        }\n        const isHighlightPseudoCascade = cssMetadata().isHighlightPseudoType(entryPayload.pseudoType);\n        const nodeCascade = new NodeCascade(\n            this, pseudoStyles, false /* #isInherited */, isHighlightPseudoCascade /* #isHighlightPseudoCascade*/);\n        pseudoCascades.set(entryPayload.pseudoType, [nodeCascade]);\n      }\n    }\n\n    if (inheritedPseudoPayload) {\n      let parentNode: (DOMNode|null) = this.#nodeInternal.parentNode;\n      for (let i = 0; parentNode && i < inheritedPseudoPayload.length; ++i) {\n        const inheritedPseudoMatches = inheritedPseudoPayload[i].pseudoElements;\n        for (let j = 0; j < inheritedPseudoMatches.length; ++j) {\n          const inheritedEntryPayload = inheritedPseudoMatches[j];\n          const rules = inheritedEntryPayload.matches || [];\n\n          if (inheritedEntryPayload.pseudoType === Protocol.DOM.PseudoType.Highlight) {\n            this.buildSplitCustomHighlightCascades(\n                rules, parentNode, true /* #isInherited */, customHighlightPseudoCascades);\n          } else {\n            const pseudoStyles = [];\n            for (let k = rules.length - 1; k >= 0; --k) {\n              const pseudoRule = new CSSStyleRule(this.#cssModelInternal, rules[k].rule);\n              pseudoStyles.push(pseudoRule.style);\n              this.#nodeForStyleInternal.set(pseudoRule.style, parentNode);\n              this.#inheritedStyles.add(pseudoRule.style);\n              this.addMatchingSelectors(parentNode, pseudoRule, rules[k].matchingSelectors);\n            }\n\n            const isHighlightPseudoCascade = cssMetadata().isHighlightPseudoType(inheritedEntryPayload.pseudoType);\n            const nodeCascade = new NodeCascade(\n                this, pseudoStyles, true /* #isInherited */, isHighlightPseudoCascade /* #isHighlightPseudoCascade*/);\n            const cascadeListForPseudoType = pseudoCascades.get(inheritedEntryPayload.pseudoType);\n            if (cascadeListForPseudoType) {\n              cascadeListForPseudoType.push(nodeCascade);\n            } else {\n              pseudoCascades.set(inheritedEntryPayload.pseudoType, [nodeCascade]);\n            }\n          }\n        }\n\n        parentNode = parentNode.parentNode;\n      }\n    }\n\n    // Now that we've built the arrays of NodeCascades for each pseudo type, convert them into\n    // DOMInheritanceCascades.\n    for (const [pseudoType, nodeCascade] of pseudoCascades.entries()) {\n      pseudoInheritanceCascades.set(pseudoType, new DOMInheritanceCascade(nodeCascade, this.#registeredProperties));\n    }\n\n    for (const [highlightName, nodeCascade] of customHighlightPseudoCascades.entries()) {\n      customHighlightPseudoInheritanceCascades.set(\n          highlightName, new DOMInheritanceCascade(nodeCascade, this.#registeredProperties));\n    }\n\n    return [pseudoInheritanceCascades, customHighlightPseudoInheritanceCascades];\n  }\n\n  private addMatchingSelectors(\n      this: CSSMatchedStyles, node: DOMNode, rule: CSSStyleRule, matchingSelectorIndices: number[]): void {\n    for (const matchingSelectorIndex of matchingSelectorIndices) {\n      const selector = rule.selectors[matchingSelectorIndex];\n      if (selector) {\n        this.setSelectorMatches(node, selector.text, true);\n      }\n    }\n  }\n\n  node(): DOMNode {\n    return this.#nodeInternal;\n  }\n\n  cssModel(): CSSModel {\n    return this.#cssModelInternal;\n  }\n\n  hasMatchingSelectors(rule: CSSStyleRule): boolean {\n    return (rule.selectors.length === 0 || this.getMatchingSelectors(rule).length > 0) && queryMatches(rule.style);\n  }\n\n  getParentLayoutNodeId(): Protocol.DOM.NodeId|undefined {\n    return this.#parentLayoutNodeId;\n  }\n\n  getMatchingSelectors(rule: CSSStyleRule): number[] {\n    const node = this.nodeForStyle(rule.style);\n    if (!node || typeof node.id !== 'number') {\n      return [];\n    }\n    const map = this.#matchingSelectors.get(node.id);\n    if (!map) {\n      return [];\n    }\n    const result = [];\n    for (let i = 0; i < rule.selectors.length; ++i) {\n      if (map.get(rule.selectors[i].text)) {\n        result.push(i);\n      }\n    }\n    return result;\n  }\n\n  async recomputeMatchingSelectors(rule: CSSStyleRule): Promise<void> {\n    const node = this.nodeForStyle(rule.style);\n    if (!node) {\n      return;\n    }\n    const promises = [];\n    for (const selector of rule.selectors) {\n      promises.push(querySelector.call(this, node, selector.text));\n    }\n    await Promise.all(promises);\n\n    async function querySelector(this: CSSMatchedStyles, node: DOMNode, selectorText: string): Promise<void> {\n      const ownerDocument = node.ownerDocument;\n      if (!ownerDocument) {\n        return;\n      }\n      // We assume that \"matching\" property does not ever change during the\n      // MatchedStyleResult's lifetime.\n      if (typeof node.id === 'number') {\n        const map = this.#matchingSelectors.get(node.id);\n        if (map && map.has(selectorText)) {\n          return;\n        }\n      }\n\n      if (typeof ownerDocument.id !== 'number') {\n        return;\n      }\n      const matchingNodeIds = await this.#nodeInternal.domModel().querySelectorAll(ownerDocument.id, selectorText);\n\n      if (matchingNodeIds) {\n        if (typeof node.id === 'number') {\n          this.setSelectorMatches(node, selectorText, matchingNodeIds.indexOf(node.id) !== -1);\n        } else {\n          this.setSelectorMatches(node, selectorText, false);\n        }\n      }\n    }\n  }\n\n  addNewRule(rule: CSSStyleRule, node: DOMNode): Promise<void> {\n    this.#addedStyles.set(rule.style, node);\n    return this.recomputeMatchingSelectors(rule);\n  }\n\n  private setSelectorMatches(node: DOMNode, selectorText: string, value: boolean): void {\n    if (typeof node.id !== 'number') {\n      return;\n    }\n    let map = this.#matchingSelectors.get(node.id);\n    if (!map) {\n      map = new Map();\n      this.#matchingSelectors.set(node.id, map);\n    }\n    map.set(selectorText, value);\n  }\n\n  nodeStyles(): CSSStyleDeclaration[] {\n    Platform.assertNotNullOrUndefined(this.#mainDOMCascade);\n    return this.#mainDOMCascade.styles();\n  }\n\n  registeredProperties(): CSSRegisteredProperty[] {\n    return this.#registeredProperties;\n  }\n\n  getRegisteredProperty(name: string): CSSRegisteredProperty|undefined {\n    return this.#registeredPropertyMap.get(name);\n  }\n\n  fontPaletteValuesRule(): CSSFontPaletteValuesRule|undefined {\n    return this.#fontPaletteValuesRule;\n  }\n\n  keyframes(): CSSKeyframesRule[] {\n    return this.#keyframesInternal;\n  }\n\n  positionFallbackRules(): CSSPositionFallbackRule[] {\n    return this.#positionFallbackRules;\n  }\n\n  positionTryRules(): CSSPositionTryRule[] {\n    return this.#positionTryRules;\n  }\n\n  pseudoStyles(pseudoType: Protocol.DOM.PseudoType): CSSStyleDeclaration[] {\n    Platform.assertNotNullOrUndefined(this.#pseudoDOMCascades);\n    const domCascade = this.#pseudoDOMCascades.get(pseudoType);\n    return domCascade ? domCascade.styles() : [];\n  }\n\n  pseudoTypes(): Set<Protocol.DOM.PseudoType> {\n    Platform.assertNotNullOrUndefined(this.#pseudoDOMCascades);\n    return new Set(this.#pseudoDOMCascades.keys());\n  }\n\n  customHighlightPseudoStyles(highlightName: string): CSSStyleDeclaration[] {\n    Platform.assertNotNullOrUndefined(this.#customHighlightPseudoDOMCascades);\n    const domCascade = this.#customHighlightPseudoDOMCascades.get(highlightName);\n    return domCascade ? domCascade.styles() : [];\n  }\n\n  customHighlightPseudoNames(): Set<string> {\n    Platform.assertNotNullOrUndefined(this.#customHighlightPseudoDOMCascades);\n    return new Set(this.#customHighlightPseudoDOMCascades.keys());\n  }\n\n  nodeForStyle(style: CSSStyleDeclaration): DOMNode|null {\n    return this.#addedStyles.get(style) || this.#nodeForStyleInternal.get(style) || null;\n  }\n\n  availableCSSVariables(style: CSSStyleDeclaration): string[] {\n    const domCascade = this.#styleToDOMCascade.get(style) || null;\n    return domCascade ? domCascade.findAvailableCSSVariables(style) : [];\n  }\n\n  computeCSSVariable(style: CSSStyleDeclaration, variableName: string): CSSVariableValue|null {\n    const domCascade = this.#styleToDOMCascade.get(style) || null;\n    return domCascade ? domCascade.computeCSSVariable(style, variableName) : null;\n  }\n\n  isInherited(style: CSSStyleDeclaration): boolean {\n    return this.#inheritedStyles.has(style);\n  }\n\n  propertyState(property: CSSProperty): PropertyState|null {\n    const domCascade = this.#styleToDOMCascade.get(property.ownerStyle);\n    return domCascade ? domCascade.propertyState(property) : null;\n  }\n\n  resetActiveProperties(): void {\n    Platform.assertNotNullOrUndefined(this.#mainDOMCascade);\n    Platform.assertNotNullOrUndefined(this.#pseudoDOMCascades);\n    Platform.assertNotNullOrUndefined(this.#customHighlightPseudoDOMCascades);\n    this.#mainDOMCascade.reset();\n    for (const domCascade of this.#pseudoDOMCascades.values()) {\n      domCascade.reset();\n    }\n\n    for (const domCascade of this.#customHighlightPseudoDOMCascades.values()) {\n      domCascade.reset();\n    }\n  }\n}\n\nclass NodeCascade {\n  #matchedStyles: CSSMatchedStyles;\n  readonly styles: CSSStyleDeclaration[];\n  readonly #isInherited: boolean;\n  readonly #isHighlightPseudoCascade: boolean;\n  readonly propertiesState: Map<CSSProperty, PropertyState>;\n  readonly activeProperties: Map<string, CSSProperty>;\n  constructor(\n      matchedStyles: CSSMatchedStyles, styles: CSSStyleDeclaration[], isInherited: boolean,\n      isHighlightPseudoCascade: boolean = false) {\n    this.#matchedStyles = matchedStyles;\n    this.styles = styles;\n    this.#isInherited = isInherited;\n    this.#isHighlightPseudoCascade = isHighlightPseudoCascade;\n    this.propertiesState = new Map();\n    this.activeProperties = new Map();\n  }\n\n  computeActiveProperties(): void {\n    this.propertiesState.clear();\n    this.activeProperties.clear();\n\n    for (let i = this.styles.length - 1; i >= 0; i--) {\n      const style = this.styles[i];\n      const rule = style.parentRule;\n      // Compute cascade for CSSStyleRules only.\n      if (rule && !(rule instanceof CSSStyleRule)) {\n        continue;\n      }\n      if (rule && !this.#matchedStyles.hasMatchingSelectors(rule)) {\n        continue;\n      }\n\n      for (const property of style.allProperties()) {\n        // Do not pick non-inherited properties from inherited styles.\n        const metadata = cssMetadata();\n\n        // All properties are inherited for highlight pseudos.\n        if (this.#isInherited && !this.#isHighlightPseudoCascade && !metadata.isPropertyInherited(property.name)) {\n          continue;\n        }\n\n        // When a property does not have a range in an otherwise ranged CSSStyleDeclaration,\n        // we consider it as a non-leading property (see computeLeadingProperties()), and most\n        // of them are computed longhands. We exclude these from activeProperties calculation,\n        // and use parsed longhands instead (see below).\n        if (style.range && !property.range) {\n          continue;\n        }\n\n        if (!property.activeInStyle()) {\n          this.propertiesState.set(property, PropertyState.Overloaded);\n          continue;\n        }\n\n        // If the custom property was registered with `inherits: false;`, inherited properties are invalid.\n        if (this.#isInherited) {\n          const registration = this.#matchedStyles.getRegisteredProperty(property.name);\n          if (registration && !registration.inherits()) {\n            this.propertiesState.set(property, PropertyState.Overloaded);\n            continue;\n          }\n        }\n\n        const canonicalName = metadata.canonicalPropertyName(property.name);\n        this.updatePropertyState(property, canonicalName);\n        for (const longhand of property.getLonghandProperties()) {\n          if (metadata.isCSSPropertyName(longhand.name)) {\n            this.updatePropertyState(longhand, longhand.name);\n          }\n        }\n      }\n    }\n  }\n\n  private updatePropertyState(propertyWithHigherSpecificity: CSSProperty, canonicalName: string): void {\n    const activeProperty = this.activeProperties.get(canonicalName);\n    if (activeProperty?.important && !propertyWithHigherSpecificity.important) {\n      this.propertiesState.set(propertyWithHigherSpecificity, PropertyState.Overloaded);\n      return;\n    }\n\n    if (activeProperty) {\n      this.propertiesState.set(activeProperty, PropertyState.Overloaded);\n    }\n    this.propertiesState.set(propertyWithHigherSpecificity, PropertyState.Active);\n    this.activeProperties.set(canonicalName, propertyWithHigherSpecificity);\n  }\n}\n\nexport interface CSSVariableValue {\n  value: string;\n  declaration: CSSProperty|CSSRegisteredProperty;\n}\n\nclass DOMInheritanceCascade {\n  readonly #nodeCascades: NodeCascade[];\n  readonly #propertiesState: Map<CSSProperty, PropertyState>;\n  readonly #availableCSSVariables: Map<NodeCascade, Map<string, CSSVariableValue|null>>;\n  readonly #computedCSSVariables: Map<NodeCascade, Map<string, CSSVariableValue|null>>;\n  #initialized: boolean;\n  readonly #styleToNodeCascade: Map<CSSStyleDeclaration, NodeCascade>;\n  #registeredProperties: CSSRegisteredProperty[];\n  constructor(nodeCascades: NodeCascade[], registeredProperties: CSSRegisteredProperty[]) {\n    this.#nodeCascades = nodeCascades;\n    this.#propertiesState = new Map();\n    this.#availableCSSVariables = new Map();\n    this.#computedCSSVariables = new Map();\n    this.#initialized = false;\n    this.#registeredProperties = registeredProperties;\n\n    this.#styleToNodeCascade = new Map();\n    for (const nodeCascade of nodeCascades) {\n      for (const style of nodeCascade.styles) {\n        this.#styleToNodeCascade.set(style, nodeCascade);\n      }\n    }\n  }\n\n  findAvailableCSSVariables(style: CSSStyleDeclaration): string[] {\n    const nodeCascade = this.#styleToNodeCascade.get(style);\n    if (!nodeCascade) {\n      return [];\n    }\n    this.ensureInitialized();\n    const availableCSSVariables = this.#availableCSSVariables.get(nodeCascade);\n    if (!availableCSSVariables) {\n      return [];\n    }\n    return Array.from(availableCSSVariables.keys());\n  }\n\n  computeCSSVariable(style: CSSStyleDeclaration, variableName: string): CSSVariableValue|null {\n    const nodeCascade = this.#styleToNodeCascade.get(style);\n    if (!nodeCascade) {\n      return null;\n    }\n    this.ensureInitialized();\n    const availableCSSVariables = this.#availableCSSVariables.get(nodeCascade);\n    const computedCSSVariables = this.#computedCSSVariables.get(nodeCascade);\n    if (!availableCSSVariables || !computedCSSVariables) {\n      return null;\n    }\n    return this.innerComputeCSSVariable(availableCSSVariables, computedCSSVariables, variableName);\n  }\n\n  private innerComputeCSSVariable(\n      availableCSSVariables: Map<string, CSSVariableValue|null>,\n      computedCSSVariables: Map<string, CSSVariableValue|null>, variableName: string): CSSVariableValue|null {\n    if (!availableCSSVariables.has(variableName)) {\n      return null;\n    }\n    if (computedCSSVariables.has(variableName)) {\n      return computedCSSVariables.get(variableName) || null;\n    }\n    // Set dummy value to avoid infinite recursion.\n    computedCSSVariables.set(variableName, null);\n    const definedValue = availableCSSVariables.get(variableName);\n    if (definedValue === undefined || definedValue === null) {\n      return null;\n    }\n\n    const ast = PropertyParser.tokenizeDeclaration(`--${variableName}`, definedValue.value);\n    if (!ast) {\n      return null;\n    }\n\n    const matching = PropertyParser.BottomUpTreeMatching.walk(\n        ast, [new PropertyParser.VariableMatcher((match: PropertyParser.VariableMatch) => {\n          const parentStyle = 'ownerStyle' in definedValue.declaration ? definedValue.declaration.ownerStyle :\n                                                                         definedValue.declaration.style();\n          const cssVariableValue = this.computeCSSVariable(parentStyle, match.name);\n          // Variable reference is resolved, so return it.\n          if (cssVariableValue?.value) {\n            return cssVariableValue?.value;\n          }\n\n          // Variable reference is not resolved, use the fallback.\n          if (match.fallback.length === 0 ||\n              match.matching.hasUnresolvedVarsRange(match.fallback[0], match.fallback[match.fallback.length - 1])) {\n            return null;\n          }\n          return match.matching.getComputedTextRange(match.fallback[0], match.fallback[match.fallback.length - 1]);\n        })]);\n    const decl = PropertyParser.ASTUtils.siblings(PropertyParser.ASTUtils.declValue(matching.ast.tree));\n    if (matching.hasUnresolvedVarsRange(decl[0], decl[decl.length - 1])) {\n      return null;\n    }\n\n    const computedText = matching.getComputedTextRange(decl[0], decl[decl.length - 1]);\n    const cssVariableValue = {value: computedText, declaration: definedValue.declaration};\n    computedCSSVariables.set(variableName, cssVariableValue);\n    return cssVariableValue;\n  }\n\n  styles(): CSSStyleDeclaration[] {\n    return Array.from(this.#styleToNodeCascade.keys());\n  }\n\n  propertyState(property: CSSProperty): PropertyState|null {\n    this.ensureInitialized();\n    return this.#propertiesState.get(property) || null;\n  }\n\n  reset(): void {\n    this.#initialized = false;\n    this.#propertiesState.clear();\n    this.#availableCSSVariables.clear();\n    this.#computedCSSVariables.clear();\n  }\n\n  private ensureInitialized(): void {\n    if (this.#initialized) {\n      return;\n    }\n    this.#initialized = true;\n\n    const activeProperties = new Map<string, CSSProperty>();\n    for (const nodeCascade of this.#nodeCascades) {\n      nodeCascade.computeActiveProperties();\n      for (const [property, state] of nodeCascade.propertiesState) {\n        if (state === PropertyState.Overloaded) {\n          this.#propertiesState.set(property, PropertyState.Overloaded);\n          continue;\n        }\n        const canonicalName = cssMetadata().canonicalPropertyName(property.name);\n        if (activeProperties.has(canonicalName)) {\n          this.#propertiesState.set(property, PropertyState.Overloaded);\n          continue;\n        }\n        activeProperties.set(canonicalName, property);\n        this.#propertiesState.set(property, PropertyState.Active);\n      }\n    }\n    // If every longhand of the shorthand is not active, then the shorthand is not active too.\n    for (const [canonicalName, shorthandProperty] of activeProperties) {\n      const shorthandStyle = shorthandProperty.ownerStyle;\n      const longhands = shorthandProperty.getLonghandProperties();\n      if (!longhands.length) {\n        continue;\n      }\n      let hasActiveLonghands = false;\n      for (const longhand of longhands) {\n        const longhandCanonicalName = cssMetadata().canonicalPropertyName(longhand.name);\n        const longhandActiveProperty = activeProperties.get(longhandCanonicalName);\n        if (!longhandActiveProperty) {\n          continue;\n        }\n        if (longhandActiveProperty.ownerStyle === shorthandStyle) {\n          hasActiveLonghands = true;\n          break;\n        }\n      }\n      if (hasActiveLonghands) {\n        continue;\n      }\n      activeProperties.delete(canonicalName);\n      this.#propertiesState.set(shorthandProperty, PropertyState.Overloaded);\n    }\n\n    // Work inheritance chain backwards to compute visible CSS Variables.\n    const accumulatedCSSVariables = new Map<string, CSSVariableValue|null>();\n    for (const rule of this.#registeredProperties) {\n      const initialValue = rule.initialValue();\n      accumulatedCSSVariables.set(rule.propertyName(), initialValue ? {value: initialValue, declaration: rule} : null);\n    }\n    for (let i = this.#nodeCascades.length - 1; i >= 0; --i) {\n      const nodeCascade = this.#nodeCascades[i];\n      const variableNames = [];\n      for (const entry of nodeCascade.activeProperties.entries()) {\n        const propertyName = (entry[0] as string);\n        const property = (entry[1] as CSSProperty);\n        if (propertyName.startsWith('--')) {\n          accumulatedCSSVariables.set(propertyName, {value: property.value, declaration: property});\n          variableNames.push(propertyName);\n        }\n      }\n      const availableCSSVariablesMap = new Map(accumulatedCSSVariables);\n      const computedVariablesMap = new Map();\n      this.#availableCSSVariables.set(nodeCascade, availableCSSVariablesMap);\n      this.#computedCSSVariables.set(nodeCascade, computedVariablesMap);\n      for (const variableName of variableNames) {\n        const prevValue = accumulatedCSSVariables.get(variableName);\n        accumulatedCSSVariables.delete(variableName);\n        const computedValue =\n            this.innerComputeCSSVariable(availableCSSVariablesMap, computedVariablesMap, variableName);\n        if (prevValue && computedValue?.value === prevValue.value) {\n          computedValue.declaration = prevValue.declaration;\n        }\n        accumulatedCSSVariables.set(variableName, computedValue);\n      }\n    }\n  }\n}\n\nexport const enum PropertyState {\n  Active = 'Active',\n  Overloaded = 'Overloaded',\n}\n"]}