{"version":3,"file":"CSSProperty.test.js","sourceRoot":"","sources":["../../../../../../front_end/core/sdk/CSSProperty.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Protocol from '../../generated/protocol.js';\nimport {describeWithEnvironment} from '../../testing/EnvironmentHelpers.js';\n\nimport * as SDK from './sdk.js';\n\ndescribeWithEnvironment('CSSProperty', () => {\n  describe('formatStyle', () => {\n    const formatStyle = (styleText: string, indentation = ' ', endIndentation = '') =>\n        SDK.CSSProperty.CSSProperty.formatStyle(styleText, indentation, endIndentation);\n    it('formats a style declaration with a single trailing semicolon correctly', async () => {\n      assert.strictEqual(await formatStyle('color: red;'), '\\n color: red;\\n');\n    });\n    it('formats a style declaration with multiple trailing semicolons correctly', async () => {\n      assert.strictEqual(await formatStyle('color: red;;;'), '\\n color: red;\\n');\n    });\n    it('formats two style declarations correctly', async () => {\n      assert.strictEqual(await formatStyle('color: red;;;color: blue'), '\\n color: red;\\n color: blue\\n');\n    });\n    it('formats multiple style declarations correctly', async () => {\n      assert.strictEqual(\n          await formatStyle('color: var(-);margin: 0;padding:0'), '\\n color: var(-);margin: 0;padding:0\\n');\n    });\n    it('formats style declarations with comments correctly', async () => {\n      assert.strictEqual(\n          await formatStyle('color: red;/* a comment */;color: blue'), '\\n color: red;/* a comment */\\n color: blue\\n');\n    });\n    it('formats an empty decalaration correctly', async () => {\n      assert.strictEqual(await formatStyle(':; color: red; color: blue'), ':;\\n color: red;\\n color: blue\\n');\n    });\n    it('formats an empty decalaration correctly and doesn\\'t format comments', async () => {\n      assert.strictEqual(\n          await formatStyle('color: red;/* a comment;;; */ :; color: blue;'),\n          '\\n color: red;/* a comment;;; */ :;\\n color: blue;\\n');\n    });\n    it('formats a decalaration with line names correctly', async () => {\n      assert.strictEqual(\n          await formatStyle('grid: [first-row-start] \"a a\" 10px [first-row-end] [second-row-start] \"b b\" 20px / 100px'),\n          '\\n grid: [first-row-start] \"a a\" 10px [first-row-end] [second-row-start] \"b b\" 20px / 100px\\n');\n    });\n    it('formats shorthand declaration with a variable correctly', async () => {\n      assert.strictEqual(\n          await formatStyle('border: 1px solid var(--border-color);;', '', ''),\n          'border: 1px solid var(--border-color);');\n    });\n    it('formats shorthand declaration with a function correctly', async () => {\n      assert.strictEqual(await formatStyle('border: 1px solid rgb(0,0,0);;', '', ''), 'border: 1px solid rgb(0,0,0);');\n    });\n    it('formats declaration with unknown property that contains a function correctly', async () => {\n      assert.strictEqual(\n          await formatStyle('unknownProperty: rgba(0,0,0,0);;', '', ''), 'unknownProperty: rgba(0,0,0,0);');\n    });\n    // Regression test for crbug/1392813\n    it('formats complex CSS variable declaration', async () => {\n      assert.strictEqual(\n          await formatStyle('--_name: background var(--another-name)', '', ''),\n          '--_name: background var(--another-name)',\n      );\n    });\n\n    // Regression test for crbug/1518839\n    it('formats CSS variable declarations without newline at the start of the var params', async () => {\n      assert.strictEqual(await formatStyle('--b: var(--non-existent, 2);'), '\\n --b: var(--non-existent, 2);\\n');\n    });\n  });\n\n  it('should correctly construct new CSSProperty', () => {\n    const stubStyle = {} as SDK.CSSStyleDeclaration.CSSStyleDeclaration;\n\n    const property1 =\n        new SDK.CSSProperty.CSSProperty(stubStyle, 0, 'display', 'block', false, false, true, false, 'display: block');\n    assert.deepEqual(property1.getLonghandProperties(), []);\n\n    const stubLonghands = [\n      {name: 'margin-top', value: '1px'} as Protocol.CSS.CSSProperty,\n      {name: 'margin-right', value: '1px'} as Protocol.CSS.CSSProperty,\n      {name: 'margin-bottom', value: '1px'} as Protocol.CSS.CSSProperty,\n      {name: 'margin-left', value: '1px'} as Protocol.CSS.CSSProperty,\n    ];\n    const property2 = new SDK.CSSProperty.CSSProperty(\n        stubStyle, 1, 'margin', '1px', false, false, true, false, 'margin: 1px', undefined, stubLonghands);\n    assert.deepEqual(\n        property2.getLonghandProperties().map(property => property.propertyText),\n        [\n          'margin-top: 1px;',\n          'margin-right: 1px;',\n          'margin-bottom: 1px;',\n          'margin-left: 1px;',\n        ],\n        'supplied longhand components should be added correctly');\n\n    const property3 = new SDK.CSSProperty.CSSProperty(\n        stubStyle, 1, 'margin', 'var(--margin)', false, false, true, false, 'margin: var(--margin)', undefined, []);\n    assert.deepEqual(\n        property3.getLonghandProperties().map(property => property.propertyText),\n        [\n          'margin-top: ;',\n          'margin-right: ;',\n          'margin-bottom: ;',\n          'margin-left: ;',\n        ],\n        'locally added longhand components should be parsed with empty values');\n  });\n\n  it('should correctly disable CSS property', async () => {\n    const stubStyle = {} as SDK.CSSStyleDeclaration.CSSStyleDeclaration;\n    const setText = sinon.spy();\n\n    const property =\n        new SDK.CSSProperty.CSSProperty(stubStyle, 0, 'margin', '10px', false, false, true, false, 'margin: 10px');\n    property.setText = setText;\n    await property.setDisabled(true);\n    assert.strictEqual(setText.firstCall.firstArg, '/* margin: 10px; */');\n\n    const propertyWithComment = new SDK.CSSProperty.CSSProperty(\n        stubStyle, 0, 'margin', '/* comment */ 10px', false, false, true, false, 'margin: /* comment */ 10px');\n    propertyWithComment.setText = setText;\n    await propertyWithComment.setDisabled(true);\n    assert.strictEqual(setText.secondCall.firstArg, '/* margin:  10px; */');\n\n    const propertyWithMultilineComment = new SDK.CSSProperty.CSSProperty(\n        stubStyle, 0, 'margin', '/* com\\nment */ 10px', false, false, true, false, 'margin: /* com\\nment */ 10px');\n    propertyWithMultilineComment.setText = setText;\n    await propertyWithMultilineComment.setDisabled(true);\n    assert.strictEqual(setText.thirdCall.firstArg, '/* margin:  10px; */');\n  });\n});\n"]}