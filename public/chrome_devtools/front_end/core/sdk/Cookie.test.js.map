{"version":3,"file":"Cookie.test.js","sourceRoot":"","sources":["../../../../../../front_end/core/sdk/Cookie.test.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAI7B,OAAO,KAAK,GAAG,MAAM,UAAU,CAAC;AAEhC,QAAQ,CAAC,QAAQ,EAAE,GAAG,EAAE;IACtB,EAAE,CAAC,oCAAoC,EAAE,GAAG,EAAE;QAC5C,MAAM,MAAM,GAAG,IAAI,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;QAEtD,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,GAAG,EAAE,EAAE,YAAY,CAAC,CAAC;QAC/C,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,MAAM,CAAC,CAAC;QAC1C,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,KAAK,EAAE,EAAE,OAAO,CAAC,CAAC;QAE5C,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,SAAS,CAAC,CAAC;QAC7C,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE,KAAK,CAAC,CAAC;QAC7C,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,KAAK,CAAC,CAAC;QAC3C,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE,SAAS,CAAC,CAAC;QACjD,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE,QAAQ,CAAC,CAAC;QAChD,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,OAAO,EAAE,EAAE,IAAI,CAAC,CAAC;QAC3C,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,SAAS,CAAC,CAAC;QAC7C,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,SAAS,CAAC,CAAC;QAC/C,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,OAAO,EAAE,EAAE,SAAS,CAAC,CAAC;QAChD,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,SAAS,CAAC,CAAC;QAC/C,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;QACrC,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,CAAC;QACvC,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,YAAY,EAAE,EAAE,SAAS,CAAC,CAAC;QACrD,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,aAAa,EAAE,EAAE,IAAI,CAAC,CAAC;IACnD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,oEAAoE,EAAE,GAAG,EAAE;QAC5E,MAAM,OAAO,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,GAAG,IAAI,GAAG,IAAI,CAAC;QACnD,MAAM,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,kBAAkB,CAAC;YAClD,MAAM,EAAE,cAAc;YACtB,OAAO,EAAE,OAAO,GAAG,IAAI;YACvB,QAAQ,EAAE,IAAI;YACd,IAAI,EAAE,MAAM;YACZ,IAAI,EAAE,OAAO;YACb,QAAQ,uDAAwC;YAChD,SAAS,EAAE,KAAK;YAChB,MAAM,EAAE,IAAI;YACZ,OAAO,EAAE,KAAK;YACd,IAAI,EAAE,EAAE;YACR,KAAK,EAAE,OAAO;YACd,QAAQ,mDAAsC;YAC9C,UAAU,EAAE,GAAG;YACf,YAAY,2DAA4C;YACxD,YAAY,EAAE,EAAC,YAAY,EAAE,eAAe,EAAE,oBAAoB,EAAE,KAAK,EAAC;YAC1E,kBAAkB,EAAE,KAAK;SAC1B,CAAC,CAAC;QAEH,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,GAAG,EAAE,EAAE,iDAAiD,CAAC,CAAC;QACpF,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,MAAM,CAAC,CAAC;QAC1C,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,KAAK,EAAE,EAAE,OAAO,CAAC,CAAC;QAE5C,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,IAAI,CAAC,CAAC;QACxC,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,CAAC;QAC5C,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,IAAI,CAAC,CAAC;QAC1C,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE,QAAQ,CAAC,CAAC;QAChD,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,OAAO,EAAE,EAAE,KAAK,CAAC,CAAC;QAC5C,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,OAAO,CAAC,CAAC;QAC3C,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,cAAc,CAAC,CAAC;QACpD,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,OAAO,EAAE,EAAE,OAAO,CAAC,CAAC;QAC9C,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,SAAS,CAAC,CAAC;QAC/C,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,EAAE,CAAC,CAAC;QACtC,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,EAAE,2BAA2B,CAAC,CAAC;QACtE,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,aAAa,EAAE,EAAE,IAAI,CAAC,CAAC;QACjD,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,UAAU,EAAE,EAAE,GAAG,CAAC,CAAC;QAC7C,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,YAAY,EAAE,4DAA6C,CAAC;QACtF,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC,YAAY,EAAE,eAAe,CAAC,CAAC;QACxE,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC,oBAAoB,EAAE,KAAK,CAAC,CAAC;QACtE,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,kBAAkB,EAAE,EAAE,KAAK,CAAC,CAAC;QACvD,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,WAAW,EAAE,EAAE,IAAI,CAAC,CAAC;IACjD,CAAC,CAAC,CAAC;IAEH,8DAA8D;IAC9D,EAAE,CAAC,mEAAmE,EAAE,GAAG,EAAE;QAC3E,MAAM,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,kBAAkB,CAAC;YAClD,MAAM,EAAE,cAAc;YACtB,IAAI,EAAE,MAAM;YACZ,IAAI,EAAE,OAAO;YACb,IAAI,EAAE,EAAE;YACR,KAAK,EAAE,OAAO;YACd,OAAO,EAAE,CAAC;YACV,QAAQ,EAAE,KAAK;YACf,SAAS,EAAE,KAAK;YAChB,MAAM,EAAE,KAAK;YACb,OAAO,EAAE,IAAI;YACb,QAAQ,uDAAwC;YAChD,UAAU,EAAE,EAAE;YACd,YAAY,iEAA+C;SAC5D,CAAC,CAAC;QAEH,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,GAAG,EAAE,EAAE,2BAA2B,CAAC,CAAC;QAC9D,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,MAAM,CAAC,CAAC;QAC1C,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,KAAK,EAAE,EAAE,OAAO,CAAC,CAAC;QAE5C,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,IAAI,CAAC,CAAC;QACxC,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE,KAAK,CAAC,CAAC;QAC7C,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,KAAK,CAAC,CAAC;QAC3C,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE,SAAS,CAAC,CAAC;QACjD,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE,QAAQ,CAAC,CAAC;QAChD,mFAAmF;QACnF,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,OAAO,EAAE,EAAE,IAAI,CAAC,CAAC;QAC3C,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,OAAO,CAAC,CAAC;QAC3C,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,cAAc,CAAC,CAAC;QACpD,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,SAAS,CAAC,CAAC;QAC/C,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,EAAE,CAAC,CAAC;QACtC,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,EAAE,0BAA0B,CAAC,CAAC;QACrE,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,aAAa,EAAE,EAAE,IAAI,CAAC,CAAC;QACjD,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,UAAU,EAAE,EAAE,EAAE,CAAC,CAAC;QAC5C,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,YAAY,EAAE,kEAAgD,CAAC;IAC3F,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,yFAAyF,EAAE,GAAG,EAAE;QACjG,MAAM,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,kBAAkB,CAAC;YAClD,MAAM,EAAE,cAAc;YACtB,IAAI,EAAE,MAAM;YACZ,IAAI,EAAE,OAAO;YACb,IAAI,EAAE,EAAE;YACR,KAAK,EAAE,OAAO;YACd,OAAO,EAAE,CAAC;YACV,QAAQ,EAAE,KAAK;YACf,SAAS,EAAE,KAAK;YAChB,MAAM,EAAE,KAAK;YACb,OAAO,EAAE,IAAI;YACb,QAAQ,uDAAwC;YAChD,UAAU,EAAE,IAAI;YAChB,YAAY,iEAA+C;SAC5D,CAAC,CAAC;QAEH,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,GAAG,EAAE,EAAE,2BAA2B,CAAC,CAAC;QAC9D,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,MAAM,CAAC,CAAC;QAC1C,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,KAAK,EAAE,EAAE,OAAO,CAAC,CAAC;QAE5C,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,IAAI,CAAC,CAAC;QACxC,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE,KAAK,CAAC,CAAC;QAC7C,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,KAAK,CAAC,CAAC;QAC3C,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE,SAAS,CAAC,CAAC;QACjD,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE,QAAQ,CAAC,CAAC;QAChD,mFAAmF;QACnF,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,OAAO,EAAE,EAAE,IAAI,CAAC,CAAC;QAC3C,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,OAAO,CAAC,CAAC;QAC3C,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,cAAc,CAAC,CAAC;QACpD,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,SAAS,CAAC,CAAC;QAC/C,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,EAAE,CAAC,CAAC;QACtC,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,EAAE,+BAA+B,CAAC,CAAC;QAC1E,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,aAAa,EAAE,EAAE,IAAI,CAAC,CAAC;QACjD,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,UAAU,EAAE,EAAE,IAAI,CAAC,CAAC;QAC9C,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,YAAY,EAAE,kEAAgD,CAAC;IAC3F,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,wBAAwB,EAAE,GAAG,EAAE;QAChC,MAAM,MAAM,GAAG,IAAI,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;QACtD,MAAM,CAAC,YAAY,4CAA6B,CAAC;QACjD,MAAM,CAAC,YAAY,6CAA8B,aAAa,CAAC,CAAC;QAChE,MAAM,CAAC,YAAY,yCAA4B,OAAO,CAAC,CAAC;QACxD,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,EAAE,0BAA0B,CAAC,CAAC;IACvE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,0BAA0B,EAAE,GAAG,EAAE;QAClC,MAAM,MAAM,GAAG,IAAI,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;QACtD,MAAM,CAAC,YAAY,6CAA8B,aAAa,CAAC,CAAC;QAChE,MAAM,CAAC,YAAY,yCAA4B,OAAO,CAAC,CAAC;QACxD,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,EAAE,yBAAyB,CAAC,CAAC;IACtE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,4CAA4C,EAAE,GAAG,EAAE;QACpD,MAAM,MAAM,GAAG,IAAI,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;QACtD,MAAM,CAAC,YAAY,iDAA+B,CAAC;QACnD,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,CAAC;IAC9C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,gDAAgD,EAAE,GAAG,EAAE;QACxD,MAAM,MAAM,GAAG,IAAI,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;QACtD,MAAM,CAAC,YAAY,yCAA4B,OAAO,CAAC,CAAC;QACxD,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,OAAO,CAAC,CAAC;IAC7C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,8CAA8C,EAAE,GAAG,EAAE;QACtD,MAAM,MAAM,GAAG,IAAI,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,OAAO,EAAE,IAAI,oDAAuC,CAAC;QAClG,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE,MAAM,CAAC,CAAC;IAChD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,yBAAyB,EAAE,GAAG,EAAE;QACjC,MAAM,MAAM,GAAG,IAAI,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;QACtD,MAAM,CAAC,YAAY,iDAAgC,KAAK,CAAC,CAAC;QAC1D,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE,KAAK,CAAC,CAAC;IAC/C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,yBAAyB,EAAE,GAAG,EAAE;QACjC,MAAM,MAAM,GAAG,IAAI,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;QACtD,MAAM,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;QACnC,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,aAAa,EAAE,EAAE,YAAY,CAAC,CAAC;IAC3D,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,uDAAuD,EAAE,GAAG,EAAE;QAC/D,MAAM,MAAM,GAAG,IAAI,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;QACtD,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,IAAI,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;IAC3D,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,uDAAuD,EAAE,GAAG,EAAE;QAC/D,MAAM,MAAM,GAAG,IAAI,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;QACtD,MAAM,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC;QACvB,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC;QACxD,MAAM,CAAC,YAAY,8CAA8B,MAAM,CAAC,CAAC;QACzD,MAAM,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;QAC5C,MAAM,CAAC,WAAW,CAAC,WAAY,CAAC,WAAW,EAAE,EAAE,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC;IAClF,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,sEAAsE,EAAE,GAAG,EAAE;QAC9E,MAAM,MAAM,GAAG,IAAI,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;QACtD,MAAM,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC;QACvB,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC;QACxD,MAAM,CAAC,YAAY,+CAA+B,OAAO,CAAC,CAAC;QAC3D,MAAM,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;QAC5C,MAAM,CAAC,WAAW,CAAC,WAAY,CAAC,WAAW,EAAE,EAAE,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC;IAClF,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mDAAmD,EAAE,GAAG,EAAE;QAC3D,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,aAAa,EAAE,aAAa,CAAC,CAAC,CAAC;QAC7E,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,iBAAiB,EAAE,aAAa,CAAC,CAAC,CAAC;QAElF,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,cAAc,EAAE,aAAa,CAAC,CAAC,CAAC;QAC9E,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,cAAc,EAAE,iBAAiB,CAAC,CAAC,CAAC;QAClF,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,kBAAkB,EAAE,aAAa,CAAC,CAAC,CAAC;QAEnF,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,aAAa,EAAE,YAAY,CAAC,CAAC,CAAC;QAC7E,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,cAAc,EAAE,YAAY,CAAC,CAAC,CAAC;QAC9E,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,aAAa,EAAE,eAAe,CAAC,CAAC,CAAC;QAEhF,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,aAAa,EAAE,gBAAgB,CAAC,CAAC,CAAC;IACnF,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,4DAA4D,EAAE,GAAG,EAAE;QACpE,MAAM,MAAM,GAAG,IAAI,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;QACtD,MAAM,CAAC,YAAY,sDAAkC,CAAC;QACtD,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC;QACpC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,oBAAoB,EAAE,CAAC,CAAC;QAC9C,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,YAAY,EAAE,EAAE,EAAE,CAAC,CAAC;IAChD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,0BAA0B,EAAE,GAAG,EAAE;QAClC,MAAM,MAAM,GAAG,IAAI,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;QACtD,MAAM,CAAC,eAAe,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;QAC9C,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC;QACpC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,oBAAoB,EAAE,CAAC,CAAC;QAC7C,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,YAAY,EAAE,EAAE,eAAe,CAAC,CAAC;QAC3D,wBAAwB;QACxB,MAAM,CAAC,uBAAuB,CAAC,KAAK,CAAC,CAAC;QACtC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,oBAAoB,EAAE,CAAC,CAAC;QAC9C,mBAAmB;QACnB,MAAM,CAAC,eAAe,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;QAC9C,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,oBAAoB,EAAE,CAAC,CAAC;QAC7C,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,YAAY,EAAE,EAAE,eAAe,CAAC,CAAC;IAC7D,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,4BAA4B,EAAE,GAAG,EAAE;QACpC,MAAM,mBAAmB,GAAG,IAAI,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;QACnE,MAAM,CAAC,OAAO,CAAC,mBAAmB,CAAC,WAAW,EAAE,CAAC,CAAC;QAClD,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,mBAAmB,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;QAE5D,MAAM,iBAAiB,GAAG,IAAI,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;QACjE,iBAAiB,CAAC,eAAe,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;QACzD,MAAM,CAAC,MAAM,CAAC,iBAAiB,CAAC,WAAW,EAAE,CAAC,CAAC;QAC/C,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,iBAAiB,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;QACzD,MAAM,CAAC,cAAc,CAAC,mBAAmB,CAAC,YAAY,EAAE,EAAE,iBAAiB,CAAC,YAAY,EAAE,CAAC,CAAC;QAC5F,MAAM,CAAC,WAAW,CAAC,iBAAiB,CAAC,YAAY,EAAE,EAAE,iBAAiB,CAAC,YAAY,EAAE,CAAC,CAAC;QAEvF,MAAM,6BAA6B,GAAG,IAAI,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;QAC7E,6BAA6B,CAAC,eAAe,CAAC,eAAe,EAAE,KAAK,CAAC,CAAC;QACtE,MAAM,CAAC,MAAM,CAAC,6BAA6B,CAAC,WAAW,EAAE,CAAC,CAAC;QAC3D,MAAM,CAAC,cAAc,CAAC,6BAA6B,CAAC,YAAY,EAAE,EAAE,iBAAiB,CAAC,YAAY,EAAE,CAAC,CAAC;QAEtG,MAAM,iBAAiB,GAAG,IAAI,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;QACjE,iBAAiB,CAAC,eAAe,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;QACzD,MAAM,CAAC,MAAM,CAAC,iBAAiB,CAAC,WAAW,EAAE,CAAC,CAAC;QAC/C,MAAM,CAAC,cAAc,CAAC,iBAAiB,CAAC,YAAY,EAAE,EAAE,iBAAiB,CAAC,YAAY,EAAE,CAAC,CAAC;IAC5F,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,8BAA8B,EAAE,GAAG,EAAE;QACtC,MAAM,iBAAiB,GAAG,IAAI,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;QACjE,iBAAiB,CAAC,eAAe,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;QACzD,MAAM,CAAC,MAAM,CAAC,iBAAiB,CAAC,WAAW,EAAE,CAAC,CAAC;QAC/C,MAAM,CAAC,MAAM,CAAC,iBAAiB,CAAC,oBAAoB,EAAE,CAAC,CAAC;QACxD,MAAM,CAAC,OAAO,CAAC,iBAAiB,CAAC,kBAAkB,EAAE,CAAC,CAAC;QACvD,sEAAsE;QACtE,iBAAiB,CAAC,qBAAqB,EAAE,CAAC;QAC1C,MAAM,CAAC,MAAM,CAAC,iBAAiB,CAAC,kBAAkB,EAAE,CAAC,CAAC;QACtD,MAAM,CAAC,OAAO,CAAC,iBAAiB,CAAC,oBAAoB,EAAE,CAAC,CAAC;IAC3D,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Protocol from '../../generated/protocol.js';\n\nimport * as SDK from './sdk.js';\n\ndescribe('Cookie', () => {\n  it('can be instantiated without issues', () => {\n    const cookie = new SDK.Cookie.Cookie('name', 'value');\n\n    assert.strictEqual(cookie.key(), '- name - -');\n    assert.strictEqual(cookie.name(), 'name');\n    assert.strictEqual(cookie.value(), 'value');\n\n    assert.strictEqual(cookie.type(), undefined);\n    assert.strictEqual(cookie.httpOnly(), false);\n    assert.strictEqual(cookie.secure(), false);\n    assert.strictEqual(cookie.sameSite(), undefined);\n    assert.strictEqual(cookie.priority(), 'Medium');\n    assert.strictEqual(cookie.session(), true);\n    assert.strictEqual(cookie.path(), undefined);\n    assert.strictEqual(cookie.domain(), undefined);\n    assert.strictEqual(cookie.expires(), undefined);\n    assert.strictEqual(cookie.maxAge(), undefined);\n    assert.strictEqual(cookie.size(), 0);\n    assert.strictEqual(cookie.url(), null);\n    assert.strictEqual(cookie.partitionKey(), undefined);\n    assert.strictEqual(cookie.getCookieLine(), null);\n  });\n\n  it('can be created from a protocol Cookie with all optional fields set', () => {\n    const expires = new Date().getTime() + 3600 * 1000;\n    const cookie = SDK.Cookie.Cookie.fromProtocolCookie({\n      domain: '.example.com',\n      expires: expires / 1000,\n      httpOnly: true,\n      name: 'name',\n      path: '/test',\n      sameSite: Protocol.Network.CookieSameSite.Strict,\n      sameParty: false,\n      secure: true,\n      session: false,\n      size: 23,\n      value: 'value',\n      priority: Protocol.Network.CookiePriority.High,\n      sourcePort: 443,\n      sourceScheme: Protocol.Network.CookieSourceScheme.Secure,\n      partitionKey: {topLevelSite: 'https://a.com', hasCrossSiteAncestor: false},\n      partitionKeyOpaque: false,\n    });\n\n    assert.strictEqual(cookie.key(), '.example.com name /test https://a.com same_site');\n    assert.strictEqual(cookie.name(), 'name');\n    assert.strictEqual(cookie.value(), 'value');\n\n    assert.strictEqual(cookie.type(), null);\n    assert.strictEqual(cookie.httpOnly(), true);\n    assert.strictEqual(cookie.secure(), true);\n    assert.strictEqual(cookie.sameSite(), 'Strict');\n    assert.strictEqual(cookie.session(), false);\n    assert.strictEqual(cookie.path(), '/test');\n    assert.strictEqual(cookie.domain(), '.example.com');\n    assert.strictEqual(cookie.expires(), expires);\n    assert.strictEqual(cookie.maxAge(), undefined);\n    assert.strictEqual(cookie.size(), 23);\n    assert.strictEqual(String(cookie.url()), 'https://.example.com/test');\n    assert.strictEqual(cookie.getCookieLine(), null);\n    assert.strictEqual(cookie.sourcePort(), 443);\n    assert.strictEqual(cookie.sourceScheme(), Protocol.Network.CookieSourceScheme.Secure);\n    assert.strictEqual(cookie.partitionKey().topLevelSite, 'https://a.com');\n    assert.strictEqual(cookie.partitionKey().hasCrossSiteAncestor, false);\n    assert.strictEqual(cookie.partitionKeyOpaque(), false);\n    assert.strictEqual(cookie.partitioned(), true);\n  });\n\n  // The jsdoc states that the fields are required, not optional\n  it('can be created from a protocol Cookie with no optional fields set', () => {\n    const cookie = SDK.Cookie.Cookie.fromProtocolCookie({\n      domain: '.example.com',\n      name: 'name',\n      path: '/test',\n      size: 23,\n      value: 'value',\n      expires: 0,\n      httpOnly: false,\n      sameParty: false,\n      secure: false,\n      session: true,\n      priority: Protocol.Network.CookiePriority.Medium,\n      sourcePort: 80,\n      sourceScheme: Protocol.Network.CookieSourceScheme.NonSecure,\n    });\n\n    assert.strictEqual(cookie.key(), '.example.com name /test -');\n    assert.strictEqual(cookie.name(), 'name');\n    assert.strictEqual(cookie.value(), 'value');\n\n    assert.strictEqual(cookie.type(), null);\n    assert.strictEqual(cookie.httpOnly(), false);\n    assert.strictEqual(cookie.secure(), false);\n    assert.strictEqual(cookie.sameSite(), undefined);\n    assert.strictEqual(cookie.priority(), 'Medium');\n    // Session cookie status is derived from the presence of max-age or expires fields.\n    assert.strictEqual(cookie.session(), true);\n    assert.strictEqual(cookie.path(), '/test');\n    assert.strictEqual(cookie.domain(), '.example.com');\n    assert.strictEqual(cookie.maxAge(), undefined);\n    assert.strictEqual(cookie.size(), 23);\n    assert.strictEqual(String(cookie.url()), 'http://.example.com/test');\n    assert.strictEqual(cookie.getCookieLine(), null);\n    assert.strictEqual(cookie.sourcePort(), 80);\n    assert.strictEqual(cookie.sourceScheme(), Protocol.Network.CookieSourceScheme.NonSecure);\n  });\n\n  it('can be created from a protocol Cookie with no optional fields set and non-standard port', () => {\n    const cookie = SDK.Cookie.Cookie.fromProtocolCookie({\n      domain: '.example.com',\n      name: 'name',\n      path: '/test',\n      size: 23,\n      value: 'value',\n      expires: 0,\n      httpOnly: false,\n      sameParty: false,\n      secure: false,\n      session: true,\n      priority: Protocol.Network.CookiePriority.Medium,\n      sourcePort: 8000,\n      sourceScheme: Protocol.Network.CookieSourceScheme.NonSecure,\n    });\n\n    assert.strictEqual(cookie.key(), '.example.com name /test -');\n    assert.strictEqual(cookie.name(), 'name');\n    assert.strictEqual(cookie.value(), 'value');\n\n    assert.strictEqual(cookie.type(), null);\n    assert.strictEqual(cookie.httpOnly(), false);\n    assert.strictEqual(cookie.secure(), false);\n    assert.strictEqual(cookie.sameSite(), undefined);\n    assert.strictEqual(cookie.priority(), 'Medium');\n    // Session cookie status is derived from the presence of max-age or expires fields.\n    assert.strictEqual(cookie.session(), true);\n    assert.strictEqual(cookie.path(), '/test');\n    assert.strictEqual(cookie.domain(), '.example.com');\n    assert.strictEqual(cookie.maxAge(), undefined);\n    assert.strictEqual(cookie.size(), 23);\n    assert.strictEqual(String(cookie.url()), 'http://.example.com:8000/test');\n    assert.strictEqual(cookie.getCookieLine(), null);\n    assert.strictEqual(cookie.sourcePort(), 8000);\n    assert.strictEqual(cookie.sourceScheme(), Protocol.Network.CookieSourceScheme.NonSecure);\n  });\n\n  it('can handle secure urls', () => {\n    const cookie = new SDK.Cookie.Cookie('name', 'value');\n    cookie.addAttribute(SDK.Cookie.Attribute.Secure);\n    cookie.addAttribute(SDK.Cookie.Attribute.Domain, 'example.com');\n    cookie.addAttribute(SDK.Cookie.Attribute.Path, '/test');\n    assert.strictEqual(String(cookie.url()), 'https://example.com/test');\n  });\n\n  it('can handle insecure urls', () => {\n    const cookie = new SDK.Cookie.Cookie('name', 'value');\n    cookie.addAttribute(SDK.Cookie.Attribute.Domain, 'example.com');\n    cookie.addAttribute(SDK.Cookie.Attribute.Path, '/test');\n    assert.strictEqual(String(cookie.url()), 'http://example.com/test');\n  });\n\n  it('can set SDK.Cookie.Attribute used as flags', () => {\n    const cookie = new SDK.Cookie.Cookie('name', 'value');\n    cookie.addAttribute(SDK.Cookie.Attribute.HttpOnly);\n    assert.strictEqual(cookie.httpOnly(), true);\n  });\n\n  it('can set SDK.Cookie.Attribute used as key=value', () => {\n    const cookie = new SDK.Cookie.Cookie('name', 'value');\n    cookie.addAttribute(SDK.Cookie.Attribute.Path, '/test');\n    assert.strictEqual(cookie.path(), '/test');\n  });\n\n  it('can set initialize with a different priority', () => {\n    const cookie = new SDK.Cookie.Cookie('name', 'value', null, Protocol.Network.CookiePriority.High);\n    assert.strictEqual(cookie.priority(), 'High');\n  });\n\n  it('can change the priority', () => {\n    const cookie = new SDK.Cookie.Cookie('name', 'value');\n    cookie.addAttribute(SDK.Cookie.Attribute.Priority, 'Low');\n    assert.strictEqual(cookie.priority(), 'Low');\n  });\n\n  it('can set the cookie line', () => {\n    const cookie = new SDK.Cookie.Cookie('name', 'value');\n    cookie.setCookieLine('name=value');\n    assert.strictEqual(cookie.getCookieLine(), 'name=value');\n  });\n\n  it('can calculate the expiration date for session cookies', () => {\n    const cookie = new SDK.Cookie.Cookie('name', 'value');\n    assert.strictEqual(cookie.expiresDate(new Date()), null);\n  });\n\n  it('can calculate the expiration date for max age cookies', () => {\n    const cookie = new SDK.Cookie.Cookie('name', 'value');\n    const now = new Date();\n    const expires = Math.floor(now.getTime()) + 3600 * 1000;\n    cookie.addAttribute(SDK.Cookie.Attribute.MaxAge, '3600');\n    const expiresDate = cookie.expiresDate(now);\n    assert.strictEqual(expiresDate!.toISOString(), new Date(expires).toISOString());\n  });\n\n  it('can calculate the expiration date for cookies with expires attribute', () => {\n    const cookie = new SDK.Cookie.Cookie('name', 'value');\n    const now = new Date();\n    const expires = Math.floor(now.getTime()) + 3600 * 1000;\n    cookie.addAttribute(SDK.Cookie.Attribute.Expires, expires);\n    const expiresDate = cookie.expiresDate(now);\n    assert.strictEqual(expiresDate!.toISOString(), new Date(expires).toISOString());\n  });\n\n  it('can check if a cookie domain matches a given host', () => {\n    assert.isTrue(SDK.Cookie.Cookie.isDomainMatch('example.com', 'example.com'));\n    assert.isFalse(SDK.Cookie.Cookie.isDomainMatch('www.example.com', 'example.com'));\n\n    assert.isTrue(SDK.Cookie.Cookie.isDomainMatch('.example.com', 'example.com'));\n    assert.isTrue(SDK.Cookie.Cookie.isDomainMatch('.example.com', 'www.example.com'));\n    assert.isFalse(SDK.Cookie.Cookie.isDomainMatch('.www.example.com', 'example.com'));\n\n    assert.isFalse(SDK.Cookie.Cookie.isDomainMatch('example.com', 'example.de'));\n    assert.isFalse(SDK.Cookie.Cookie.isDomainMatch('.example.com', 'example.de'));\n    assert.isFalse(SDK.Cookie.Cookie.isDomainMatch('.example.de', 'example.de.vu'));\n\n    assert.isFalse(SDK.Cookie.Cookie.isDomainMatch('example.com', 'notexample.com'));\n  });\n\n  it('detects the Partitioned attribute in the Set-Cookie header', () => {\n    const cookie = new SDK.Cookie.Cookie('name', 'value');\n    cookie.addAttribute(SDK.Cookie.Attribute.Partitioned);\n    assert.isTrue(cookie.partitioned());\n    assert.isFalse(cookie.hasCrossSiteAncestor());\n    assert.strictEqual(cookie.topLevelSite(), '');\n  });\n\n  it('can modify partition key', () => {\n    const cookie = new SDK.Cookie.Cookie('name', 'value');\n    cookie.setPartitionKey('https://a.com', true);\n    assert.isTrue(cookie.partitioned());\n    assert.isTrue(cookie.hasCrossSiteAncestor());\n    assert.strictEqual(cookie.topLevelSite(), 'https://a.com');\n    // set crossSiteAncestor\n    cookie.setHasCrossSiteAncestor(false);\n    assert.isFalse(cookie.hasCrossSiteAncestor());\n    // set topLevelSite\n    cookie.setTopLevelSite('https://b.com', true);\n    assert.isTrue(cookie.hasCrossSiteAncestor());\n    assert.strictEqual(cookie.topLevelSite(), 'https://b.com');\n  });\n\n  it('can compare partition keys', () => {\n    const unpartitionedCookie = new SDK.Cookie.Cookie('name', 'value');\n    assert.isFalse(unpartitionedCookie.partitioned());\n    assert.isFalse(Boolean(unpartitionedCookie.partitionKey()));\n\n    const partitionedCookie = new SDK.Cookie.Cookie('name', 'value');\n    partitionedCookie.setPartitionKey('https://a.com', true);\n    assert.isTrue(partitionedCookie.partitioned());\n    assert.isTrue(Boolean(partitionedCookie.partitionKey()));\n    assert.notStrictEqual(unpartitionedCookie.partitionKey(), partitionedCookie.partitionKey());\n    assert.strictEqual(partitionedCookie.partitionKey(), partitionedCookie.partitionKey());\n\n    const differentHasCrossSiteAncestor = new SDK.Cookie.Cookie('name', 'value');\n    differentHasCrossSiteAncestor.setPartitionKey('https://a.com', false);\n    assert.isTrue(differentHasCrossSiteAncestor.partitioned());\n    assert.notStrictEqual(differentHasCrossSiteAncestor.partitionKey(), partitionedCookie.partitionKey());\n\n    const differentTopLevel = new SDK.Cookie.Cookie('name', 'value');\n    differentTopLevel.setPartitionKey('https://b.com', true);\n    assert.isTrue(differentTopLevel.partitioned());\n    assert.notStrictEqual(differentTopLevel.partitionKey(), partitionedCookie.partitionKey());\n  });\n\n  it('can set opaque partition key', () => {\n    const partitionedCookie = new SDK.Cookie.Cookie('name', 'value');\n    partitionedCookie.setPartitionKey('https://a.com', true);\n    assert.isTrue(partitionedCookie.partitioned());\n    assert.isTrue(partitionedCookie.hasCrossSiteAncestor());\n    assert.isFalse(partitionedCookie.partitionKeyOpaque());\n    // Set key to opaque and confirm the the key is opaque and cross site.\n    partitionedCookie.setPartitionKeyOpaque();\n    assert.isTrue(partitionedCookie.partitionKeyOpaque());\n    assert.isFalse(partitionedCookie.hasCrossSiteAncestor());\n  });\n});\n"]}