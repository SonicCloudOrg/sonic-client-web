{"version":3,"file":"TypedArrayUtilities.test.js","sourceRoot":"","sources":["../../../../../../front_end/core/platform/TypedArrayUtilities.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Platform from './platform.js';\n\ndescribe('TypedArrayUtilities', () => {\n  describe('BigUint32Array', () => {\n    it('can be expandable', () => {\n      const array = Platform.TypedArrayUtilities.createExpandableBigUint32Array();\n      assert.strictEqual(array.length, 0);\n      array.setValue(0, 33);\n      array.setValue(1, 44);\n      assert.strictEqual(array.length, 2);\n      assert.strictEqual(array.getValue(0), 33);\n      assert.strictEqual(array.getValue(1), 44);\n      assert.strictEqual(array.asArrayOrFail() as Object, array);\n    });\n    it('can act as a Uint32Array', () => {\n      const array = Platform.TypedArrayUtilities.createFixedBigUint32Array(15);\n      assert.strictEqual(array.length, 15);\n      assert.strictEqual(array.getValue(7), 0);\n      array.setValue(7, 77);\n      assert.strictEqual(array.getValue(7), 77);\n      assert.strictEqual(array.asUint32ArrayOrFail() as Object, array);\n    });\n    it('can be bigger than a Uint32Array', () => {\n      const array = Platform.TypedArrayUtilities.createFixedBigUint32Array(12_345_678, /* maxLengthForTesting=*/ 2e6);\n      assert.strictEqual(array.length, 12_345_678);\n      assert.strictEqual(array.getValue(0), 0);\n      assert.strictEqual(array.getValue(500_000), 0);\n      assert.strictEqual(array.getValue(5_000_000), 0);\n      assert.strictEqual(array.getValue(12_345_677), 0);\n      array.setValue(0, 9);\n      array.setValue(500_000, 99);\n      array.setValue(5_000_000, 999);\n      array.setValue(12_345_677, 9999);\n      assert.strictEqual(array.getValue(0), 9);\n      assert.strictEqual(array.getValue(500_000), 99);\n      assert.strictEqual(array.getValue(5_000_000), 999);\n      assert.strictEqual(array.getValue(12_345_677), 9999);\n      assert.isFalse(array instanceof Array);\n      assert.isFalse(array instanceof Uint32Array);\n    });\n  });\n});\n"]}