{"version":3,"file":"MapUtilities.test.js","sourceRoot":"","sources":["../../../../../../front_end/core/platform/MapUtilities.test.ts"],"names":[],"mappings":"AAAA,gEAAgE;AAChE,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,QAAQ,MAAM,eAAe,CAAC;AAE1C,QAAQ,CAAC,cAAc,EAAE,GAAG,EAAE;IAC5B,QAAQ,CAAC,SAAS,EAAE,GAAG,EAAE;QACvB,EAAE,CAAC,mGAAmG,EAAE,GAAG,EAAE;YAC3G,MAAM,KAAK,GAAyC;gBAClD,CAAC,GAAG,EAAE,CAAC,CAAC;gBACR,CAAC,GAAG,EAAE,CAAC,CAAC;gBACR,CAAC,GAAG,EAAE,CAAC,CAAC;gBACR,CAAC,GAAG,EAAE,CAAC,CAAC;aACT,CAAC;YACF,MAAM,GAAG,GAAG,IAAI,GAAG,CAAC,KAAK,CAAC,CAAC;YAE3B,MAAM,OAAO,GAAG,QAAQ,CAAC,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;YACnD,KAAK,MAAM,CAAC,EAAE,KAAK,CAAC,IAAI,KAAK,EAAE,CAAC;gBAC9B,MAAM,CAAC,WAAW,CAAC,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACnE,CAAC;YAED,SAAS,OAAO,CAAC,WAAmB;gBAClC,MAAM,IAAI,GAAG,IAAI,GAAG,EAAU,CAAC;gBAC/B,KAAK,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,KAAK,EAAE,CAAC;oBACjC,IAAI,KAAK,KAAK,WAAW,EAAE,CAAC;wBAC1B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;oBAChB,CAAC;gBACH,CAAC;gBACD,OAAO,IAAI,CAAC;YACd,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IACH,QAAQ,CAAC,gBAAgB,EAAE,GAAG,EAAE;QAC9B,EAAE,CAAC,0CAA0C,EAAE,GAAG,EAAE;YAClD,MAAM,QAAQ,GAAG,IAAI,GAAG,EAAE,CAAC;YAC3B,MAAM,QAAQ,GAAG,QAAQ,CAAC,YAAY,CAAC,cAAc,CAAC,IAAI,GAAG,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,QAAQ,CAAC,CAAC;YAExF,MAAM,CAAC,WAAW,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;QACzC,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,2CAA2C,EAAE,GAAG,EAAE;YACnD,MAAM,IAAI,GAAG,IAAI,GAAG,EAAqB,CAAC;YAC1C,MAAM,aAAa,GAAG,QAAQ,CAAC,YAAY,CAAC,cAAc,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC;YACzF,MAAM,cAAc,GAAG,QAAQ,CAAC,YAAY,CAAC,cAAc,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC;YAE1F,MAAM,CAAC,WAAW,CAAC,aAAa,EAAE,cAAc,CAAC,CAAC;QACpD,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright (c) 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Platform from './platform.js';\n\ndescribe('MapUtilities', () => {\n  describe('inverse', () => {\n    it('inverts the map returning a multimap with the map\\'s values as keys and the map\\'s keys as values', () => {\n      const pairs: readonly(readonly[string, number])[] = [\n        ['a', 1],\n        ['b', 2],\n        ['c', 3],\n        ['d', 1],\n      ];\n      const map = new Map(pairs);\n\n      const inverse = Platform.MapUtilities.inverse(map);\n      for (const [, value] of pairs) {\n        assert.sameMembers([...inverse.get(value)], [...getKeys(value)]);\n      }\n\n      function getKeys(lookupValue: number): Set<string> {\n        const keys = new Set<string>();\n        for (const [key, value] of pairs) {\n          if (value === lookupValue) {\n            keys.add(key);\n          }\n        }\n        return keys;\n      }\n    });\n  });\n  describe('getWithDefault', () => {\n    it('returns the default when it has no value', () => {\n      const expected = new Set();\n      const returned = Platform.MapUtilities.getWithDefault(new Map(), 'foo', () => expected);\n\n      assert.strictEqual(expected, returned);\n    });\n\n    it('returns the same item on successive calls', () => {\n      const data = new Map<string, Set<void>>();\n      const returnedFirst = Platform.MapUtilities.getWithDefault(data, 'foo', () => new Set());\n      const returnedSecond = Platform.MapUtilities.getWithDefault(data, 'foo', () => new Set());\n\n      assert.strictEqual(returnedFirst, returnedSecond);\n    });\n  });\n});\n"]}