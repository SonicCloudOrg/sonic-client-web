{"version":3,"file":"time-utilities.test.js","sourceRoot":"","sources":["../../../../../../front_end/core/i18n/time-utilities.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {describeWithLocale} from '../../testing/EnvironmentHelpers.js';\nimport type * as Platform from '../platform/platform.js';\n\nimport * as i18n from './i18n.js';\n\ndescribeWithLocale('preciseMillisToString', () => {\n  it('formats without a given precision', () => {\n    const inputNumber = 7.84;\n    const outputString = i18n.TimeUtilities.preciseMillisToString(inputNumber);\n    assert.strictEqual(outputString, '8\\xA0ms');\n  });\n\n  it('formats without a given precision', () => {\n    const inputNumber = 7.84;\n    const precision = 2;\n    const outputString = i18n.TimeUtilities.preciseMillisToString(inputNumber, precision);\n    assert.strictEqual(outputString, '7.84\\xA0ms');\n  });\n});\n\ndescribeWithLocale('formatMicroSecondsTime', () => {\n  const {formatMicroSecondsTime} = i18n.TimeUtilities;\n\n  it('formats small microsecond values', async () => {\n    const time = 8 as Platform.Timing.MicroSeconds;\n    assert.strictEqual(formatMicroSecondsTime(time), '8\\xA0μs');\n  });\n\n  it('formats larger microsecond values as milliseconds', async () => {\n    const time = 892 as Platform.Timing.MicroSeconds;\n    assert.strictEqual(formatMicroSecondsTime(time), '0.89\\xA0ms');\n  });\n\n  it('formats milliseconds', async () => {\n    const time = 8.9122 * 1_000 as Platform.Timing.MicroSeconds;\n    assert.strictEqual(formatMicroSecondsTime(time), '8.91\\xA0ms');\n  });\n\n  it('formats seconds', async () => {\n    const time = 8.9122 * 1_000 * 1_000 as Platform.Timing.MicroSeconds;\n    assert.strictEqual(formatMicroSecondsTime(time), '8.91\\xA0s');\n  });\n\n  it('formats minutes', async () => {\n    // 203 = 3 minutes, 23 seconds\n    const time = 203 * 1_000 * 1_000 as Platform.Timing.MicroSeconds;\n    assert.strictEqual(formatMicroSecondsTime(time), '3.4\\xA0min');\n  });\n});\n\ndescribeWithLocale('formatMicroSecondsAsSeconds', () => {\n  const {formatMicroSecondsAsSeconds} = i18n.TimeUtilities;\n  it('formats smaller second values', async () => {\n    const time = 0.03 * 1_000 * 1_000 as Platform.Timing.MicroSeconds;\n    assert.strictEqual(formatMicroSecondsAsSeconds(time), '0.03\\xA0s');\n  });\n\n  it('formats larger second values', async () => {\n    const time = 8.9122 * 1_000 * 1_000 as Platform.Timing.MicroSeconds;\n    assert.strictEqual(formatMicroSecondsAsSeconds(time), '8.91\\xA0s');\n  });\n});\n\ndescribeWithLocale('millisToString', () => {\n  it('formats when number is infinite', () => {\n    const inputNumber = Infinity;\n    const outputString = i18n.TimeUtilities.millisToString(inputNumber);\n    assert.strictEqual(outputString, '-');\n  });\n\n  it('formats when number is zero', () => {\n    const inputNumber = 0;\n    const outputString = i18n.TimeUtilities.millisToString(inputNumber);\n    assert.strictEqual(outputString, '0');\n  });\n\n  it('formats with higher resolution and a number less that 0.1', () => {\n    const inputNumber = 0.01;\n    const higherResolution = true;\n    const outputString = i18n.TimeUtilities.millisToString(inputNumber, higherResolution);\n    assert.strictEqual(outputString, '10\\xA0μs');\n  });\n\n  it('formats with higher resolution and a number less that 1000', () => {\n    const inputNumber = 897.98;\n    const higherResolution = true;\n    const outputString = i18n.TimeUtilities.millisToString(inputNumber, higherResolution);\n    assert.strictEqual(outputString, '897.98\\xA0ms');\n  });\n\n  it('formats without higher resolution and a number less that 1000', () => {\n    const inputNumber = 897.98;\n    const higherResolution = false;\n    const outputString = i18n.TimeUtilities.millisToString(inputNumber, higherResolution);\n    assert.strictEqual(outputString, '898\\xA0ms');\n  });\n\n  it('formats less than 60 seconds', () => {\n    const inputNumber = 12345;\n    const outputString = i18n.TimeUtilities.millisToString(inputNumber);\n    assert.strictEqual(outputString, '12.35\\xA0s');\n  });\n\n  it('formats less than 60 minutes', () => {\n    const inputNumber = 265000;\n    const outputString = i18n.TimeUtilities.millisToString(inputNumber);\n    assert.strictEqual(outputString, '4.4\\xA0min');\n  });\n\n  it('formats less than 24 hours', () => {\n    const inputNumber = 20000000;\n    const outputString = i18n.TimeUtilities.millisToString(inputNumber);\n    assert.strictEqual(outputString, '5.6\\xA0hrs');\n  });\n\n  it('formats days', () => {\n    const inputNumber = 100000000;\n    const outputString = i18n.TimeUtilities.millisToString(inputNumber);\n    assert.strictEqual(outputString, '1.2\\xA0days');\n  });\n});\n\ndescribeWithLocale('secondsToString', () => {\n  it('formats infinte numbers correctly', () => {\n    const inputNumber = Infinity;\n    const outputString = i18n.TimeUtilities.secondsToString(inputNumber);\n    assert.strictEqual(outputString, '-');\n  });\n\n  it('formats finite numbers correctly', () => {\n    const inputNumber = 7.849;\n    const outputString = i18n.TimeUtilities.secondsToString(inputNumber);\n    assert.strictEqual(outputString, '7.85\\xA0s');\n  });\n});\n"]}