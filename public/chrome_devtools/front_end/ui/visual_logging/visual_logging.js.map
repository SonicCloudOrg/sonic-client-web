{"version":3,"file":"visual_logging.js","sourceRoot":"","sources":["../../../../../../front_end/ui/visual_logging/visual_logging.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as LoggableModule from './Loggable.js';\nimport * as LoggingConfig from './LoggingConfig.js';\nimport * as LoggingDriver from './LoggingDriver.js';\nimport * as LoggingEvents from './LoggingEvents.js';\nimport * as NonDomState from './NonDomState.js';\n\nexport type Loggable = LoggableModule.Loggable;\nexport {startLogging, stopLogging, addDocument} from './LoggingDriver.js';\nexport {logImpressions} from './LoggingEvents.js';\nexport const logClick = (l: Loggable, e: Event): void => LoggingEvents.logClick(LoggingDriver.clickLogThrottler)(l, e);\nexport const logResize = (l: Loggable, s: DOMRect): void => LoggingEvents.logResize(l, s);\nexport const logKeyDown = async(l: Loggable|null, e: Event, context?: string): Promise<void> =>\n    LoggingEvents.logKeyDown(LoggingDriver.keyboardLogThrottler)(l, e, context);\nexport {registerParentProvider, setMappedParent} from './LoggingState.js';\n\nexport function registerLoggable(loggable: Loggable, config: string, parent: Loggable|null): void {\n  if (!LoggingDriver.isLogging()) {\n    return;\n  }\n  NonDomState.registerLoggable(loggable, LoggingConfig.parseJsLog(config), parent || undefined);\n  void LoggingDriver.scheduleProcessing();\n}\n\n/**\n * Action visual elements are either buttons or menu items that trigger a given action. Use the\n * context to differentiate between different actions, and make sure that buttons and menu items\n * that have the same effect use the same context.\n *\n * Ideally the `action`s context should match the ID of an `UI.ActionRegistration.Action`.\n */\nexport const action = LoggingConfig.makeConfigStringBuilder.bind(null, 'Action');\nexport const adorner = LoggingConfig.makeConfigStringBuilder.bind(null, 'Adorner');\nexport const animationClip = LoggingConfig.makeConfigStringBuilder.bind(null, 'AnimationClip');\nexport const bezierCurveEditor = LoggingConfig.makeConfigStringBuilder.bind(null, 'BezierCurveEditor');\nexport const bezierPresetCategory = LoggingConfig.makeConfigStringBuilder.bind(null, 'BezierPresetCategory');\nexport const breakpointMarker = LoggingConfig.makeConfigStringBuilder.bind(null, 'BreakpointMarker');\nexport const canvas = LoggingConfig.makeConfigStringBuilder.bind(null, 'Canvas');\nexport const close = LoggingConfig.makeConfigStringBuilder.bind(null, 'Close');\nexport const colorEyeDropper = LoggingConfig.makeConfigStringBuilder.bind(null, 'ColorEyeDropper');\nexport const counter = LoggingConfig.makeConfigStringBuilder.bind(null, 'Counter');\n/**\n * Visual element to denote a moveable control point such as the ones exist in BezierEditor\n * for bezier control points or keyframes in AnimationUI.\n */\nexport const controlPoint = LoggingConfig.makeConfigStringBuilder.bind(null, 'ControlPoint');\nexport const cssColorMix = LoggingConfig.makeConfigStringBuilder.bind(null, 'CssColorMix');\nexport const cssRuleHeader = LoggingConfig.makeConfigStringBuilder.bind(null, 'CSSRuleHeader');\nexport const deviceModeRuler = LoggingConfig.makeConfigStringBuilder.bind(null, 'DeviceModeRuler');\nexport const domBreakpoint = LoggingConfig.makeConfigStringBuilder.bind(null, 'DOMBreakpoint');\nexport const drawer = LoggingConfig.makeConfigStringBuilder.bind(null, 'Drawer');\nexport const dropDown = LoggingConfig.makeConfigStringBuilder.bind(null, 'DropDown');\nexport const elementsBreadcrumbs = LoggingConfig.makeConfigStringBuilder.bind(null, 'ElementsBreadcrumbs');\nexport const expand = LoggingConfig.makeConfigStringBuilder.bind(null, 'Expand');\nexport const filterDropdown = LoggingConfig.makeConfigStringBuilder.bind(null, 'FilterDropdown');\nexport const gutter = LoggingConfig.makeConfigStringBuilder.bind(null, 'Gutter');\nexport const dialog = LoggingConfig.makeConfigStringBuilder.bind(null, 'Dialog');\nexport const item = LoggingConfig.makeConfigStringBuilder.bind(null, 'Item');\nexport const key = LoggingConfig.makeConfigStringBuilder.bind(null, 'Key');\n\n/**\n * Visual element to denote a hyper link. Use the context to differentiate between various types\n * of hyperlinks.\n */\nexport const link = LoggingConfig.makeConfigStringBuilder.bind(null, 'Link');\n\nexport const mediaInspectorView = LoggingConfig.makeConfigStringBuilder.bind(null, 'MediaInspectorView');\nexport const menu = LoggingConfig.makeConfigStringBuilder.bind(null, 'Menu');\nexport const metricsBox = LoggingConfig.makeConfigStringBuilder.bind(null, 'MetricsBox');\nexport const paletteColorShades = LoggingConfig.makeConfigStringBuilder.bind(null, 'PaletteColorShades');\nexport const pane = LoggingConfig.makeConfigStringBuilder.bind(null, 'Pane');\n\n/**\n * Visual element to denote a top level panel, no matter if that panel is shown in the main\n * view or in the drawer. Use the context to differentiate between different panels, but ensure\n * that the context used here matches the context used for its corresponding {@link panelTabHeader}.\n */\nexport const panel = LoggingConfig.makeConfigStringBuilder.bind(null, 'Panel');\n\nexport const panelTabHeader = LoggingConfig.makeConfigStringBuilder.bind(null, 'PanelTabHeader');\nexport const pieChart = LoggingConfig.makeConfigStringBuilder.bind(null, 'PieChart');\nexport const pieChartSlice = LoggingConfig.makeConfigStringBuilder.bind(null, 'PieChartSlice');\nexport const pieChartTotal = LoggingConfig.makeConfigStringBuilder.bind(null, 'PieChartTotal');\nexport const popover = LoggingConfig.makeConfigStringBuilder.bind(null, 'Popover');\nexport const preview = LoggingConfig.makeConfigStringBuilder.bind(null, 'Preview');\nexport const resizer = LoggingConfig.makeConfigStringBuilder.bind(null, 'Resizer');\nexport const responsivePresets = LoggingConfig.makeConfigStringBuilder.bind(null, 'ResponsivePresets');\nexport const showStyleEditor = LoggingConfig.makeConfigStringBuilder.bind(null, 'ShowStyleEditor');\nexport const slider = LoggingConfig.makeConfigStringBuilder.bind(null, 'Slider');\nexport const section = LoggingConfig.makeConfigStringBuilder.bind(null, 'Section');\nexport const sectionHeader = LoggingConfig.makeConfigStringBuilder.bind(null, 'SectionHeader');\nexport const tableRow = LoggingConfig.makeConfigStringBuilder.bind(null, 'TableRow');\nexport const tableCell = LoggingConfig.makeConfigStringBuilder.bind(null, 'TableCell');\nexport const tableHeader = LoggingConfig.makeConfigStringBuilder.bind(null, 'TableHeader');\n\n/**\n * Visual element to denote text input fields. Use the context to differentiate between various\n * inputs fields.\n *\n * For text fields that control `Common.Settings.Setting`s, make sure to use the name of the\n * setting as the visual elements' context.\n */\nexport const textField = LoggingConfig.makeConfigStringBuilder.bind(null, 'TextField');\nexport const timeline = LoggingConfig.makeConfigStringBuilder.bind(null, 'Timeline');\n\n/**\n * Togglable visual elements are checkboxes, radio buttons, or (binary) combo boxes. Use the\n * context to differentiate between different toggles.\n *\n * For toggles that control `Common.Settings.Setting`s, make sure to use the name of the\n * setting as the toggle context.\n */\nexport const toggle = LoggingConfig.makeConfigStringBuilder.bind(null, 'Toggle');\n\nexport const toolbar = LoggingConfig.makeConfigStringBuilder.bind(null, 'Toolbar');\nexport const toggleSubpane = LoggingConfig.makeConfigStringBuilder.bind(null, 'ToggleSubpane');\nexport const tree = LoggingConfig.makeConfigStringBuilder.bind(null, 'Tree');\nexport const treeItem = LoggingConfig.makeConfigStringBuilder.bind(null, 'TreeItem');\nexport const value = LoggingConfig.makeConfigStringBuilder.bind(null, 'Value');\n"]}