{"version":3,"file":"LoggingEvents.test.js","sourceRoot":"","sources":["../../../../../../front_end/ui/visual_logging/LoggingEvents.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport {expectCalled} from '../../testing/ExpectStubCall.js';\nimport {getVeId} from '../../testing/VisualLoggingHelpers.js';\n\nimport * as VisualLogging from './visual_logging-testing.js';\n\ndescribe('LoggingEvents', () => {\n  let parent: Element;\n  let element: Element;\n  let veid: number;\n  let throttler: Common.Throttler.Throttler;\n\n  beforeEach(() => {\n    parent = document.createElement('div');\n    element = document.createElement('div');\n    VisualLogging.LoggingState.getOrCreateLoggingState(parent, {ve: 1});\n    VisualLogging.LoggingState.getOrCreateLoggingState(element, {ve: 1, context: '42'}, parent);\n    veid = getVeId(element);\n    throttler = new Common.Throttler.Throttler(1000000);\n  });\n\n  async function assertThrottled(stub: sinon.SinonStub) {\n    await new Promise(resolve => setTimeout(resolve, 0));\n    assert.isFalse(stub.called);\n    await throttler.process?.();\n    assert.isTrue(stub.calledOnce);\n  }\n\n  it('calls UI binding to log an impression', async () => {\n    const recordImpression = sinon.stub(\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance,\n        'recordImpression',\n    );\n    await VisualLogging.LoggingEvents.logImpressions([element, parent]);\n    assert.isTrue(recordImpression.calledOnce);\n    assert.sameDeepMembers(recordImpression.firstCall.firstArg.impressions, [\n      {id: veid, type: 1, context: 42, parent: getVeId(parent), height: 0, width: 0},\n      {id: getVeId(parent), type: 1, height: 0, width: 0},\n    ]);\n  });\n\n  it('calls UI binding to log a click', async () => {\n    const recordClick = sinon.stub(\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance,\n        'recordClick',\n    );\n    // @ts-ignore\n    const event = new MouseEvent('click', {button: 0, sourceCapabilities: new InputDeviceCapabilities()});\n    VisualLogging.LoggingEvents.logClick(throttler)(element, event);\n    await assertThrottled(recordClick);\n    assert.deepStrictEqual(recordClick.firstCall.firstArg, {veid, mouseButton: 0, doubleClick: false});\n  });\n\n  it('does not set mouse button for synthetic clicks', async () => {\n    const recordClick = sinon.stub(\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance,\n        'recordClick',\n    );\n    const event = new MouseEvent('click', {button: 0});\n    VisualLogging.LoggingEvents.logClick(throttler)(element, event);\n    await assertThrottled(recordClick);\n    assert.deepStrictEqual(recordClick.firstCall.firstArg, {veid, doubleClick: false});\n  });\n\n  it('calls UI binding to log a double click', async () => {\n    const recordClick = sinon.stub(\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance,\n        'recordClick',\n    );\n    const event = new MouseEvent('dblclick', {button: 1});\n    VisualLogging.LoggingEvents.logClick(throttler)(element, event, {doubleClick: true});\n    await assertThrottled(recordClick);\n    assert.deepStrictEqual(recordClick.firstCall.firstArg, {veid, doubleClick: true});\n  });\n\n  it('calls UI binding to log a change', async () => {\n    const recordChange = sinon.stub(\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance,\n        'recordChange',\n    );\n    await VisualLogging.LoggingEvents.logChange(element);\n    assert.isTrue(recordChange.calledOnce);\n    assert.deepStrictEqual(recordChange.firstCall.firstArg, {veid});\n  });\n\n  it('calls UI binding to log a change of specific type', async () => {\n    const recordChange = sinon.stub(\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance,\n        'recordChange',\n    );\n    VisualLogging.LoggingState.getLoggingState(element)!.lastInputEventType = 'instertText';\n    await VisualLogging.LoggingEvents.logChange(element);\n    assert.isTrue(recordChange.calledOnce);\n    assert.deepStrictEqual(recordChange.firstCall.firstArg, {veid, context: 296063892});\n  });\n\n  it('calls UI binding to log a keydown with any code', async () => {\n    const recordKeyDown = sinon.stub(\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance,\n        'recordKeyDown',\n    );\n    const event = new KeyboardEvent('keydown');\n    void VisualLogging.LoggingEvents.logKeyDown(throttler)(element, event);\n    await assertThrottled(recordKeyDown);\n    assert.deepStrictEqual(recordKeyDown.firstCall.firstArg, {veid});\n  });\n\n  it('calls UI binding to log a keydown with a matching code', async () => {\n    const recordKeyDown = sinon.stub(\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance,\n        'recordKeyDown',\n    );\n    const event = new KeyboardEvent('keydown', {code: 'Enter', key: 'Enter'});\n    VisualLogging.LoggingState.getLoggingState(element)!.config.track = {keydown: 'Enter|Escape'};\n    void VisualLogging.LoggingEvents.logKeyDown(throttler)(element, event);\n    await assertThrottled(recordKeyDown);\n    assert.deepStrictEqual(recordKeyDown.firstCall.firstArg, {veid, context: 513111094});\n  });\n\n  it('calls UI binding to log a keydown with a matching key', async () => {\n    const recordKeyDown = sinon.stub(\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance,\n        'recordKeyDown',\n    );\n    const event = new KeyboardEvent('keydown', {code: 'Period', key: '>'});\n    VisualLogging.LoggingState.getLoggingState(element)!.config.track = {keydown: '>'};\n    void VisualLogging.LoggingEvents.logKeyDown(throttler)(element, event);\n    await assertThrottled(recordKeyDown);\n    assert.deepStrictEqual(recordKeyDown.firstCall.firstArg, {veid: getVeId(element), context: -1098575095});\n  });\n\n  it('calls UI binding to log a keydown with an provided context', async () => {\n    const recordKeyDown = sinon.stub(\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance,\n        'recordKeyDown',\n    );\n    const event = new KeyboardEvent('keydown', {code: 'Enter'});\n    void VisualLogging.LoggingEvents.logKeyDown(throttler)(element, event, '21');\n    await assertThrottled(recordKeyDown);\n    assert.deepStrictEqual(recordKeyDown.firstCall.firstArg, {veid, context: 21});\n  });\n\n  it('throttles subsequent keydowns', async () => {\n    const recordKeyDown = sinon.stub(\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance,\n        'recordKeyDown',\n    );\n    const event = new KeyboardEvent('keydown', {code: 'Enter'});\n    void VisualLogging.LoggingEvents.logKeyDown(throttler)(element, event);\n    void VisualLogging.LoggingEvents.logKeyDown(throttler)(element, event);\n    await assertThrottled(recordKeyDown);\n  });\n\n  it('does not drop keydowns with a specific context', async () => {\n    const recordKeyDown = sinon.stub(\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance,\n        'recordKeyDown',\n    );\n    const event = new KeyboardEvent('keydown', {code: 'Enter'});\n    sinon.stub(event, 'currentTarget').value(element);\n    void VisualLogging.LoggingEvents.logKeyDown(throttler)(element, event, '1');\n    void VisualLogging.LoggingEvents.logKeyDown(throttler)(element, event, '2');\n    await new Promise(resolve => setTimeout(resolve, 0));\n    assert.isTrue(recordKeyDown.calledOnce);\n    await throttler.process?.();\n    assert.isTrue(recordKeyDown.calledTwice);\n    assert.deepStrictEqual(recordKeyDown.firstCall.firstArg, {veid, context: 1});\n    assert.deepStrictEqual(recordKeyDown.secondCall.firstArg, {veid, context: 2});\n  });\n\n  it('throttles subsequent keydowns with the same context', async () => {\n    const recordKeyDown = sinon.stub(\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance,\n        'recordKeyDown',\n    );\n    const event = new KeyboardEvent('keydown', {code: 'Enter'});\n    sinon.stub(event, 'currentTarget').value(element);\n    void VisualLogging.LoggingEvents.logKeyDown(throttler)(element, event, '1');\n    void VisualLogging.LoggingEvents.logKeyDown(throttler)(element, event, '1');\n    await assertThrottled(recordKeyDown);\n    assert.deepStrictEqual(recordKeyDown.firstCall.firstArg, {veid, context: 1});\n  });\n\n  it('does not call UI binding to log a keydown with a non-matching code', async () => {\n    const recordKeyDown = sinon.stub(\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance,\n        'recordKeyDown',\n    );\n    const event = new KeyboardEvent('keydown', {code: 'KeyQ'});\n    VisualLogging.LoggingState.getLoggingState(element)!.config.track = {keydown: 'Enter|Escape'};\n    void VisualLogging.LoggingEvents.logKeyDown(throttler)(element, event);\n    assert.isFalse(recordKeyDown.called);\n  });\n\n  it('calls UI binding to log a hover event', async () => {\n    const recordHover = sinon.stub(\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance,\n        'recordHover',\n    );\n    const event = new MouseEvent('click', {button: 1});\n    sinon.stub(event, 'currentTarget').value(element);\n    void VisualLogging.LoggingEvents.logHover(new Common.Throttler.Throttler(0))(event);\n    await expectCalled(recordHover);\n    assert.deepStrictEqual(recordHover.firstCall.firstArg, {veid});\n  });\n\n  it('calls UI binding to log a drag event', async () => {\n    const recordDrag = sinon.stub(\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance,\n        'recordDrag',\n    );\n    const event = new MouseEvent('click', {button: 1});\n    sinon.stub(event, 'currentTarget').value(element);\n    void VisualLogging.LoggingEvents.logDrag(throttler)(event);\n    await throttler.schedule(async () => {}, Common.Throttler.Scheduling.AsSoonAsPossible);\n    await assertThrottled(recordDrag);\n    assert.deepStrictEqual(recordDrag.firstCall.firstArg, {veid});\n  });\n\n  it('calls UI binding to log a resize event', async () => {\n    const recordResize = sinon.stub(\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance,\n        'recordResize',\n    );\n    VisualLogging.LoggingEvents.logResize(element, new DOMRect(0, 0, 100, 50));\n    assert.deepStrictEqual(recordResize.firstCall.firstArg, {veid, width: 100, height: 50});\n  });\n\n  it('throttles calls UI binding to log a resize event', async () => {\n    const recordResize = sinon.stub(\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance,\n        'recordResize',\n    );\n    VisualLogging.LoggingEvents.logResize(element, new DOMRect(0, 0, 100, 50));\n    assert.deepStrictEqual(recordResize.firstCall.firstArg, {veid, width: 100, height: 50});\n  });\n});\n"]}