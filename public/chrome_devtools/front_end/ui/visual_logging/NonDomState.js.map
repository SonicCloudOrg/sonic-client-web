{"version":3,"file":"NonDomState.js","sourceRoot":"","sources":["../../../../../../front_end/ui/visual_logging/NonDomState.ts"],"names":[],"mappings":"AAYA,MAAM,QAAQ,GAAwC,IAAI,GAAG,EAAE,CAAC;AAEhE,MAAM,UAAU,gBAAgB,CAAC,QAAkB,EAAE,MAAqB,EAAE,MAAiB;IAC3F,QAAQ,CAAC,GAAG,CAAC,QAAQ,EAAE,EAAC,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAC,CAAC,CAAC;AACrD,CAAC;AAED,MAAM,UAAU,kBAAkB,CAAC,QAAkB;IACnD,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;AAC5B,CAAC;AAED,MAAM,UAAU,cAAc;IAC5B,OAAO,EAAC,SAAS,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAC,CAAC;AAC7C,CAAC;AAED,MAAM,UAAU,sBAAsB;IACpC,QAAQ,CAAC,KAAK,EAAE,CAAC;AACnB,CAAC","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport {type Loggable} from './Loggable.js';\nimport {type LoggingConfig} from './LoggingConfig.js';\n\ninterface LoggableRegistration {\n  loggable: Loggable;\n  config: LoggingConfig;\n  parent?: Loggable;\n}\n\nconst registry: Map<Loggable, LoggableRegistration> = new Map();\n\nexport function registerLoggable(loggable: Loggable, config: LoggingConfig, parent?: Loggable): void {\n  registry.set(loggable, {loggable, config, parent});\n}\n\nexport function unregisterLoggable(loggable: Loggable): void {\n  registry.delete(loggable);\n}\n\nexport function getNonDomState(): {loggables: LoggableRegistration[]} {\n  return {loggables: [...registry.values()]};\n}\n\nexport function unregisterAllLoggables(): void {\n  registry.clear();\n}\n"]}