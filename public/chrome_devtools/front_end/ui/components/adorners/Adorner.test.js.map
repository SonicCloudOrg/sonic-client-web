{"version":3,"file":"Adorner.test.js","sourceRoot":"","sources":["../../../../../../../front_end/ui/components/adorners/Adorner.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../../core/common/common.js';\nimport type * as Platform from '../../../core/platform/platform.js';\n\nimport * as Adorners from './adorners.js';\n\nconst ADORNER_TAG_NAME = 'DEVTOOLS-ADORNER';\n\ndescribe('Adorner', () => {\n  function assertIsAdorner(element: HTMLElement) {\n    assert.strictEqual(element.tagName, ADORNER_TAG_NAME, `element tag name is not ${ADORNER_TAG_NAME}`);\n    assert.isTrue(element instanceof Adorners.Adorner.Adorner, 'element is not an instance of Adorner');\n    assert.strictEqual(\n        Object.getPrototypeOf(element), Adorners.Adorner.Adorner.prototype,\n        'element is not on Adorner\\'s prototype chain');\n  }\n\n  it('can be created by document.createElement', () => {\n    const adorner = document.createElement('devtools-adorner');\n    assertIsAdorner(adorner);\n  });\n\n  it('can interacts as a toggle button with proper ARIA setup', () => {\n    const content = document.createElement('span');\n    const adorner = new Adorners.Adorner.Adorner();\n    adorner.data = {\n      content,\n      name: 'foo',\n    };\n    assert.isNull(adorner.getAttribute('role'), 'non-interactive adorner had wrong aria role value');\n\n    let clickCounter = 0;\n    const clickListener = () => {\n      clickCounter++;\n    };\n\n    const ariaLabelDefault = 'adorner toggled on' as Platform.UIString.LocalizedString;\n    const ariaLabelActive = 'adorner toggled off' as Platform.UIString.LocalizedString;\n    adorner.addInteraction(clickListener, {\n      isToggle: true,\n      shouldPropagateOnKeydown: false,\n      ariaLabelActive,\n      ariaLabelDefault,\n    });\n    assert.strictEqual(\n        adorner.getAttribute('aria-label'), ariaLabelDefault,\n        'interactive adorner didn\\'t have correct initial aria-label value');\n    assert.strictEqual(\n        adorner.getAttribute('role'), 'button', 'interactive adorner didn\\'t have correct aria role setup');\n    assert.strictEqual(\n        adorner.getAttribute('aria-pressed'), 'false',\n        'toggle adorner didn\\'t have correct initial aria-pressed value');\n\n    adorner.click();\n    assert.strictEqual(clickCounter, 1, 'interactive adorner was not triggered by clicking');\n    assert.strictEqual(\n        adorner.getAttribute('aria-label'), ariaLabelActive,\n        'interactive adorner didn\\'t have correct active aria-label value');\n    assert.strictEqual(\n        adorner.getAttribute('aria-pressed'), 'true', 'toggle adorner didn\\'t have correct active aria-pressed value');\n\n    adorner.dispatchEvent(new KeyboardEvent('keydown', {'code': 'Enter'}));\n    assert.strictEqual(clickCounter, 2, 'interactive adorner was not triggered by Enter key');\n    assert.strictEqual(\n        adorner.getAttribute('aria-label'), ariaLabelDefault,\n        'interactive adorner didn\\'t have correct inactive aria-label value');\n    assert.strictEqual(\n        adorner.getAttribute('aria-pressed'), 'false',\n        'toggle adorner didn\\'t have correct inactive aria-pressed value');\n\n    adorner.dispatchEvent(new KeyboardEvent('keydown', {'code': 'Space'}));\n    assert.strictEqual(clickCounter, 3, 'interactive adorner was not triggered by Space key');\n    assert.strictEqual(\n        adorner.getAttribute('aria-label'), ariaLabelActive,\n        'interactive adorner didn\\'t have correct active aria-label value');\n    assert.strictEqual(\n        adorner.getAttribute('aria-pressed'), 'true', 'toggle adorner didn\\'t have correct active aria-pressed value');\n  });\n\n  it('can be toggled programmatically', () => {\n    const content = document.createElement('span');\n    const adorner = new Adorners.Adorner.Adorner();\n    adorner.data = {\n      content,\n      name: 'foo',\n    };\n    adorner.addInteraction(() => {}, {\n      isToggle: true,\n      shouldPropagateOnKeydown: false,\n      ariaLabelActive: Common.UIString.LocalizedEmptyString,\n      ariaLabelDefault: Common.UIString.LocalizedEmptyString,\n    });\n    assert.strictEqual(\n        adorner.getAttribute('aria-pressed'), 'false',\n        'toggle adorner didn\\'t have correct initial aria-pressed value');\n\n    adorner.toggle();\n    assert.strictEqual(\n        adorner.getAttribute('aria-pressed'), 'true', 'toggle adorner didn\\'t have correct active aria-pressed value');\n  });\n\n  it('only contains the most recently slotted content after multiple data setting calls', () => {\n    const content1 = document.createElement('span');\n    content1.textContent = 'content 1';\n\n    const content2 = document.createElement('div');\n    content2.textContent = 'content 2';\n\n    const content3 = document.createElement('span');\n    content3.textContent = 'content 3';\n\n    const adorner = new Adorners.Adorner.Adorner();\n    adorner.data = {\n      content: content1,\n      name: 'foo',\n    };\n    adorner.data = {\n      content: content2,\n      name: 'foo',\n    };\n    adorner.data = {\n      content: content3,\n      name: 'foo',\n    };\n\n    const slottedChildren = adorner.querySelectorAll('[slot=\"content\"]');\n    assert.strictEqual(slottedChildren.length, 1, 'adorner light dom should only have one child with [slot=\"content\"]');\n    assert.strictEqual(\n        slottedChildren[0].textContent, 'content 3', 'adorner content slot should have the most recent content');\n  });\n});\n"]}