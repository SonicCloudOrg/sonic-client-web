{"version":3,"file":"SuggestionInput.js","sourceRoot":"","sources":["../../../../../../../front_end/ui/components/suggestion_input/SuggestionInput.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as CodeHighlighter from '../../../ui/components/code_highlighter/code_highlighter.js';\n// eslint-disable-next-line rulesdir/es_modules_import\nimport codeHighlighterStyles from '../../../ui/components/code_highlighter/codeHighlighter.css.js';\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\nimport * as VisualLogging from '../../../ui/visual_logging/visual_logging.js';\n\nimport contentEditableStyles from './suggestionInput.css.js';\n\nconst mod = (a: number, n: number): number => {\n  return ((a % n) + n) % n;\n};\n\nfunction assert<T>(\n    predicate: T,\n    message = 'Assertion failed!',\n    ): asserts predicate {\n  if (!predicate) {\n    throw new Error(message);\n  }\n}\n\nconst {html, Decorators, Directives, LitElement} = LitHtml;\nconst {customElement, property, state} = Decorators;\nconst {classMap} = Directives;\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-suggestion-input': SuggestionInput;\n    'devtools-editable-content': EditableContent;\n    'devtools-suggestion-box': SuggestionBox;\n  }\n}\n\nconst jsonPropertyOptions = {\n  hasChanged(value: unknown, oldValue: unknown): boolean {\n    return JSON.stringify(value) !== JSON.stringify(oldValue);\n  },\n};\n\n@customElement('devtools-editable-content')\nclass EditableContent extends HTMLElement {\n  static get observedAttributes(): string[] {\n    return ['disabled', 'placeholder'];\n  }\n\n  set disabled(disabled: boolean) {\n    this.contentEditable = String(!disabled);\n  }\n\n  get disabled(): boolean {\n    return this.contentEditable !== 'true';\n  }\n\n  set value(value: string) {\n    this.innerText = value;\n    this.#highlight();\n  }\n\n  get value(): string {\n    return this.innerText;\n  }\n\n  set mimeType(type: string) {\n    this.#mimeType = type;\n    this.#highlight();\n  }\n\n  get mimeType(): string {\n    return this.#mimeType;\n  }\n\n  #mimeType = '';\n\n  constructor() {\n    super();\n\n    this.contentEditable = 'true';\n    this.tabIndex = 0;\n\n    this.addEventListener('focus', () => {\n      this.innerHTML = this.innerText;\n    });\n    this.addEventListener('blur', this.#highlight.bind(this));\n  }\n\n  #highlight(): void {\n    if (this.#mimeType) {\n      void CodeHighlighter.CodeHighlighter.highlightNode(this, this.#mimeType);\n    }\n  }\n\n  attributeChangedCallback(name: string, _: string|null, value: string|null): void {\n    switch (name) {\n      case 'disabled':\n        this.disabled = value !== null;\n        break;\n    }\n  }\n}\n\n/**\n * Contains a suggestion emitted due to action by the user.\n */\nclass SuggestEvent extends Event {\n  static readonly eventName = 'suggest';\n  declare suggestion: string;\n  constructor(suggestion: string) {\n    super(SuggestEvent.eventName);\n    this.suggestion = suggestion;\n  }\n}\n\n/**\n * Parents should listen for this event and register the listeners provided by\n * this event.\n */\nclass SuggestionInitEvent extends Event {\n  static readonly eventName = 'suggestioninit';\n  listeners: [string, (event: Event) => void][];\n  constructor(listeners: [string, (event: Event) => void][]) {\n    super(SuggestionInitEvent.eventName);\n    this.listeners = listeners;\n  }\n}\n\ntype SuggestionFilter = (option: string, query: string) => boolean;\n\nconst defaultSuggestionFilter = (option: string, query: string): boolean =>\n    option.toLowerCase().startsWith(query.toLowerCase());\n\n/**\n * @fires SuggestionInitEvent#suggestioninit\n * @fires SuggestEvent#suggest\n */\n@customElement('devtools-suggestion-box')\nclass SuggestionBox extends LitElement {\n  static override styles = [contentEditableStyles];\n\n  @property(jsonPropertyOptions) declare options: Readonly<string[]>;\n  @property() declare expression: string;\n  @property() declare suggestionFilter?: SuggestionFilter;\n\n  @state() private declare cursor: number;\n\n  #suggestions: string[] = [];\n\n  constructor() {\n    super();\n\n    this.options = [];\n    this.expression = '';\n\n    this.cursor = 0;\n  }\n\n  #handleKeyDownEvent = (event: Event): void => {\n    assert(event instanceof KeyboardEvent, 'Bound to the wrong event.');\n\n    if (this.#suggestions.length > 0) {\n      switch (event.key) {\n        case 'ArrowDown':\n          event.stopPropagation();\n          event.preventDefault();\n          this.#moveCursor(1);\n          break;\n        case 'ArrowUp':\n          event.stopPropagation();\n          event.preventDefault();\n          this.#moveCursor(-1);\n          break;\n      }\n    }\n\n    switch (event.key) {\n      case 'Enter':\n        if (this.#suggestions[this.cursor]) {\n          this.#dispatchSuggestEvent(this.#suggestions[this.cursor]);\n        }\n        event.preventDefault();\n        break;\n    }\n  };\n\n  #moveCursor(delta: number): void {\n    this.cursor = mod(this.cursor + delta, this.#suggestions.length);\n  }\n\n  #dispatchSuggestEvent(suggestion: string): void {\n    this.dispatchEvent(new SuggestEvent(suggestion));\n  }\n\n  override connectedCallback(): void {\n    super.connectedCallback();\n\n    this.dispatchEvent(\n        new SuggestionInitEvent([['keydown', this.#handleKeyDownEvent]]),\n    );\n  }\n\n  override willUpdate(changedProperties: LitHtml.PropertyValues<this>): void {\n    if (changedProperties.has('options')) {\n      this.options = Object.freeze([...this.options].sort());\n    }\n    if (changedProperties.has('expression') || changedProperties.has('options')) {\n      this.cursor = 0;\n      this.#suggestions = this.options.filter(\n          option => (this.suggestionFilter || defaultSuggestionFilter)(option, this.expression),\n      );\n    }\n  }\n\n  protected override render(): LitHtml.TemplateResult|undefined {\n    if (this.#suggestions.length === 0) {\n      return;\n    }\n\n    return html`<ul class=\"suggestions\">\n      ${this.#suggestions.map((suggestion, index) => {\n      return html`<li\n          class=${classMap({\n        selected: index === this.cursor,\n      })}\n          @mousedown=${this.#dispatchSuggestEvent.bind(this, suggestion)}\n          jslog=${VisualLogging.item('suggestion').track({\n        click: true,\n      })}\n        >\n          ${suggestion}\n        </li>`;\n    })}\n    </ul>`;\n  }\n}\n\n@customElement('devtools-suggestion-input')\nexport class SuggestionInput extends LitElement {\n  static override shadowRootOptions = {\n    ...LitElement.shadowRootOptions,\n    delegatesFocus: true,\n  } as const;\n\n  static override styles = [contentEditableStyles, codeHighlighterStyles];\n\n  /**\n   * State passed to devtools-suggestion-box.\n   */\n  @property(jsonPropertyOptions) declare options: Readonly<string[]>;\n  @property() declare autocomplete?: boolean;\n  @property() declare suggestionFilter?: SuggestionFilter;\n  @state() declare expression: string;\n\n  /**\n   * State passed to devtools-editable-content.\n   */\n  @property() declare placeholder: string;\n  @property() declare value: string;\n  @property({type: Boolean}) declare disabled: boolean;\n  @property() declare strikethrough: boolean;\n  @property() declare mimeType: string;\n  @property() declare jslogContext?: string;\n\n  constructor() {\n    super();\n\n    this.options = [];\n    this.expression = '';\n\n    this.placeholder = '';\n    this.value = '';\n    this.disabled = false;\n    this.strikethrough = true;\n    this.mimeType = '';\n    this.autocomplete = true;\n    this.addEventListener('blur', this.#handleBlurEvent);\n    let jslog = VisualLogging.value().track({keydown: 'ArrowUp|ArrowDown|Enter', change: true, click: true});\n    if (this.jslogContext) {\n      jslog = jslog.context(this.jslogContext);\n    }\n    this.setAttribute('jslog', jslog.toString());\n  }\n\n  #cachedEditableContent?: EditableContent;\n  get #editableContent(): EditableContent {\n    if (this.#cachedEditableContent) {\n      return this.#cachedEditableContent;\n    }\n    const node = this.renderRoot.querySelector('devtools-editable-content');\n    if (!node) {\n      throw new Error('Attempted to query node before rendering.');\n    }\n    this.#cachedEditableContent = node;\n    return node;\n  }\n\n  #handleBlurEvent = (): void => {\n    window.getSelection()?.removeAllRanges();\n    this.value = this.#editableContent.value;\n    this.expression = this.#editableContent.value;\n  };\n\n  #handleFocusEvent = (event: FocusEvent): void => {\n    assert(event.target instanceof Node);\n    const range = document.createRange();\n    range.selectNodeContents(event.target);\n\n    const selection = window.getSelection() as Selection;\n    selection.removeAllRanges();\n    selection.addRange(range);\n  };\n\n  #handleKeyDownEvent = (event: KeyboardEvent): void => {\n    if (event.key === 'Enter') {\n      event.preventDefault();\n    }\n  };\n\n  #handleInputEvent = (event: {target: EditableContent}): void => {\n    this.expression = event.target.value;\n  };\n\n  #handleSuggestionInitEvent = (event: SuggestionInitEvent): void => {\n    for (const [name, listener] of event.listeners) {\n      this.addEventListener(name, listener);\n    }\n  };\n\n  #handleSuggestEvent = (event: SuggestEvent): void => {\n    this.#editableContent.value = event.suggestion;\n    // If actions result in a `focus` after this blur, then the blur won't\n    // happen. `setTimeout` guarantees `blur` will always come after `focus`.\n    setTimeout(this.blur.bind(this), 0);\n  };\n\n  protected override willUpdate(\n      properties: LitHtml.PropertyValues<this>,\n      ): void {\n    if (properties.has('value')) {\n      this.expression = this.value;\n    }\n  }\n\n  protected override render(): LitHtml.TemplateResult {\n    // clang-format off\n    return html`<devtools-editable-content\n        ?disabled=${this.disabled}\n        class=${classMap({\n          'strikethrough': !this.strikethrough,\n        })}\n        .enterKeyHint=${'done'}\n        .value=${this.value}\n        .mimeType=${this.mimeType}\n        @focus=${this.#handleFocusEvent}\n        @input=${this.#handleInputEvent}\n        @keydown=${this.#handleKeyDownEvent}\n        autocapitalize=\"off\"\n        inputmode=\"text\"\n        placeholder=${this.placeholder}\n        spellcheck=\"false\"\n      ></devtools-editable-content>\n      <devtools-suggestion-box\n        @suggestioninit=${this.#handleSuggestionInitEvent}\n        @suggest=${this.#handleSuggestEvent}\n        .options=${this.options}\n        .suggestionFilter=${this.suggestionFilter}\n        .expression=${this.autocomplete ? this.expression : ''}\n      ></devtools-suggestion-box>`;\n    // clang-format on\n  }\n}\n"]}