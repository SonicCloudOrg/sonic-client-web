{"version":3,"file":"Icon.test.js","sourceRoot":"","sources":["../../../../../../../front_end/ui/components/icon_button/Icon.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {\n  renderElementIntoDOM,\n} from '../../../testing/DOMHelpers.js';\n\nimport * as IconButton from './icon_button.js';\n\nfunction getSpanElement(icon: IconButton.Icon.Icon): HTMLSpanElement {\n  const {shadowRoot} = icon;\n  assert.isNotNull(shadowRoot);\n  const span = shadowRoot.querySelector('span');\n  assert.instanceOf(span, HTMLSpanElement);\n  return span;\n}\n\ndescribe('Icon', () => {\n  describe('Icon', () => {\n    const {Icon} = IconButton.Icon;\n\n    it('constructs a sub-aligned 20x20 icon by default', () => {\n      const icon = new Icon();\n      renderElementIntoDOM(icon);\n      assert.strictEqual(window.getComputedStyle(icon).verticalAlign, 'sub');\n      assert.strictEqual(icon.getBoundingClientRect().width, 20);\n      assert.strictEqual(icon.getBoundingClientRect().height, 20);\n    });\n\n    for (const name of ['triangle-up', 'triangle-down', 'triangle-left', 'triangle-right']) {\n      it(`constructs a baseline-aligned 14x14 icon for \"${name}\"`, () => {\n        const icon = new Icon();\n        icon.name = name;\n        renderElementIntoDOM(icon);\n        assert.strictEqual(window.getComputedStyle(icon).verticalAlign, 'baseline');\n        assert.strictEqual(icon.getBoundingClientRect().width, 14);\n        assert.strictEqual(icon.getBoundingClientRect().height, 14);\n      });\n    }\n\n    describe('data', () => {\n      it('can be used to set name and style', () => {\n        const icon = new Icon();\n        icon.data = {iconName: 'foo', color: 'red', width: '14px', height: '14px'};\n        assert.strictEqual(icon.name, 'foo');\n        assert.strictEqual(icon.style.color, 'red');\n        assert.strictEqual(icon.style.width, '14px');\n        assert.strictEqual(icon.style.height, '14px');\n      });\n\n      it('can be used to set path and style', () => {\n        const icon = new Icon();\n        icon.data = {iconPath: 'file:///path/to/bar.svg', color: 'darkblue', width: '8pt', height: '8pt'};\n        assert.strictEqual(icon.name, 'file:///path/to/bar.svg');\n        assert.strictEqual(icon.style.color, 'darkblue');\n        assert.strictEqual(icon.style.width, '8pt');\n        assert.strictEqual(icon.style.height, '8pt');\n      });\n    });\n\n    describe('name', () => {\n      it('is initially unset', () => {\n        const icon = new Icon();\n        assert.isNull(icon.name);\n      });\n\n      it('can be set and unset', () => {\n        const icon = new Icon();\n        icon.name = 'foobar';\n        icon.name = null;\n        assert.isNull(icon.name);\n      });\n\n      it('reflects the \"name\" attribute', () => {\n        const icon = new Icon();\n        icon.setAttribute('name', 'bar');\n        assert.strictEqual(icon.name, 'bar');\n      });\n\n      it('is reflected to the \"name\" attribute', () => {\n        const icon = new Icon();\n        icon.name = 'foo';\n        assert.strictEqual(icon.getAttribute('name'), 'foo');\n      });\n\n      it('accepts a `.svg` URL that is used verbatim for the icon URL', () => {\n        const icon = new Icon();\n        icon.name = 'devtools://path/to/images/file.svg';\n        renderElementIntoDOM(icon);\n        const span = getSpanElement(icon);\n        assert.strictEqual(window.getComputedStyle(span).maskImage, 'url(\"devtools://path/to/images/file.svg\")');\n      });\n\n      it('accepts an icon name and resolves that via `--image-file-<name>` CSS variables', () => {\n        const icon = new Icon();\n        icon.name = 'bar';\n        icon.style.setProperty('--image-file-bar', 'url(http://foo/bar.svg)');\n        renderElementIntoDOM(icon);\n        const span = getSpanElement(icon);\n        assert.strictEqual(window.getComputedStyle(span).maskImage, 'url(\"http://foo/bar.svg\")');\n      });\n    });\n\n    describe('role', () => {\n      it('is initially presentation', () => {\n        const icon = new Icon();\n        assert.strictEqual(icon.role, 'presentation');\n      });\n    });\n  });\n\n  describe('create', () => {\n    const {create} = IconButton.Icon;\n\n    it('constructs a new Icon with the given `name`', () => {\n      const icon = create('bin');\n      assert.strictEqual(icon.name, 'bin');\n    });\n\n    it('constructs a new Icon with the given `className`', () => {\n      const icon = create('select-element', 'my-awesome-class');\n      assert.isTrue(icon.classList.contains('my-awesome-class'));\n    });\n  });\n});\n"]}