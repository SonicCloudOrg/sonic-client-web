{"version":3,"file":"MarkdownView.js","sourceRoot":"","sources":["../../../../../../../front_end/ui/components/markdown_view/MarkdownView.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Marked from '../../../third_party/marked/marked.js';\nimport * as LitHtml from '../../lit-html/lit-html.js';\n\nimport {CodeBlock} from './CodeBlock.js';\nimport {MarkdownImage, type MarkdownImageData} from './MarkdownImage.js';\nimport {MarkdownLink, type MarkdownLinkData} from './MarkdownLink.js';\nimport markdownViewStyles from './markdownView.css.js';\n\nconst html = LitHtml.html;\nconst render = LitHtml.render;\n\nexport interface MarkdownViewData {\n  tokens: Marked.Marked.Token[];\n  renderer?: MarkdownLitRenderer;\n}\n\nexport class MarkdownView extends HTMLElement {\n  static readonly litTagName = LitHtml.literal`devtools-markdown-view`;\n  readonly #shadow = this.attachShadow({mode: 'open'});\n\n  #tokenData: readonly Marked.Marked.Token[] = [];\n  #renderer = new MarkdownLitRenderer();\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [markdownViewStyles];\n  }\n\n  set data(data: MarkdownViewData) {\n    this.#tokenData = data.tokens;\n    if (data.renderer) {\n      this.#renderer = data.renderer;\n    }\n    this.#update();\n  }\n\n  #update(): void {\n    this.#render();\n  }\n\n  #render(): void {\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    render(html`\n      <div class='message'>\n        ${this.#tokenData.map(token => this.#renderer.renderToken(token))}\n      </div>\n    `, this.#shadow, {host: this});\n    // clang-format on\n  }\n}\n\ncustomElements.define('devtools-markdown-view', MarkdownView);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-markdown-view': MarkdownView;\n  }\n}\n\n/**\n * Default renderer is used for the IssuesPanel and allows only well-known images and links to be embedded.\n */\nexport class MarkdownLitRenderer {\n  renderChildTokens(token: Marked.Marked.Token): LitHtml.TemplateResult[] {\n    if ('tokens' in token && token.tokens) {\n      return token.tokens.map(token => this.renderToken(token));\n    }\n    throw new Error('Tokens not found');\n  }\n\n  /**\n   * Unescape will get rid of the escaping done by Marked to avoid double escaping due to escaping it also with Lit-html.\n   * Table taken from: front_end/third_party/marked/package/src/helpers.js\n   */\n  unescape(text: string): string {\n    const escapeReplacements = new Map<string, string>([\n      ['&amp;', '&'],\n      ['&lt;', '<'],\n      ['&gt;', '>'],\n      ['&quot;', '\"'],\n      ['&#39;', '\\''],\n    ]);\n    return text.replace(/&(amp|lt|gt|quot|#39);/g, (matchedString: string) => {\n      const replacement = escapeReplacements.get(matchedString);\n      return replacement ? replacement : matchedString;\n    });\n  }\n\n  renderText(token: Marked.Marked.Token): LitHtml.TemplateResult {\n    if ('tokens' in token && token.tokens) {\n      return html`${this.renderChildTokens(token)}`;\n    }\n    // Due to unescaping, unescaped html entities (see escapeReplacements' keys) will be rendered\n    // as their corresponding symbol while the rest will be rendered as verbatim.\n    // Marked's escape function can be found in front_end/third_party/marked/package/src/helpers.js\n    return html`${this.unescape('text' in token ? token.text : '')}`;\n  }\n\n  renderHeading(heading: Marked.Marked.Tokens.Heading): LitHtml.TemplateResult {\n    switch (heading.depth) {\n      case 1:\n        return html`<h1>${this.renderText(heading)}</h1>`;\n      case 2:\n        return html`<h2>${this.renderText(heading)}</h2>`;\n      case 3:\n        return html`<h3>${this.renderText(heading)}</h3>`;\n      case 4:\n        return html`<h4>${this.renderText(heading)}</h4>`;\n      case 5:\n        return html`<h5>${this.renderText(heading)}</h5>`;\n      default:\n        return html`<h6>${this.renderText(heading)}</h6>`;\n    }\n  }\n\n  renderCodeBlock(token: Marked.Marked.Tokens.Code): LitHtml.TemplateResult {\n    // clang-format off\n    return html`<${CodeBlock.litTagName}\n      .code=${this.unescape(token.text)}\n      .codeLang=${token.lang}>\n    </${CodeBlock.litTagName}>`;\n    // clang-format one\n  }\n\n  templateForToken(token: Marked.Marked.Token): LitHtml.TemplateResult|null {\n    switch (token.type) {\n      case 'paragraph':\n        return html`<p>${this.renderChildTokens(token)}`;\n      case 'list':\n        return html`<ul>${token.items.map(token => {\n          return this.renderToken(token);\n        })}</ul>`;\n      case 'list_item':\n        return html`<li>${this.renderChildTokens(token)}`;\n      case 'text':\n        return this.renderText(token);\n      case 'codespan':\n        return html`<code>${this.unescape(token.text)}</code>`;\n      case 'code':\n        return this.renderCodeBlock(token);\n      case 'space':\n        return html``;\n      case 'link':\n        return html`<${MarkdownLink.litTagName} .data=${{key: token.href, title: token.text} as MarkdownLinkData}></${\n            MarkdownLink.litTagName}>`;\n      case 'image':\n        return html`<${MarkdownImage.litTagName} .data=${{key: token.href, title: token.text} as MarkdownImageData}></${\n            MarkdownImage.litTagName}>`;\n      case 'heading':\n        return this.renderHeading(token);\n      case 'strong':\n        return html`<strong>${this.renderText(token)}</strong>`;\n      case 'em':\n        return html`<em>${this.renderText(token)}</em>`;\n      default:\n        return null;\n    }\n  }\n\n  renderToken(token: Marked.Marked.Token): LitHtml.TemplateResult {\n    const template = this.templateForToken(token);\n    if (template === null) {\n      throw new Error(`Markdown token type '${token.type}' not supported.`);\n    }\n    return template;\n  }\n}\n"]}