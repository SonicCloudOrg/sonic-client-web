{"version":3,"file":"FeedbackButton.test.js","sourceRoot":"","sources":["../../../../../../../front_end/ui/components/panel_feedback/FeedbackButton.test.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,IAAI,MAAM,4BAA4B,CAAC;AAEnD,OAAO,EACL,kBAAkB,EAClB,oBAAoB,GACrB,MAAM,gCAAgC,CAAC;AACxC,OAAO,EAAC,kBAAkB,EAAC,MAAM,wCAAwC,CAAC;AAC1E,OAAO,KAAK,WAAW,MAAM,6CAA6C,CAAC;AAE3E,OAAO,KAAK,aAAa,MAAM,qBAAqB,CAAC;AAErD,MAAM,WAAW,GAAG,WAAW,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,QAAQ,EAAE,CAAC;AAE/E,kBAAkB,CAAC,iBAAiB,EAAE,GAAG,EAAE;IACzC,EAAE,CAAC,yDAAyD,EAAE,KAAK,IAAI,EAAE;QACvE,MAAM,gBAAgB,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,qBAAqB,CAAC,6BAA6B,EAAE,cAAc,CAAC,CAAC;QAC9G,MAAM,SAAS,GAAG,IAAI,aAAa,CAAC,cAAc,CAAC,cAAc,EAAE,CAAC;QACpE,SAAS,CAAC,IAAI,GAAG;YACf,WAAW,EAAE,yBAA4D;SAC1E,CAAC;QAEF,oBAAoB,CAAC,SAAS,CAAC,CAAC;QAChC,MAAM,WAAW,CAAC,IAAI,EAAE,CAAC;QACzB,MAAM,MAAM,GAAG,SAAS,CAAC,UAAW,CAAC,aAAa,CAAC,iBAAiB,CAAC,CAAC;QACtE,MAAM,CAAC,UAAU,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;QACvC,kBAAkB,CAAC,MAAM,CAAC,CAAC;QAC3B,MAAM,CAAC,WAAW,CAAC,gBAAgB,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;QAClD,MAAM,CAAC,MAAM,CACT,gBAAgB,CAAC,SAAS,CAAC,UAAU,CAAC,yBAA4D,CAAC,EACnG,oDAAoD,CAAC,CAAC;IAC5D,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Host from '../../../core/host/host.js';\nimport type * as Platform from '../../../core/platform/platform.js';\nimport {\n  dispatchClickEvent,\n  renderElementIntoDOM,\n} from '../../../testing/DOMHelpers.js';\nimport {describeWithLocale} from '../../../testing/EnvironmentHelpers.js';\nimport * as Coordinator from '../render_coordinator/render_coordinator.js';\n\nimport * as PanelFeedback from './panel_feedback.js';\n\nconst coordinator = Coordinator.RenderCoordinator.RenderCoordinator.instance();\n\ndescribeWithLocale('Feedback button', () => {\n  it('calls out to the Host API to open the link in a new tab', async () => {\n    const openInNewTabStub = sinon.stub(Host.InspectorFrontendHost.InspectorFrontendHostInstance, 'openInNewTab');\n    const component = new PanelFeedback.FeedbackButton.FeedbackButton();\n    component.data = {\n      feedbackUrl: 'https://feedbackurl.com' as Platform.DevToolsPath.UrlString,\n    };\n\n    renderElementIntoDOM(component);\n    await coordinator.done();\n    const button = component.shadowRoot!.querySelector('devtools-button');\n    assert.instanceOf(button, HTMLElement);\n    dispatchClickEvent(button);\n    assert.strictEqual(openInNewTabStub.callCount, 1);\n    assert.isTrue(\n        openInNewTabStub.firstCall.calledWith('https://feedbackurl.com' as Platform.DevToolsPath.UrlString),\n        'openInNewTab was not called with the expected URL.');\n  });\n});\n"]}