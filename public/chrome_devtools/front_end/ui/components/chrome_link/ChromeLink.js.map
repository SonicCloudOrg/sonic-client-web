{"version":3,"file":"ChromeLink.js","sourceRoot":"","sources":["../../../../../../../front_end/ui/components/chrome_link/ChromeLink.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../../core/common/common.js';\nimport * as Host from '../../../core/host/host.js';\nimport * as Platform from '../../../core/platform/platform.js';\nimport * as SDK from '../../../core/sdk/sdk.js';\nimport * as LitHtml from '../../lit-html/lit-html.js';\nimport * as VisualLogging from '../../visual_logging/visual_logging.js';\nimport * as ComponentHelpers from '../helpers/helpers.js';\n\nimport chromeLinkStyles from './chromeLink.css.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-chrome-link': ChromeLink;\n  }\n}\n\n// Use this component to render links to 'chrome://...'-URLs\n// (for which regular <x-link>s do not work).\nexport class ChromeLink extends HTMLElement {\n  static readonly litTagName = LitHtml.literal`devtools-chrome-link`;\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  readonly #boundRender = this.#render.bind(this);\n  #href: string = '';\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [chromeLinkStyles];\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#boundRender);\n  }\n\n  set href(href: Platform.DevToolsPath.UrlString) {\n    if (!Common.ParsedURL.schemeIs(href, 'chrome:')) {\n      throw new Error('ChromeLink href needs to start with \\'chrome://\\'');\n    }\n    this.#href = href;\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#boundRender);\n  }\n\n  // Navigating to a chrome:// link via a normal anchor doesn't work, so we \"navigate\"\n  // there using CDP.\n  #handleClick(event: MouseEvent): void {\n    const rootTarget = SDK.TargetManager.TargetManager.instance().rootTarget();\n    if (rootTarget === null) {\n      return;\n    }\n    const url = this.#href as Platform.DevToolsPath.UrlString;\n    void rootTarget.targetAgent().invoke_createTarget({url}).then(result => {\n      if (result.getError()) {\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance.openInNewTab(url);\n      }\n    });\n    event.consume(true);\n  }\n\n  #render(): void {\n    const urlForContext = new URL(this.#href);\n    urlForContext.search = '';\n    const jslogContext = Platform.StringUtilities.toKebabCase(urlForContext.toString());\n    // clang-format off\n    LitHtml.render(\n      /* x-link doesn't work with custom click/keydown handlers */\n      /* eslint-disable rulesdir/ban_a_tags_in_lit_html */\n      LitHtml.html`\n        <a href=${this.#href} class=\"link\" target=\"_blank\"\n          jslog=${VisualLogging.link().track({click: true}).context(jslogContext)}\n          @click=${this.#handleClick}><slot></slot></a>\n      `, this.#shadow, {host: this});\n    // clang-format on\n  }\n}\n\ncustomElements.define('devtools-chrome-link', ChromeLink);\n"]}