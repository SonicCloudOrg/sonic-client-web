{"version":3,"file":"LegacyWrapper.js","sourceRoot":"","sources":["../../../../../../../front_end/ui/components/legacy_wrapper/LegacyWrapper.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAG7B,OAAO,KAAK,aAAa,MAAM,wCAAwC,CAAC;AAExE,2DAA2D;AAC3D,MAAM,OAAgB,kBAAkE,SAAQ,WAAW;IACzG,OAAO,GAAW,IAAI,CAAC;IACvB,KAAK,CAAC,MAAM;IACZ,CAAC;IACD,QAAQ;IACR,CAAC;IACD,QAAQ;IACR,CAAC;CACF;AAQD,MAAM,UACN,aAAa,CACT,IAAO,EAAE,SAAoB,EAAE,YAAqB;IACtD,OAAO,IAAI,KAAM,SAAQ,IAAI;QAC3B,UAAU,CAAY;QAEtB,YAAY,GAAG,KAAY;YACzB,KAAK,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC;YACjC,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;YAC5B,IAAI,CAAC,UAAU,CAAC,OAAO,GAAG,IAAuB,CAAC;YAClD,KAAK,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC;YAC9B,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YACjD,IAAI,YAAY,EAAE,CAAC;gBACjB,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,OAAO,EAAE,GAAG,aAAa,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;YACtF,CAAC;QACH,CAAC;QAEQ,QAAQ;YACf,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;YAC3B,KAAK,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC;QAChC,CAAC;QAEQ,QAAQ;YACf,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;QAC7B,CAAC;QAED,KAAK,CAAC,QAAQ;YACZ,MAAM,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC;QACjC,CAAC;QAED,YAAY;YACV,OAAO,IAAI,CAAC,UAAU,CAAC;QACzB,CAAC;KAEF,EAA0D,CAAC;IAC5D,kBAAkB;AACpB,CAAC","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as UI from '../../legacy/legacy.js';\nimport * as VisualLogging from '../../visual_logging/visual_logging.js';\n\n// eslint-disable-next-line rulesdir/check_component_naming\nexport abstract class WrappableComponent<T extends UI.Widget.Widget = UI.Widget.Widget> extends HTMLElement {\n  wrapper: T|null = null;\n  async render(): Promise<void> {\n  }\n  wasShown(): void {\n  }\n  willHide(): void {\n  }\n}\n\ntype Constructor<T extends UI.Widget.Widget> = new (...args: any[]) => T;\n\nexport type LegacyWrapper<T extends UI.Widget.Widget, Component extends WrappableComponent<T>> = {\n  getComponent(): Component,\n}&T;\n\nexport function\nlegacyWrapper<T extends Constructor<UI.Widget.Widget>, Component extends WrappableComponent<InstanceType<T>>>(\n    base: T, component: Component, jsLogContext?: string): LegacyWrapper<InstanceType<T>, Component> {\n  return new class extends base {\n    #component: Component;\n\n    constructor(..._args: any[]) {\n      super(/* isWebComponent=*/ true);\n      this.#component = component;\n      this.#component.wrapper = this as InstanceType<T>;\n      void this.#component.render();\n      this.contentElement.appendChild(this.#component);\n      if (jsLogContext) {\n        this.element.setAttribute('jslog', `${VisualLogging.pane().context(jsLogContext)}`);\n      }\n    }\n\n    override wasShown(): void {\n      this.#component.wasShown();\n      void this.#component.render();\n    }\n\n    override willHide(): void {\n      this.#component.willHide();\n    }\n\n    async doUpdate(): Promise<void> {\n      await this.#component.render();\n    }\n\n    getComponent(): Component {\n      return this.#component;\n    }\n    // clang-format off\n  }() as unknown as LegacyWrapper<InstanceType<T>, Component>;\n  // clang-format on\n}\n"]}