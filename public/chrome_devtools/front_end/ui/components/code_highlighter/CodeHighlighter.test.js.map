{"version":3,"file":"CodeHighlighter.test.js","sourceRoot":"","sources":["../../../../../../../front_end/ui/components/code_highlighter/CodeHighlighter.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as CodeHighlighter from './code_highlighter.js';\n\nfunction parseTokens(code: string): [string, string][] {\n  const token = /\\[(\\S+) ([^\\]]+)\\]/g, tokens: [string, string][] = [];\n  for (let pos = 0;;) {\n    const match = token.exec(code);\n    const next = match ? match.index : code.length;\n    if (next > pos) {\n      tokens.push([code.slice(pos, next), '']);\n    }\n    if (!match) {\n      break;\n    }\n    tokens.push([match[2], match[1]]);\n    pos = match.index + match[0].length;\n  }\n  return tokens;\n}\n\nfunction testHighlight(code: string, mimeType: string) {\n  return async () => {\n    const tokens = parseTokens(code), rawCode = tokens.map(t => t[0]).join('');\n    const highlighter = await CodeHighlighter.CodeHighlighter.create(rawCode, mimeType);\n    let i = 0;\n    highlighter.highlight((text, style) => {\n      assert.strictEqual(\n          JSON.stringify([text, style.replace(/\\btoken-/g, '').split(' ').sort().join('&')]),\n          JSON.stringify(tokens[i++] || ['', '']));\n    });\n  };\n}\n\ndescribe('CodeHighlighter', () => {\n  describe('languageFromMIMEType', () => {\n    it('also supports common legacy MIME types for JavaScript', async () => {\n      for (const mimeType of ['application/ecmascript', 'application/javascript', 'text/jscript']) {\n        const language = await CodeHighlighter.CodeHighlighter.languageFromMIME(mimeType);\n        assert.isNotNull(language, `legacy MIME type '${mimeType}' not recognized`);\n      }\n    });\n  });\n\n  // clang-format off\n  it('can highlight JavaScript', testHighlight(`\n[keyword function] [definition foo]([definition bar]) {\n  [keyword return] [number 22];\n}`, 'text/javascript'));\n\nit('can highlight JavaScript compatible with CodeMirror 5', testHighlight(`\n[keyword function] [definition name]([definition params]) {\n  [keyword var] [definition x] = [number 1];\n  [keyword const] [definition y] = [number 2];\n  [keyword let] [definition z] = [number 3];\n  [keyword return] [variable x] + [variable params];\n}`, 'text/javascript')),\n\nit('can highlight JavaScript with `import { default as name }` syntax', testHighlight(`\n[keyword import] {[keyword default] [keyword as] [definition name]} [keyword from] [string 'module'];\n`, 'text/javascript')),\n\nit('can highlight JavaScript with `new.target` syntax', testHighlight(`\n[keyword new].[property target]\n`, 'text/javascript'));\n\n  it('can highlight TypeScript', testHighlight(`\n[keyword type] [type X] = {\n  [property x]: [type boolean]\n}`, 'text/typescript'));\n\nit('can highlight TypeScript with the new `using` keyword', testHighlight(`\n[keyword using] [definition resource] = [variable getResource]()\n`, 'text/typescript'));\n\n  it('can highlight JSX', testHighlight(`\n[keyword function] [definition App]() {\n  [keyword return] (\n    <[tag div] [attribute className]=[attribute-value \"App\"]>\n          Hello World!\n    </[tag div]>);\n }`, 'text/jsx'));\n\n  it('can highlight JSX within JavaScript files', testHighlight(`\n[keyword const] [definition t] = <[tag div] [attribute disabled]>hello</[tag div]>\n`, 'text/javascript'));\n\n  it('can highlight HTML', testHighlight(`\n[meta <!doctype html>]\n<[tag html] [attribute lang]=[attribute-value ar]>\n  ...\n</[tag html]>`, 'text/html'));\n\n  it('can highlight HTML with <script type=\"importmap\"> blocks', testHighlight(`\n[meta <!DOCTYPE html>]\n<[tag script] [attribute type]=[attribute-value \"importmap\"]>\n{\n  [string \"imports\"]: {\n    [string \"moment\"]: [string \"/node_modules/moment/src/moment.js\"],\n    [string \"lodash\"]: [string \"/node_modules/lodash-es/lodash.js\"]\n  }\n}\n</[tag script]>`, 'text/html'));\n\nit('can highlight HTML with <script type=\"speculationrules\"> blocks', testHighlight(`\n[meta <!DOCTYPE html>]\n<[tag script] [attribute type]=[attribute-value \"speculationrules\"]>\n{\n  [string \"prefetch\"]: [\n    {\n      [string \"source\"]: [string \"list\"],\n      [string \"urls\"]: [\n        [string \"prefetch.html?2\"]\n      ]\n    }\n  ],\n  [string \"prerender\"]: [\n    {\n      [string \"source\"]: [string \"list\"],\n      [string \"urls\"]: [\n        [string \"prerender.html?2\"]\n      ]\n    }\n  ]\n}\n</[tag script]>`, 'text/html'));\n\nit('can highlight HTML with <script type=\"application/json\"> blocks', testHighlight(`\n[meta <!DOCTYPE html>]\n<[tag script] [attribute type]=[attribute-value \"application/json\"]>\n{\n  [string \"one\"]: [number 2],\n  [string \"two\"]: [atom true]\n}\n</[tag script]>`, 'text/html'));\n\nit('can highlight HTML with <script type=\"application/ld+json\"> blocks', testHighlight(`\n[meta <!DOCTYPE html>]\n<[tag script] [attribute type]=[attribute-value \"application/ld+json\"]>\n{\n  [string \"@type\"]: [string \"PostalAddress\"],\n  [string \"streetAddress\"]: [string \"Musterstrasse 1\"],\n  [string \"addressLocality\"]: [string \"Musterstadt\"],\n  [string \"postalCode\"]: [string \"12345\"],\n  [string \"addressCountry\"]: [string \"DE\"],\n}\n</[tag script]>`, 'text/html'));\n\nit('can highlight HTML with <script type=\"text/jsx\"> blocks', testHighlight(`\n[meta <!DOCTYPE html>]\n<[tag script] [attribute type]=[attribute-value \"text/jsx\"]>\n  [keyword const] [definition app] = [variable document].[property getElementById]([string 'app']);\n  [variable ReactDOM].[property render](<[tag h1]>Develop. Preview. Ship. 🚀</[tag h1]>, [variable app]);\n</[tag script]>`, 'text/html'));\n\n  it('can highlight HTML with onclick inline JavaScript', testHighlight(`\n[meta <!DOCTYPE html>]\n<[tag button] [attribute onclick]=[variable handleClick]()>Click me</[tag button]>`, 'text/html'));\n\n  it('can highlight HTML with element style', testHighlight(`\n[meta <!DOCTYPE html>]\n<[tag button] [attribute style]=[property color]:[atom green]]>Don't click me</[tag button]>`, 'text/html'));\n\n  it('can highlight SVG', testHighlight(`\n<[tag svg] [attribute viewBox]=[attribute-value \"0 0 10 10\"]>\n  <[tag circle] />\n</[tag svg]>`, 'image/svg+xml'));\n\n  it('can highlight XHTML', testHighlight(`[meta <?xml version=\"1.0\" encoding=\"UTF-8\"?>]\n  [meta <!DOCTYPE html>]\n  <[tag html] [attribute xmlns]=[attribute-value \"http://www.w3.org/1999/xhtml\"]>\n  </[tag html]>`, 'application/xhtml+xml'));\n\n  it('can highlight Angular Templates', testHighlight(`\n<[tag div] [attribute class]=[attribute-value \"title\"]>{{[variable obj].[property title]}}</[tag div]>\n<[tag app-button] ([attribute clicked])=[variable onClick]()></[tag app-button]>\n`, 'text/x.angular'));\n\n  it('can highlight Svelte Templates', testHighlight(`\n<[tag script]>\n[keyword import] [definition Widget] [keyword from] [string './Widget.svelte'];\n</[tag script]>\n\n<[tag button] [attribute disabled]={[variable clickable]}>Click me!</[tag button]>\n\n<[tag style]>\n[tag button] {\n  [property font-weight]: [atom bold];\n  [property color]: [number #ff2];\n}\n</[tag style]>\n`, 'text/x.svelte'));\n\n  it('can highlight Vue Templates', testHighlight(`\n<[tag template]>\n  <[tag Header] [keyword v-show]=[attribute-value \"][variable view][attribute-value \"] />\n  <[tag Main] @[variable hide]=[attribute-value \"][variable onHide][attribute-value \"] />\n  <[tag router-view] />\n</[tag template]>`, 'text/x.vue'));\n\n  it('can highlight CSS', testHighlight(`\n[tag span].[type cls]#[atom id] {\n  [property font-weight]: [atom bold];\n  [property color]: [number #ff2];\n  [property width]: [number 4px];\n}`, 'text/css'));\n\n  it('can highlight GSS', testHighlight(`\n[definition @component] {\n  [tag foo] {\n    [property color]: [keyword black];\n  }\n}\n`, 'text/x-gss'));\n\n  it('can highlight LESS', testHighlight(`\n[variable @width]: [number 10px];\n[variable @height]: [variable @width] + [number 10px];\n\n#[atom header] {\n  [property width]: [variable @width];\n  [property height]: [variable @height];\n}\n`, 'text/x-less'));\n\n  it('can highlight SCSS', testHighlight(`\n[variable $width]: [number 10px];\n[variable $height]: [variable $width] + [number 10px];\n\n#[atom header] {\n  [property width]: [variable $width];\n  [property height]: [variable $height];\n}\n`, 'text/x-scss'));\n\n  it('can highlight SASS', testHighlight(`\n[variable $width]: [number 10px]\n[variable $height]: [variable $width] + [number 10px]\n\n#[atom header]\n  [property width]: [variable $width]\n  [property height]: [variable $height]\n`, 'text/x-sass'));\n\n  it('can highlight WAST', testHighlight(`\n([keyword module]\n ([keyword type] [variable $t] ([keyword func] ([keyword param] [type i32])))\n ([keyword func] [variable $max] [comment (; 1 ;)] ([keyword param] [variable $0] [type i32]) ([keyword result] [type i32])\n   ([keyword get_local] [variable $0])))\n`, 'application/wasm'));\n\n  it('can highlight JSON', testHighlight(`\n{\n  [string \"one\"]: [number 2],\n  [string \"two\"]: [atom true]\n}`, 'application/json'));\n\n  it('can highlight Markdown', testHighlight(`\n[heading&meta #][heading  Head]\n\nParagraph with [emphasis&meta *][emphasis emphasized][emphasis&meta *] text.\n`, 'text/markdown'));\n\n  it('can highlight Python', testHighlight(`\n[keyword def] [definition f]([variable x] = [atom True]):\n  [keyword return] [variable x] * [number 10];\n`, 'text/x-python'));\n\nit('can highlight PHP', testHighlight(`\n[meta <?] [keyword echo] [string 'Hello World!']; [meta ?>]\n`, 'application/x-httpd-php'));\n\n  it('can highlight Shell code', testHighlight(`\n[builtin cat] [string \"a\"]\n`, 'text/x-sh'));\n\n  it('can highlight Dart code', testHighlight(`\n[builtin void] [variable main]() {\n  [variable print]([string 'Hello, World!']);\n}\n`, 'application/vnd.dart'));\n\n  it('can highlight Go code', testHighlight(`\n[keyword package] [variable main]\n\n[keyword import] [string \"fmt\"]\n\n[keyword func] [variable main]() {\n  [variable fmt][number .][variable Println]([string \"hello world\"])\n}\n`, 'text/x-go'));\n\n  it('can highlight Kotlin code', testHighlight(`\n[keyword fun] [definition main]([variable args] : [variable Array]<[type String]>) {\n    [variable println]([string \"Hello, World!\"])\n}\n`, 'text/x-kotlin'));\n\n  it('can highlight Scala code', testHighlight(`\n[keyword object] [definition HelloWord] [keyword extends] [type App] {\n  [keyword println]([string \"Hello, world\"])\n}\n`, 'text/x-scala'));\n\n  it('can highlight Web app manifests', testHighlight(`\n{\n  [string \"name\"]: [string \"Test\"],\n  [string \"start_url\"]: [string \".\"]\n}\n  `, 'application/manifest+json'));\n  // clang_format on\n});\n"]}