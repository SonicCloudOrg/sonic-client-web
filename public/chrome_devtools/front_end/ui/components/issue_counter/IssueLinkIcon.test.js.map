{"version":3,"file":"IssueLinkIcon.test.js","sourceRoot":"","sources":["../../../../../../../front_end/ui/components/issue_counter/IssueLinkIcon.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../../core/common/common.js';\nimport type * as Protocol from '../../../generated/protocol.js';\nimport * as IssuesManager from '../../../models/issues_manager/issues_manager.js';\nimport {\n  renderElementIntoDOM,\n} from '../../../testing/DOMHelpers.js';\nimport {describeWithLocale} from '../../../testing/EnvironmentHelpers.js';\nimport * as IconButton from '../icon_button/icon_button.js';\nimport * as Coordinator from '../render_coordinator/render_coordinator.js';\n\nimport * as IssueCounter from './issue_counter.js';\n\nconst coordinator = Coordinator.RenderCoordinator.RenderCoordinator.instance();\n\nconst renderIssueLinkIcon = async(data: IssueCounter.IssueLinkIcon.IssueLinkIconData): Promise<{\n  component: IssueCounter.IssueLinkIcon.IssueLinkIcon,\n  shadowRoot: ShadowRoot,\n}> => {\n  const component = new IssueCounter.IssueLinkIcon.IssueLinkIcon();\n  component.data = data;\n  renderElementIntoDOM(component);\n  assert.isNotNull(component.shadowRoot);\n  await coordinator.done();\n  return {component, shadowRoot: component.shadowRoot};\n};\n\nexport const extractElements = (shadowRoot: ShadowRoot): {\n  icon: IconButton.Icon.Icon,\n  button: HTMLButtonElement,\n} => {\n  const icon = shadowRoot.querySelector('devtools-icon');\n  assert.instanceOf(icon, IconButton.Icon.Icon);\n  const button = shadowRoot.querySelector('button');\n  assert.instanceOf(button, HTMLButtonElement);\n  return {icon, button};\n};\n\ninterface MockIssueResolverEntry {\n  resolve: (issue: IssuesManager.Issue.Issue|null) => void;\n  promise: Promise<IssuesManager.Issue.Issue|null>;\n}\n\nclass MockIssueResolver {\n  #promiseMap: Map<string, MockIssueResolverEntry> = new Map();\n\n  waitFor(issueId?: string) {\n    if (!issueId) {\n      if (this.#promiseMap.size !== 1) {\n        throw new Error('more than one issue being awaited, specify a issue id');\n      }\n      issueId = this.#promiseMap.keys().next().value;\n    }\n    issueId = issueId || '';\n    const entry = this.#promiseMap.get(issueId);\n    if (entry) {\n      return entry.promise;\n    }\n    let resolve: (issue: IssuesManager.Issue.Issue|null) => void = () => {};\n    const promise = new Promise<IssuesManager.Issue.Issue|null>(r => {\n      resolve = r;\n    });\n    this.#promiseMap.set(issueId, {resolve, promise});\n    return promise;\n  }\n\n  resolve(result: IssuesManager.Issue.Issue|null, issueId?: string): void {\n    if (!issueId && this.#promiseMap.size === 1) {\n      issueId = this.#promiseMap.keys().next().value;\n    }\n    issueId = issueId || result?.getIssueId() || '';\n    const entry = this.#promiseMap.get(issueId);\n    if (!entry) {\n      throw new Error('resolve uninitialized');\n    }\n    entry.resolve(result);\n    this.#promiseMap.delete(issueId);\n  }\n}\n\ndescribeWithLocale('IssueLinkIcon', () => {\n  const issueId = 'issue1' as Protocol.Audits.IssueId;\n  const mockIssue = {\n    getKind() {\n      return IssuesManager.Issue.IssueKind.PageError;\n    },\n    getIssueId() {\n      return issueId;\n    },\n    getDescription() {\n      return null;\n    },\n  };\n\n  describe('with simple issues', () => {\n    const failingIssueResolver = {\n      async waitFor() {\n        throw new Error('Couldn\\'t resolve');\n      },\n    };\n\n    it('renders correctly without an issue', async () => {\n      const {shadowRoot} = await renderIssueLinkIcon({\n        issueId,\n        issueResolver: failingIssueResolver as unknown as IssuesManager.IssueResolver.IssueResolver,\n      });\n\n      const {icon} = extractElements(shadowRoot);\n      assert.strictEqual(icon.name, 'issue-questionmark-filled');\n    });\n\n    it('renders correctly with a \"page error\" issue', async () => {\n      const {shadowRoot} = await renderIssueLinkIcon({\n        issue: mockIssue as unknown as IssuesManager.Issue.Issue,\n      });\n\n      const {icon} = extractElements(shadowRoot);\n      assert.strictEqual(icon.name, 'issue-cross-filled');\n    });\n\n    it('the style reacts to the presence of the issue', async () => {\n      const {shadowRoot} = await renderIssueLinkIcon({\n        issue: mockIssue as unknown as IssuesManager.Issue.Issue,\n      });\n\n      const {button} = extractElements(shadowRoot);\n      assert.isTrue(button.classList.contains('link'));\n    });\n\n    it('the style reacts to the absence of an issue', async () => {\n      const {shadowRoot} = await renderIssueLinkIcon({\n        issueId,\n        issueResolver: failingIssueResolver as unknown as IssuesManager.IssueResolver.IssueResolver,\n      });\n\n      const {button} = extractElements(shadowRoot);\n      assert.isFalse(button.classList.contains('link'));\n    });\n  });\n\n  describe('transitions upon issue resolution', () => {\n    it('to change the style correctly', async () => {\n      const resolver = new MockIssueResolver();\n      const {shadowRoot} = await renderIssueLinkIcon({\n        issueId,\n        issueResolver: resolver as unknown as IssuesManager.IssueResolver.IssueResolver,\n      });\n\n      resolver.resolve(mockIssue as unknown as IssuesManager.Issue.Issue);\n      await coordinator.done({waitForWork: true});\n\n      assert.isTrue(extractElements(shadowRoot).button.classList.contains('link'));\n    });\n\n    it('handles multiple data assignments', async () => {\n      const {shadowRoot, component} = await renderIssueLinkIcon({\n        issue: mockIssue as unknown as IssuesManager.Issue.Issue,\n      });\n\n      const mockIssue2 = {\n        getKind() {\n          return IssuesManager.Issue.IssueKind.BreakingChange;\n        },\n      };\n\n      component.data = {\n        issue: mockIssue2 as unknown as IssuesManager.Issue.Issue,\n      };\n      await coordinator.done({waitForWork: true});\n\n      const {icon} = extractElements(shadowRoot);\n      assert.strictEqual(icon.name, 'issue-exclamation-filled');\n    });\n  });\n\n  describe('handles clicks correctly', () => {\n    it('if the button is clicked', async () => {\n      const revealOverride = sinon.fake(Common.Revealer.reveal);\n      const {shadowRoot} = await renderIssueLinkIcon({\n        issue: mockIssue as unknown as IssuesManager.Issue.Issue,\n        revealOverride,\n      });\n\n      const {button} = extractElements(shadowRoot);\n      button.click();\n      assert.isTrue(revealOverride.called);\n    });\n  });\n});\n"]}