{"version":3,"file":"IssueLinkIcon.js","sourceRoot":"","sources":["../../../../../../../front_end/ui/components/issue_counter/IssueLinkIcon.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../../core/common/common.js';\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport type * as Platform from '../../../core/platform/platform.js';\nimport type * as Protocol from '../../../generated/protocol.js';\nimport * as IssuesManager from '../../../models/issues_manager/issues_manager.js';\nimport * as IconButton from '../../../ui/components/icon_button/icon_button.js';\nimport * as Coordinator from '../../../ui/components/render_coordinator/render_coordinator.js';\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\nimport * as VisualLogging from '../../../ui/visual_logging/visual_logging.js';\n\nimport {getIssueKindIconData} from './IssueCounter.js';\nimport IssueLinkIconStyles from './issueLinkIcon.css.js';\n\nconst UIStrings = {\n  /**\n   * @description Title for a link to show an issue in the issues tab\n   */\n  clickToShowIssue: 'Click to show issue in the issues tab',\n  /**\n   * @description Title for a link to show an issue in the issues tab\n   * @example {A title of an Issue} title\n   */\n  clickToShowIssueWithTitle: 'Click to open the issue tab and show issue: {title}',\n  /**\n   *@description Title for an link to show an issue that is unavailable because the issue couldn't be resolved\n   */\n  issueUnavailable: 'Issue unavailable at this time',\n};\nconst str_ = i18n.i18n.registerUIStrings('ui/components/issue_counter/IssueLinkIcon.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport interface IssueLinkIconData {\n  issue?: IssuesManager.Issue.Issue|null;\n  issueId?: Protocol.Audits.IssueId;\n  issueResolver?: IssuesManager.IssueResolver.IssueResolver;\n  additionalOnClickAction?: () => void;\n  revealOverride?: (revealable: unknown, omitFocus?: boolean) => Promise<void>;\n}\n\nexport const extractShortPath = (path: string): string => {\n  // 1st regex matches everything after last '/'\n  // if path ends with '/', 2nd regex returns everything between the last two '/'\n  return (/[^/]+$/.exec(path) || /[^/]+\\/$/.exec(path) || [''])[0];\n};\n\nconst coordinator = Coordinator.RenderCoordinator.RenderCoordinator.instance();\n\nexport class IssueLinkIcon extends HTMLElement {\n  static readonly litTagName = LitHtml.literal`devtools-issue-link-icon`;\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  // The value `null` indicates that the issue is not available,\n  // `undefined` that it is still being resolved.\n  #issue?: IssuesManager.Issue.Issue|null;\n  #issueTitle: string|null = null;\n  #issueId?: Protocol.Audits.IssueId;\n  #issueResolver?: IssuesManager.IssueResolver.IssueResolver;\n  #additionalOnClickAction?: () => void;\n  #reveal = Common.Revealer.reveal;\n\n  set data(data: IssueLinkIconData) {\n    this.#issue = data.issue;\n    this.#issueId = data.issueId;\n    this.#issueResolver = data.issueResolver;\n    if (!this.#issue) {\n      if (!this.#issueId) {\n        throw new Error('Either `issue` or `issueId` must be provided');\n      } else if (!this.#issueResolver) {\n        throw new Error('An `IssueResolver` must be provided if an `issueId` is provided.');\n      }\n    }\n    this.#additionalOnClickAction = data.additionalOnClickAction;\n    if (data.revealOverride) {\n      this.#reveal = data.revealOverride;\n    }\n    void this.#fetchIssueData();\n    void this.#render();\n  }\n\n  async #fetchIssueData(): Promise<void> {\n    if (!this.#issue && this.#issueId) {\n      try {\n        this.#issue = await this.#issueResolver?.waitFor(this.#issueId);\n      } catch {\n        this.#issue = null;\n      }\n    }\n    const description = this.#issue?.getDescription();\n    if (description) {\n      const title = await IssuesManager.MarkdownIssueDescription.getIssueTitleFromMarkdownDescription(description);\n      if (title) {\n        this.#issueTitle = title;\n      }\n    }\n    await this.#render();\n  }\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [IssueLinkIconStyles];\n  }\n\n  get data(): IssueLinkIconData {\n    return {\n      issue: this.#issue,\n      issueId: this.#issueId,\n      issueResolver: this.#issueResolver,\n      additionalOnClickAction: this.#additionalOnClickAction,\n      revealOverride: this.#reveal !== Common.Revealer.reveal ? this.#reveal : undefined,\n    };\n  }\n\n  handleClick(event: MouseEvent): void {\n    if (event.button !== 0) {\n      return;  // Only handle left-click for now.\n    }\n    if (this.#issue) {\n      void this.#reveal(this.#issue);\n    }\n    this.#additionalOnClickAction?.();\n    event.consume();\n  }\n\n  #getTooltip(): Platform.UIString.LocalizedString {\n    if (this.#issueTitle) {\n      return i18nString(UIStrings.clickToShowIssueWithTitle, {title: this.#issueTitle});\n    }\n    if (this.#issue) {\n      return i18nString(UIStrings.clickToShowIssue);\n    }\n    return i18nString(UIStrings.issueUnavailable);\n  }\n\n  #getIconName(): string {\n    if (!this.#issue) {\n      return 'issue-questionmark-filled';\n    }\n    const {iconName} = getIssueKindIconData(this.#issue.getKind());\n    return iconName;\n  }\n\n  #render(): Promise<void> {\n    return coordinator.write(() => {\n      // clang-format off\n      LitHtml.render(LitHtml.html`\n      <button class=${LitHtml.Directives.classMap({'link': Boolean(this.#issue)})}\n              title=${this.#getTooltip()}\n              jslog=${VisualLogging.link('issue').track({click: true})}\n              @click=${this.handleClick}>\n        <${IconButton.Icon.Icon.litTagName} name=${this.#getIconName()}></${IconButton.Icon.Icon.litTagName}>\n      </span>`,\n      this.#shadow, {host: this});\n      // clang-format on\n    });\n  }\n}\n\ncustomElements.define('devtools-issue-link-icon', IssueLinkIcon);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-issue-link-icon': IssueLinkIcon;\n  }\n}\n"]}