{"version":3,"file":"SettingCheckbox.test.js","sourceRoot":"","sources":["../../../../../../../front_end/ui/components/settings/SettingCheckbox.test.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,MAAM,MAAM,gCAAgC,CAAC;AAEzD,OAAO,KAAK,IAAI,MAAM,4BAA4B,CAAC;AACnD,OAAO,EACL,oBAAoB,GACrB,MAAM,gCAAgC,CAAC;AACxC,OAAO,EAAC,iBAAiB,EAAE,gBAAgB,EAAC,MAAM,wCAAwC,CAAC;AAE3F,OAAO,KAAK,QAAQ,MAAM,eAAe,CAAC;AAE1C,SAAS,qBAAqB,CAAC,IAAkD;IAE/E,MAAM,SAAS,GAAG,IAAI,QAAQ,CAAC,eAAe,CAAC,eAAe,EAAE,CAAC;IACjE,SAAS,CAAC,IAAI,GAAG,IAAI,CAAC;IACtB,oBAAoB,CAAC,SAAS,CAAC,CAAC;IAChC,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;IAEvC,MAAM,QAAQ,GAAG,SAAS,CAAC,UAAU,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;IAC7D,MAAM,CAAC,UAAU,CAAC,QAAQ,EAAE,gBAAgB,CAAC,CAAC;IAE9C,OAAO,EAAC,SAAS,EAAE,QAAQ,EAAC,CAAC;AAC/B,CAAC;AAED,QAAQ,CAAC,iBAAiB,EAAE,GAAG,EAAE;IAC/B,UAAU,CAAC,GAAG,EAAE;QACd,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC;IAC1C,CAAC,CAAC,CAAC;IACH,SAAS,CAAC,GAAG,EAAE;QACb,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC;IAC1C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,yDAAyD,EAAE,GAAG,EAAE;QACjE,MAAM,OAAO,GAAG,iBAAiB,CAAU,SAAS,EAAE,IAAI,CAAC,CAAC;QAC5D,MAAM,EAAC,QAAQ,EAAC,GAAG,qBAAqB,CAAC,EAAC,OAAO,EAAC,CAAC,CAAC;QAEpD,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;IAClC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,4DAA4D,EAAE,GAAG,EAAE;QACpE,MAAM,OAAO,GAAG,iBAAiB,CAAU,SAAS,EAAE,KAAK,CAAC,CAAC;QAC7D,MAAM,EAAC,QAAQ,EAAC,GAAG,qBAAqB,CAAC,EAAC,OAAO,EAAC,CAAC,CAAC;QAEpD,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;IACnC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,+CAA+C,EAAE,GAAG,EAAE;QACvD,MAAM,OAAO,GAAG,iBAAiB,CAAU,SAAS,EAAE,IAAI,CAAC,CAAC;QAC5D,MAAM,EAAC,QAAQ,EAAC,GAAG,qBAAqB,CAAC,EAAC,OAAO,EAAC,CAAC,CAAC;QAEpD,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAEnB,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;IACnC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,2CAA2C,EAAE,GAAG,EAAE;QACnD,MAAM,QAAQ,GAAG,iBAAiB,CAAU,UAAU,EAAE,IAAI,CAAC,CAAC;QAC9D,MAAM,QAAQ,GAAG,iBAAiB,CAAU,UAAU,EAAE,IAAI,CAAC,CAAC;QAC9D,MAAM,EAAC,SAAS,EAAE,QAAQ,EAAC,GAAG,qBAAqB,CAAC,EAAC,OAAO,EAAE,QAAQ,EAAC,CAAC,CAAC;QAEzE,SAAS,CAAC,IAAI,GAAG,EAAC,OAAO,EAAE,QAAQ,EAAC,CAAC;QACrC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAEpB,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;IAClC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,+CAA+C,EAAE,GAAG,EAAE;QACvD,MAAM,OAAO,GAAG,iBAAiB,CAAU,SAAS,EAAE,KAAK,CAAC,CAAC;QAC7D,MAAM,EAAC,QAAQ,EAAC,GAAG,qBAAqB,CAAC,EAAC,OAAO,EAAC,CAAC,CAAC;QAEpD,QAAQ,CAAC,KAAK,EAAE,CAAC;QAEjB,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC;IAC/B,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,8BAA8B,EAAE,GAAG,EAAE;QACtC,MAAM,OAAO,GAAG,iBAAiB,CAAU,SAAS,EAAE,KAAK,CAAC,CAAC;QAC7D,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QAC1B,MAAM,EAAC,QAAQ,EAAC,GAAG,qBAAqB,CAAC,EAAC,OAAO,EAAC,CAAC,CAAC;QAEpD,QAAQ,CAAC,KAAK,EAAE,CAAC;QAEjB,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC;IAChC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,kCAAkC,EAAE,GAAG,EAAE;QAC1C,gBAAgB,EAAE,CAAC;QACnB,MAAM,OAAO,GAAG,iBAAiB,CAAU,SAAS,EAAE,KAAK,CAAC,CAAC;QAC7D,OAAO,CAAC,eAAe,CAAC;YACtB,WAAW,EAAE,SAAS;YACtB,WAAW,qDAAqC;YAChD,YAAY,EAAE,KAAK;YACnB,iBAAiB,EAAE,GAAG,EAAE;gBACtB,OAAO,EAAC,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAC,CAAC;YAC5C,CAAC;SACF,CAAC,CAAC;QAEH,MAAM,EAAC,QAAQ,EAAC,GAAG,qBAAqB,CAAC,EAAC,OAAO,EAAC,CAAC,CAAC;QAEpD,QAAQ,CAAC,KAAK,EAAE,CAAC;QAEjB,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC;QAC9B,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;IACnC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,uBAAuB,EAAE,GAAG,EAAE;QAC/B,gBAAgB,EAAE,CAAC;QACnB,MAAM,OAAO,GAAG,iBAAiB,CAAU,SAAS,EAAE,KAAK,CAAC,CAAC;QAC7D,OAAO,CAAC,eAAe,CAAC;YACtB,WAAW,EAAE,SAAS;YACtB,WAAW,qDAAqC;YAChD,YAAY,EAAE,KAAK;YACnB,iBAAiB,EAAE,GAAG,EAAE;gBACtB,OAAO,EAAC,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAC,CAAC;YAC5C,CAAC;SACF,CAAC,CAAC;QAEH,MAAM,EAAC,SAAS,EAAC,GAAG,qBAAqB,CAAC,EAAC,OAAO,EAAC,CAAC,CAAC;QAErD,MAAM,CAAC,WAAW,CAAE,SAAS,CAAC,UAAW,CAAC,aAAa,CAAC,kBAAkB,CAAiB,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;IAC/G,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,gDAAgD,EAAE,GAAG,EAAE;QACxD,MAAM,OAAO,GAAG,iBAAiB,CAAU,SAAS,EAAE,KAAK,CAAC,CAAC;QAC7D,OAAO,CAAC,eAAe,CAAC;YACtB,WAAW,EAAE,SAAS;YACtB,WAAW,qDAAqC;YAChD,YAAY,EAAE,KAAK;YACnB,iBAAiB,EAAE;gBACjB,OAAO,EAAE,GAAG,EAAE,CAAC,oBAAyD;gBACxE,QAAQ,EAAE,IAAI;aACf;SACF,CAAC,CAAC;QAEH,MAAM,EAAC,QAAQ,EAAC,GAAG,qBAAqB,CAAC,EAAC,OAAO,EAAC,CAAC,CAAC;QACpD,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;IACnC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,uEAAuE,EAAE,GAAG,EAAE;QAC/E,MAAM,UAAU,GAAG,iBAAiB,CAAC;QACrC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,QAAQ,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;QAC1D,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;QACtD,MAAM,OAAO,GAAG,iBAAiB,CAAU,SAAS,EAAE,KAAK,CAAC,CAAC;QAC7D,OAAO,CAAC,eAAe,CAAC;YACtB,WAAW,EAAE,SAAS;YACtB,WAAW,qDAAqC;YAChD,YAAY,EAAE,KAAK;YACnB,iBAAiB,EAAE;gBACjB,OAAO,EAAE,GAAG,EAAE,CAAC,oBAAyD;gBACxE,QAAQ,EAAE,IAAI;gBACd,UAAU;aACX;SACF,CAAC,CAAC;QAEH,MAAM,EAAC,QAAQ,EAAC,GAAG,qBAAqB,CAAC,EAAC,OAAO,EAAC,CAAC,CAAC;QACpD,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;IACnC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,wEAAwE,EAAE,GAAG,EAAE;QAChF,MAAM,UAAU,GAAG,iBAAiB,CAAC;QACrC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,QAAQ,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;QAC1D,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,UAAU,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;QACvD,MAAM,OAAO,GAAG,iBAAiB,CAAU,SAAS,EAAE,KAAK,CAAC,CAAC;QAC7D,OAAO,CAAC,eAAe,CAAC;YACtB,WAAW,EAAE,SAAS;YACtB,WAAW,qDAAqC;YAChD,YAAY,EAAE,KAAK;YACnB,iBAAiB,EAAE;gBACjB,OAAO,EAAE,GAAG,EAAE,CAAC,oBAAyD;gBACxE,QAAQ,EAAE,IAAI;gBACd,UAAU;aACX;SACF,CAAC,CAAC;QAEH,MAAM,EAAC,QAAQ,EAAC,GAAG,qBAAqB,CAAC,EAAC,OAAO,EAAC,CAAC,CAAC;QACpD,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;IACpC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,gDAAgD,EAAE,GAAG,EAAE;QACxD,MAAM,OAAO,GAAG,iBAAiB,CAAU,SAAS,EAAE,KAAK,CAAC,CAAC;QAC7D,OAAO,CAAC,eAAe,CAAC;YACtB,WAAW,EAAE,SAAS;YACtB,WAAW,qDAAqC;YAChD,YAAY,EAAE,KAAK;YACnB,iBAAiB,EAAE;gBACjB,OAAO,EAAE,GAAG,EAAE,CAAC,oBAAyD;gBACxE,QAAQ,EAAE,KAAK;aAChB;SACF,CAAC,CAAC;QAEH,MAAM,EAAC,QAAQ,EAAC,GAAG,qBAAqB,CAAC,EAAC,OAAO,EAAC,CAAC,CAAC;QACpD,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;IACpC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../../core/common/common.js';\nimport type * as Platform from '../../../core/platform/platform.js';\nimport * as Root from '../../../core/root/root.js';\nimport {\n  renderElementIntoDOM,\n} from '../../../testing/DOMHelpers.js';\nimport {createFakeSetting, stubNoopSettings} from '../../../testing/EnvironmentHelpers.js';\n\nimport * as Settings from './settings.js';\n\nfunction renderSettingCheckbox(data: Settings.SettingCheckbox.SettingCheckboxData):\n    {component: Settings.SettingCheckbox.SettingCheckbox, checkbox: HTMLInputElement} {\n  const component = new Settings.SettingCheckbox.SettingCheckbox();\n  component.data = data;\n  renderElementIntoDOM(component);\n  assert.isNotNull(component.shadowRoot);\n\n  const checkbox = component.shadowRoot.querySelector('input');\n  assert.instanceOf(checkbox, HTMLInputElement);\n\n  return {component, checkbox};\n}\n\ndescribe('SettingCheckbox', () => {\n  beforeEach(() => {\n    Root.Runtime.experiments.clearForTest();\n  });\n  afterEach(() => {\n    Root.Runtime.experiments.clearForTest();\n  });\n\n  it('renders the checkbox ticked when the setting is enabled', () => {\n    const setting = createFakeSetting<boolean>('setting', true);\n    const {checkbox} = renderSettingCheckbox({setting});\n\n    assert.isTrue(checkbox.checked);\n  });\n\n  it('renders the checkbox unticked when the setting is disabled', () => {\n    const setting = createFakeSetting<boolean>('setting', false);\n    const {checkbox} = renderSettingCheckbox({setting});\n\n    assert.isFalse(checkbox.checked);\n  });\n\n  it('updates the checkbox when the setting changes', () => {\n    const setting = createFakeSetting<boolean>('setting', true);\n    const {checkbox} = renderSettingCheckbox({setting});\n\n    setting.set(false);\n\n    assert.isFalse(checkbox.checked);\n  });\n\n  it('can be reassigned to a different settings', () => {\n    const setting1 = createFakeSetting<boolean>('setting1', true);\n    const setting2 = createFakeSetting<boolean>('setting2', true);\n    const {component, checkbox} = renderSettingCheckbox({setting: setting1});\n\n    component.data = {setting: setting2};\n    setting1.set(false);\n\n    assert.isTrue(checkbox.checked);\n  });\n\n  it('changes the setting when the checkbox changes', () => {\n    const setting = createFakeSetting<boolean>('setting', false);\n    const {checkbox} = renderSettingCheckbox({setting});\n\n    checkbox.click();\n\n    assert.isTrue(setting.get());\n  });\n\n  it('ignores clicks when disabled', () => {\n    const setting = createFakeSetting<boolean>('setting', false);\n    setting.setDisabled(true);\n    const {checkbox} = renderSettingCheckbox({setting});\n\n    checkbox.click();\n\n    assert.isFalse(setting.get());\n  });\n\n  it('can be disabled via registration', () => {\n    stubNoopSettings();\n    const setting = createFakeSetting<boolean>('setting', false);\n    setting.setRegistration({\n      settingName: 'setting',\n      settingType: Common.Settings.SettingType.BOOLEAN,\n      defaultValue: false,\n      disabledCondition: () => {\n        return {disabled: true, reason: 'reason'};\n      },\n    });\n\n    const {checkbox} = renderSettingCheckbox({setting});\n\n    checkbox.click();\n\n    assert.isFalse(setting.get());\n    assert.isTrue(checkbox.disabled);\n  });\n\n  it('shows disabled reason', () => {\n    stubNoopSettings();\n    const setting = createFakeSetting<boolean>('setting', false);\n    setting.setRegistration({\n      settingName: 'setting',\n      settingType: Common.Settings.SettingType.BOOLEAN,\n      defaultValue: false,\n      disabledCondition: () => {\n        return {disabled: true, reason: 'reason'};\n      },\n    });\n\n    const {component} = renderSettingCheckbox({setting});\n\n    assert.strictEqual((component.shadowRoot!.querySelector('.disabled-reason') as HTMLElement).title, 'reason');\n  });\n\n  it('is disabled for a disabled deprecated settings', () => {\n    const setting = createFakeSetting<boolean>('setting', false);\n    setting.setRegistration({\n      settingName: 'setting',\n      settingType: Common.Settings.SettingType.BOOLEAN,\n      defaultValue: false,\n      deprecationNotice: {\n        warning: () => 'Setting deprecated' as Platform.UIString.LocalizedString,\n        disabled: true,\n      },\n    });\n\n    const {checkbox} = renderSettingCheckbox({setting});\n    assert.isTrue(checkbox.disabled);\n  });\n\n  it('is enabled for a disabled deprecated settings with enabled experiment', () => {\n    const experiment = 'test-experiment';\n    Root.Runtime.experiments.register(experiment, experiment);\n    Root.Runtime.experiments.setEnabled(experiment, true);\n    const setting = createFakeSetting<boolean>('setting', false);\n    setting.setRegistration({\n      settingName: 'setting',\n      settingType: Common.Settings.SettingType.BOOLEAN,\n      defaultValue: false,\n      deprecationNotice: {\n        warning: () => 'Setting deprecated' as Platform.UIString.LocalizedString,\n        disabled: true,\n        experiment,\n      },\n    });\n\n    const {checkbox} = renderSettingCheckbox({setting});\n    assert.isTrue(checkbox.disabled);\n  });\n\n  it('is enabled for a disabled deprecated settings with disabled experiment', () => {\n    const experiment = 'test-experiment';\n    Root.Runtime.experiments.register(experiment, experiment);\n    Root.Runtime.experiments.setEnabled(experiment, false);\n    const setting = createFakeSetting<boolean>('setting', false);\n    setting.setRegistration({\n      settingName: 'setting',\n      settingType: Common.Settings.SettingType.BOOLEAN,\n      defaultValue: false,\n      deprecationNotice: {\n        warning: () => 'Setting deprecated' as Platform.UIString.LocalizedString,\n        disabled: true,\n        experiment,\n      },\n    });\n\n    const {checkbox} = renderSettingCheckbox({setting});\n    assert.isFalse(checkbox.disabled);\n  });\n\n  it('is disabled for an enabled deprecated settings', () => {\n    const setting = createFakeSetting<boolean>('setting', false);\n    setting.setRegistration({\n      settingName: 'setting',\n      settingType: Common.Settings.SettingType.BOOLEAN,\n      defaultValue: false,\n      deprecationNotice: {\n        warning: () => 'Setting deprecated' as Platform.UIString.LocalizedString,\n        disabled: false,\n      },\n    });\n\n    const {checkbox} = renderSettingCheckbox({setting});\n    assert.isFalse(checkbox.disabled);\n  });\n});\n"]}