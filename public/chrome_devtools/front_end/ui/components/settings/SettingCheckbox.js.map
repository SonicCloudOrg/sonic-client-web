{"version":3,"file":"SettingCheckbox.js","sourceRoot":"","sources":["../../../../../../../front_end/ui/components/settings/SettingCheckbox.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAG7B,OAAO,KAAK,OAAO,MAAM,4BAA4B,CAAC;AACtD,OAAO,KAAK,aAAa,MAAM,wCAAwC,CAAC;AACxE,OAAO,KAAK,UAAU,MAAM,+BAA+B,CAAC;AAC5D,OAAO,KAAK,KAAK,MAAM,mBAAmB,CAAC;AAE3C,OAAO,qBAAqB,MAAM,0BAA0B,CAAC;AAC7D,OAAO,EAAC,yBAAyB,EAAC,MAAM,gCAAgC,CAAC;AAMzE;;GAEG;AACH,MAAM,OAAO,eAAgB,SAAQ,WAAW;IAC9C,MAAM,CAAU,UAAU,GAAG,OAAO,CAAC,OAAO,CAAA,kBAAkB,CAAC;IACtD,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC,CAAC;IAErD,QAAQ,CAAoC;IAC5C,yBAAyB,CAAsC;IAE/D,iBAAiB;QACf,IAAI,CAAC,OAAO,CAAC,kBAAkB,GAAG,CAAC,KAAK,CAAC,cAAc,EAAE,qBAAqB,CAAC,CAAC;IAClF,CAAC;IAED,IAAI,IAAI,CAAC,IAAyB;QAChC,IAAI,IAAI,CAAC,yBAAyB,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC;YACpD,IAAI,CAAC,QAAQ,CAAC,oBAAoB,CAAC,IAAI,CAAC,yBAAyB,CAAC,QAAQ,CAAC,CAAC;QAC9E,CAAC;QAED,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC;QAE7B,IAAI,CAAC,yBAAyB,GAAG,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,GAAG,EAAE;YACpE,IAAI,CAAC,OAAO,EAAE,CAAC;QACjB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,WAAW,EAAE,CAAC;YAChC,OAAO,SAAS,CAAC;QACnB,CAAC;QAED,OAAO,OAAO,CAAC,IAAI,CAAA,IAAI,yBAAyB,CAAC,UAAU,UACvD,IAAI,CAAC,QAAQ,CAAC,WAA0C,MAAM,yBAAyB,CAAC,UAAU,GAAG,CAAC;IAC5G,CAAC;IAED,OAAO;QACL,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;YACnB,MAAM,IAAI,KAAK,CAAC,4CAA4C,CAAC,CAAC;QAChE,CAAC;QAED,MAAM,IAAI,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACrC,MAAM,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,cAAc,EAAE,CAAC,CAAC;YAC3C,OAAO,CAAC,IAAI,CAAA;SACX,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,8CAC5B,IAAI,CAAC,QAAQ,CAAC,cAAc,EAAE,WAAW,OAAO,MAAM,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU;KAC5F,CAAC,CAAC;YACC,OAAO,CAAC,OAAO,CAAC;QACpB,OAAO,CAAC,MAAM,CACV,OAAO,CAAC,IAAI,CAAA;;;;;uBAKG,IAAI,CAAC,QAAQ,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE;wBAC3D,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE;sBAC1B,IAAI,CAAC,gBAAgB;oBACvB,aAAa,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,EAAC,KAAK,EAAE,IAAI,EAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;yBAClE,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE;;YAElC,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,GAAG,MAAM,GAAG,IAAI;;WAEtC,EACH,IAAI,CAAC,OAAO,EAAE,EAAC,IAAI,EAAE,IAAI,EAAC,CAAC,CAAC;IAClC,CAAC;IAED,gBAAgB,CAAC,CAAQ;QACvB,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAE,CAAC,CAAC,MAA2B,CAAC,OAAO,CAAC,CAAC;QAC3D,IAAI,CAAC,aAAa,CAAC,IAAI,WAAW,CAAC,QAAQ,EAAE;YAC3C,OAAO,EAAE,IAAI;YACb,QAAQ,EAAE,KAAK;SAChB,CAAC,CAAC,CAAC;IACN,CAAC;;AAGH,cAAc,CAAC,MAAM,CAAC,kBAAkB,EAAE,eAAe,CAAC,CAAC","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Common from '../../../core/common/common.js';\nimport * as LitHtml from '../../lit-html/lit-html.js';\nimport * as VisualLogging from '../../visual_logging/visual_logging.js';\nimport * as IconButton from '../icon_button/icon_button.js';\nimport * as Input from '../input/input.js';\n\nimport settingCheckboxStyles from './settingCheckbox.css.js';\nimport {SettingDeprecationWarning} from './SettingDeprecationWarning.js';\n\nexport interface SettingCheckboxData {\n  setting: Common.Settings.Setting<boolean>;\n}\n\n/**\n * A simple checkbox that is backed by a boolean setting.\n */\nexport class SettingCheckbox extends HTMLElement {\n  static readonly litTagName = LitHtml.literal`setting-checkbox`;\n  readonly #shadow = this.attachShadow({mode: 'open'});\n\n  #setting?: Common.Settings.Setting<boolean>;\n  #changeListenerDescriptor?: Common.EventTarget.EventDescriptor;\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [Input.checkboxStyles, settingCheckboxStyles];\n  }\n\n  set data(data: SettingCheckboxData) {\n    if (this.#changeListenerDescriptor && this.#setting) {\n      this.#setting.removeChangeListener(this.#changeListenerDescriptor.listener);\n    }\n\n    this.#setting = data.setting;\n\n    this.#changeListenerDescriptor = this.#setting.addChangeListener(() => {\n      this.#render();\n    });\n    this.#render();\n  }\n\n  #deprecationIcon(): LitHtml.TemplateResult|undefined {\n    if (!this.#setting?.deprecation) {\n      return undefined;\n    }\n\n    return LitHtml.html`<${SettingDeprecationWarning.litTagName} .data=${\n        this.#setting.deprecation as Common.Settings.Deprecation}></${SettingDeprecationWarning.litTagName}>`;\n  }\n\n  #render(): void {\n    if (!this.#setting) {\n      throw new Error('No \"Setting\" object provided for rendering');\n    }\n\n    const icon = this.#deprecationIcon();\n    const reason = this.#setting.disabledReason() ?\n        LitHtml.html`\n      <${IconButton.Icon.Icon.litTagName} class=\"disabled-reason\" name=\"info\" title=${\n            this.#setting.disabledReason()} @click=${onclick}></${IconButton.Icon.Icon.litTagName}>\n    ` :\n        LitHtml.nothing;\n    LitHtml.render(\n        LitHtml.html`\n      <p>\n        <label>\n          <input\n            type=\"checkbox\"\n            .checked=${this.#setting.disabledReason() ? false : this.#setting.get()}\n            ?disabled=${this.#setting.disabled()}\n            @change=${this.#checkboxChanged}\n            jslog=${VisualLogging.toggle().track({click: true}).context(this.#setting.name)}\n            aria-label=${this.#setting.title()}\n          />\n          ${this.#setting.title()}${reason}${icon}\n        </label>\n      </p>`,\n        this.#shadow, {host: this});\n  }\n\n  #checkboxChanged(e: Event): void {\n    this.#setting?.set((e.target as HTMLInputElement).checked);\n    this.dispatchEvent(new CustomEvent('change', {\n      bubbles: true,\n      composed: false,\n    }));\n  }\n}\n\ncustomElements.define('setting-checkbox', SettingCheckbox);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'setting-checkbox': SettingCheckbox;\n  }\n}\n"]}