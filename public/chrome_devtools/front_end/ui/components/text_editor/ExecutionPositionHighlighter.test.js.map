{"version":3,"file":"ExecutionPositionHighlighter.test.js","sourceRoot":"","sources":["../../../../../../../front_end/ui/components/text_editor/ExecutionPositionHighlighter.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {renderElementIntoDOM} from '../../../testing/DOMHelpers.js';\nimport * as CodeMirror from '../../../third_party/codemirror.next/codemirror.next.js';\n\nimport * as TextEditor from './text_editor.js';\n\nfunction syntaxParserDone(view: CodeMirror.EditorView): Promise<void> {\n  return new Promise(resolve => {\n    (function check() {\n      if (!CodeMirror.syntaxParserRunning(view)) {\n        resolve();\n      } else {\n        window.requestIdleCallback(check);\n      }\n    })();\n  });\n}\n\ndescribe('TextEditor', () => {\n  describe('ExecutionPositionHighlighter', () => {\n    const {positionHighlighter, setHighlightedPosition, clearHighlightedPosition} =\n        TextEditor.ExecutionPositionHighlighter;\n\n    function createEditorView({doc, extensions}: {doc: string, extensions?: CodeMirror.Extension}):\n        CodeMirror.EditorView {\n      if (extensions === undefined) {\n        extensions = [];\n      }\n      extensions = [extensions, positionHighlighter('cm-executionLine', 'cm-executionToken')];\n      const state = CodeMirror.EditorState.create({doc, extensions});\n      const parent = renderElementIntoDOM(document.createElement('main'));\n      return new CodeMirror.EditorView({state, parent});\n    }\n\n    describe('positionHighlighter', () => {\n      it('defaults to no position highlighting with no syntax extensions', () => {\n        const doc = 'This is some text';\n        const view = createEditorView({doc});\n        assert.isFalse(CodeMirror.syntaxParserRunning(view));\n\n        assert.lengthOf(view.dom.querySelectorAll('.cm-executionLine'), 0);\n        assert.lengthOf(view.dom.querySelectorAll('.cm-executionToken'), 0);\n      });\n\n      it('defaults to no position highlighting with JavaScript syntax', async () => {\n        const doc = 'console.log(\"Hello World!\")';\n        const extensions = CodeMirror.javascript.javascript();\n        const view = createEditorView({doc, extensions});\n        await syntaxParserDone(view);\n\n        assert.lengthOf(view.dom.querySelectorAll('.cm-executionLine'), 0);\n        assert.lengthOf(view.dom.querySelectorAll('.cm-executionToken'), 0);\n      });\n    });\n\n    describe('setHighlightedPosition', () => {\n      it('highlights line but not token with no syntax extensions', () => {\n        const doc = 'Hello world!';\n        const view = createEditorView({doc});\n        assert.isFalse(CodeMirror.syntaxParserRunning(view));\n\n        view.dispatch({effects: setHighlightedPosition.of(doc.indexOf('world'))});\n\n        assert.lengthOf(view.dom.querySelectorAll('.cm-executionLine'), 1);\n        assert.strictEqual(view.dom.querySelector('.cm-executionLine')!.textContent, doc);\n        assert.lengthOf(view.dom.querySelectorAll('.cm-executionToken'), 0);\n      });\n\n      it('highlights line and token with JavaScript syntax', async () => {\n        const doc = 'console.log(\"Hello World!\")';\n        const extensions = CodeMirror.javascript.javascript();\n        const view = createEditorView({doc, extensions});\n        await syntaxParserDone(view);\n\n        view.dispatch({effects: setHighlightedPosition.of(doc.indexOf('log'))});\n\n        assert.lengthOf(view.dom.querySelectorAll('.cm-executionLine'), 1);\n        assert.strictEqual(view.dom.querySelector('.cm-executionLine')!.textContent, doc);\n        assert.lengthOf(view.dom.querySelectorAll('.cm-executionToken'), 1);\n        assert.strictEqual(view.dom.querySelector('.cm-executionToken')!.textContent, 'log');\n      });\n\n      it('highlights line immediately with JavaScript syntax', () => {\n        const doc = 'console.log(\"Hello World!\");\\n'.repeat(1000) + 'foo();';\n        const extensions = CodeMirror.javascript.javascript();\n        const view = createEditorView({doc, extensions});\n\n        const position = doc.lastIndexOf('foo');\n        view.dispatch({\n          effects: [\n            CodeMirror.EditorView.scrollIntoView(position),\n            setHighlightedPosition.of(position),\n          ],\n        });\n        assert.isTrue(CodeMirror.syntaxParserRunning(view));\n\n        assert.lengthOf(view.dom.querySelectorAll('.cm-executionLine'), 1);\n        assert.strictEqual(view.dom.querySelector('.cm-executionLine')!.textContent, doc.slice(position));\n      });\n\n      it('highlights token once incremental parser catches up with JavaScript syntax', async () => {\n        const doc = 'console.log(\"Hello World!\");\\n'.repeat(1000) + 'foo();';\n        const extensions = CodeMirror.javascript.javascript();\n        const view = createEditorView({doc, extensions});\n\n        const position = doc.lastIndexOf('foo');\n        view.dispatch({\n          effects: [\n            CodeMirror.EditorView.scrollIntoView(position),\n            setHighlightedPosition.of(position),\n          ],\n        });\n        await syntaxParserDone(view);\n\n        assert.lengthOf(view.dom.querySelectorAll('.cm-executionToken'), 1);\n        assert.strictEqual(view.dom.querySelector('.cm-executionToken')!.textContent, 'foo');\n      });\n    });\n\n    describe('clearHighlightedPosition', () => {\n      it('clears any highlighting with JavaScript syntax', async () => {\n        const doc = 'console.log(\"Hello World!\")';\n        const extensions = CodeMirror.javascript.javascript();\n        const view = createEditorView({doc, extensions});\n        await syntaxParserDone(view);\n\n        view.dispatch({effects: setHighlightedPosition.of(doc.indexOf('log'))});\n        assert.lengthOf(view.dom.querySelectorAll('.cm-executionLine'), 1);\n        assert.lengthOf(view.dom.querySelectorAll('.cm-executionToken'), 1);\n\n        view.dispatch({effects: clearHighlightedPosition.of()});\n        assert.lengthOf(view.dom.querySelectorAll('.cm-executionLine'), 0);\n        assert.lengthOf(view.dom.querySelectorAll('.cm-executionToken'), 0);\n      });\n    });\n  });\n});\n"]}