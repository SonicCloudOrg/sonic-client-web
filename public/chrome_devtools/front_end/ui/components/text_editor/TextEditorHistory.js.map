{"version":3,"file":"TextEditorHistory.js","sourceRoot":"","sources":["../../../../../../../front_end/ui/components/text_editor/TextEditorHistory.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as CodeMirror from '../../../third_party/codemirror.next/codemirror.next.js';\n\nimport {type AutocompleteHistory} from './AutocompleteHistory.js';\nimport {type TextEditor} from './TextEditor.js';\n\nexport const enum Direction {\n  FORWARD = 1,\n  BACKWARD = -1,\n}\n\n/**\n * Small helper class that connects a `TextEditor` and an `AutocompleteHistory`\n * instance.\n */\nexport class TextEditorHistory {\n  #editor: TextEditor;\n  #history: AutocompleteHistory;\n\n  constructor(editor: TextEditor, history: AutocompleteHistory) {\n    this.#editor = editor;\n    this.#history = history;\n  }\n\n  /**\n   * Replaces the text editor content with entries from the history. Does nothing\n   * if the cursor is not positioned correctly (unless `force` is `true`).\n   */\n  moveHistory(dir: Direction, force = false): boolean {\n    const {editor} = this.#editor, {main} = editor.state.selection;\n    const isBackward = dir === Direction.BACKWARD;\n    if (!force) {\n      if (!main.empty) {\n        return false;\n      }\n      const cursorCoords = editor.coordsAtPos(main.head);\n      const endCoords = editor.coordsAtPos(isBackward ? 0 : editor.state.doc.length);\n      // Check if there are wrapped lines in this direction, and let\n      // the cursor move normally if there are.\n      if (cursorCoords && endCoords &&\n          (isBackward ? cursorCoords.top > endCoords.top + 5 : cursorCoords.bottom < endCoords.bottom - 5)) {\n        return false;\n      }\n    }\n\n    const text = editor.state.doc.toString();\n    const history = this.#history;\n    const newText = isBackward ? history.previous(text) : history.next();\n    if (newText === undefined) {\n      return false;\n    }\n\n    // Change the prompt input to the history content, and scroll to the end to\n    // bring the full content (potentially multiple lines) into view.\n    const cursorPos = newText.length;\n    editor.dispatch({\n      changes: {from: 0, to: editor.state.doc.length, insert: newText},\n      selection: CodeMirror.EditorSelection.cursor(cursorPos),\n      scrollIntoView: true,\n    });\n    if (isBackward) {\n      // If we are going back in history, put the cursor to the end of the first line\n      // so that the user can quickly go further back in history.\n      const firstLineBreak = newText.search(/\\n|$/);\n      editor.dispatch({\n        selection: CodeMirror.EditorSelection.cursor(firstLineBreak),\n      });\n    }\n    return true;\n  }\n\n  historyCompletions(context: CodeMirror.CompletionContext): CodeMirror.CompletionResult|null {\n    const {explicit, pos, state} = context;\n    const text = state.doc.toString();\n    const caretIsAtEndOfPrompt = pos === text.length;\n    if (!caretIsAtEndOfPrompt || (!text.length && !explicit)) {\n      return null;\n    }\n\n    const matchingEntries = this.#history.matchingEntries(text);\n    if (!matchingEntries.size) {\n      return null;\n    }\n    const options = [...matchingEntries].map(label => ({label, type: 'secondary', boost: -1e5}));\n    return {from: 0, to: text.length, options};\n  }\n}\n"]}