{"version":3,"file":"javascript.test.js","sourceRoot":"","sources":["../../../../../../../front_end/ui/components/text_editor/javascript.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as TextEditor from './text_editor.js';\n\ndescribe('argumentsList', () => {\n  const {argumentsList} = TextEditor.JavaScript;\n\n  it('handles functions with no parameters', () => {\n    assert.isEmpty(argumentsList('function() {}'));\n    assert.isEmpty(argumentsList('function foo() {}'));\n    assert.isEmpty(argumentsList('function bar() { return 42; }'));\n    assert.isEmpty(argumentsList('() => {}'));\n    assert.isEmpty(argumentsList('() => 42'));\n  });\n\n  it('handles classes whose constructor has no parameters', () => {\n    assert.isEmpty(argumentsList('class{constructor(){}}'));\n    assert.isEmpty(argumentsList('class Klass { constructor() {} }'));\n  });\n\n  it('handles methods with no parameters', () => {\n    assert.isEmpty(argumentsList('foo() {}'));\n  });\n\n  it('handles accessors with no parameters', () => {\n    assert.isEmpty(argumentsList('get x() {}'));\n  });\n\n  it('handles functions with simple parameters', () => {\n    assert.deepEqual(argumentsList('function(x){}'), ['x']);\n    assert.deepEqual(argumentsList('function foo(x, y){}'), ['x', 'y']);\n    assert.deepEqual(argumentsList('async function foo(abc){}'), ['abc']);\n    assert.deepEqual(argumentsList('async function(abc, def){}'), ['abc', 'def']);\n  });\n\n  it('handles functions with non-simple parameters', () => {\n    assert.deepEqual(argumentsList('function(...args){}'), ['...args']);\n    assert.deepEqual(argumentsList('function(a, b, ...c){}'), ['a', 'b', '...c']);\n    assert.deepEqual(argumentsList('function(x = 1){}'), ['x']);\n    assert.deepEqual(argumentsList('function(x, y = 1){}'), ['x', 'y']);\n    assert.deepEqual(argumentsList('function *bar(x = 1, y){}'), ['x', 'y']);\n    assert.deepEqual(argumentsList('async function bar(x = {window}, y = [document]){}'), ['x', 'y']);\n    assert.deepEqual(argumentsList('function([x, y], z){}'), ['arr', 'z']);\n    assert.deepEqual(argumentsList('async function *foo([x, [y]], z){}'), ['arr', 'z']);\n    assert.deepEqual(argumentsList('function *bar({x, y}, z){}'), ['obj', 'z']);\n    assert.deepEqual(argumentsList('async function({x, y: {something}}, z){}'), ['obj', 'z']);\n  });\n\n  it('handles arrow functions with simple parameters', () => {\n    assert.deepEqual(argumentsList('x => x'), ['x']);\n    assert.deepEqual(argumentsList('(x, y) => x + y'), ['x', 'y']);\n    assert.deepEqual(argumentsList('async (abc) => {}'), ['abc']);\n    assert.deepEqual(argumentsList('async (abc, def) => {}'), ['abc', 'def']);\n  });\n\n  it('handles arrow functions with non-simple parameters', () => {\n    assert.deepEqual(argumentsList('(...args) => args'), ['...args']);\n    assert.deepEqual(argumentsList('(a, b, ...c)=>{}'), ['a', 'b', '...c']);\n    assert.deepEqual(argumentsList('(x = 1)=>{}'), ['x']);\n    assert.deepEqual(argumentsList('(x, y = 1)=>{}'), ['x', 'y']);\n    assert.deepEqual(argumentsList('(x = 1, y)=>{}'), ['x', 'y']);\n    assert.deepEqual(argumentsList('async(x = {window}, y = [document]) => {}'), ['x', 'y']);\n    assert.deepEqual(argumentsList('([x, y], z) => z'), ['arr', 'z']);\n    assert.deepEqual(argumentsList('async([x, [something]], z) => {}'), ['arr', 'z']);\n    assert.deepEqual(argumentsList('({x, y}, z) => {}'), ['obj', 'z']);\n    assert.deepEqual(argumentsList('async ({x, y: {something}}, z)=>z+x'), ['obj', 'z']);\n  });\n\n  it('handles classes with implicit constructors correctly', () => {\n    assert.deepEqual(argumentsList('class A{}'), []);\n    assert.deepEqual(argumentsList('class A extends B{}'), []);\n    assert.deepEqual(argumentsList('class {}'), []);\n    assert.deepEqual(argumentsList('class extends B{}'), []);\n  });\n\n  it('handles classes with explicit constructors correctly', () => {\n    assert.deepEqual(argumentsList('class A{constructor(){}}'), []);\n    assert.deepEqual(argumentsList('class A{constructor(x){}}'), ['x']);\n    assert.deepEqual(argumentsList('class A{constructor(x, y = 1){}}'), ['x', 'y']);\n    assert.deepEqual(argumentsList('class A extends B {constructor(){}}'), []);\n    assert.deepEqual(argumentsList('class A extends B {constructor(x){}}'), ['x']);\n    assert.deepEqual(argumentsList('class A extends B {constructor(x, y = 1){}}'), ['x', 'y']);\n    assert.deepEqual(argumentsList('class{constructor(){}}'), []);\n    assert.deepEqual(argumentsList('class{constructor(x){}}'), ['x']);\n    assert.deepEqual(argumentsList('class{constructor(x, y = 1){}}'), ['x', 'y']);\n    assert.deepEqual(argumentsList('class extends B {constructor(){}}'), []);\n    assert.deepEqual(argumentsList('class extends B {constructor(x){}}'), ['x']);\n    assert.deepEqual(argumentsList('class extends B {constructor(x, y = 1){}}'), ['x', 'y']);\n  });\n\n  it('handles methods correctly', () => {\n    assert.deepEqual(argumentsList('foo(){}'), []);\n    assert.deepEqual(argumentsList('foo(x){}'), ['x']);\n    assert.deepEqual(argumentsList('*foo(){}'), []);\n    assert.deepEqual(argumentsList('*foo(x){}'), ['x']);\n    assert.deepEqual(argumentsList('async foo(){}'), []);\n    assert.deepEqual(argumentsList('async foo(x = 1, y){}'), ['x', 'y']);\n    assert.deepEqual(argumentsList('async *foo(){}'), []);\n    assert.deepEqual(argumentsList('async *foo(abc, [def]){}'), ['abc', 'arr']);\n  });\n\n  it('handles methods with computed names correctly', () => {\n    assert.deepEqual(argumentsList('[0](x){}'), ['x']);\n    assert.deepEqual(argumentsList('async [\"some name\"](x){}'), ['x']);\n    assert.deepEqual(argumentsList('[x => x](z,y){}'), ['z', 'y']);\n    assert.deepEqual(argumentsList('async [x => x](z,y){}'), ['z', 'y']);\n  });\n\n  it('handles private methods correctly', () => {\n    assert.deepEqual(argumentsList('#foo(){}'), []);\n    assert.deepEqual(argumentsList('#foo(x){}'), ['x']);\n    assert.deepEqual(argumentsList('*#foo(){}'), []);\n    assert.deepEqual(argumentsList('*#foo(x){}'), ['x']);\n    assert.deepEqual(argumentsList('async #foo(){}'), []);\n    assert.deepEqual(argumentsList('async #foo(x = 1, y){}'), ['x', 'y']);\n    assert.deepEqual(argumentsList('async *#foo(){}'), []);\n    assert.deepEqual(argumentsList('async *#foo(abc, [def]){}'), ['abc', 'arr']);\n  });\n});\n"]}