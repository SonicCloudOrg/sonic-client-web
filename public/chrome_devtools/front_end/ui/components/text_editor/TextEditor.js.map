{"version":3,"file":"TextEditor.js","sourceRoot":"","sources":["../../../../../../../front_end/ui/components/text_editor/TextEditor.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../../core/common/common.js';\nimport * as WindowBoundsService from '../../../services/window_bounds/window_bounds.js';\nimport * as CodeMirror from '../../../third_party/codemirror.next/codemirror.next.js';\nimport * as ThemeSupport from '../../legacy/theme_support/theme_support.js';\nimport * as LitHtml from '../../lit-html/lit-html.js';\nimport * as CodeHighlighter from '../code_highlighter/code_highlighter.js';\n\nimport {baseConfiguration, dummyDarkTheme, dynamicSetting, DynamicSetting, themeSelection} from './config.js';\nimport {toLineColumn, toOffset} from './position.js';\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-text-editor': TextEditor;\n  }\n}\n\nexport class TextEditor extends HTMLElement {\n  static readonly litTagName = LitHtml.literal`devtools-text-editor`;\n\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  #activeEditor: CodeMirror.EditorView|undefined = undefined;\n  #dynamicSettings: readonly DynamicSetting<unknown>[] = DynamicSetting.none;\n  #activeSettingListeners: [Common.Settings.Setting<unknown>, (event: {data: unknown}) => void][] = [];\n  #pendingState: CodeMirror.EditorState|undefined;\n  #lastScrollSnapshot: CodeMirror.StateEffect<unknown>|undefined;\n  #resizeTimeout = -1;\n  #resizeListener = (): void => {\n    if (this.#resizeTimeout < 0) {\n      this.#resizeTimeout = window.setTimeout(() => {\n        this.#resizeTimeout = -1;\n        if (this.#activeEditor) {\n          CodeMirror.repositionTooltips(this.#activeEditor);\n        }\n      }, 50);\n    }\n  };\n  #devtoolsResizeObserver = new ResizeObserver(this.#resizeListener);\n\n  constructor(pendingState?: CodeMirror.EditorState) {\n    super();\n    this.#pendingState = pendingState;\n    this.#shadow.adoptedStyleSheets = [CodeHighlighter.Style.default];\n  }\n\n  #createEditor(): CodeMirror.EditorView {\n    this.#activeEditor = new CodeMirror.EditorView({\n      state: this.state,\n      parent: this.#shadow,\n      root: this.#shadow,\n      dispatch: (tr: CodeMirror.Transaction, view: CodeMirror.EditorView) => {\n        view.update([tr]);\n        this.#maybeDispatchInput(tr);\n        if (tr.reconfigured) {\n          this.#ensureSettingListeners();\n        }\n      },\n      scrollTo: this.#lastScrollSnapshot,\n    });\n\n    this.#activeEditor.scrollDOM.addEventListener('scroll', () => {\n      if (!this.#activeEditor) {\n        return;\n      }\n\n      this.#lastScrollSnapshot = this.#activeEditor.scrollSnapshot();\n      this.scrollEventHandledToSaveScrollPositionForTest();\n    });\n\n    this.#ensureSettingListeners();\n    this.#startObservingResize();\n    ThemeSupport.ThemeSupport.instance().addEventListener(ThemeSupport.ThemeChangeEvent.eventName, () => {\n      const currentTheme = ThemeSupport.ThemeSupport.instance().themeName() === 'dark' ? dummyDarkTheme : [];\n      this.editor.dispatch({\n        effects: themeSelection.reconfigure(currentTheme),\n      });\n    });\n    return this.#activeEditor;\n  }\n\n  get editor(): CodeMirror.EditorView {\n    return this.#activeEditor || this.#createEditor();\n  }\n\n  dispatch(spec: CodeMirror.TransactionSpec): void {\n    return this.editor.dispatch(spec);\n  }\n\n  get state(): CodeMirror.EditorState {\n    if (this.#activeEditor) {\n      return this.#activeEditor.state;\n    }\n    if (!this.#pendingState) {\n      this.#pendingState = CodeMirror.EditorState.create({extensions: baseConfiguration('')});\n    }\n    return this.#pendingState;\n  }\n\n  set state(state: CodeMirror.EditorState) {\n    if (this.#pendingState === state) {\n      return;\n    }\n\n    this.#pendingState = state;\n\n    if (this.#activeEditor) {\n      this.#activeEditor.setState(state);\n      this.#ensureSettingListeners();\n    }\n  }\n\n  scrollEventHandledToSaveScrollPositionForTest(): void {\n  }\n\n  connectedCallback(): void {\n    if (!this.#activeEditor) {\n      this.#createEditor();\n    } else {\n      this.#activeEditor.dispatch({effects: this.#lastScrollSnapshot});\n    }\n  }\n\n  disconnectedCallback(): void {\n    if (this.#activeEditor) {\n      this.#activeEditor.dispatch({effects: clearHighlightedLine.of(null)});\n      this.#pendingState = this.#activeEditor.state;\n      this.#devtoolsResizeObserver.disconnect();\n      window.removeEventListener('resize', this.#resizeListener);\n      this.#activeEditor.destroy();\n      this.#activeEditor = undefined;\n      this.#ensureSettingListeners();\n    }\n  }\n\n  override focus(): void {\n    if (this.#activeEditor) {\n      this.#activeEditor.focus();\n    }\n  }\n\n  #ensureSettingListeners(): void {\n    const dynamicSettings = this.#activeEditor ?\n        this.#activeEditor.state.facet<readonly DynamicSetting<unknown>[]>(dynamicSetting) :\n        DynamicSetting.none;\n    if (dynamicSettings === this.#dynamicSettings) {\n      return;\n    }\n    this.#dynamicSettings = dynamicSettings;\n\n    for (const [setting, listener] of this.#activeSettingListeners) {\n      setting.removeChangeListener(listener);\n    }\n    this.#activeSettingListeners = [];\n\n    const settings = Common.Settings.Settings.instance();\n    for (const dynamicSetting of dynamicSettings) {\n      const handler = ({data}: {data: unknown}): void => {\n        const change = dynamicSetting.sync(this.state, data);\n        if (change && this.#activeEditor) {\n          this.#activeEditor.dispatch({effects: change});\n        }\n      };\n      const setting = settings.moduleSetting(dynamicSetting.settingName);\n      setting.addChangeListener(handler);\n      this.#activeSettingListeners.push([setting, handler]);\n    }\n  }\n\n  #startObservingResize(): void {\n    const devtoolsElement =\n        WindowBoundsService.WindowBoundsService.WindowBoundsServiceImpl.instance().getDevToolsBoundingElement();\n    if (devtoolsElement) {\n      this.#devtoolsResizeObserver.observe(devtoolsElement);\n    }\n    window.addEventListener('resize', this.#resizeListener);\n  }\n\n  #maybeDispatchInput(transaction: CodeMirror.Transaction): void {\n    const userEvent = transaction.annotation(CodeMirror.Transaction.userEvent);\n    const inputType = userEvent ? CODE_MIRROR_USER_EVENT_TO_INPUT_EVENT_TYPE.get(userEvent) : null;\n    if (inputType) {\n      this.dispatchEvent(new InputEvent('input', {inputType}));\n    }\n  }\n\n  revealPosition(selection: CodeMirror.EditorSelection, highlight: boolean = true): void {\n    const view = this.#activeEditor;\n    if (!view) {\n      return;\n    }\n\n    const line = view.state.doc.lineAt(selection.main.head);\n    const effects: CodeMirror.StateEffect<unknown>[] = [];\n    if (highlight) {\n      // Lazily register the highlight line state.\n      if (!view.state.field(highlightedLineState, false)) {\n        view.dispatch({effects: CodeMirror.StateEffect.appendConfig.of(highlightedLineState)});\n      } else {\n        // Always clear the previous highlight line first. This cannot be done\n        // in combination with the other effects, as it wouldn't restart the CSS\n        // highlight line animation.\n        view.dispatch({effects: clearHighlightedLine.of(null)});\n      }\n\n      // Here we finally start the actual highlight line effects.\n      effects.push(setHighlightedLine.of(line.from));\n    }\n\n    const editorRect = view.scrollDOM.getBoundingClientRect();\n    const targetPos = view.coordsAtPos(selection.main.head);\n    if (!selection.main.empty) {\n      // If the caller provided an actual range, we use the default 'nearest' on both axis.\n      // Otherwise we 'center' on an axis to provide more context around the single point.\n      effects.push(CodeMirror.EditorView.scrollIntoView(selection.main));\n    } else if (!targetPos || targetPos.top < editorRect.top || targetPos.bottom > editorRect.bottom) {\n      effects.push(CodeMirror.EditorView.scrollIntoView(selection.main, {y: 'center'}));\n    } else if (targetPos.left < editorRect.left || targetPos.right > editorRect.right) {\n      effects.push(CodeMirror.EditorView.scrollIntoView(selection.main, {x: 'center'}));\n    }\n\n    view.dispatch({\n      selection,\n      effects,\n      userEvent: 'select.reveal',\n    });\n  }\n\n  createSelection(head: {lineNumber: number, columnNumber: number}, anchor?: {\n    lineNumber: number,\n    columnNumber: number,\n  }): CodeMirror.EditorSelection {\n    const {doc} = this.state;\n    const headPos = toOffset(doc, head);\n    return CodeMirror.EditorSelection.single(anchor ? toOffset(doc, anchor) : headPos, headPos);\n  }\n\n  toLineColumn(pos: number): {lineNumber: number, columnNumber: number} {\n    return toLineColumn(this.state.doc, pos);\n  }\n\n  toOffset(pos: {lineNumber: number, columnNumber: number}): number {\n    return toOffset(this.state.doc, pos);\n  }\n}\n\ncustomElements.define('devtools-text-editor', TextEditor);\n\n// Line highlighting\n\nconst clearHighlightedLine = CodeMirror.StateEffect.define<null>();\nconst setHighlightedLine = CodeMirror.StateEffect.define<number>();\n\nconst highlightedLineState = CodeMirror.StateField.define<CodeMirror.DecorationSet>({\n  create: () => CodeMirror.Decoration.none,\n  update(value, tr) {\n    if (!tr.changes.empty && value.size) {\n      value = value.map(tr.changes);\n    }\n    for (const effect of tr.effects) {\n      if (effect.is(clearHighlightedLine)) {\n        value = CodeMirror.Decoration.none;\n      } else if (effect.is(setHighlightedLine)) {\n        value = CodeMirror.Decoration.set([\n          CodeMirror.Decoration.line({attributes: {class: 'cm-highlightedLine'}}).range(effect.value),\n        ]);\n      }\n    }\n    return value;\n  },\n  provide: field => CodeMirror.EditorView.decorations.from(field, value => value),\n});\n\nconst CODE_MIRROR_USER_EVENT_TO_INPUT_EVENT_TYPE = new Map([\n  ['input.type', 'insertText'],\n  ['input.type.compose', 'insertCompositionText'],\n  ['input.paste', 'insertFromPaste'],\n  ['input.drop', 'insertFromDrop'],\n  ['input.complete', 'insertReplacementText'],\n  ['delete.selection', 'deleteContent'],\n  ['delete.forward', 'deleteContentForward'],\n  ['delete.backward', 'deleteContentBackward'],\n  ['delete.cut', 'deleteByCut'],\n  ['move.drop', 'deleteByDrag'],\n  ['undo', 'historyUndo'],\n  ['redo', 'historyRedo'],\n]);\n"]}