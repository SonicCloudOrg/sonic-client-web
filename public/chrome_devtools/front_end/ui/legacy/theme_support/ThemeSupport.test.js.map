{"version":3,"file":"ThemeSupport.test.js","sourceRoot":"","sources":["../../../../../../../front_end/ui/legacy/theme_support/ThemeSupport.test.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,IAAI,MAAM,4BAA4B,CAAC;AACnD,OAAO,EAAC,iBAAiB,EAAE,uBAAuB,EAAC,MAAM,wCAAwC,CAAC;AAElG,OAAO,KAAK,YAAY,MAAM,oBAAoB,CAAC;AAEnD,uBAAuB,CAAC,cAAc,EAAE,GAAG,EAAE;IAC3C,IAAI,YAAuC,CAAC;IAC5C,UAAU,CAAC,GAAG,EAAE;QACd,MAAM,OAAO,GAAG,iBAAiB,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;QACtD,YAAY,GAAG,YAAY,CAAC,YAAY,CAAC,QAAQ,CAAC,EAAC,QAAQ,EAAE,IAAI,EAAE,OAAO,EAAC,CAAC,CAAC;IAC/E,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,6CAA6C,EAAE,KAAK,IAAI,EAAE;QAC3D,MAAM,aAAa,GAAG,KAAK,CAAC,GAAG,CAAC,YAAY,EAAE,8BAA8B,CAAC,CAAC;QAE9E,IAAI,CAAC,qBAAqB,CAAC,6BAA6B,CAAC,MAAM,CAAC,wBAAwB,CACpF,IAAI,CAAC,wBAAwB,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;QAE5D,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;IACtC,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,aAAa,EAAE,GAAG,EAAE;QAC3B,EAAE,CAAC,oCAAoC,EAAE,GAAG,EAAE;YAC5C,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,qBAAqB,CAAC,6BAA6B,EAAE,cAAc,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YACpG,MAAM,iBAAiB,GAAG,4CAA4C,CAAC;YAEvE,MAAM,mBAAmB,GAAG,oCAAoC,CAAC;YACjE,MAAM,GAAG,GAAG,QAAQ,CAAC,cAAc,CAAC,kBAAkB,EAAE,CAAC;YACzD,MAAM,UAAU,GAAG,GAAG,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;YAC7C,UAAU,CAAC,IAAI,GAAG,iBAAiB,CAAC;YACpC,UAAU,CAAC,GAAG,GAAG,YAAY,CAAC;YAC9B,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;YAEjC,YAAY,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC;YAErC,MAAM,WAAW,GAAG,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAE,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;YACtF,MAAM,CAAC,QAAQ,CAAC,WAAW,EAAE,iBAAiB,CAAC,CAAC;QAClD,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,kBAAkB,EAAE,GAAG,EAAE;QAChC,MAAM,eAAgB,SAAQ,WAAW;YACvC,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC,CAAC;YAE5C;gBACE,KAAK,EAAE,CAAC;gBAER,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG;;;;mBAId,CAAC;YACd,CAAC;SACF;QAED,MAAM,CAAC,GAAG,EAAE;YACV,cAAc,CAAC,MAAM,CAAC,uBAAuB,EAAE,eAAe,CAAC,CAAC;QAClE,CAAC,CAAC,CAAC;QAEH,SAAS,CAAC,GAAG,EAAE;YACb,QAAQ,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC;QACjC,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,8CAA8C,EAAE,GAAG,EAAE;YACtD,MAAM,CAAC,UAAU,CAAC,YAAY,CAAC,gBAAgB,CAAC,qBAAqB,CAAC,CAAC,CAAC;QAC1E,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,6CAA6C,EAAE,GAAG,EAAE;YACrD,MAAM,OAAO,GAAG,IAAI,eAAe,EAAE,CAAC;YACtC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;YAEnC,MAAM,aAAa,GAAG,YAAY,CAAC,gBAAgB,CAAC,qBAAqB,CAAC,CAAC;YAC3E,MAAM,YAAY,GAAG,YAAY,CAAC,gBAAgB,CAAC,qBAAqB,EAAE,OAAO,CAAC,CAAC;YACnF,MAAM,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;YAChC,MAAM,CAAC,cAAc,CAAC,aAAa,EAAE,YAAY,CAAC,CAAC;QACrD,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,mCAAmC,EAAE,GAAG,EAAE;YAC3C,MAAM,aAAa,GAAG,YAAY,CAAC,gBAAgB,CAAC,qBAAqB,CAAC,CAAC;YAE3E,wEAAwE;YACxE,2BAA2B;YAC3B,MAAM,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;YACjD,QAAQ,CAAC,WAAW,GAAG,uCAAuC,CAAC;YAC/D,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;YAEpC,MAAM,oBAAoB,GAAG,YAAY,CAAC,gBAAgB,CAAC,qBAAqB,CAAC,CAAC;YAClF,QAAQ,CAAC,MAAM,EAAE,CAAC;YAElB,MAAM,CAAC,WAAW,CAAC,aAAa,EAAE,oBAAoB,CAAC,CAAC;QAC1D,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,kCAAkC,EAAE,GAAG,EAAE;YAC1C,MAAM,OAAO,GAAG,IAAI,eAAe,EAAE,CAAC;YACtC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;YAEnC,MAAM,YAAY,GAAG,YAAY,CAAC,gBAAgB,CAAC,qBAAqB,EAAE,OAAO,CAAC,CAAC;YACnF,MAAM,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;YAEhC,wEAAwE;YACxE,2BAA2B;YAC3B,MAAM,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;YACjD,QAAQ,CAAC,WAAW,GAAG,uCAAuC,CAAC;YAE/D,OAAO,CAAC,UAAW,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;YAC1C,MAAM,mBAAmB,GAAG,YAAY,CAAC,gBAAgB,CAAC,qBAAqB,EAAE,OAAO,CAAC,CAAC;YAE1F,MAAM,CAAC,WAAW,CAAC,YAAY,EAAE,mBAAmB,CAAC,CAAC;QACxD,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,iDAAiD,EAAE,GAAG,EAAE;YACzD,MAAM,aAAa,GAAG,YAAY,CAAC,gBAAgB,CAAC,cAAc,CAAC,CAAC;YAEpE,wEAAwE;YACxE,2BAA2B;YAC3B,MAAM,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;YACjD,QAAQ,CAAC,WAAW,GAAG,gCAAgC,CAAC;YACxD,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;YAEpC,MAAM,oBAAoB,GAAG,YAAY,CAAC,gBAAgB,CAAC,cAAc,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC;YAC1F,QAAQ,CAAC,MAAM,EAAE,CAAC;YAElB,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;YAC9B,MAAM,CAAC,UAAU,CAAC,oBAAoB,CAAC,CAAC;YACxC,MAAM,CAAC,cAAc,CAAC,aAAa,EAAE,oBAAoB,CAAC,CAAC;QAC7D,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Host from '../../../core/host/host.js';\nimport {createFakeSetting, describeWithEnvironment} from '../../../testing/EnvironmentHelpers.js';\n\nimport * as ThemeSupport from './theme_support.js';\n\ndescribeWithEnvironment('ThemeSupport', () => {\n  let themeSupport: ThemeSupport.ThemeSupport;\n  beforeEach(() => {\n    const setting = createFakeSetting('theme', 'default');\n    themeSupport = ThemeSupport.ThemeSupport.instance({forceNew: true, setting});\n  });\n\n  it('calls fetchColors on host ColorThemeChanged', async () => {\n    const colorFetchSpy = sinon.spy(themeSupport, 'fetchColorsAndApplyHostTheme');\n\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.events.dispatchEventToListeners(\n        Host.InspectorFrontendHostAPI.Events.ColorThemeChanged);\n\n    assert.isTrue(colorFetchSpy.called);\n  });\n\n  describe('fetchColors', () => {\n    it('fetchColors updates color node url', () => {\n      sinon.stub(Host.InspectorFrontendHost.InspectorFrontendHostInstance, 'isHostedMode').returns(false);\n      const originalColorHref = 'devtools://theme/colors.css?sets=ui,chrome';\n\n      const COLORS_CSS_SELECTOR = 'link[href*=\\'//theme/colors.css\\']';\n      const doc = document.implementation.createHTMLDocument();\n      const colorsLink = doc.createElement('link');\n      colorsLink.href = originalColorHref;\n      colorsLink.rel = 'stylesheet';\n      doc.head.appendChild(colorsLink);\n\n      themeSupport.addDocumentToTheme(doc);\n\n      const updatedHref = doc.body.querySelector(COLORS_CSS_SELECTOR)!.getAttribute('href');\n      assert.notEqual(updatedHref, originalColorHref);\n    });\n  });\n\n  describe('getComputedValue', () => {\n    class StyledComponent extends HTMLElement {\n      #shadow = this.attachShadow({mode: 'open'});\n\n      constructor() {\n        super();\n\n        this.#shadow.innerHTML = `<style>\n          :host {\n            --color-primary-old: red;\n          }\n          </style>`;\n      }\n    }\n\n    before(() => {\n      customElements.define('test-styled-component', StyledComponent);\n    });\n\n    afterEach(() => {\n      document.body.removeChildren();\n    });\n\n    it('obtains computed values correctly (document)', () => {\n      assert.isNotEmpty(themeSupport.getComputedValue('--color-primary-old'));\n    });\n\n    it('obtains computed values correctly (element)', () => {\n      const element = new StyledComponent();\n      document.body.appendChild(element);\n\n      const documentValue = themeSupport.getComputedValue('--color-primary-old');\n      const elementValue = themeSupport.getComputedValue('--color-primary-old', element);\n      assert.isNotEmpty(elementValue);\n      assert.notStrictEqual(documentValue, elementValue);\n    });\n\n    it('caches computed values (document)', () => {\n      const documentValue = themeSupport.getComputedValue('--color-primary-old');\n\n      // Update the styles by adding a new style tag, and confirm that the old\n      // value is still returned.\n      const newStyle = document.createElement('style');\n      newStyle.textContent = ':root { --color-primary-old: green; }';\n      document.head.appendChild(newStyle);\n\n      const updatedDocumentValue = themeSupport.getComputedValue('--color-primary-old');\n      newStyle.remove();\n\n      assert.strictEqual(documentValue, updatedDocumentValue);\n    });\n\n    it('caches computed values (element)', () => {\n      const element = new StyledComponent();\n      document.body.appendChild(element);\n\n      const elementValue = themeSupport.getComputedValue('--color-primary-old', element);\n      assert.isNotEmpty(elementValue);\n\n      // Update the styles by adding a new style tag, and confirm that the old\n      // value is still returned.\n      const newStyle = document.createElement('style');\n      newStyle.textContent = ':root { --color-primary-old: green; }';\n\n      element.shadowRoot!.appendChild(newStyle);\n      const updatedElementValue = themeSupport.getComputedValue('--color-primary-old', element);\n\n      assert.strictEqual(elementValue, updatedElementValue);\n    });\n\n    it('does not caches empty computed values (element)', () => {\n      const documentValue = themeSupport.getComputedValue('--test-value');\n\n      // Update the styles by adding a new style tag, and confirm that the old\n      // value is still returned.\n      const newStyle = document.createElement('style');\n      newStyle.textContent = ':root { --test-value: green; }';\n      document.head.appendChild(newStyle);\n\n      const updatedDocumentValue = themeSupport.getComputedValue('--test-value', document.body);\n      newStyle.remove();\n\n      assert.isEmpty(documentValue);\n      assert.isNotEmpty(updatedDocumentValue);\n      assert.notStrictEqual(documentValue, updatedDocumentValue);\n    });\n  });\n});\n"]}