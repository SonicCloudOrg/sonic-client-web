{"version":3,"file":"View.test.js","sourceRoot":"","sources":["../../../../../../front_end/ui/legacy/View.test.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAG7B,OAAO,EAAC,uBAAuB,EAAC,MAAM,qCAAqC,CAAC;AAE5E,OAAO,KAAK,EAAE,MAAM,aAAa,CAAC;AAElC,QAAQ,CAAC,MAAM,EAAE,GAAG,EAAE;IACpB,uBAAuB,CAAC,oBAAoB,EAAE,GAAG,EAAE;QACjD,IAAI,cAA0C,CAAC;QAC/C,IAAI,WAAuC,CAAC;QAC5C,MAAM,CAAC,KAAK,IAAI,EAAE;YAChB,CAAC,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;gBACrD,EAAE,CAAC,WAAW,CAAC,qBAAqB,CAAC;oBACnC,aAAa;oBACb,QAAQ,EAAE,eAAe;oBACzB,EAAE,EAAE,KAA0B;oBAC9B,KAAK,EAAE,GAAG,EAAE,CAAC,KAA0C;oBACvD,aAAa,EAAE,GAAG,EAAE,CAAC,KAA0C;oBAC/D,WAAW,4DAA0C;oBACrD,KAAK,CAAC,QAAQ;wBACZ,OAAO,IAAI,EAAE,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;oBAChC,CAAC;iBACF,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;YACH,WAAW,GAAG,EAAE,CAAC,WAAW,CAAC,WAAW,CAAC,QAAQ,CAAC,EAAC,QAAQ,EAAE,IAAI,EAAC,CAAC,CAAC;YACpE,cAAc,GAAG,WAAW,CAAC,oBAAoB,CAAC,SAAS,EAAE,eAAe,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QAC5F,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,kCAAkC,EAAE,GAAG,EAAE;YAC1C,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,UAAU,EAAE,CAAC,MAAM,EAAE,EAAE,EAAE,CAAC,CAAC;QAC7D,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,gCAAgC,EAAE,GAAG,EAAE;YACxC,KAAK,WAAW,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;YACnC,KAAK,WAAW,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;YACpC,KAAK,WAAW,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;YAEnC,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,UAAU,EAAE,CAAC,MAAM,EAAE,EAAE,CAAC,OAAO,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC,CAAC;QACvF,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,0BAA0B,EAAE,GAAG,EAAE;YAClC,MAAM,QAAQ,GAAG,cAAc,CAAC,UAAU,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;YACnE,IAAI,CAAC,QAAQ,EAAE,CAAC;gBACd,MAAM,IAAI,KAAK,CAAC,sBAAsB,CAAC,CAAC;YAC1C,CAAC;YACD,cAAc,CAAC,UAAU,EAAE,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;YACtD,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,UAAU,EAAE,CAAC,MAAM,EAAE,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC,CAAC;QACvF,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,yBAAyB,EAAE,GAAG,EAAE;YACjC,KAAK,WAAW,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;YACpC,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,UAAU,EAAE,CAAC,MAAM,EAAE,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAC;QACjG,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,wBAAwB,EAAE,GAAG,EAAE;YAChC,cAAc,CAAC,UAAU,EAAE,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;YAC/C,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,UAAU,EAAE,CAAC,MAAM,EAAE,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC,CAAC;QACvF,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Platform from '../../core/platform/platform.js';\nimport {describeWithEnvironment} from '../../testing/EnvironmentHelpers.js';\n\nimport * as UI from './legacy.js';\n\ndescribe('View', () => {\n  describeWithEnvironment('TabbedViewLocation', () => {\n    let tabbedLocation: UI.View.TabbedViewLocation;\n    let viewManager: UI.ViewManager.ViewManager;\n    before(async () => {\n      ['first', 'second', 'third', 'fourth'].forEach(title => {\n        UI.ViewManager.registerViewExtension({\n          // @ts-ignore\n          location: 'mock-location',\n          id: title as Lowercase<string>,\n          title: () => title as Platform.UIString.LocalizedString,\n          commandPrompt: () => title as Platform.UIString.LocalizedString,\n          persistence: UI.ViewManager.ViewPersistence.CLOSEABLE,\n          async loadView() {\n            return new UI.Widget.Widget();\n          },\n        });\n      });\n      viewManager = UI.ViewManager.ViewManager.instance({forceNew: true});\n      tabbedLocation = viewManager.createTabbedLocation(undefined, 'mock-location', true, true);\n    });\n\n    it('Creates an empty tabbed location', () => {\n      assert.deepEqual(tabbedLocation.tabbedPane().tabIds(), []);\n    });\n\n    it('Adds a tab for a selected view', () => {\n      void viewManager.showView('first');\n      void viewManager.showView('second');\n      void viewManager.showView('third');\n\n      assert.deepEqual(tabbedLocation.tabbedPane().tabIds(), ['first', 'second', 'third']);\n    });\n\n    it('Prepends a tab correctly', () => {\n      const thirdTab = tabbedLocation.tabbedPane().tabsById.get('third');\n      if (!thirdTab) {\n        throw new Error('Could not find a tab');\n      }\n      tabbedLocation.tabbedPane().insertBefore(thirdTab, 0);\n      assert.deepEqual(tabbedLocation.tabbedPane().tabIds(), ['third', 'first', 'second']);\n    });\n\n    it('Appends a tab correctly', () => {\n      void viewManager.showView('fourth');\n      assert.deepEqual(tabbedLocation.tabbedPane().tabIds(), ['third', 'first', 'second', 'fourth']);\n    });\n\n    it('Closes a tab correctly', () => {\n      tabbedLocation.tabbedPane().closeTab('second');\n      assert.deepEqual(tabbedLocation.tabbedPane().tabIds(), ['third', 'first', 'fourth']);\n    });\n  });\n});\n"]}