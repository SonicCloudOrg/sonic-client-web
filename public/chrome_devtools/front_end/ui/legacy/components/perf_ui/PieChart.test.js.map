{"version":3,"file":"PieChart.test.js","sourceRoot":"","sources":["../../../../../../../../front_end/ui/legacy/components/perf_ui/PieChart.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {renderElementIntoDOM} from '../../../../testing/DOMHelpers.js';\nimport {describeWithLocale} from '../../../../testing/EnvironmentHelpers.js';\n\nimport * as PerfUI from './perf_ui.js';\n\nconst testChartData = {\n  chartName: 'Contents of a Pie',\n  size: 110,\n  formatter: (value: number) => String(value) + ' f',\n  showLegend: true,\n  total: 100,\n  slices: [{value: 75, color: 'crimson', title: 'Filling'}, {value: 25, color: 'burlywood', title: 'Crust'}],\n};\n\nconst testChartNoLegendData = {\n  chartName: 'Contents of a Pie',\n  size: 110,\n  formatter: (value: number) => String(value) + ' f',\n  showLegend: false,\n  total: 100,\n  slices: [{value: 75, color: 'crimson', title: 'Filling'}, {value: 25, color: 'burlywood', title: 'Crust'}],\n};\n\ndescribeWithLocale('PieChart', () => {\n  describe('with legend', () => {\n    it('is labelled by the chart name', () => {\n      const chart = new PerfUI.PieChart.PieChart();\n      renderElementIntoDOM(chart);\n\n      chart.data = testChartData;\n      assert.isNotNull(chart.shadowRoot);\n\n      const root = chart.shadowRoot.querySelector('[aria-label=\"Contents of a Pie\"]');\n      assert.isTrue(root!.classList.contains('root'));\n    });\n\n    it('has path nodes for a 2-slice chart', () => {\n      const chart = new PerfUI.PieChart.PieChart();\n      renderElementIntoDOM(chart);\n\n      chart.data = testChartData;\n      assert.isNotNull(chart.shadowRoot);\n\n      const slices = chart.shadowRoot.querySelectorAll('path');\n      assert.strictEqual(slices.length, 2);\n    });\n\n    it('has a legend', () => {\n      const chart = new PerfUI.PieChart.PieChart();\n      renderElementIntoDOM(chart);\n\n      chart.data = testChartData;\n      assert.isNotNull(chart.shadowRoot);\n\n      const legendRows = chart.shadowRoot.querySelectorAll('.pie-chart-legend-row');\n      assert.strictEqual(legendRows.length, 3);\n    });\n\n    it('formats the slice in the legend', () => {\n      const chart = new PerfUI.PieChart.PieChart();\n      renderElementIntoDOM(chart);\n\n      chart.data = testChartData;\n      assert.isNotNull(chart.shadowRoot);\n\n      const legendRows = chart.shadowRoot.querySelectorAll('.pie-chart-size');\n      assert.strictEqual(legendRows[0].textContent?.trim(), '75 f');\n      assert.strictEqual(legendRows[1].textContent?.trim(), '25 f');\n    });\n\n    it('has a total', () => {\n      const chart = new PerfUI.PieChart.PieChart();\n      renderElementIntoDOM(chart);\n\n      chart.data = testChartData;\n      assert.isNotNull(chart.shadowRoot);\n\n      const total = chart.shadowRoot.querySelector('.pie-chart-total');\n      assert.isNotNull(total);\n    });\n\n    it('formats the total', () => {\n      const chart = new PerfUI.PieChart.PieChart();\n      renderElementIntoDOM(chart);\n\n      chart.data = testChartData;\n      assert.isNotNull(chart.shadowRoot);\n\n      const total = chart.shadowRoot.querySelector('.pie-chart-total');\n      assert.strictEqual(total!.textContent!.trim(), '100 f');\n    });\n\n    it('selects total by default', () => {\n      const chart = new PerfUI.PieChart.PieChart();\n      renderElementIntoDOM(chart);\n\n      chart.data = testChartData;\n      assert.isNotNull(chart.shadowRoot);\n\n      const legendRows = chart.shadowRoot.querySelectorAll('.pie-chart-legend-row');\n      assert.strictEqual(legendRows.length, 3);\n\n      // Legend has one selected item.\n      const fillingLegendRow = legendRows[0];\n      const crustLegendRow = legendRows[1];\n      const totalLegendRow = legendRows[2];\n      assert.isFalse(fillingLegendRow.classList.contains('selected'));\n      assert.isFalse(crustLegendRow.classList.contains('selected'));\n      assert.isTrue(totalLegendRow.classList.contains('selected'));\n\n      // Chart total display in the center is selected.\n      const total = chart.shadowRoot.querySelector('.pie-chart-total');\n      assert.isTrue(total!.classList.contains('selected'));\n    });\n\n    it('sets tabIndex=-1 on the slice', () => {\n      const chart = new PerfUI.PieChart.PieChart();\n      renderElementIntoDOM(chart);\n\n      chart.data = testChartData;\n      assert.isNotNull(chart.shadowRoot);\n\n      const slice = chart.shadowRoot.querySelector('path');\n      assert.strictEqual(slice!.tabIndex, -1);\n    });\n\n    it('changes selected when clicking the legend', () => {\n      const chart = new PerfUI.PieChart.PieChart();\n      renderElementIntoDOM(chart);\n\n      chart.data = testChartData;\n      assert.isNotNull(chart.shadowRoot);\n\n      const legendName = chart.shadowRoot.querySelector<HTMLDivElement>('.pie-chart-name');\n      legendName!.click();\n\n      const legendRows = chart.shadowRoot.querySelectorAll('.pie-chart-legend-row');\n      assert.strictEqual(legendRows.length, 3);\n\n      const fillingLegendRow = legendRows[0];\n      const crustLegendRow = legendRows[1];\n      const totalLegendRow = legendRows[2];\n      assert.isTrue(fillingLegendRow.classList.contains('selected'));\n      assert.isFalse(crustLegendRow.classList.contains('selected'));\n      assert.isFalse(totalLegendRow.classList.contains('selected'));\n\n      // Chart total display in the center is not selected.\n      const total = chart.shadowRoot.querySelector('.pie-chart-total');\n      assert.isFalse(total!.classList.contains('selected'));\n    });\n\n    it('changes selected when clicking the chart', () => {\n      const chart = new PerfUI.PieChart.PieChart();\n      renderElementIntoDOM(chart);\n\n      chart.data = testChartData;\n      assert.isNotNull(chart.shadowRoot);\n\n      const slice = chart.shadowRoot.querySelector<SVGPathElement>('[aria-label=\"Filling\"');\n      slice!.dispatchEvent(new Event('click'));\n\n      const legendRows = chart.shadowRoot.querySelectorAll('.pie-chart-legend-row');\n      assert.strictEqual(legendRows.length, 3);\n\n      const fillingLegendRow = legendRows[0];\n      const crustLegendRow = legendRows[1];\n      const totalLegendRow = legendRows[2];\n      assert.isTrue(fillingLegendRow.classList.contains('selected'));\n      assert.isFalse(crustLegendRow.classList.contains('selected'));\n      assert.isFalse(totalLegendRow.classList.contains('selected'));\n\n      // Chart total display in the center is not selected.\n      const total = chart.shadowRoot.querySelector('.pie-chart-total');\n      assert.isFalse(total!.classList.contains('selected'));\n    });\n\n    it('does not show a focus ring for click selection', () => {\n      const chart = new PerfUI.PieChart.PieChart();\n      renderElementIntoDOM(chart);\n\n      chart.data = testChartData;\n      assert.isNotNull(chart.shadowRoot);\n\n      const legendName = chart.shadowRoot.querySelector<HTMLDivElement>('.pie-chart-name');\n      legendName!.click();\n\n      const legendRow = chart.shadowRoot.querySelector('.pie-chart-legend-row:focus-visible');\n      assert.isNull(legendRow);\n    });\n\n    it('shows a focus ring for keyboard selection', () => {\n      const chart = new PerfUI.PieChart.PieChart();\n      renderElementIntoDOM(chart);\n\n      chart.data = testChartData;\n      assert.isNotNull(chart.shadowRoot);\n\n      const root = chart.shadowRoot.querySelector<HTMLDivElement>('.root');\n      root!.dispatchEvent(new KeyboardEvent('keydown', {key: 'ArrowUp'}));\n\n      const legendRow = chart.shadowRoot.querySelector('.pie-chart-legend-row:focus-visible');\n      assert.isNotNull(legendRow);\n    });\n  });\n\n  describe('without legend', () => {\n    it('has no legend', () => {\n      const chart = new PerfUI.PieChart.PieChart();\n      renderElementIntoDOM(chart);\n\n      chart.data = testChartNoLegendData;\n      assert.isNotNull(chart.shadowRoot);\n\n      const legendRows = chart.shadowRoot.querySelectorAll('.pie-chart-legend-row');\n      assert.strictEqual(legendRows.length, 0);\n    });\n\n    it('sets tabIndex=1 on total', () => {\n      const chart = new PerfUI.PieChart.PieChart();\n      renderElementIntoDOM(chart);\n\n      chart.data = testChartNoLegendData;\n      assert.isNotNull(chart.shadowRoot);\n\n      // This is different in no-legend mode!\n      const total = chart.shadowRoot.querySelector<HTMLDivElement>('.pie-chart-total');\n      assert.strictEqual(total!.tabIndex, 1);\n    });\n  });\n});\n"]}