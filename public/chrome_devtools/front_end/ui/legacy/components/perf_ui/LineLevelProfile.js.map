{"version":3,"file":"LineLevelProfile.js","sourceRoot":"","sources":["../../../../../../../../front_end/ui/legacy/components/perf_ui/LineLevelProfile.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2016 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as SDK from '../../../../core/sdk/sdk.js';\nimport * as Bindings from '../../../../models/bindings/bindings.js';\nimport * as Workspace from '../../../../models/workspace/workspace.js';\nimport * as SourceFrame from '../source_frame/source_frame.js';\nimport type * as Platform from '../../../../core/platform/platform.js';\nimport type * as Protocol from '../../../../generated/protocol.js';\nimport type * as CPUProfile from '../../../../models/cpu_profile/cpu_profile.js';\n\nlet performanceInstance: Performance;\n\nexport class Performance {\n  private readonly helper: Helper;\n\n  private constructor() {\n    this.helper = new Helper(SourceFrame.SourceFrame.DecoratorType.PERFORMANCE);\n  }\n\n  static instance(opts: {\n    forceNew: boolean|null,\n  } = {forceNew: null}): Performance {\n    const {forceNew} = opts;\n    if (!performanceInstance || forceNew) {\n      performanceInstance = new Performance();\n    }\n\n    return performanceInstance;\n  }\n\n  reset(): void {\n    this.helper.reset();\n  }\n\n  private appendLegacyCPUProfile(\n      profile: CPUProfile.CPUProfileDataModel.CPUProfileDataModel, target: SDK.Target.Target|null): void {\n    const nodesToGo: CPUProfile.CPUProfileDataModel.CPUProfileNode[] = [profile.profileHead];\n    const sampleDuration = (profile.profileEndTime - profile.profileStartTime) / profile.totalHitCount;\n    while (nodesToGo.length) {\n      const nodes: CPUProfile.CPUProfileDataModel.CPUProfileNode[] =\n          // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          (nodesToGo.pop() as any).children;  // Cast to any because runtime checks assert the props.\n      for (let i = 0; i < nodes.length; ++i) {\n        const node = nodes[i];\n        nodesToGo.push(node);\n        if (!node.url || !node.positionTicks) {\n          continue;\n        }\n        for (let j = 0; j < node.positionTicks.length; ++j) {\n          const lineInfo = node.positionTicks[j];\n          const line = lineInfo.line;\n          const time = lineInfo.ticks * sampleDuration;\n          this.helper.addLineData(target, node.url, line, time);\n        }\n      }\n    }\n  }\n\n  appendCPUProfile(profile: CPUProfile.CPUProfileDataModel.CPUProfileDataModel, target: SDK.Target.Target|null): void {\n    if (!profile.lines) {\n      this.appendLegacyCPUProfile(profile, target);\n      this.helper.scheduleUpdate();\n      return;\n    }\n    if (!profile.samples) {\n      return;\n    }\n\n    for (let i = 1; i < profile.samples.length; ++i) {\n      const line = profile.lines[i];\n      if (!line) {\n        continue;\n      }\n      const node = profile.nodeByIndex(i);\n      if (!node) {\n        continue;\n      }\n      const scriptIdOrUrl = Number(node.scriptId) || node.url;\n      if (!scriptIdOrUrl) {\n        continue;\n      }\n      const time = profile.timestamps[i] - profile.timestamps[i - 1];\n      this.helper.addLineData(target, scriptIdOrUrl, line, time);\n    }\n    this.helper.scheduleUpdate();\n  }\n}\n\nlet memoryInstance: Memory;\n\nexport class Memory {\n  private readonly helper: Helper;\n  private constructor() {\n    this.helper = new Helper(SourceFrame.SourceFrame.DecoratorType.MEMORY);\n  }\n\n  static instance(opts: {\n    forceNew: boolean|null,\n  } = {forceNew: null}): Memory {\n    const {forceNew} = opts;\n    if (!memoryInstance || forceNew) {\n      memoryInstance = new Memory();\n    }\n\n    return memoryInstance;\n  }\n\n  reset(): void {\n    this.helper.reset();\n  }\n\n  appendHeapProfile(profile: Protocol.HeapProfiler.SamplingHeapProfile, target: SDK.Target.Target|null): void {\n    const helper = this.helper;\n    processNode(profile.head);\n    helper.scheduleUpdate();\n\n    function processNode(node: Protocol.HeapProfiler.SamplingHeapProfileNode): void {\n      node.children.forEach(processNode);\n      if (!node.selfSize) {\n        return;\n      }\n      const script = Number(node.callFrame.scriptId) || node.callFrame.url as Platform.DevToolsPath.UrlString;\n      if (!script) {\n        return;\n      }\n      const line = node.callFrame.lineNumber + 1;\n      helper.addLineData(target, script, line, node.selfSize);\n    }\n  }\n}\n\nexport class Helper {\n  private readonly type: string;\n  private readonly locationPool: Bindings.LiveLocation.LiveLocationPool;\n  private updateTimer: number|null;\n  private lineData!: Map<SDK.Target.Target|null, Map<Platform.DevToolsPath.UrlString|number, Map<number, number>>>;\n\n  constructor(type: string) {\n    this.type = type;\n    this.locationPool = new Bindings.LiveLocation.LiveLocationPool();\n    this.updateTimer = null;\n    this.reset();\n  }\n\n  reset(): void {\n    // The second map uses string keys for script URLs and numbers for scriptId.\n    this.lineData = new Map();\n    this.scheduleUpdate();\n  }\n\n  addLineData(\n      target: SDK.Target.Target|null, scriptIdOrUrl: Platform.DevToolsPath.UrlString|number, line: number,\n      data: number): void {\n    let targetData = this.lineData.get(target);\n    if (!targetData) {\n      targetData = new Map();\n      this.lineData.set(target, targetData);\n    }\n    let scriptData = targetData.get(scriptIdOrUrl);\n    if (!scriptData) {\n      scriptData = new Map();\n      targetData.set(scriptIdOrUrl, scriptData);\n    }\n    scriptData.set(line, (scriptData.get(line) || 0) + data);\n  }\n\n  scheduleUpdate(): void {\n    if (this.updateTimer) {\n      return;\n    }\n    this.updateTimer = window.setTimeout(() => {\n      this.updateTimer = null;\n      void this.doUpdate();\n    }, 0);\n  }\n\n  private async doUpdate(): Promise<void> {\n    this.locationPool.disposeAll();\n    // Map from sources to line->value profile maps.\n    const decorationsBySource = new Map<Workspace.UISourceCode.UISourceCode, Map<number, number>>();\n    const pending: Promise<void>[] = [];\n\n    for (const [target, scriptToLineMap] of this.lineData) {\n      const debuggerModel = target ? target.model(SDK.DebuggerModel.DebuggerModel) : null;\n      for (const [scriptIdOrUrl, lineToDataMap] of scriptToLineMap) {\n        // debuggerModel is null when the profile is loaded from file.\n        // Try to get UISourceCode by the URL in this case.\n        const workspace = Workspace.Workspace.WorkspaceImpl.instance();\n        if (debuggerModel) {\n          const workspaceBinding = Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.instance();\n          for (const lineToData of lineToDataMap) {\n            const line = lineToData[0] - 1;\n            const data = lineToData[1];\n            const rawLocation = typeof scriptIdOrUrl === 'string' ?\n                debuggerModel.createRawLocationByURL(scriptIdOrUrl, line, 0) :\n                debuggerModel.createRawLocationByScriptId(String(scriptIdOrUrl) as Protocol.Runtime.ScriptId, line, 0);\n            if (rawLocation) {\n              pending.push(workspaceBinding.rawLocationToUILocation(rawLocation).then(uiLocation => {\n                if (uiLocation) {\n                  let lineMap = decorationsBySource.get(uiLocation.uiSourceCode);\n                  if (!lineMap) {\n                    lineMap = new Map<number, number>();\n                    decorationsBySource.set(uiLocation.uiSourceCode, lineMap);\n                  }\n                  lineMap.set(uiLocation.lineNumber + 1, data);\n                }\n              }));\n            }\n          }\n        } else if (typeof scriptIdOrUrl === 'string') {\n          const uiSourceCode = workspace.uiSourceCodeForURL(scriptIdOrUrl);\n          if (uiSourceCode) {\n            decorationsBySource.set(uiSourceCode, lineToDataMap);\n          }\n        }\n      }\n      await Promise.all(pending);\n      for (const [uiSourceCode, lineMap] of decorationsBySource) {\n        uiSourceCode.setDecorationData(this.type, lineMap);\n      }\n    }\n    for (const uiSourceCode of Workspace.Workspace.WorkspaceImpl.instance().uiSourceCodes()) {\n      if (!decorationsBySource.has(uiSourceCode)) {\n        uiSourceCode.setDecorationData(this.type, undefined);\n      }\n    }\n  }\n}\n"]}