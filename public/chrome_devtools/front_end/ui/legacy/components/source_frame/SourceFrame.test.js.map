{"version":3,"file":"SourceFrame.test.js","sourceRoot":"","sources":["../../../../../../../../front_end/ui/legacy/components/source_frame/SourceFrame.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../../../core/common/common.js';\nimport * as Root from '../../../../core/root/root.js';\nimport type * as TextUtils from '../../../../models/text_utils/text_utils.js';\nimport {\n  dispatchInputEvent,\n  dispatchPasteEvent,\n} from '../../../../testing/DOMHelpers.js';\nimport {describeWithEnvironment} from '../../../../testing/EnvironmentHelpers.js';\nimport * as Buttons from '../../../components/buttons/buttons.js';\nimport * as UI from '../../legacy.js';\n\nimport * as SourceFrame from './source_frame.js';\n\ndescribeWithEnvironment('SourceFrame', () => {\n  let setting: Common.Settings.Setting<boolean>;\n\n  beforeEach(() => {\n    setting = Common.Settings.Settings.instance().createSetting(\n        'disable-self-xss-warning', false, Common.Settings.SettingStorageType.Synced);\n    setting.set(false);\n  });\n\n  async function createSourceFrame(content: string): Promise<SourceFrame.SourceFrame.SourceFrameImpl> {\n    const deferredContentStub = {content: '', isEncoded: true} as TextUtils.ContentProvider.DeferredContent;\n    const sourceFrame = new SourceFrame.SourceFrame.SourceFrameImpl(async () => deferredContentStub);\n    await sourceFrame.setContent(content);\n    return sourceFrame;\n  }\n\n  async function pasteIntoSourceFrame(): Promise<{codeMirror: HTMLDivElement, dataTransfer: DataTransfer}> {\n    const sourceFrame = await createSourceFrame('Example');\n    const codeMirror =\n        sourceFrame.element.querySelector('devtools-text-editor')?.shadowRoot?.querySelector('.cm-content') || null;\n    assert.instanceOf(codeMirror, HTMLDivElement);\n\n    const dataTransfer = new DataTransfer();\n    dataTransfer.setData('text/plain', 'foo');\n    dispatchPasteEvent(codeMirror, {clipboardData: dataTransfer, bubbles: true});\n    await new Promise(resolve => setTimeout(resolve, 0));\n    return {codeMirror, dataTransfer};\n  }\n\n  it('finds string by simple regex', async () => {\n    const sourceFrame = await createSourceFrame('Example');\n\n    sourceFrame.performSearch(\n        new UI.SearchableView.SearchConfig('xa', /* caseSensitive */ false, /* isRegex */ true), true);\n    sourceFrame.jumpToSearchResult(0);\n\n    assert.strictEqual(sourceFrame.textEditor.state.selection.main.from, 1);\n    assert.strictEqual(sourceFrame.textEditor.state.selection.main.to, 3);\n  });\n\n  it('does not match always-empty match regex', async () => {\n    const sourceFrame = await createSourceFrame('Example');\n\n    sourceFrame.performSearch(\n        new UI.SearchableView.SearchConfig('Z*', /* caseSensitive */ false, /* isRegex */ true), true);\n\n    // Check that the search did not find anything.\n    // We do this in a roundabout way: select the whole document, then try to select\n    // the search result and finally verify that the whole document selection\n    // has not changed.\n    const dummySelection =\n        sourceFrame.textEditor.createSelection({lineNumber: 0, columnNumber: 0}, {lineNumber: 0, columnNumber: 7});\n    sourceFrame.textEditor.dispatch({selection: dummySelection});\n    sourceFrame.jumpToSearchResult(1);\n\n    assert.strictEqual(sourceFrame.textEditor.state.selection.main.from, 0);\n    assert.strictEqual(sourceFrame.textEditor.state.selection.main.to, 7);\n  });\n\n  it('skips empty matches and finds non-empty match by regex', async () => {\n    const sourceFrame = await createSourceFrame('Example');\n\n    sourceFrame.performSearch(\n        new UI.SearchableView.SearchConfig('a?', /* caseSensitive */ false, /* isRegex */ true), true);\n\n    sourceFrame.jumpToSearchResult(0);\n\n    assert.strictEqual(sourceFrame.textEditor.state.selection.main.from, 2);\n    assert.strictEqual(sourceFrame.textEditor.state.selection.main.to, 3);\n  });\n\n  it('shows self-XSS warning which the user can disable', async () => {\n    const {codeMirror, dataTransfer} = await pasteIntoSourceFrame();\n    const dialogShadowRoot = document.body.querySelector<HTMLDivElement>('[data-devtools-glass-pane]')\n                                 ?.shadowRoot?.querySelector('.widget')\n                                 ?.shadowRoot ||\n        null;\n    assert.isNotNull(dialogShadowRoot);\n\n    const title = dialogShadowRoot.querySelector('.title');\n    assert.instanceOf(title, HTMLDivElement);\n    assert.strictEqual(title.textContent, 'Do you trust this code?');\n\n    const input = dialogShadowRoot.querySelector('input');\n    assert.instanceOf(input, HTMLInputElement);\n    input.value = 'allow pasting';\n    dispatchInputEvent(input, {inputType: 'insertText', data: 'allow pasting', bubbles: true, composed: true});\n\n    const allowButton = dialogShadowRoot.querySelector('.button')?.children[1];\n    assert.deepEqual(allowButton?.textContent, 'Allow');\n    assert.instanceOf(allowButton, Buttons.Button.Button);\n    allowButton.click();\n    await new Promise(resolve => setTimeout(resolve, 0));\n\n    assert.isTrue(setting.get());\n\n    dispatchPasteEvent(codeMirror, {clipboardData: dataTransfer, bubbles: true});\n    await new Promise(resolve => setTimeout(resolve, 0));\n    const dialogContainer = document.body.querySelector<HTMLDivElement>('[data-devtools-glass-pane]');\n    assert.isNull(dialogContainer);\n  });\n\n  it('does not show self-XSS warning when disabled via command line', async () => {\n    const stub = sinon.stub(Root.Runtime.Runtime, 'queryParam');\n    stub.withArgs('disableSelfXssWarnings').returns('true');\n    await pasteIntoSourceFrame();\n    const dialogContainer = document.body.querySelector<HTMLDivElement>('[data-devtools-glass-pane]');\n    assert.isNull(dialogContainer);\n    stub.restore();\n  });\n});\n"]}