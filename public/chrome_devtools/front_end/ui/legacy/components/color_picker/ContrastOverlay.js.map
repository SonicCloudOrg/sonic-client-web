{"version":3,"file":"ContrastOverlay.js","sourceRoot":"","sources":["../../../../../../../../front_end/ui/legacy/components/color_picker/ContrastOverlay.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../../../core/common/common.js';\nimport * as Root from '../../../../core/root/root.js';\nimport * as UI from '../../legacy.js';\n\nimport {Events, type ContrastInfo} from './ContrastInfo.js';\n\nexport class ContrastOverlay {\n  private contrastInfo: ContrastInfo;\n  private visible: boolean;\n  private readonly contrastRatioSVG: Element;\n  private readonly contrastRatioLines: Map<string, Element>;\n  private width: number;\n  private height: number;\n  private readonly contrastRatioLineBuilder: ContrastRatioLineBuilder;\n  private readonly contrastRatioLinesThrottler: Common.Throttler.Throttler;\n  private readonly drawContrastRatioLinesBound: () => Promise<void>;\n  constructor(contrastInfo: ContrastInfo, colorElement: Element) {\n    this.contrastInfo = contrastInfo;\n\n    this.visible = false;\n\n    this.contrastRatioSVG = UI.UIUtils.createSVGChild(colorElement, 'svg', 'spectrum-contrast-container fill');\n    this.contrastRatioLines = new Map();\n    if (Root.Runtime.experiments.isEnabled('apca')) {\n      this.contrastRatioLines.set(\n          'APCA', UI.UIUtils.createSVGChild(this.contrastRatioSVG, 'path', 'spectrum-contrast-line'));\n    } else {\n      this.contrastRatioLines.set(\n          'aa', UI.UIUtils.createSVGChild(this.contrastRatioSVG, 'path', 'spectrum-contrast-line'));\n      this.contrastRatioLines.set(\n          'aaa', UI.UIUtils.createSVGChild(this.contrastRatioSVG, 'path', 'spectrum-contrast-line'));\n    }\n\n    this.width = 0;\n    this.height = 0;\n\n    this.contrastRatioLineBuilder = new ContrastRatioLineBuilder(this.contrastInfo);\n\n    this.contrastRatioLinesThrottler = new Common.Throttler.Throttler(0);\n    this.drawContrastRatioLinesBound = this.drawContrastRatioLines.bind(this);\n\n    this.contrastInfo.addEventListener(Events.ContrastInfoUpdated, this.update.bind(this));\n  }\n\n  private update(): void {\n    if (!this.visible || this.contrastInfo.isNull()) {\n      return;\n    }\n    if (Root.Runtime.experiments.isEnabled('apca') && this.contrastInfo.contrastRatioAPCA() === null) {\n      return;\n    }\n    if (!this.contrastInfo.contrastRatio()) {\n      return;\n    }\n    void this.contrastRatioLinesThrottler.schedule(this.drawContrastRatioLinesBound);\n  }\n\n  setDimensions(width: number, height: number): void {\n    this.width = width;\n    this.height = height;\n    this.update();\n  }\n\n  setVisible(visible: boolean): void {\n    this.visible = visible;\n    this.contrastRatioSVG.classList.toggle('hidden', !visible);\n    this.update();\n  }\n\n  private async drawContrastRatioLines(): Promise<void> {\n    for (const [level, element] of this.contrastRatioLines) {\n      const path = this.contrastRatioLineBuilder.drawContrastRatioLine(this.width, this.height, level as string);\n      if (path) {\n        element.setAttribute('d', path);\n      } else {\n        element.removeAttribute('d');\n      }\n    }\n  }\n}\n\nexport class ContrastRatioLineBuilder {\n  private readonly contrastInfo: ContrastInfo;\n  constructor(contrastInfo: ContrastInfo) {\n    this.contrastInfo = contrastInfo;\n  }\n\n  drawContrastRatioLine(width: number, height: number, level: string): string|null {\n    const isAPCA = Root.Runtime.experiments.isEnabled('apca');\n    const requiredContrast =\n        isAPCA ? this.contrastInfo.contrastRatioAPCAThreshold() : this.contrastInfo.contrastRatioThreshold(level);\n    if (!width || !height || requiredContrast === null) {\n      return null;\n    }\n\n    const dS = 0.02;\n    const H = 0;\n    const S = 1;\n    const V = 2;\n    const A = 3;\n\n    const color = this.contrastInfo.color();\n    const bgColor = this.contrastInfo.bgColor();\n    if (!color || !bgColor) {\n      return null;\n    }\n\n    const fgRGBA = color.rgba();\n    const fgHSVA = color.as(Common.Color.Format.HSL).hsva();\n    const bgRGBA = bgColor.rgba();\n    const bgLuminance = Common.ColorUtils.luminance(bgRGBA);\n    let blendedRGBA: number[] = Common.ColorUtils.blendColors(fgRGBA, bgRGBA);\n    const fgLuminance = Common.ColorUtils.luminance(blendedRGBA);\n    const fgIsLighter = fgLuminance > bgLuminance;\n    const desiredLuminance = isAPCA ?\n        Common.ColorUtils.desiredLuminanceAPCA(bgLuminance, requiredContrast, fgIsLighter) :\n        Common.Color.desiredLuminance(bgLuminance, requiredContrast, fgIsLighter);\n\n    if (isAPCA &&\n        Math.abs(Math.round(Common.ColorUtils.contrastRatioByLuminanceAPCA(desiredLuminance, bgLuminance))) <\n            requiredContrast) {\n      return null;\n    }\n\n    let lastV: number = fgHSVA[V];\n    let currentSlope = 0;\n    const candidateHSVA: Common.ColorUtils.Color4D = [fgHSVA[H], 0, 0, fgHSVA[A]];\n    let pathBuilder: string[] = [];\n    const candidateRGBA = Common.Color.hsva2rgba(candidateHSVA);\n    blendedRGBA = Common.ColorUtils.blendColors(candidateRGBA, bgRGBA);\n\n    let candidateLuminance: ((candidateHSVA: Common.ColorUtils.Color4D) => number)|\n        ((candidateHSVA: Common.ColorUtils.Color4D) => number) = (candidateHSVA: Common.ColorUtils.Color4D) => {\n          return Common.ColorUtils.luminance(\n              Common.ColorUtils.blendColors(Common.Color.Legacy.fromHSVA(candidateHSVA).rgba(), bgRGBA));\n        };\n\n    if (Root.Runtime.experiments.isEnabled('apca')) {\n      candidateLuminance = (candidateHSVA: Common.ColorUtils.Color4D) => {\n        return Common.ColorUtils.luminanceAPCA(\n            Common.ColorUtils.blendColors(Common.Color.Legacy.fromHSVA(candidateHSVA).rgba(), bgRGBA));\n      };\n    }\n\n    // Plot V for values of S such that the computed luminance approximates\n    // `desiredLuminance`, until no suitable value for V can be found, or the\n    // current value of S goes of out bounds.\n    let s;\n    for (s = 0; s < 1 + dS; s += dS) {\n      s = Math.min(1, s);\n      candidateHSVA[S] = s;\n\n      // Extrapolate the approximate next value for `v` using the approximate\n      // gradient of the curve.\n      candidateHSVA[V] = lastV + currentSlope * dS;\n\n      const v = Common.Color.approachColorValue(candidateHSVA, bgRGBA, V, desiredLuminance, candidateLuminance);\n      if (v === null) {\n        break;\n      }\n\n      // Approximate the current gradient of the curve.\n      currentSlope = s === 0 ? 0 : (v - lastV) / dS;\n      lastV = v;\n\n      pathBuilder.push(pathBuilder.length ? 'L' : 'M');\n      pathBuilder.push((s * width).toFixed(2));\n      pathBuilder.push(((1 - v) * height).toFixed(2));\n    }\n\n    // If no suitable V value for an in-bounds S value was found, find the value\n    // of S such that V === 1 and add that to the path.\n    if (s < 1 + dS) {\n      s -= dS;\n      candidateHSVA[V] = 1;\n      s = Common.Color.approachColorValue(candidateHSVA, bgRGBA, S, desiredLuminance, candidateLuminance);\n      if (s !== null) {\n        pathBuilder = pathBuilder.concat(['L', (s * width).toFixed(2), '-0.1']);\n      }\n    }\n    if (pathBuilder.length === 0) {\n      return null;\n    }\n    return pathBuilder.join(' ');\n  }\n}\n"]}