{"version":3,"file":"ColorFormatSpec.js","sourceRoot":"","sources":["../../../../../../../../front_end/ui/legacy/components/color_picker/ColorFormatSpec.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../../../core/common/common.js';\nimport * as Platform from '../../../../core/platform/platform.js';\n\n// Represents how each of the color formats should be\n// shown in the color picker inputs and\n// how a color should be materialized from the input values.\n\n// All the color formats except HEX and ShortHEX is\n// represented with 4 input fields in the ColorPicker.\n// This utility exports `colorFormatSpec` which encodes\n// * Label to be shown for the given color space\n// * `toValues` method that converts the given color to 4 input values\n// * `fromValues` method that creates the color from the given 4 input values.\n\n// Represents each of the inputs. For example, we have\n// 4 inputs for rgba colors: r, g, b, a and each character from \"RGBA\"\n// represents one of the inputs.\ntype Label = 'RGBA'|'HSLA'|'HWBA'|'lchA'|'labA'|'xyzA';\n\ntype ColorFormatSpec = {\n  // Label to be shown under the inputs\n  label: Label,\n  // Values of the inputs\n  toValues(color: Common.Color.Color): [string, string, string, string],\n  // How to generate the number from the input values\n  fromValues(values: [string, string, string, string]): Common.Color.Color|null,\n};\n\n// p0, p1, p2, alpha\n// r, g, b, alpha\n// l, c, h, alpha\n// l, a, b, alpha\ntype CanonicalParameters = [number, number, number, number];\n\nexport type SpectrumColorFormat = Exclude<\n    Common.Color.Format,\n    Common.Color.Format.RGBA|Common.Color.Format.HSLA|Common.Color.Format.HWBA|Common.Color.Format.HEXA|\n    Common.Color.Format.ShortHEXA>;\n\nconst roundAndStringify = (arr: [number, number, number, number]): [string, string, string, string] =>\n    arr.map(el => Platform.StringUtilities.stringifyWithPrecision(el, 2)) as [string, string, string, string];\n\nconst functionParamsText = (values: [string, string, string, string]): string => {\n  return `${values[0]} ${values[1]} ${values[2]} / ${values[3]}`;\n};\n\nexport const colorFormatSpec: Record<\n    Exclude<SpectrumColorFormat, Common.Color.Format.HEX|Common.Color.Format.ShortHEX|Common.Color.Format.Nickname>,\n    ColorFormatSpec> = {\n  [Common.Color.Format.RGB]: {\n    label: 'RGBA',\n    toValues: function(color: Common.Color.Color): [string, string, string, string] {\n      return roundAndStringify(color.as(Common.Color.Format.RGBA).canonicalRGBA() as CanonicalParameters);\n    },\n    fromValues: function(values: [string, string, string, string]): Common.Color.Color |\n        null {\n          return Common.Color.parse(`rgb(${functionParamsText(values)})`);\n        },\n  },\n  [Common.Color.Format.HSL]: {\n    label: 'HSLA',\n    toValues: function(color: Common.Color.Color): [string, string, string, string] {\n      const canonicalHslParams =\n          roundAndStringify(color.as(Common.Color.Format.HSLA).canonicalHSLA() as CanonicalParameters);\n      canonicalHslParams[1] = canonicalHslParams[1] + '%';\n      canonicalHslParams[2] = canonicalHslParams[2] + '%';\n      return canonicalHslParams;\n    },\n    fromValues: function(values: [string, string, string, string]): Common.Color.Color |\n        null {\n          return Common.Color.parse(`hsl(${functionParamsText(values)})`);\n        },\n  },\n  [Common.Color.Format.HWB]: {\n    label: 'HWBA',\n    toValues: function(color: Common.Color.Color): [string, string, string, string] {\n      const canonicalHwbParams =\n          roundAndStringify(color.as(Common.Color.Format.HWBA).canonicalHWBA() as CanonicalParameters);\n      canonicalHwbParams[1] = canonicalHwbParams[1] + '%';\n      canonicalHwbParams[2] = canonicalHwbParams[2] + '%';\n      return canonicalHwbParams;\n    },\n    fromValues: function(values: [string, string, string, string]): Common.Color.Color |\n        null {\n          return Common.Color.parse(`hwb(${functionParamsText(values)})`);\n        },\n  },\n  [Common.Color.Format.LCH]: {\n    label: 'lchA',\n    toValues: function(color: Common.Color.Color): [string, string, string, string] {\n      const lchColor = color.as(Common.Color.Format.LCH);\n      return roundAndStringify([lchColor.l, lchColor.c, lchColor.h, lchColor.alpha ?? 1] as CanonicalParameters);\n    },\n    fromValues: function(values: [string, string, string, string]): Common.Color.Color |\n        null {\n          return Common.Color.parse(`lch(${functionParamsText(values)})`);\n        },\n  },\n  [Common.Color.Format.OKLCH]: {\n    label: 'lchA',\n    toValues: function(color: Common.Color.Color): [string, string, string, string] {\n      const lchColor = color.as(Common.Color.Format.OKLCH);\n      return roundAndStringify([lchColor.l, lchColor.c, lchColor.h, lchColor.alpha ?? 1] as CanonicalParameters);\n    },\n    fromValues: function(values: [string, string, string, string]): Common.Color.Color |\n        null {\n          return Common.Color.parse(`oklch(${functionParamsText(values)})`);\n        },\n  },\n  [Common.Color.Format.LAB]: {\n    label: 'labA',\n    toValues: function(color: Common.Color.Color): [string, string, string, string] {\n      const labColor = color.as(Common.Color.Format.LAB);\n      return roundAndStringify([labColor.l, labColor.a, labColor.b, labColor.alpha ?? 1] as CanonicalParameters);\n    },\n    fromValues: function(values: [string, string, string, string]): Common.Color.Color |\n        null {\n          return Common.Color.parse(`lab(${functionParamsText(values)})`);\n        },\n  },\n  [Common.Color.Format.OKLAB]: {\n    label: 'labA',\n    toValues: function(color: Common.Color.Color): [string, string, string, string] {\n      const labColor = color.as(Common.Color.Format.OKLAB);\n      return roundAndStringify([labColor.l, labColor.a, labColor.b, labColor.alpha ?? 1] as CanonicalParameters);\n    },\n    fromValues: function(values: [string, string, string, string]): Common.Color.Color |\n        null {\n          return Common.Color.parse(`oklab(${functionParamsText(values)})`);\n        },\n  },\n  [Common.Color.Format.SRGB]: {\n    label: 'RGBA',\n    toValues: function(color: Common.Color.Color): [string, string, string, string] {\n      const srgbColor = color.as(Common.Color.Format.SRGB);\n      return roundAndStringify([srgbColor.p0, srgbColor.p1, srgbColor.p2, srgbColor.alpha ?? 1] as CanonicalParameters);\n    },\n    fromValues: function(values: [string, string, string, string]): Common.Color.Color |\n        null {\n          return Common.Color.parse(`color(${Common.Color.Format.SRGB} ${functionParamsText(values)})`);\n        },\n  },\n  [Common.Color.Format.SRGB_LINEAR]: {\n    label: 'RGBA',\n    toValues: function(color: Common.Color.Color): [string, string, string, string] {\n      const srgbLinearColor = color.as(Common.Color.Format.SRGB_LINEAR);\n      return roundAndStringify(\n          [srgbLinearColor.p0, srgbLinearColor.p1, srgbLinearColor.p2, srgbLinearColor.alpha ?? 1] as\n          CanonicalParameters);\n    },\n    fromValues: function(values: [string, string, string, string]): Common.Color.Color |\n        null {\n          return Common.Color.parse(`color(${Common.Color.Format.SRGB_LINEAR} ${functionParamsText(values)})`);\n        },\n  },\n  [Common.Color.Format.DISPLAY_P3]: {\n    label: 'RGBA',\n    toValues(color: Common.Color.Color): [string, string, string, string] {\n      const displayP3Color = color.as(Common.Color.Format.DISPLAY_P3);\n      return roundAndStringify([displayP3Color.p0, displayP3Color.p1, displayP3Color.p2, 1]);\n    },\n    fromValues(values: [string, string, string, string]): Common.Color.Color |\n        null {\n          return Common.Color.parse(`color(${Common.Color.Format.DISPLAY_P3} ${functionParamsText(values)})`);\n        },\n  },\n  [Common.Color.Format.A98_RGB]: {\n    label: 'RGBA',\n    toValues: function(color: Common.Color.Color): [string, string, string, string] {\n      const a98Color = color.as(Common.Color.Format.A98_RGB);\n      return roundAndStringify([a98Color.p0, a98Color.p1, a98Color.p2, a98Color.alpha ?? 1] as CanonicalParameters);\n    },\n    fromValues: function(values: [string, string, string, string]): Common.Color.Color |\n        null {\n          return Common.Color.parse(`color(${Common.Color.Format.A98_RGB} ${functionParamsText(values)})`);\n        },\n  },\n  [Common.Color.Format.PROPHOTO_RGB]: {\n    label: 'RGBA',\n    toValues: function(color: Common.Color.Color): [string, string, string, string] {\n      const proPhotoRGBColor = color.as(Common.Color.Format.PROPHOTO_RGB);\n      return roundAndStringify(\n          [proPhotoRGBColor.p0, proPhotoRGBColor.p1, proPhotoRGBColor.p2, proPhotoRGBColor.alpha ?? 1] as\n          CanonicalParameters);\n    },\n    fromValues: function(values: [string, string, string, string]): Common.Color.Color |\n        null {\n          return Common.Color.parse(`color(${Common.Color.Format.PROPHOTO_RGB} ${functionParamsText(values)})`);\n        },\n  },\n  [Common.Color.Format.REC_2020]: {\n    label: 'RGBA',\n    toValues: function(color: Common.Color.Color): [string, string, string, string] {\n      const rec2020Color = color.as(Common.Color.Format.REC_2020);\n      return roundAndStringify(\n          [rec2020Color.p0, rec2020Color.p1, rec2020Color.p2, rec2020Color.alpha ?? 1] as CanonicalParameters);\n    },\n    fromValues: function(values: [string, string, string, string]): Common.Color.Color |\n        null {\n          return Common.Color.parse(`color(${Common.Color.Format.REC_2020} ${functionParamsText(values)})`);\n        },\n  },\n  [Common.Color.Format.XYZ]: {\n    label: 'xyzA',\n    toValues: function(color: Common.Color.Color): [string, string, string, string] {\n      const xyzColor = color.as(Common.Color.Format.XYZ);\n      return roundAndStringify([xyzColor.p0, xyzColor.p1, xyzColor.p2, xyzColor.alpha ?? 1] as CanonicalParameters);\n    },\n    fromValues: function(values: [string, string, string, string]): Common.Color.Color |\n        null {\n          return Common.Color.parse(`color(${Common.Color.Format.XYZ} ${functionParamsText(values)})`);\n        },\n  },\n  [Common.Color.Format.XYZ_D50]: {\n    label: 'xyzA',\n    toValues: function(color: Common.Color.Color): [string, string, string, string] {\n      const xyzColor = color.as(Common.Color.Format.XYZ_D50);\n      return roundAndStringify([xyzColor.p0, xyzColor.p1, xyzColor.p2, xyzColor.alpha ?? 1] as CanonicalParameters);\n    },\n    fromValues: function(values: [string, string, string, string]): Common.Color.Color |\n        null {\n          return Common.Color.parse(`color(${Common.Color.Format.XYZ_D50} ${functionParamsText(values)})`);\n        },\n  },\n  [Common.Color.Format.XYZ_D65]: {\n    label: 'xyzA',\n    toValues: function(color: Common.Color.Color): [string, string, string, string] {\n      const xyzColor = color.as(Common.Color.Format.XYZ_D65);\n      return roundAndStringify([xyzColor.p0, xyzColor.p1, xyzColor.p2, xyzColor.alpha ?? 1] as CanonicalParameters);\n    },\n    fromValues: function(values: [string, string, string, string]): Common.Color.Color |\n        null {\n          return Common.Color.parse(`color(${Common.Color.Format.XYZ_D65} ${functionParamsText(values)})`);\n        },\n  },\n};\n"]}