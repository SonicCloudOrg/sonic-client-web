{"version":3,"file":"ColorMixSwatch.js","sourceRoot":"","sources":["../../../../../../../../front_end/ui/legacy/components/inline_editor/ColorMixSwatch.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../../../core/common/common.js';\nimport * as Platform from '../../../../core/platform/platform.js';\nimport * as LitHtml from '../../../lit-html/lit-html.js';\nimport * as VisualLogging from '../../../visual_logging/visual_logging.js';\n\nimport colorMixSwatchStyles from './colorMixSwatch.css.js';\n\nexport const enum Events {\n  ColorChanged = 'colorChanged',\n}\n\nexport interface EventTypes {\n  [Events.ColorChanged]: {text: string};\n}\n\nexport class ColorMixSwatch extends Common.ObjectWrapper.eventMixin<EventTypes, typeof HTMLElement>(HTMLElement) {\n  static readonly litTagName = LitHtml.literal`devtools-color-mix-swatch`;\n  private readonly shadow = this.attachShadow({mode: 'open'});\n  private colorMixText: string = '';     // color-mix(in srgb, hotpink, white)\n  private firstColorText: string = '';   // hotpink\n  private secondColorText: string = '';  // white\n  #registerPopoverCallback: undefined|((swatch: ColorMixSwatch) => void);\n\n  constructor() {\n    super();\n    this.shadow.adoptedStyleSheets = [\n      colorMixSwatchStyles,\n    ];\n  }\n\n  get icon(): Element|null {\n    return this.shadow.firstElementChild;\n  }\n\n  mixedColor(): Common.Color.Color|null {\n    const colorText = this.icon?.computedStyleMap().get('color')?.toString() ?? null;\n    return colorText ? Common.Color.parse(colorText) : null;\n  }\n\n  setFirstColor(text: string): void {\n    // We need to replace `colorMixText` because it is the CSS for the\n    // the middle section where we actually show the mixed colors.\n    // So, when a color changed, we need to update colorMixText to\n    // reflect the new color (not the old one).\n    if (this.firstColorText) {\n      this.colorMixText = this.colorMixText.replace(this.firstColorText, text);\n    }\n    this.firstColorText = text;\n    this.dispatchEventToListeners(Events.ColorChanged, {text: this.colorMixText});\n    this.#render();\n  }\n\n  setSecondColor(text: string): void {\n    // We need to replace from the last to handle the same colors case\n    // i.e. replacing the second color of `color-mix(in srgb, red 50%, red 10%)`\n    // to `blue` should result in `color-mix(in srgb, red 50%, blue 10%)`.\n    if (this.secondColorText) {\n      this.colorMixText = Platform.StringUtilities.replaceLast(this.colorMixText, this.secondColorText, text);\n    }\n    this.secondColorText = text;\n    this.dispatchEventToListeners(Events.ColorChanged, {text: this.colorMixText});\n    this.#render();\n  }\n\n  setColorMixText(text: string): void {\n    this.colorMixText = text;\n    this.dispatchEventToListeners(Events.ColorChanged, {text: this.colorMixText});\n    this.#render();\n  }\n\n  setRegisterPopoverCallback(callback: (swatch: ColorMixSwatch) => void): void {\n    this.#registerPopoverCallback = callback;\n    callback(this);\n  }\n\n  getText(): string {\n    return this.colorMixText;\n  }\n\n  #render(): void {\n    if (!this.colorMixText || !this.firstColorText || !this.secondColorText) {\n      LitHtml.render(this.colorMixText, this.shadow, {host: this});\n      return;\n    }\n\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n\n    // Note that we use a <slot> with a default value here to display the color text. Consumers of this component are\n    // free to append any content to replace what is being shown here.\n    // Note also that whitespace between nodes is removed on purpose to avoid pushing these elements apart. Do not\n    // re-format the HTML code.\n    LitHtml.render(\n      LitHtml.html`<div class=\"swatch-icon\" jslog=${VisualLogging.cssColorMix()} style=\"--color: ${this.colorMixText}\">\n        <span class=\"swatch swatch-left\" id=\"swatch-1\" style=\"--color: ${this.firstColorText}\"></span>\n        <span class=\"swatch swatch-right\" id=\"swatch-2\" style=\"--color: ${this.secondColorText}\"></span>\n        <span class=\"swatch swatch-mix\" id=\"mix-result\" style=\"--color: ${this.colorMixText}\"></span>\n      </div><slot>${this.colorMixText}</slot>`,\n      this.shadow, {host: this});\n    // clang-format on\n\n    this.#registerPopoverCallback && this.#registerPopoverCallback(this);\n  }\n}\n\ncustomElements.define('devtools-color-mix-swatch', ColorMixSwatch);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-color-mix-swatch': ColorMixSwatch;\n  }\n}\n"]}