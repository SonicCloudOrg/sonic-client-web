{"version":3,"file":"CSSLength.test.js","sourceRoot":"","sources":["../../../../../../../../front_end/ui/legacy/components/inline_editor/CSSLength.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {renderElementIntoDOM} from '../../../../testing/DOMHelpers.js';\n\nimport * as InlineEditor from './inline_editor.js';\n\nconst initialData = {\n  lengthText: '42px',\n  overloaded: false,\n};\n\ndescribe('CSSLength', () => {\n  it('can render CSSLength component correctly', () => {\n    const component = new InlineEditor.CSSLength.CSSLength();\n    renderElementIntoDOM(component);\n    component.data = initialData;\n\n    assert.isNotNull(component.shadowRoot);\n    const valueElement = component.shadowRoot.querySelector('.value');\n    const unitElement = component.shadowRoot.querySelector('.unit');\n    if (!valueElement || !unitElement) {\n      assert.fail('CSSLength component is not rendered correctly');\n      return;\n    }\n    assert.strictEqual(valueElement.textContent, '42', 'CSSLength value content is not rendered correctly');\n    assert.strictEqual(unitElement.textContent, 'px', 'CSSLength unit content is not rendered correctly');\n  });\n\n  it('can +/- length values when the value is dragged', async () => {\n    const component = new InlineEditor.CSSLength.CSSLength();\n    renderElementIntoDOM(component);\n    component.data = initialData;\n\n    assert.isNotNull(component.shadowRoot);\n\n    let lengthText = initialData.lengthText;\n    component.addEventListener('valuechanged', (event: Event) => {\n      const {data} = event as InlineEditor.InlineEditorUtils.ValueChangedEvent;\n      lengthText = data.value;\n    });\n\n    const lengthValueElement = component.shadowRoot.querySelector('.value');\n    if (!lengthValueElement) {\n      assert.fail('length value element was not rendered');\n      return;\n    }\n\n    let mousePositionX = 1;\n    lengthValueElement.dispatchEvent(new MouseEvent('mousedown', {clientX: mousePositionX}));\n    // Wait enough to let CSSLength think it is not a click.\n    await new Promise<void>(res => setTimeout(() => res(), 400));\n\n    const mousemoveRight = new MouseEvent('mousemove', {\n      clientX: ++mousePositionX,\n    });\n    document.dispatchEvent(mousemoveRight);\n    assert.strictEqual(lengthText, '43px', 'length value should increase by 1 when the mouse is dragged to right');\n\n    const mousemoveLeftShift = new MouseEvent('mousemove', {\n      clientX: --mousePositionX,\n      shiftKey: true,\n    });\n    document.dispatchEvent(mousemoveLeftShift);\n    assert.strictEqual(\n        lengthText, '33px', 'length value should decrease by 10 when the mouse is dragged to left with shift key');\n\n    const mousemoveRightAlt = new MouseEvent('mousemove', {\n      clientX: ++mousePositionX,\n      altKey: true,\n    });\n    document.dispatchEvent(mousemoveRightAlt);\n    assert.strictEqual(\n        lengthText, '33.1px', 'length value should decrease by 10 when the mouse is dragged to left with shift key');\n  });\n\n  describe('#CSSLengthUtils', () => {\n    it('parses CSS properties with length correctly', () => {\n      assert.deepEqual(\n          InlineEditor.CSSLengthUtils.parseText('42px'),\n          {value: 42, unit: InlineEditor.CSSLengthUtils.LengthUnit.PIXEL});\n      assert.deepEqual(\n          InlineEditor.CSSLengthUtils.parseText('-5vw'), {value: -5, unit: InlineEditor.CSSLengthUtils.LengthUnit.VW});\n      assert.deepEqual(InlineEditor.CSSLengthUtils.parseText('42'), null);\n      assert.deepEqual(InlineEditor.CSSLengthUtils.parseText(''), null);\n    });\n  });\n});\n"]}