{"version":3,"file":"ColorSwatch.test.js","sourceRoot":"","sources":["../../../../../../../../front_end/ui/legacy/components/inline_editor/ColorSwatch.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../../../core/common/common.js';\nimport {\n  dispatchClickEvent,\n  renderElementIntoDOM,\n} from '../../../../testing/DOMHelpers.js';\nimport {describeWithLocale} from '../../../../testing/EnvironmentHelpers.js';\nimport * as UI from '../../legacy.js';\n\nimport * as InlineEditor from './inline_editor.js';\n\nfunction assertSwatch(\n    swatch: InlineEditor.ColorSwatch.ColorSwatch,\n    expected: {backgroundColor?: string, colorTextInSlot?: string, tooltip?: string}) {\n  const swatchEl = swatch.shadowRoot!.querySelector('.color-swatch');\n  assert.instanceOf(swatchEl, HTMLElement);\n  const swatchInnerEl = swatch.shadowRoot!.querySelector('.color-swatch-inner');\n  assert.instanceOf(swatchInnerEl, HTMLElement);\n  const slotEl = swatch.shadowRoot!.querySelector('slot');\n  assert.instanceOf(slotEl, HTMLElement);\n\n  if (expected.backgroundColor) {\n    assert.strictEqual(\n        swatchInnerEl.style.backgroundColor, expected.backgroundColor, 'The swatch has the correct color');\n  }\n  if (expected.colorTextInSlot) {\n    assert.strictEqual(slotEl.textContent, expected.colorTextInSlot, 'The slot shows the correct default color');\n  }\n  if (expected.tooltip) {\n    assert.strictEqual(swatchEl.getAttribute('title'), expected.tooltip, 'The tooltip is correct');\n  }\n}\n\nfunction createSwatch(color: Common.Color.Color|string, formatOrUseUserSetting?: string|boolean, tooltip?: string) {\n  const swatch = new InlineEditor.ColorSwatch.ColorSwatch();\n  renderElementIntoDOM(swatch);\n  swatch.renderColor(color, formatOrUseUserSetting, tooltip);\n  return swatch;\n}\n\nfunction getClickTarget(swatch: InlineEditor.ColorSwatch.ColorSwatch) {\n  return swatch.shadowRoot!.querySelector('.color-swatch-inner')!;\n}\n\ndescribeWithLocale('ColorSwatch', () => {\n  it('accepts colors as text', () => {\n    const swatch = createSwatch('red');\n\n    assertSwatch(swatch, {\n      backgroundColor: 'red',\n      colorTextInSlot: 'red',\n    });\n  });\n\n  it('accepts colors as color objects', () => {\n    const swatch = createSwatch(Common.Color.parse('red') as Common.Color.Color);\n\n    assertSwatch(swatch, {\n      backgroundColor: 'red',\n      colorTextInSlot: 'red',\n    });\n\n    swatch.renderColor(new Common.Color.Legacy([1, .5, .2, .5], Common.Color.Format.RGBA));\n\n    assertSwatch(swatch, {\n      backgroundColor: 'rgba(255, 128, 51, 0.5)',\n      colorTextInSlot: 'rgb(255 128 51 / 50%)',\n    });\n  });\n\n  it('renders text only for invalid colors provided as text', () => {\n    const swatch = createSwatch('invalid');\n\n    assert.strictEqual(\n        swatch.shadowRoot!.querySelectorAll('.color-swatch').length, 0, 'There is no swatch in the component');\n    assert.strictEqual(swatch.shadowRoot!.textContent, 'invalid', 'The correct value is displayed');\n  });\n\n  it('accepts a custom color format', () => {\n    const swatch = createSwatch('red', Common.Color.Format.RGB);\n    assertSwatch(swatch, {colorTextInSlot: 'red'});\n\n    swatch.renderColor(\n        new Common.Color.Legacy([1, .5, .2, .5], Common.Color.Format.RGBA).as(Common.Color.Format.HSL),\n        Common.Color.Format.RGBA);\n    assertSwatch(swatch, {colorTextInSlot: 'rgb(255 128 51 / 50%)'});\n  });\n\n  it('displays a default tooltip', () => {\n    const swatch = createSwatch('red');\n\n    assertSwatch(swatch, {tooltip: 'Shift-click to change color format'});\n  });\n\n  it('can display a custom tooltip', () => {\n    const swatch = createSwatch('red', false, 'This is a custom tooltip');\n\n    assertSwatch(swatch, {tooltip: 'This is a custom tooltip'});\n  });\n\n  it('dispatches an event on clicks', () => {\n    const swatch = createSwatch('red');\n    const target = getClickTarget(swatch);\n\n    const swatchClickEventsReceived: Event[] = [];\n    const onClick = (e: Event) => {\n      swatchClickEventsReceived.push(e);\n    };\n    swatch.addEventListener(InlineEditor.ColorSwatch.ClickEvent.eventName, onClick);\n\n    dispatchClickEvent(target);\n    dispatchClickEvent(target);\n    dispatchClickEvent(target);\n    assert.strictEqual(swatchClickEventsReceived.length, 3, 'The right click events were received');\n\n    swatch.removeEventListener(InlineEditor.ColorSwatch.ClickEvent.eventName, onClick);\n\n    dispatchClickEvent(target);\n    assert.strictEqual(swatchClickEventsReceived.length, 3, 'No more click events received after removing listener');\n  });\n\n  it('does not dispatch an event on click when it is readonly', () => {\n    const swatch = createSwatch('red');\n    swatch.setReadonly(true);\n    const target = getClickTarget(swatch);\n\n    const swatchClickEventsReceived: Event[] = [];\n    const onClick = (e: Event) => {\n      swatchClickEventsReceived.push(e);\n    };\n    swatch.addEventListener(InlineEditor.ColorSwatch.ClickEvent.eventName, onClick);\n\n    dispatchClickEvent(target);\n    dispatchClickEvent(target);\n    dispatchClickEvent(target);\n    assert.strictEqual(swatchClickEventsReceived.length, 0, 'No click events received for readonly color swatch');\n  });\n\n  it('does not dispatch a swatch-click event on shift-click', () => {\n    const contextMenuShow = sinon.stub(UI.ContextMenu.ContextMenu.prototype, 'show').resolves();\n    const swatch = createSwatch('red');\n    const target = getClickTarget(swatch);\n\n    const swatchClickEventsReceived: Event[] = [];\n    const onClick = (e: Event) => {\n      swatchClickEventsReceived.push(e);\n    };\n    swatch.addEventListener(InlineEditor.ColorSwatch.ClickEvent.eventName, onClick);\n\n    dispatchClickEvent(target, {shiftKey: true});\n    dispatchClickEvent(target, {shiftKey: true});\n    dispatchClickEvent(target, {shiftKey: true});\n\n    assert.strictEqual(swatchClickEventsReceived.length, 0, 'No swatch-click events are received on shift-click');\n\n    swatch.removeEventListener(InlineEditor.ColorSwatch.ClickEvent.eventName, onClick);\n    assert.isTrue(contextMenuShow.calledThrice);\n  });\n\n  it('does not dispatch a formatchanged event on click', () => {\n    const swatch = createSwatch('red');\n    const target = getClickTarget(swatch);\n\n    const formatChangedEventsReceived: InlineEditor.ColorSwatch.ColorChangedEvent[] = [];\n    const onClick = (e: InlineEditor.ColorSwatch.ColorChangedEvent) => {\n      formatChangedEventsReceived.push(e);\n    };\n    swatch.addEventListener(InlineEditor.ColorSwatch.ColorChangedEvent.eventName, onClick);\n\n    dispatchClickEvent(target);\n    dispatchClickEvent(target);\n    dispatchClickEvent(target);\n\n    assert.strictEqual(formatChangedEventsReceived.length, 0, 'No formatchanged events are received on click');\n\n    swatch.removeEventListener(InlineEditor.ColorSwatch.ColorChangedEvent.eventName, onClick);\n  });\n\n  it('produces a color conversion menu', () => {\n    const menuEntries: string[] = [];\n    sinon.stub(UI.ContextMenu.ContextMenu.prototype, 'show').resolves();\n    sinon.stub(UI.ContextMenu.Section.prototype, 'appendItem').callsFake((label: string) => {\n      menuEntries.push(label);\n      return new UI.ContextMenu.Item(null, 'item');\n    });\n\n    // Without alpha:\n    const swatch = createSwatch('#ff0000');\n    const target = getClickTarget(swatch);\n    dispatchClickEvent(target, {shiftKey: true});\n    assert.deepEqual(menuEntries, [\n      'red',\n      // HEX is skipped because it is the input format\n      '#f00',\n      'rgb(255 0 0)',\n      'hsl(0deg 100% 50%)',\n      'hwb(0deg 0% 0%)',\n      'lch(54 106.85 40.86)',\n      'oklch(0.63 0.26 29.23)',\n      'lab(54 80.82 69.9)',\n      'oklab(0.63 0.22 0.13)',\n      'color(srgb 1 0 0)',\n      'color(srgb-linear 1 0 0)',\n      'color(display-p3 0.92 0.2 0.14)',\n      'color(a98-rgb 0.86 0 0)',\n      'color(prophoto-rgb 0.7 0.28 0.1)',\n      'color(rec2020 0.79 0.23 0.07)',\n      'color(xyz 0.41 0.21 0.02)',\n      'color(xyz-d50 0.44 0.22 0.01)',\n      'color(xyz-d65 0.41 0.21 0.02)',\n    ]);\n\n    // With alpha:\n    menuEntries.splice(0);\n    swatch.renderColor('#ff000080');\n    dispatchClickEvent(target, {shiftKey: true});\n\n    assert.deepEqual(menuEntries, [\n      // HEXA is skipped because it's the input\n      'rgb(255 0 0 / 50%)',\n      'hsl(0deg 100% 50% / 50.2%)',\n      'hwb(0deg 0% 0% / 50.2%)',\n      'lch(54 106.85 40.86 / 0.5)',\n      'oklch(0.63 0.26 29.23 / 0.5)',\n      'lab(54 80.82 69.9 / 0.5)',\n      'oklab(0.63 0.22 0.13 / 0.5)',\n      'color(srgb 1 0 0 / 0.5)',\n      'color(srgb-linear 1 0 0 / 0.5)',\n      'color(display-p3 0.92 0.2 0.14 / 0.5)',\n      'color(a98-rgb 0.86 0 0 / 0.5)',\n      'color(prophoto-rgb 0.7 0.28 0.1 / 0.5)',\n      'color(rec2020 0.79 0.23 0.07 / 0.5)',\n      'color(xyz 0.41 0.21 0.02 / 0.5)',\n      'color(xyz-d50 0.44 0.22 0.01 / 0.5)',\n      'color(xyz-d65 0.41 0.21 0.02 / 0.5)',\n    ]);\n\n    // With alpha:\n    menuEntries.splice(0);\n    swatch.renderColor('lab(54.29 80.82 69.9 / 0.5)');\n    dispatchClickEvent(target, {shiftKey: true});\n\n    assert.deepEqual(menuEntries, [\n      '#ff000080',\n      'rgb(255 0 0 / 50%)',\n      'hsl(360deg 100% 50% / 50%)',\n      'hwb(360deg 0% 0% / 50%)',\n      'lch(54 106.85 40.86 / 0.5)',\n      'oklch(0.63 0.26 29.23 / 0.5)',\n      //  'lab(54.29 80.82 69.9 / 0.5)',\n      'oklab(0.63 0.22 0.13 / 0.5)',\n      'color(srgb 1 0 0 / 0.5)',\n      'color(srgb-linear 1 0 0 / 0.5)',\n      'color(display-p3 0.92 0.2 0.14 / 0.5)',\n      'color(a98-rgb 0.86 0 0 / 0.5)',\n      'color(prophoto-rgb 0.7 0.28 0.1 / 0.5)',\n      'color(rec2020 0.79 0.23 0.07 / 0.5)',\n      'color(xyz 0.41 0.21 0.02 / 0.5)',\n      'color(xyz-d50 0.44 0.22 0.01 / 0.5)',\n      'color(xyz-d65 0.41 0.21 0.02 / 0.5)',\n    ]);\n  });\n\n  it('does not produce a color conversion menu when it is readonly', () => {\n    const showContextMenuStub = sinon.stub(UI.ContextMenu.ContextMenu.prototype, 'show');\n\n    const swatch = createSwatch('#ff0000');\n    swatch.setReadonly(true);\n    const target = getClickTarget(swatch);\n    dispatchClickEvent(target, {shiftKey: true});\n    assert.isTrue(showContextMenuStub.notCalled);\n  });\n});\n"]}