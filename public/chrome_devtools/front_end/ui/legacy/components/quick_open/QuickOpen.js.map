{"version":3,"file":"QuickOpen.js","sourceRoot":"","sources":["../../../../../../../../front_end/ui/legacy/components/quick_open/QuickOpen.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,IAAI,MAAM,+BAA+B,CAAC;AAGtD,OAAO,EAAC,kBAAkB,EAAE,sBAAsB,EAAgB,MAAM,yBAAyB,CAAC;AAElG,MAAM,SAAS,GAAG;IAChB;;OAEG;IACH,0BAA0B,EAAE,kCAAkC;CAC/D,CAAC;AACF,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,8CAA8C,EAAE,SAAS,CAAC,CAAC;AACpG,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AAEtE,MAAM,CAAC,MAAM,OAAO,GAAa,EAAE,CAAC;AAEpC,MAAM,OAAO,aAAa;IAChB,MAAM,CAAc;IACX,QAAQ,CAAW;IAC5B,SAAS,CAId;IACK,kBAAkB,CAA0B;IAEpD;QACE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,EAAE,CAAC;QAC3B,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;QAE/B,sBAAsB,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAC9D,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC;IACpD,CAAC;IAED,MAAM,CAAC,IAAI,CAAC,KAAa;QACvB,MAAM,SAAS,GAAG,IAAI,IAAI,EAAE,CAAC;QAC7B,MAAM,kBAAkB,GAAG,IAAI,kBAAkB,CAAC,IAAI,EAAE,OAAO,EAAE,SAAS,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;QACzG,SAAS,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;QAClD,kBAAkB,CAAC,cAAc,CAAC,UAAU,CAAC,SAAS,CAAC,0BAA0B,CAAC,CAAC,CAAC;QACpF,kBAAkB,CAAC,YAAY,EAAE,CAAC;QAClC,kBAAkB,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IACrC,CAAC;IAEO,WAAW,CAAC,SAKnB;QACC,MAAM,MAAM,GAAG,SAAS,CAAC,MAAM,CAAC;QAChC,IAAI,MAAM,KAAK,IAAI,EAAE,CAAC;YACpB,OAAO;QACT,CAAC;QACD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC3B,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,EAAE;YACzB,QAAQ,EAAE,SAAS,CAAC,QAAQ;YAC5B,WAAW,EAAE,SAAS,CAAC,WAAW;YAClC,eAAe,EAAE,SAAS,CAAC,eAAe;SAC3C,CAAC,CAAC;IACL,CAAC;IAEO,KAAK,CAAC,YAAY,CAAC,KAAa;QACtC,MAAM,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;QACtE,IAAI,OAAO,MAAM,KAAK,QAAQ,EAAE,CAAC;YAC/B,OAAO;QACT,CAAC;QAED,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC7B,OAAO;QACT,CAAC;QACD,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QAC1C,MAAM,mBAAmB,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,WAAW,CAAC;QACpE,IAAI,CAAC,kBAAkB,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,CAAC,CAAC,mBAAmB,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;QAC3F,MAAM,uBAAuB,GAAG,CAAC,KAAK,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,eAAe,CAAC;QAClG,IAAI,CAAC,kBAAkB,CAAC,oBAAoB,CAAC,uBAAuB,CAAC,CAAC,CAAC,uBAAuB,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;QAEvG,IAAI,IAAI,CAAC,MAAM,KAAK,MAAM,EAAE,CAAC;YAC3B,OAAO;QACT,CAAC;QACD,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QAC1C,MAAM,gBAAgB,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,QAAQ,CAAC;QAC9D,IAAI,CAAC,gBAAgB,EAAE,CAAC;YACtB,OAAO;QACT,CAAC;QAED,MAAM,QAAQ,GAAG,MAAM,gBAAgB,EAAE,CAAC;QAC1C,IAAI,IAAI,CAAC,MAAM,KAAK,MAAM,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE,CAAC;YACvD,OAAO;QACT,CAAC;QACD,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QAC9C,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,CAAC;IACvC,CAAC;IAEO,qBAAqB,CAAC,SAAmB;IACjD,CAAC;CACF;AAED,MAAM,OAAO,kBAAkB;IAC7B,YAAY,CAAC,QAA4B,EAAE,QAAgB;QACzD,QAAQ,QAAQ,EAAE,CAAC;YACjB,KAAK,iBAAiB;gBACpB,aAAa,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;gBACvB,OAAO,IAAI,CAAC;QAChB,CAAC;QACD,OAAO,KAAK,CAAC;IACf,CAAC;CACF","sourcesContent":["// Copyright 2016 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport type * as UI from '../../legacy.js';\n\nimport {FilteredListWidget, getRegisteredProviders, type Provider} from './FilteredListWidget.js';\n\nconst UIStrings = {\n  /**\n   * @description Text of the hint shows under Quick Open input box\n   */\n  typeToSeeAvailableCommands: 'Type ? to see available commands',\n};\nconst str_ = i18n.i18n.registerUIStrings('ui/legacy/components/quick_open/QuickOpen.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport const history: string[] = [];\n\nexport class QuickOpenImpl {\n  private prefix: string|null;\n  private readonly prefixes: string[];\n  private providers: Map<string, {\n    provider: () => Promise<Provider>,\n    titlePrefix: (() => string),\n    titleSuggestion?: (() => string),\n  }>;\n  private filteredListWidget: FilteredListWidget|null;\n\n  constructor() {\n    this.prefix = null;\n    this.prefixes = [];\n    this.providers = new Map();\n    this.filteredListWidget = null;\n\n    getRegisteredProviders().forEach(this.addProvider.bind(this));\n    this.prefixes.sort((a, b) => b.length - a.length);\n  }\n\n  static show(query: string): void {\n    const quickOpen = new this();\n    const filteredListWidget = new FilteredListWidget(null, history, quickOpen.queryChanged.bind(quickOpen));\n    quickOpen.filteredListWidget = filteredListWidget;\n    filteredListWidget.setHintElement(i18nString(UIStrings.typeToSeeAvailableCommands));\n    filteredListWidget.showAsDialog();\n    filteredListWidget.setQuery(query);\n  }\n\n  private addProvider(extension: {\n    prefix: string,\n    provider: () => Promise<Provider>,\n    titlePrefix: () => string,\n    titleSuggestion?: (() => string),\n  }): void {\n    const prefix = extension.prefix;\n    if (prefix === null) {\n      return;\n    }\n    this.prefixes.push(prefix);\n    this.providers.set(prefix, {\n      provider: extension.provider,\n      titlePrefix: extension.titlePrefix,\n      titleSuggestion: extension.titleSuggestion,\n    });\n  }\n\n  private async queryChanged(query: string): Promise<void> {\n    const prefix = this.prefixes.find(prefix => query.startsWith(prefix));\n    if (typeof prefix !== 'string') {\n      return;\n    }\n\n    if (!this.filteredListWidget) {\n      return;\n    }\n    this.filteredListWidget.setPrefix(prefix);\n    const titlePrefixFunction = this.providers.get(prefix)?.titlePrefix;\n    this.filteredListWidget.setCommandPrefix(titlePrefixFunction ? titlePrefixFunction() : '');\n    const titleSuggestionFunction = (query === prefix) && this.providers.get(prefix)?.titleSuggestion;\n    this.filteredListWidget.setCommandSuggestion(titleSuggestionFunction ? titleSuggestionFunction() : '');\n\n    if (this.prefix === prefix) {\n      return;\n    }\n    this.prefix = prefix;\n    this.filteredListWidget.setProvider(null);\n    const providerFunction = this.providers.get(prefix)?.provider;\n    if (!providerFunction) {\n      return;\n    }\n\n    const provider = await providerFunction();\n    if (this.prefix !== prefix || !this.filteredListWidget) {\n      return;\n    }\n    this.filteredListWidget.setProvider(provider);\n    this.providerLoadedForTest(provider);\n  }\n\n  private providerLoadedForTest(_provider: Provider): void {\n  }\n}\n\nexport class ShowActionDelegate implements UI.ActionRegistration.ActionDelegate {\n  handleAction(_context: UI.Context.Context, actionId: string): boolean {\n    switch (actionId) {\n      case 'quick-open.show':\n        QuickOpenImpl.show('');\n        return true;\n    }\n    return false;\n  }\n}\n"]}