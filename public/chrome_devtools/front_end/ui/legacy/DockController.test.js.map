{"version":3,"file":"DockController.test.js","sourceRoot":"","sources":["../../../../../../front_end/ui/legacy/DockController.test.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,MAAM,MAAM,6BAA6B,CAAC;AAEtD,OAAO,KAAK,IAAI,MAAM,yBAAyB,CAAC;AAChD,OAAO,EACL,sBAAsB,EACtB,oBAAoB,GACrB,MAAM,qCAAqC,CAAC;AAE7C,OAAO,KAAK,QAAQ,MAAM,aAAa,CAAC;AAExC,KAAK,UAAU,uBAAuB,CAAC,YAAoB;IACzD,MAAM,CAAC,QAAQ,CAAC,uBAAuB,CAAC,CAAC;YACvC,QAAQ,uDAAwC;YAChD,WAAW,EAAE,kBAAkB;YAC/B,WAAW,+CAAkC;YAC7C,YAAY,EAAE,YAAY;YAC1B,OAAO,EAAE;gBACP;oBACE,KAAK,EAAE,OAAO;oBACd,IAAI,EAAE,GAAG,EAAE,CAAC,OAA4C;oBACxD,KAAK,EAAE,GAAG,EAAE,CAAC,eAAoD;oBACjE,GAAG,EAAE,KAAK;iBACX;gBACD;oBACE,KAAK,EAAE,QAAQ;oBACf,IAAI,EAAE,GAAG,EAAE,CAAC,QAA6C;oBACzD,KAAK,EAAE,GAAG,EAAE,CAAC,gBAAqD;oBAClE,GAAG,EAAE,KAAK;iBACX;gBACD;oBACE,KAAK,EAAE,MAAM;oBACb,IAAI,EAAE,GAAG,EAAE,CAAC,MAA2C;oBACvD,KAAK,EAAE,GAAG,EAAE,CAAC,cAAmD;oBAChE,GAAG,EAAE,KAAK;iBACX;gBACD;oBACE,KAAK,EAAE,UAAU;oBACjB,IAAI,EAAE,GAAG,EAAE,CAAC,UAA+C;oBAC3D,KAAK,EAAE,GAAG,EAAE,CAAC,QAA6C;oBAC1D,GAAG,EAAE,KAAK;iBACX;aACF;SACF,CAAC,CAAC,CAAC;IACJ,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC;IACxC,MAAM,oBAAoB,CAAC,EAAC,KAAK,EAAE,KAAK,EAAC,CAAC,CAAC;AAC7C,CAAC;AAED,QAAQ,CAAC,gBAAgB,EAAE,GAAG,EAAE;IAC9B,KAAK,CAAC,KAAK,IAAI,EAAE;QACf,MAAM,sBAAsB,EAAE,CAAC;IACjC,CAAC,CAAC,CAAC;IACH,EAAE,CAAC,uDAAuD,EAAE,KAAK,IAAI,EAAE;QACrE;;;WAGG;QACH,MAAM,uBAAuB,CAAC,MAAM,CAAC,CAAC;QACtC,MAAM,cAAc,GAAG,QAAQ,CAAC,cAAc,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAC,QAAQ,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAC,CAAC,CAAC;QACxG,MAAM,CAAC,WAAW,CAAC,cAAc,CAAC,QAAQ,EAAE,EAAE,SAAS,CAAC,CAAC;IAC3D,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,4DAA4D,EAAE,KAAK,IAAI,EAAE;QAC1E,MAAM,uBAAuB,CAAC,+BAA+B,CAAC,CAAC;QAC/D,MAAM,cAAc,GAAG,QAAQ,CAAC,cAAc,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAC,QAAQ,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAC,CAAC,CAAC;QACxG,MAAM,CAAC,WAAW,CAAC,cAAc,CAAC,QAAQ,EAAE,EAAE,SAAS,CAAC,CAAC;IAC3D,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,4DAA4D,EAAE,KAAK,IAAI,EAAE;QAC1E,MAAM,uBAAuB,CAAC,MAAM,CAAC,CAAC;QACtC,MAAM,cAAc,GAAG,QAAQ,CAAC,cAAc,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAC,QAAQ,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAC,CAAC,CAAC;QACzG,MAAM,CAAC,WAAW,CAAC,cAAc,CAAC,QAAQ,EAAE,8DAA6C,CAAC;IAC5F,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,0CAA0C,EAAE,KAAK,IAAI,EAAE;QACxD,MAAM,uBAAuB,CAAC,MAAM,CAAC,CAAC;QACtC,MAAM,cAAc,GAAG,QAAQ,CAAC,cAAc,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAC,QAAQ,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAC,CAAC,CAAC;QACxG,cAAc,CAAC,cAAc,EAAE,CAAC;QAChC,MAAM,CAAC,WAAW,CAAC,cAAc,CAAC,QAAQ,EAAE,0DAA2C,CAAC;QACxF,cAAc,CAAC,cAAc,EAAE,CAAC;QAChC,MAAM,CAAC,WAAW,CAAC,cAAc,CAAC,QAAQ,EAAE,sDAAyC,CAAC;QACtF,cAAc,CAAC,cAAc,EAAE,CAAC;QAChC,MAAM,CAAC,WAAW,CAAC,cAAc,CAAC,QAAQ,EAAE,0DAA2C,CAAC;IAC1F,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as Root from '../../core/root/root.js';\nimport {\n  deinitializeGlobalVars,\n  initializeGlobalVars,\n} from '../../testing/EnvironmentHelpers.js';\n\nimport * as LegacyUI from './legacy.js';\n\nasync function registerDockingSettings(currentValue: string) {\n  Common.Settings.registerSettingsForTest([{\n    category: Common.Settings.SettingCategory.GLOBAL,\n    settingName: 'currentDockState',\n    settingType: Common.Settings.SettingType.ENUM,\n    defaultValue: currentValue,\n    options: [\n      {\n        value: 'right',\n        text: () => 'right' as Platform.UIString.LocalizedString,\n        title: () => 'Dock to right' as Platform.UIString.LocalizedString,\n        raw: false,\n      },\n      {\n        value: 'bottom',\n        text: () => 'bottom' as Platform.UIString.LocalizedString,\n        title: () => 'Dock to bottom' as Platform.UIString.LocalizedString,\n        raw: false,\n      },\n      {\n        value: 'left',\n        text: () => 'left' as Platform.UIString.LocalizedString,\n        title: () => 'Dock to left' as Platform.UIString.LocalizedString,\n        raw: false,\n      },\n      {\n        value: 'undocked',\n        text: () => 'undocked' as Platform.UIString.LocalizedString,\n        title: () => 'Undock' as Platform.UIString.LocalizedString,\n        raw: false,\n      },\n    ],\n  }]);\n  Root.Runtime.experiments.clearForTest();\n  await initializeGlobalVars({reset: false});\n}\n\ndescribe('DockController', () => {\n  after(async () => {\n    await deinitializeGlobalVars();\n  });\n  it('defaults the dockside to undefined when first created', async () => {\n    /* Note: this seems like weird behaviour, but updating DockController to\n     * explicitly set DockSide by default seems to cause issues in Chrome web\n     * tests, so adding this test here to ensure we don't cause any problems.\n     */\n    await registerDockingSettings('left');\n    const dockController = LegacyUI.DockController.DockController.instance({forceNew: true, canDock: true});\n    assert.strictEqual(dockController.dockSide(), undefined);\n  });\n\n  it('falls back to undefined if the setting value is unexpected', async () => {\n    await registerDockingSettings('woah-not-a-real-setting-value');\n    const dockController = LegacyUI.DockController.DockController.instance({forceNew: true, canDock: true});\n    assert.strictEqual(dockController.dockSide(), undefined);\n  });\n\n  it('sets the dockSide to undocked if the dock cannot be docked', async () => {\n    await registerDockingSettings('left');\n    const dockController = LegacyUI.DockController.DockController.instance({forceNew: true, canDock: false});\n    assert.strictEqual(dockController.dockSide(), LegacyUI.DockController.DockState.UNDOCKED);\n  });\n\n  it('can toggle the dock between two settings', async () => {\n    await registerDockingSettings('left');\n    const dockController = LegacyUI.DockController.DockController.instance({forceNew: true, canDock: true});\n    dockController.toggleDockSide();\n    assert.strictEqual(dockController.dockSide(), LegacyUI.DockController.DockState.BOTTOM);\n    dockController.toggleDockSide();\n    assert.strictEqual(dockController.dockSide(), LegacyUI.DockController.DockState.LEFT);\n    dockController.toggleDockSide();\n    assert.strictEqual(dockController.dockSide(), LegacyUI.DockController.DockState.BOTTOM);\n  });\n});\n"]}