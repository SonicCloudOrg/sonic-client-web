{"version":3,"file":"ActionRegistration.test.js","sourceRoot":"","sources":["../../../../../../front_end/ui/legacy/ActionRegistration.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Root from '../../core/root/root.js';\nimport {\n  deinitializeGlobalVars,\n  describeWithEnvironment,\n  initializeGlobalVars,\n} from '../../testing/EnvironmentHelpers.js';\n\nimport * as QuickOpen from './components/quick_open/quick_open.js';\nimport * as UI from './legacy.js';\n\ndescribeWithEnvironment('ActionRegistration', () => {\n  it('toggling settings affects registered actions', () => {\n    Common.Settings.registerSettingExtension({\n      settingName: 'test-setting',\n      settingType: Common.Settings.SettingType.BOOLEAN,\n      defaultValue: false,\n    });\n\n    // Force new instance for the setting extension to apply.\n    const dummyStorage = new Common.Settings.SettingsStorage({});\n    Common.Settings.Settings.instance({\n      forceNew: true,\n      syncedStorage: dummyStorage,\n      globalStorage: dummyStorage,\n      localStorage: dummyStorage,\n    });\n\n    UI.ActionRegistration.registerActionExtension({\n      actionId: 'test-action',\n      category: UI.ActionRegistration.ActionCategory.GLOBAL,\n      setting: 'test-setting',\n    });\n\n    let list = UI.ActionRegistration.getRegisteredActionExtensions();\n    assert.lengthOf(list, 0);\n\n    Common.Settings.moduleSetting('test-setting').set(true);\n    list = UI.ActionRegistration.getRegisteredActionExtensions();\n    assert.lengthOf(list, 1);\n\n    Common.Settings.moduleSetting('test-setting').set(false);\n    list = UI.ActionRegistration.getRegisteredActionExtensions();\n    assert.lengthOf(list, 0);\n  });\n});\n\ndescribeWithEnvironment('ActionRegistration', () => {\n  let actionExecuted = false;\n  const actionTitle = 'Mock action';\n  const actionId = 'mock.action';\n  class MockActionDelegate implements UI.ActionRegistration.ActionDelegate {\n    handleAction(_context: UI.Context.Context, _actionId: string): boolean {\n      actionExecuted = true;\n      return actionExecuted;\n    }\n  }\n\n  class MockContextType {}\n\n  before(async () => {\n    UI.ActionRegistration.registerActionExtension({\n      actionId,\n      category: UI.ActionRegistration.ActionCategory.ELEMENTS,\n      title: i18n.i18n.lockedLazyString(actionTitle),\n      async loadActionDelegate() {\n        return new MockActionDelegate();\n      },\n      contextTypes() {\n        return [MockContextType];\n      },\n    });\n    Root.Runtime.experiments.clearForTest();\n    await initializeGlobalVars();\n    // A ShortcutRegistry instance is needed to add a command to execute an action to the\n    // command menu and an instance of ActionRegistry is needed to instatiate the ShorcutRegistry.\n    const actionRegistryInstance = UI.ActionRegistry.ActionRegistry.instance({forceNew: true});\n    UI.ShortcutRegistry.ShortcutRegistry.instance({forceNew: true, actionRegistry: actionRegistryInstance});\n    UI.Context.Context.instance().setFlavor(MockContextType, new MockContextType());\n  });\n\n  after(async () => {\n    await deinitializeGlobalVars();\n    UI.ActionRegistry.ActionRegistry.reset();\n    UI.ShortcutRegistry.ShortcutRegistry.removeInstance();\n    UI.Context.Context.instance().setFlavor(MockContextType, null);\n  });\n\n  describe('hasAction', () => {\n    it('yields true for a registered action', () => {\n      assert.isTrue(UI.ActionRegistry.ActionRegistry.instance().hasAction(actionId));\n    });\n\n    it('yields false for an unknown action', () => {\n      assert.isFalse(UI.ActionRegistry.ActionRegistry.instance().hasAction('foo'));\n    });\n  });\n\n  describe('getAction', () => {\n    it('retrieves a registered action', () => {\n      const preRegisteredAction = UI.ActionRegistry.ActionRegistry.instance().getAction(actionId);\n      assert.strictEqual(preRegisteredAction.title(), actionTitle, 'Action title is not returned correctly');\n    });\n\n    it('throws for unknown actions', () => {\n      assert.throws(() => UI.ActionRegistry.ActionRegistry.instance().getAction('foo'));\n    });\n  });\n\n  it('finds a pre registered action as available when its context types are in the current context flavors', () => {\n    const availableActions = UI.ActionRegistry.ActionRegistry.instance().availableActions().map(action => action.id());\n    assert.notStrictEqual(availableActions.indexOf(actionId), -1);\n  });\n\n  it('executes a pre registered action', async () => {\n    actionExecuted = false;\n    const preRegisteredAction = UI.ActionRegistry.ActionRegistry.instance().getAction(actionId);\n    await preRegisteredAction.execute();\n    assert.isTrue(actionExecuted, 'Action was not executed');\n  });\n\n  it('executes a pre registered from the command menu', async () => {\n    actionExecuted = false;\n    const commandMenuProvider = new QuickOpen.CommandMenu.CommandMenuProvider();\n    commandMenuProvider.attach();\n    for (let i = 0; i < commandMenuProvider.itemCount(); ++i) {\n      if (commandMenuProvider.itemKeyAt(i).includes(actionTitle)) {\n        await commandMenuProvider.selectItem(i, '');\n      }\n    }\n    assert.isTrue(actionExecuted, 'Action was not executed from CommandMenu');\n  });\n\n  it('throws an error trying to register a duplicated view id', () => {\n    assert.throws(() => {\n      UI.ActionRegistration.registerActionExtension({\n        actionId,\n        category: UI.ActionRegistration.ActionCategory.ELEMENTS,\n      });\n    });\n  });\n\n  it('throws an error trying to register an action with an invalid id', () => {\n    assert.throws(() => {\n      UI.ActionRegistration.registerActionExtension({\n        actionId: 'quickOpen.show',\n        category: UI.ActionRegistration.ActionCategory.GLOBAL,\n      });\n    });\n  });\n\n  it('does not find a pre registered action as available when its context types are not in the current context flavors',\n     () => {\n       UI.Context.Context.instance().setFlavor(MockContextType, null);\n       const availableActions =\n           UI.ActionRegistry.ActionRegistry.instance().availableActions().map(action => action.id());\n       assert.strictEqual(availableActions.indexOf(actionId), -1);\n     });\n\n  it('deletes a registered action using its id', () => {\n    const removalResult = UI.ActionRegistration.maybeRemoveActionExtension(actionId);\n    assert.isTrue(removalResult);\n    assert.doesNotThrow(() => {\n      UI.ActionRegistration.registerActionExtension({\n        actionId,\n        category: UI.ActionRegistration.ActionCategory.ELEMENTS,\n      });\n    });\n  });\n});\n"]}