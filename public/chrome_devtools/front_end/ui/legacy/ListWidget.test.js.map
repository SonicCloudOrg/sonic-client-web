{"version":3,"file":"ListWidget.test.js","sourceRoot":"","sources":["../../../../../../front_end/ui/legacy/ListWidget.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {dispatchClickEvent, renderElementIntoDOM} from '../../testing/DOMHelpers.js';\nimport {describeWithLocale} from '../../testing/EnvironmentHelpers.js';\n\nimport * as UI from './legacy.js';\n\ndescribeWithLocale('ListWidget', () => {\n  describe('Editor', () => {\n    it('Cancel button triggers on mouse click event', () => {\n      const editor = new UI.ListWidget.Editor<string>();\n      renderElementIntoDOM(editor.element);\n      let cancelled = false;\n      function cancel() {\n        cancelled = true;\n      }\n      editor.beginEdit('test', 0, 'Commit', () => {}, cancel);\n      const buttons = editor.element.querySelectorAll('devtools-button');\n      for (const button of buttons) {\n        if (button.innerHTML === 'Cancel') {\n          dispatchClickEvent(button);\n          break;\n        }\n      }\n      assert.isTrue(cancelled);\n    });\n\n    it('Commit button triggers on mouse click event', () => {\n      const editor = new UI.ListWidget.Editor<string>();\n      renderElementIntoDOM(editor.element);\n      let committed = false;\n      function commit() {\n        committed = true;\n      }\n      editor.beginEdit('test', 0, 'Commit', commit, () => {});\n      const buttons = editor.element.querySelectorAll('devtools-button');\n      for (const button of buttons) {\n        if (button.innerHTML === 'Commit') {\n          dispatchClickEvent(button);\n          break;\n        }\n      }\n      assert.isTrue(committed);\n    });\n  });\n\n  it('adds a new item even when the empty string', () => {\n    class MockEditor extends UI.ListWidget.Editor<string> {\n      override beginEdit(\n          item: string, index: number, commitButtonTitle: string, commit: () => void, cancel: () => void): void {\n        super.beginEdit(item, index, commitButtonTitle, commit, cancel);\n        commit();\n      }\n    }\n    class MockDelegate implements UI.ListWidget.Delegate<string> {\n      committed = false;\n      beginEdit(_item: string): UI.ListWidget.Editor<string> {\n        return new MockEditor();\n      }\n      commitEdit(_item: string, _editor: UI.ListWidget.Editor<string>, _isNew: boolean): void {\n        this.committed = true;\n      }\n      removeItemRequested(_item: string, _index: number): void {\n      }\n      renderItem(_item: string, _editable: boolean): Element {\n        return document.createElement('span');\n      }\n    }\n    const delegate = new MockDelegate();\n    const list = new UI.ListWidget.ListWidget(delegate);\n    list.markAsRoot();\n    list.show(renderElementIntoDOM(document.createElement('main')));\n    list.addNewItem(0, '');\n    assert.isTrue(delegate.committed);\n  });\n});\n"]}