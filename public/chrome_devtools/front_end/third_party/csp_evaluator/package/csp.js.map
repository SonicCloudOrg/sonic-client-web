{"version":3,"file":"csp.js","sourceRoot":"","sources":["../../../../../../../front_end/third_party/csp_evaluator/package/csp.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @fileoverview CSP definitions and helper functions.\n * @author lwe@google.com (Lukas Weichselbaum)\n *\n * @license\n * Copyright 2016 Google Inc. All rights reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport {Finding, Severity, Type} from './finding.js';\n\n/**\n * Content Security Policy object.\n * List of valid CSP directives:\n *  - http://www.w3.org/TR/CSP2/#directives\n *  - https://www.w3.org/TR/upgrade-insecure-requests/\n */\nexport class Csp {\n  directives: Record<string, string[]|undefined> = {};\n\n  /**\n   * Clones a CSP object.\n   * @return clone of parsedCsp.\n   */\n  clone(): Csp {\n    const clone = new Csp();\n    for (const [directive, directiveValues] of Object.entries(\n             this.directives)) {\n      if (directiveValues) {\n        clone.directives[directive] = [...directiveValues];\n      }\n    }\n    return clone;\n  }\n\n  /**\n   * Converts this CSP back into a string.\n   * @return CSP string.\n   */\n  convertToString(): string {\n    let cspString = '';\n\n    for (const [directive, directiveValues] of Object.entries(\n             this.directives)) {\n      cspString += directive;\n      if (directiveValues !== undefined) {\n        for (let value, i = 0; (value = directiveValues[i]); i++) {\n          cspString += ' ';\n          cspString += value;\n        }\n      }\n      cspString += '; ';\n    }\n\n    return cspString;\n  }\n\n  /**\n   * Returns CSP as it would be seen by a UA supporting a specific CSP version.\n   * @param cspVersion CSP.\n   * @param optFindings findings about ignored directive values will be added\n   *     to this array, if passed. (e.g. CSP2 ignores 'unsafe-inline' in\n   *     presence of a nonce or a hash)\n   * @return The effective CSP.\n   */\n  getEffectiveCsp(cspVersion: Version, optFindings?: Finding[]): Csp {\n    const findings = optFindings || [];\n    const effectiveCsp = this.clone();\n    const directive = effectiveCsp.getEffectiveDirective(Directive.SCRIPT_SRC);\n    const values = this.directives[directive] || [];\n    const effectiveCspValues = effectiveCsp.directives[directive];\n\n    if (effectiveCspValues &&\n        (effectiveCsp.policyHasScriptNonces() ||\n         effectiveCsp.policyHasScriptHashes())) {\n      if (cspVersion >= Version.CSP2) {\n        // Ignore 'unsafe-inline' in CSP >= v2, if a nonce or a hash is present.\n        if (values.includes(Keyword.UNSAFE_INLINE)) {\n          arrayRemove(effectiveCspValues, Keyword.UNSAFE_INLINE);\n          findings.push(new Finding(\n              Type.IGNORED,\n              'unsafe-inline is ignored if a nonce or a hash is present. ' +\n                  '(CSP2 and above)',\n              Severity.NONE, directive, Keyword.UNSAFE_INLINE));\n        }\n      } else {\n        // remove nonces and hashes (not supported in CSP < v2).\n        for (const value of values) {\n          if (value.startsWith('\\'nonce-') || value.startsWith('\\'sha')) {\n            arrayRemove(effectiveCspValues, value);\n          }\n        }\n      }\n    }\n\n    if (effectiveCspValues && this.policyHasStrictDynamic()) {\n      // Ignore allowlist in CSP >= v3 in presence of 'strict-dynamic'.\n      if (cspVersion >= Version.CSP3) {\n        for (const value of values) {\n          // Because of 'strict-dynamic' all host-source and scheme-source\n          // expressions, as well as the \"'unsafe-inline'\" and \"'self'\n          // keyword-sources will be ignored.\n          // https://w3c.github.io/webappsec-csp/#strict-dynamic-usage\n          if (!value.startsWith('\\'') || value === Keyword.SELF ||\n              value === Keyword.UNSAFE_INLINE) {\n            arrayRemove(effectiveCspValues, value);\n            findings.push(new Finding(\n                Type.IGNORED,\n                'Because of strict-dynamic this entry is ignored in CSP3 and above',\n                Severity.NONE, directive, value));\n          }\n        }\n      } else {\n        // strict-dynamic not supported.\n        arrayRemove(effectiveCspValues, Keyword.STRICT_DYNAMIC);\n      }\n    }\n\n    if (cspVersion < Version.CSP3) {\n      // Remove CSP3 directives from pre-CSP3 policies.\n      // https://w3c.github.io/webappsec-csp/#changes-from-level-2\n      delete effectiveCsp.directives[Directive.REPORT_TO];\n      delete effectiveCsp.directives[Directive.WORKER_SRC];\n      delete effectiveCsp.directives[Directive.MANIFEST_SRC];\n      delete effectiveCsp.directives[Directive.TRUSTED_TYPES];\n      delete effectiveCsp.directives[Directive.REQUIRE_TRUSTED_TYPES_FOR];\n    }\n\n    return effectiveCsp;\n  }\n\n  /**\n   * Returns default-src if directive is a fetch directive and is not present in\n   * this CSP. Otherwise the provided directive is returned.\n   * @param directive CSP.\n   * @return The effective directive.\n   */\n  getEffectiveDirective(directive: string): string {\n    // Only fetch directives default to default-src.\n    if (!(directive in this.directives) &&\n        FETCH_DIRECTIVES.includes(directive as Directive)) {\n      return Directive.DEFAULT_SRC;\n    }\n\n    return directive;\n  }\n\n  /**\n   * Returns the passed directives if present in this CSP or default-src\n   * otherwise.\n   * @param directives CSP.\n   * @return The effective directives.\n   */\n  getEffectiveDirectives(directives: string[]): string[] {\n    const effectiveDirectives =\n        new Set(directives.map((val) => this.getEffectiveDirective(val)));\n    return [...effectiveDirectives];\n  }\n\n  /**\n   * Checks if this CSP is using nonces for scripts.\n   * @return true, if this CSP is using script nonces.\n   */\n  policyHasScriptNonces(): boolean {\n    const directiveName = this.getEffectiveDirective(Directive.SCRIPT_SRC);\n    const values = this.directives[directiveName] || [];\n    return values.some((val) => isNonce(val));\n  }\n\n  /**\n   * Checks if this CSP is using hashes for scripts.\n   * @return true, if this CSP is using script hashes.\n   */\n  policyHasScriptHashes(): boolean {\n    const directiveName = this.getEffectiveDirective(Directive.SCRIPT_SRC);\n    const values = this.directives[directiveName] || [];\n    return values.some((val) => isHash(val));\n  }\n\n  /**\n   * Checks if this CSP is using strict-dynamic.\n   * @return true, if this CSP is using CSP nonces.\n   */\n  policyHasStrictDynamic(): boolean {\n    const directiveName = this.getEffectiveDirective(Directive.SCRIPT_SRC);\n    const values = this.directives[directiveName] || [];\n    return values.includes(Keyword.STRICT_DYNAMIC);\n  }\n}\n\n\n/**\n * CSP directive source keywords.\n */\nexport enum Keyword {\n  SELF = '\\'self\\'',\n  NONE = '\\'none\\'',\n  UNSAFE_INLINE = '\\'unsafe-inline\\'',\n  UNSAFE_EVAL = '\\'unsafe-eval\\'',\n  WASM_EVAL = '\\'wasm-eval\\'',\n  WASM_UNSAFE_EVAL = '\\'wasm-unsafe-eval\\'',\n  STRICT_DYNAMIC = '\\'strict-dynamic\\'',\n  UNSAFE_HASHED_ATTRIBUTES = '\\'unsafe-hashed-attributes\\'',\n  UNSAFE_HASHES = '\\'unsafe-hashes\\'',\n  REPORT_SAMPLE = '\\'report-sample\\'',\n  BLOCK = '\\'block\\'',\n  ALLOW = '\\'allow\\'',\n}\n\n\n/**\n * CSP directive source keywords.\n */\nexport enum TrustedTypesSink {\n  SCRIPT = '\\'script\\''\n}\n\n\n/**\n * CSP v3 directives.\n * List of valid CSP directives:\n *  - http://www.w3.org/TR/CSP2/#directives\n *  - https://www.w3.org/TR/upgrade-insecure-requests/\n *\n */\nexport enum Directive {\n  // Fetch directives\n  CHILD_SRC = 'child-src',\n  CONNECT_SRC = 'connect-src',\n  DEFAULT_SRC = 'default-src',\n  FONT_SRC = 'font-src',\n  FRAME_SRC = 'frame-src',\n  IMG_SRC = 'img-src',\n  MEDIA_SRC = 'media-src',\n  OBJECT_SRC = 'object-src',\n  SCRIPT_SRC = 'script-src',\n  SCRIPT_SRC_ATTR = 'script-src-attr',\n  SCRIPT_SRC_ELEM = 'script-src-elem',\n  STYLE_SRC = 'style-src',\n  STYLE_SRC_ATTR = 'style-src-attr',\n  STYLE_SRC_ELEM = 'style-src-elem',\n  PREFETCH_SRC = 'prefetch-src',\n\n  MANIFEST_SRC = 'manifest-src',\n  WORKER_SRC = 'worker-src',\n\n  // Document directives\n  BASE_URI = 'base-uri',\n  PLUGIN_TYPES = 'plugin-types',\n  SANDBOX = 'sandbox',\n  DISOWN_OPENER = 'disown-opener',\n\n  // Navigation directives\n  FORM_ACTION = 'form-action',\n  FRAME_ANCESTORS = 'frame-ancestors',\n  NAVIGATE_TO = 'navigate-to',\n\n  // Reporting directives\n  REPORT_TO = 'report-to',\n  REPORT_URI = 'report-uri',\n\n  // Other directives\n  BLOCK_ALL_MIXED_CONTENT = 'block-all-mixed-content',\n  UPGRADE_INSECURE_REQUESTS = 'upgrade-insecure-requests',\n  REFLECTED_XSS = 'reflected-xss',\n  REFERRER = 'referrer',\n  REQUIRE_SRI_FOR = 'require-sri-for',\n  TRUSTED_TYPES = 'trusted-types',\n  // https://github.com/WICG/trusted-types\n  REQUIRE_TRUSTED_TYPES_FOR = 'require-trusted-types-for',\n  WEBRTC = 'webrtc',\n}\n\n/**\n * CSP v3 fetch directives.\n * Fetch directives control the locations from which resources may be loaded.\n * https://w3c.github.io/webappsec-csp/#directives-fetch\n *\n */\nexport const FETCH_DIRECTIVES: Directive[] = [\n  Directive.CHILD_SRC, Directive.CONNECT_SRC, Directive.DEFAULT_SRC,\n  Directive.FONT_SRC, Directive.FRAME_SRC, Directive.IMG_SRC,\n  Directive.MANIFEST_SRC, Directive.MEDIA_SRC, Directive.OBJECT_SRC,\n  Directive.SCRIPT_SRC, Directive.SCRIPT_SRC_ATTR, Directive.SCRIPT_SRC_ELEM,\n  Directive.STYLE_SRC, Directive.STYLE_SRC_ATTR, Directive.STYLE_SRC_ELEM,\n  Directive.WORKER_SRC\n];\n\n/**\n * CSP version.\n */\nexport enum Version {\n  CSP1 = 1,\n  CSP2,\n  CSP3\n}\n\n\n/**\n * Checks if a string is a valid CSP directive.\n * @param directive value to check.\n * @return True if directive is a valid CSP directive.\n */\nexport function isDirective(directive: string): boolean {\n  return Object.values(Directive).includes(directive as Directive);\n}\n\n\n/**\n * Checks if a string is a valid CSP keyword.\n * @param keyword value to check.\n * @return True if keyword is a valid CSP keyword.\n */\nexport function isKeyword(keyword: string): boolean {\n  return Object.values(Keyword).includes(keyword as Keyword);\n}\n\n\n/**\n * Checks if a string is a valid URL scheme.\n * Scheme part + \":\"\n * For scheme part see https://tools.ietf.org/html/rfc3986#section-3.1\n * @param urlScheme value to check.\n * @return True if urlScheme has a valid scheme.\n */\nexport function isUrlScheme(urlScheme: string): boolean {\n  const pattern = new RegExp('^[a-zA-Z][+a-zA-Z0-9.-]*:$');\n  return pattern.test(urlScheme);\n}\n\n\n/**\n * A regex pattern to check nonce prefix and Base64 formatting of a nonce value.\n */\nexport const STRICT_NONCE_PATTERN =\n    new RegExp('^\\'nonce-[a-zA-Z0-9+/_-]+[=]{0,2}\\'$');\n\n\n/** A regex pattern for checking if nonce prefix. */\nexport const NONCE_PATTERN = new RegExp('^\\'nonce-(.+)\\'$');\n\n\n/**\n * Checks if a string is a valid CSP nonce.\n * See http://www.w3.org/TR/CSP2/#nonce_value\n * @param nonce value to check.\n * @param strictCheck Check if the nonce uses the base64 charset.\n * @return True if nonce is has a valid CSP nonce.\n */\nexport function isNonce(nonce: string, strictCheck?: boolean): boolean {\n  const pattern = strictCheck ? STRICT_NONCE_PATTERN : NONCE_PATTERN;\n  return pattern.test(nonce);\n}\n\n\n/**\n * A regex pattern to check hash prefix and Base64 formatting of a hash value.\n */\nexport const STRICT_HASH_PATTERN =\n    new RegExp('^\\'(sha256|sha384|sha512)-[a-zA-Z0-9+/]+[=]{0,2}\\'$');\n\n\n/** A regex pattern to check hash prefix. */\nexport const HASH_PATTERN = new RegExp('^\\'(sha256|sha384|sha512)-(.+)\\'$');\n\n\n/**\n * Checks if a string is a valid CSP hash.\n * See http://www.w3.org/TR/CSP2/#hash_value\n * @param hash value to check.\n * @param strictCheck Check if the hash uses the base64 charset.\n * @return True if hash is has a valid CSP hash.\n */\nexport function isHash(hash: string, strictCheck?: boolean): boolean {\n  const pattern = strictCheck ? STRICT_HASH_PATTERN : HASH_PATTERN;\n  return pattern.test(hash);\n}\n\n\n/**\n * Class to represent all generic CSP errors.\n */\nexport class CspError extends Error {\n  /**\n   * @param message An optional error message.\n   */\n  constructor(message?: string) {\n    super(message);\n  }\n}\n\n/**\n * Mutate the given array to remove the first instance of the given item\n */\nfunction arrayRemove<T>(arr: T[], item: T): void {\n  if (arr.includes(item)) {\n    const idx = arr.findIndex(elem => item === elem);\n    arr.splice(idx, 1);\n  }\n}\n"]}