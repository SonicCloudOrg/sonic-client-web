{"version":3,"file":"evaluator.js","sourceRoot":"","sources":["../../../../../../../front_end/third_party/csp_evaluator/package/evaluator.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;GAgBG;AAGH,OAAO,KAAK,YAAY,MAAM,2BAA2B,CAAC;AAC1D,OAAO,KAAK,cAAc,MAAM,6BAA6B,CAAC;AAC9D,OAAO,KAAK,eAAe,MAAM,8BAA8B,CAAC;AAChE,OAAO,KAAK,GAAG,MAAM,UAAU,CAAC;AAMhC;;;;GAIG;AACH,MAAM,OAAO,YAAY;IACvB,OAAO,CAAU;IACjB,GAAG,CAAM;IAET;;;OAGG;IACH,QAAQ,GAAc,EAAE,CAAC;IACzB;;;OAGG;IACH,YAAY,SAAc,EAAE,UAAoB;QAC9C;;WAEG;QACH,IAAI,CAAC,OAAO,GAAG,UAAU,IAAI,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC;QAE9C;;WAEG;QACH,IAAI,CAAC,GAAG,GAAG,SAAS,CAAC;IACvB,CAAC;IAED;;;;;;;;OAQG;IACH,QAAQ,CACJ,eAAmC,EACnC,kBAAsC;QACxC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,MAAM,MAAM,GAAG,kBAAkB,IAAI,cAAc,CAAC;QAEpD,uEAAuE;QACvE,wCAAwC;QACxC,oEAAoE;QACpE,0EAA0E;QAC1E,MAAM,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QAE3E,qCAAqC;QACrC,IAAI,eAAe,EAAE,CAAC;YACpB,KAAK,MAAM,KAAK,IAAI,eAAe,EAAE,CAAC;gBACpC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;YACxD,CAAC;QACH,CAAC;QAED,kCAAkC;QAClC,KAAK,MAAM,KAAK,IAAI,MAAM,EAAE,CAAC;YAC3B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC;QAC5D,CAAC;QAED,OAAO,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;CACF;AAGD;;GAEG;AACH,MAAM,CAAC,MAAM,cAAc,GAAsB;IAC/C,cAAc,CAAC,uBAAuB,EAAE,cAAc,CAAC,qBAAqB;IAC5E,cAAc,CAAC,oBAAoB,EAAE,cAAc,CAAC,cAAc;IAClE,cAAc,CAAC,sBAAsB;IACrC,cAAc,CAAC,0BAA0B;IACzC,cAAc,CAAC,+BAA+B,EAAE,cAAc,CAAC,aAAa;IAC5E,cAAc,CAAC,gBAAgB,EAAE,cAAc,CAAC,YAAY;IAC5D,cAAc,CAAC,wBAAwB,EAAE,YAAY,CAAC,qBAAqB;IAC3E,YAAY,CAAC,qBAAqB,EAAE,YAAY,CAAC,mBAAmB;CACrE,CAAC;AAGF;;GAEG;AACH,MAAM,CAAC,MAAM,gBAAgB,GAAsB;IACjD,eAAe,CAAC,kBAAkB;IAClC,eAAe,CAAC,+BAA+B;IAC/C,eAAe,CAAC,yBAAyB;IACzC,eAAe,CAAC,sBAAsB;IACtC,eAAe,CAAC,mCAAmC;CACpD,CAAC","sourcesContent":["/**\n * @author lwe@google.com (Lukas Weichselbaum)\n *\n * @license\n * Copyright 2016 Google Inc. All rights reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {CheckerFunction} from './checks/checker.js';\nimport * as parserChecks from './checks/parser_checks.js';\nimport * as securityChecks from './checks/security_checks.js';\nimport * as strictcspChecks from './checks/strictcsp_checks.js';\nimport * as csp from './csp.js';\nimport {Csp, Version} from './csp.js';\nimport {Finding} from './finding.js';\n\n\n\n/**\n * A class to hold a CSP Evaluator.\n * Evaluates a parsed CSP and reports security findings.\n * @unrestricted\n */\nexport class CspEvaluator {\n  version: Version;\n  csp: Csp;\n\n  /**\n   * List of findings reported by checks.\n   *\n   */\n  findings: Finding[] = [];\n  /**\n   * @param parsedCsp A parsed Content Security Policy.\n   * @param cspVersion CSP version to apply checks for.\n   */\n  constructor(parsedCsp: Csp, cspVersion?: Version) {\n    /**\n     * CSP version.\n     */\n    this.version = cspVersion || csp.Version.CSP3;\n\n    /**\n     * Parsed CSP.\n     */\n    this.csp = parsedCsp;\n  }\n\n  /**\n   * Evaluates a parsed CSP against a set of checks\n   * @param parsedCspChecks list of checks to run on the parsed CSP (i.e.\n   *     checks like backward compatibility checks, which are independent of the\n   *     actual CSP version).\n   * @param effectiveCspChecks list of checks to run on the effective CSP.\n   * @return List of Findings.\n   * @export\n   */\n  evaluate(\n      parsedCspChecks?: CheckerFunction[],\n      effectiveCspChecks?: CheckerFunction[]): Finding[] {\n    this.findings = [];\n    const checks = effectiveCspChecks || DEFAULT_CHECKS;\n\n    // We're applying checks on the policy as it would be seen by a browser\n    // supporting a specific version of CSP.\n    // For example a browser supporting only CSP1 will ignore nonces and\n    // therefore 'unsafe-inline' would not get ignored if a policy has nonces.\n    const effectiveCsp = this.csp.getEffectiveCsp(this.version, this.findings);\n\n    // Checks independent of CSP version.\n    if (parsedCspChecks) {\n      for (const check of parsedCspChecks) {\n        this.findings = this.findings.concat(check(this.csp));\n      }\n    }\n\n    // Checks depenent on CSP version.\n    for (const check of checks) {\n      this.findings = this.findings.concat(check(effectiveCsp));\n    }\n\n    return this.findings;\n  }\n}\n\n\n/**\n * Set of default checks to run.\n */\nexport const DEFAULT_CHECKS: CheckerFunction[] = [\n  securityChecks.checkScriptUnsafeInline, securityChecks.checkScriptUnsafeEval,\n  securityChecks.checkPlainUrlSchemes, securityChecks.checkWildcards,\n  securityChecks.checkMissingDirectives,\n  securityChecks.checkScriptAllowlistBypass,\n  securityChecks.checkFlashObjectAllowlistBypass, securityChecks.checkIpSource,\n  securityChecks.checkNonceLength, securityChecks.checkSrcHttp,\n  securityChecks.checkDeprecatedDirective, parserChecks.checkUnknownDirective,\n  parserChecks.checkMissingSemicolon, parserChecks.checkInvalidKeyword\n];\n\n\n/**\n * Strict CSP and backward compatibility checks.\n */\nexport const STRICTCSP_CHECKS: CheckerFunction[] = [\n  strictcspChecks.checkStrictDynamic,\n  strictcspChecks.checkStrictDynamicNotStandalone,\n  strictcspChecks.checkUnsafeInlineFallback,\n  strictcspChecks.checkAllowlistFallback,\n  strictcspChecks.checkRequiresTrustedTypesForScripts\n];\n"]}