{"version":3,"file":"JSONEditor.test.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/protocol_monitor/components/JSONEditor.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Host from '../../../core/host/host.js';\nimport {\n  dispatchClickEvent,\n  dispatchKeyDownEvent,\n  dispatchMouseMoveEvent,\n  getEventPromise,\n  raf,\n  renderElementIntoDOM,\n} from '../../../testing/DOMHelpers.js';\nimport {describeWithEnvironment} from '../../../testing/EnvironmentHelpers.js';\nimport {expectCall} from '../../../testing/ExpectStubCall.js';\nimport * as Menus from '../../../ui/components/menus/menus.js';\nimport * as Coordinator from '../../../ui/components/render_coordinator/render_coordinator.js';\nimport type * as SuggestionInput from '../../../ui/components/suggestion_input/suggestion_input.js';\nimport * as UI from '../../../ui/legacy/legacy.js';\nimport * as ProtocolMonitor from '../protocol_monitor.js';\n\nimport * as ProtocolComponents from './components.js';\n\nconst coordinator = Coordinator.RenderCoordinator.RenderCoordinator.instance();\n\ndescribeWithEnvironment('JSONEditor', () => {\n  const renderJSONEditor = () => {\n    const jsonEditor = new ProtocolComponents.JSONEditor.JSONEditor();\n    jsonEditor.metadataByCommand = new Map();\n    jsonEditor.typesByName = new Map();\n    jsonEditor.enumsByName = new Map();\n    jsonEditor.connectedCallback();\n    renderElementIntoDOM(jsonEditor);\n    return jsonEditor;\n  };\n\n  const populateMetadata = async (jsonEditor: ProtocolComponents.JSONEditor.JSONEditor) => {\n    const mockDomain = [\n      {\n        domain: 'Test',\n        metadata: {\n          'Test.test': {\n            parameters: [{\n              name: 'test',\n              type: 'string',\n              optional: false,\n              typeRef: 'Test.testRef',\n            }],\n            description: 'Description1.',\n            replyArgs: ['Test1'],\n          },\n          'Test.test2': {\n            parameters: [{\n              'optional': true,\n              'type': 'array',\n              'name': 'test2',\n              'typeRef': 'string',\n            }],\n          },\n          'Test.test3': {\n            parameters: [{\n              'optional': false,\n              'type': 'object',\n              'value': [\n                {\n                  'optional': true,\n                  'type': 'string',\n                  'name': 'param1',\n                },\n                {\n                  'optional': true,\n                  'type': 'string',\n                  'name': 'param2',\n                },\n              ],\n              'name': 'test3',\n              'typeRef': 'string',\n            }],\n          },\n          'Test.test4': {\n            parameters: [{\n              name: 'test',\n              type: 'boolean',\n              optional: false,\n            }],\n            description: 'Description4.',\n            replyArgs: ['Test4'],\n          },\n          'Test.test5': {\n            parameters: [\n              {\n                name: 'test',\n                type: 'string',\n                optional: true,\n              },\n              {\n                name: 'test2',\n                type: 'string',\n                optional: true,\n              },\n            ],\n            description: 'Description5.',\n            replyArgs: ['Test5'],\n          },\n          'Test.test6': {\n            parameters: [{\n              name: 'test',\n              type: 'number',\n              optional: true,\n            }],\n            description: 'Description6.',\n            replyArgs: ['Test6'],\n          },\n          'Test.test7': {\n            parameters: [{\n              name: 'test',\n              type: 'boolean',\n              optional: true,\n            }],\n            description: 'Description7.',\n            replyArgs: ['Test7'],\n          },\n          'Test.test8': {\n            parameters: [{\n              name: 'test',\n              type: 'number',\n              optional: false,\n            }],\n            description: 'Description8.',\n            replyArgs: ['Test8'],\n          },\n          'Test.test9': {\n            parameters: [\n              {\n                'name': 'traceConfig',\n                'type': 'object',\n                'optional': false,\n                'description': '',\n                'typeRef': 'Tracing.TraceConfig',\n              },\n            ],\n            description: 'Description9.',\n            replyArgs: ['Test9'],\n          },\n          'Test.test10': {\n            parameters: [\n              {\n                'name': 'NoTypeRef',\n                'type': 'object',\n                'optional': true,\n                'description': '',\n                'typeRef': 'NoTypeRef',\n              },\n            ],\n            description: 'Description10.',\n            replyArgs: ['Test10'],\n          },\n          'Test.test11': {\n            parameters: [{\n              'optional': false,\n              'type': 'array',\n              'name': 'test11',\n              'typeRef': 'Test.arrayTypeRef',\n            }],\n          },\n          'Test.test12': {\n            parameters: [{\n              'optional': true,\n              'type': 'object',\n              'value': [\n                {\n                  'optional': false,\n                  'type': 'string',\n                  'name': 'param1',\n                },\n                {\n                  'optional': false,\n                  'type': 'number',\n                  'name': 'param2',\n                },\n              ],\n              'name': 'test12',\n              'typeRef': 'Optional.Object',\n            }],\n          },\n          'Test.test13': {\n            parameters: [{\n              name: 'newTest',\n              type: 'string',\n              optional: false,\n              typeRef: 'Test.newTestRef',\n            }],\n            description: 'Description13.',\n            replyArgs: ['Test13'],\n          },\n          'Test.test14': {\n            parameters: [\n              {\n                'name': 'NoTypeRef',\n                'type': 'object',\n                'optional': true,\n                'description': '',\n              },\n            ],\n            description: 'Description14.',\n            replyArgs: ['Test14'],\n          },\n        },\n      },\n    ] as Iterable<ProtocolMonitor.ProtocolMonitor.ProtocolDomain>;\n\n    const metadataByCommand = ProtocolMonitor.ProtocolMonitor.buildProtocolMetadata(mockDomain);\n    jsonEditor.metadataByCommand = metadataByCommand;\n    await jsonEditor.updateComplete;\n  };\n\n  const renderHoveredElement = async (element: Element|null) => {\n    if (element) {\n      const clock = sinon.useFakeTimers();\n      try {\n        dispatchMouseMoveEvent(element, {\n          bubbles: true,\n          composed: true,\n        });\n        clock.tick(300);\n        clock.restore();\n      } finally {\n        clock.restore();\n      }\n      await raf();\n    } else {\n      throw new Error('No parameter has been found');\n    }\n  };\n\n  const renderSuggestionBox = async (\n      command: string, jsonEditor: ProtocolComponents.JSONEditor.JSONEditor,\n      enumsByName?: Map<string, Record<string, string>>) => {\n    jsonEditor.command = command;\n    if (enumsByName) {\n      jsonEditor.enumsByName = enumsByName;\n    }\n    jsonEditor.populateParametersForCommandWithDefaultValues();\n    await jsonEditor.updateComplete;\n\n    const inputs = jsonEditor.renderRoot.querySelectorAll('devtools-suggestion-input');\n    // inputs[0] corresponds to the devtools-suggestion-input of the command\n    const suggestionInput = inputs[1];\n    // Reset the value to empty string because for boolean it will be set to false by default and the correct suggestions will not show\n    suggestionInput.value = '';\n    suggestionInput.focus();\n\n    await suggestionInput.updateComplete;\n    const suggestionBox = suggestionInput.renderRoot.querySelector('devtools-suggestion-box');\n\n    if (!suggestionBox) {\n      throw new Error('No suggestion box shown');\n    }\n    const suggestions = Array.from(suggestionBox.renderRoot.querySelectorAll('li')).map(item => {\n      if (!item.textContent) {\n        throw new Error('No text inside suggestion');\n      }\n      return (item.textContent.replaceAll(/\\s/g, ''));\n    });\n    return suggestions;\n  };\n\n  const serializePopupContent = () => {\n    const container = document.body.querySelector<HTMLDivElement>('[data-devtools-glass-pane]');\n    const hintDetailView = container?.shadowRoot?.querySelector('devtools-css-hint-details-view');\n    return hintDetailView?.shadowRoot?.textContent?.replaceAll(/\\s/g, '');\n  };\n\n  const renderEditorForCommand = async(command: string, parameters: {[paramName: string]: unknown}): Promise<{\n    inputs: NodeListOf<SuggestionInput.SuggestionInput.SuggestionInput>,\n    displayedCommand: string,\n    jsonEditor: ProtocolComponents.JSONEditor.JSONEditor,\n  }> => {\n    const typesByName = new Map();\n    typesByName.set('string', [\n      {name: 'param1', type: 'string', optional: false, description: 'display a string', typeRef: null},\n      {name: 'param2', type: 'string', optional: false, description: 'displays another string', typeRef: null},\n    ]);\n\n    const jsonEditor = renderJSONEditor();\n\n    await populateMetadata(jsonEditor);\n    jsonEditor.typesByName = typesByName;\n\n    jsonEditor.displayCommand(command, parameters);\n\n    await jsonEditor.updateComplete;\n    const shadowRoot = jsonEditor.renderRoot;\n    const inputs = shadowRoot.querySelectorAll('devtools-suggestion-input');\n    const displayedCommand = jsonEditor.command;\n    return {inputs, displayedCommand, jsonEditor};\n  };\n\n  const renderParamsWithDefaultValues = async (command: string) => {\n    const jsonEditor = renderJSONEditor();\n\n    await populateMetadata(jsonEditor);\n    jsonEditor.command = command;\n    jsonEditor.populateParametersForCommandWithDefaultValues();\n    await jsonEditor.updateComplete;\n\n    const param = jsonEditor.renderRoot.querySelector('[data-paramId]');\n    await renderHoveredElement(param);\n\n    const setDefaultValueButton = jsonEditor.renderRoot.querySelector('devtools-button');\n    if (!setDefaultValueButton) {\n      throw new Error('No button');\n    }\n    dispatchClickEvent(setDefaultValueButton, {\n      bubbles: true,\n      composed: true,\n    });\n\n    await jsonEditor.updateComplete;\n\n    const input = jsonEditor.renderRoot.querySelectorAll('devtools-suggestion-input');\n    const paramInput = input[1];\n\n    if (!paramInput) {\n      throw new Error('No input shown');\n    }\n    return paramInput;\n  };\n\n  const renderWarningIcon = async (command: string, enumsByName?: Map<string, Record<string, string>>) => {\n    const jsonEditor = renderJSONEditor();\n    await populateMetadata(jsonEditor);\n    jsonEditor.command = command;\n    if (enumsByName) {\n      jsonEditor.enumsByName = enumsByName;\n    }\n    jsonEditor.populateParametersForCommandWithDefaultValues();\n    await jsonEditor.updateComplete;\n\n    // inputs[0] corresponds to the devtools-suggestion-input of the command\n    const input = jsonEditor.renderRoot.querySelectorAll('devtools-suggestion-input')[1];\n    if (!input) {\n      throw Error('No editable content displayed');\n    }\n    input.value = 'Not an accepted value';\n    await jsonEditor.updateComplete;\n    input.focus();\n    input.blur();\n    await jsonEditor.updateComplete;\n    const warningIcon = jsonEditor.renderRoot.querySelector('devtools-icon');\n    if (!warningIcon) {\n      throw Error('No icon displayed');\n    }\n    return warningIcon;\n  };\n\n  describe('Binding input bar', () => {\n    it('should show the command written in the input bar inside the editor when parameters are strings with the correct value',\n       async () => {\n         const cdpCommand = {\n           'command': 'Test.test',\n           'parameters': {\n             'test': 'test',\n           },\n         };\n\n         const {command, parameters} = ProtocolMonitor.ProtocolMonitor.parseCommandInput(JSON.stringify(cdpCommand));\n         const {inputs} = await renderEditorForCommand(command, parameters);\n         const parameterRecorderInput = inputs[1];\n         const value = parameterRecorderInput.renderRoot.textContent?.replaceAll(/\\s/g, '');\n         const expectedValue = 'test';\n         assert.deepStrictEqual(value, expectedValue);\n       });\n\n    it('should show the command written in the input bar inside the editor when parameters are arrays with the correct value',\n       async () => {\n         const cdpCommand = {\n           'command': 'Test.test2',\n           'parameters': {\n             'test2': ['test'],\n           },\n         };\n         const {command, parameters} = ProtocolMonitor.ProtocolMonitor.parseCommandInput(JSON.stringify(cdpCommand));\n         const {inputs} = await renderEditorForCommand(command, parameters);\n         const parameterRecorderInput = inputs[1];\n         const value = parameterRecorderInput.renderRoot.textContent?.replaceAll(/\\s/g, '');\n         const expectedValue = 'test';\n         assert.deepStrictEqual(value, expectedValue);\n       });\n\n    it('should show the command written in the input bar inside the editor when parameters are object with the correct value',\n       async () => {\n         const cdpCommand = {\n           'command': 'Test.test3',\n           'parameters': {\n             'test3': {\n               'param1': 'test1',\n               'param2': 'test2',\n             },\n           },\n         };\n\n         const {command, parameters} = ProtocolMonitor.ProtocolMonitor.parseCommandInput(JSON.stringify(cdpCommand));\n         const {inputs} = await renderEditorForCommand(command, parameters);\n         const parameterRecorderInput = inputs[1];\n         const value = parameterRecorderInput.renderRoot.textContent?.replaceAll(/\\s/g, '');\n         const expectedValue = 'test1';\n         assert.deepStrictEqual(value, expectedValue);\n       });\n\n    it('should should every parameter of a command as undefined even if some parameters have not been entered inside the input bar',\n       async () => {\n         const cdpCommand = {\n           'command': 'Test.test5',\n           'parameters': {\n             'test': 'test',\n           },\n         };\n         const {command, parameters} = ProtocolMonitor.ProtocolMonitor.parseCommandInput(JSON.stringify(cdpCommand));\n\n         const jsonEditor = renderJSONEditor();\n\n         await populateMetadata(jsonEditor);\n\n         jsonEditor.displayCommand(command, parameters);\n\n         await jsonEditor.updateComplete;\n         const shadowRoot = jsonEditor.renderRoot;\n         const displayedParameters = shadowRoot.querySelectorAll('.parameter');\n         // Two parameters (test and test2) should be displayed because in the metadata, Test.test5 accepts two parameters\n         assert.deepStrictEqual(displayedParameters.length, 2);\n       });\n    it('does not output parameters if the input is invalid json', async () => {\n      const cdpCommand = '\"command\": \"Test.test\", \"parameters\":';\n      const {command, parameters} = ProtocolMonitor.ProtocolMonitor.parseCommandInput(cdpCommand);\n\n      const {inputs} = await renderEditorForCommand(command, parameters);\n\n      assert.deepStrictEqual(inputs.length, Object.keys(parameters).length + 1);\n    });\n\n    it('does not output parameters if the parameters field is not an object', async () => {\n      const cdpCommand = '\"command\": \"test\", \"parameters\": 1234';\n\n      const {command, parameters} = ProtocolMonitor.ProtocolMonitor.parseCommandInput(cdpCommand);\n\n      const {inputs} = await renderEditorForCommand(command, parameters);\n\n      assert.deepStrictEqual(inputs.length, Object.keys(parameters).length + 1);\n    });\n\n    it('does not output parameters if there is no parameter inserted in the input bar', async () => {\n      const cdpCommand = '\"command\": \"test\"';\n\n      const {command, parameters} = ProtocolMonitor.ProtocolMonitor.parseCommandInput(cdpCommand);\n\n      const {inputs} = await renderEditorForCommand(command, parameters);\n\n      assert.deepStrictEqual(inputs.length, Object.keys(parameters).length + 1);\n    });\n\n    it('checks that the command input field remains empty when there is no command parameter entered', async () => {\n      const cdpCommand = {\n        'parameters': {\n          'test': 'test',\n        },\n      };\n\n      const {command, parameters} = ProtocolMonitor.ProtocolMonitor.parseCommandInput(JSON.stringify(cdpCommand));\n\n      const {displayedCommand} = await renderEditorForCommand(command, parameters);\n\n      assert.deepStrictEqual(displayedCommand, '');\n    });\n\n    it('checks that the command input field remains if the command is not supported', async () => {\n      const cdpCommand = 'dummyCommand';\n\n      const {command, parameters} = ProtocolMonitor.ProtocolMonitor.parseCommandInput(JSON.stringify(cdpCommand));\n      const {displayedCommand} = await renderEditorForCommand(command, parameters);\n\n      assert.deepStrictEqual(displayedCommand, '');\n    });\n  });\n\n  describe('Display command written in editor inside input bar', () => {\n    it('should display the command edited inside the CDP editor into the input bar', async () => {\n      const split = new UI.SplitWidget.SplitWidget(true, false, 'protocol-monitor-split-container', 400);\n      const editorWidget = new ProtocolMonitor.ProtocolMonitor.EditorWidget();\n      const jsonEditor = editorWidget.jsonEditor;\n      jsonEditor.command = 'Test.test';\n      jsonEditor.parameters = [\n        {\n          name: 'test',\n          type: ProtocolComponents.JSONEditor.ParameterType.String,\n          description: 'test',\n          optional: false,\n          value: 'test',\n        },\n      ];\n      const dataGrid = new ProtocolMonitor.ProtocolMonitor.ProtocolMonitorDataGrid(split);\n      split.setMainWidget(dataGrid);\n      split.setSidebarWidget(editorWidget);\n      split.toggleSidebar();\n      await coordinator.done();\n\n      // The first input bar corresponds to the filter bar, so we query the second one which corresponds to the CDP one.\n      const toolbarInput = dataGrid.element.shadowRoot?.querySelectorAll('.toolbar')[1].shadowRoot?.querySelector(\n          '.toolbar-input-prompt');\n      assert.deepStrictEqual(toolbarInput?.innerHTML, '{\"command\":\"Test.test\",\"parameters\":{\"test\":\"test\"}}');\n    });\n\n    it('should update the selected target inside the input bar', async () => {\n      const split = new UI.SplitWidget.SplitWidget(true, false, 'protocol-monitor-split-container', 400);\n      const editorWidget = new ProtocolMonitor.ProtocolMonitor.EditorWidget();\n      const jsonEditor = editorWidget.jsonEditor;\n      jsonEditor.targetId = 'value2';\n      const dataGrid = new ProtocolMonitor.ProtocolMonitor.ProtocolMonitorDataGrid(split);\n      const selector = dataGrid.selector;\n\n      selector.createOption('Option 1', 'value1');\n      selector.createOption('Option 2', 'value2');\n      selector.createOption('Option 3', 'value3');\n\n      split.setMainWidget(dataGrid);\n      split.setSidebarWidget(editorWidget);\n\n      split.toggleSidebar();\n      await coordinator.done();\n\n      // Should be index 1 because the targetId equals \"value2\" which corresponds to the index number 1\n      assert.deepStrictEqual(selector.selectedIndex(), 1);\n    });\n\n    // Flaky test.\n    it.skip(\n        '[crbug.com/1484534]: should not display the command into the input bar if the command is empty string',\n        async () => {\n          const split = new UI.SplitWidget.SplitWidget(true, false, 'protocol-monitor-split-container', 400);\n          const editorWidget = new ProtocolMonitor.ProtocolMonitor.EditorWidget();\n          const jsonEditor = editorWidget.jsonEditor;\n          jsonEditor.command = '';\n          const dataGrid = new ProtocolMonitor.ProtocolMonitor.ProtocolMonitorDataGrid(split);\n          split.setMainWidget(dataGrid);\n          split.setSidebarWidget(editorWidget);\n          split.toggleSidebar();\n\n          await coordinator.done();\n\n          // The first input bar corresponds to the filter bar, so we query the second one which corresponds to the CDP one.\n          const toolbarInput = dataGrid.element.shadowRoot?.querySelectorAll('.toolbar')[1].shadowRoot?.querySelector(\n              '.toolbar-input-prompt');\n          assert.deepStrictEqual(toolbarInput?.innerHTML, '');\n        });\n  });\n  describe('Descriptions', () => {\n    it('should show the popup with the correct description for the description of parameters', async () => {\n      const inputParameters = [\n        {\n          type: 'array',\n          optional: false,\n          value: [\n            {name: '0', value: 'value0', optional: true, type: 'string'},\n            {name: '1', value: 'value1', optional: true, type: 'string'},\n            {name: '2', value: 'value2', optional: true, type: 'string'},\n          ],\n          name: 'arrayParam',\n          typeRef: 'string',\n          description: 'test.',\n        },\n      ] as ProtocolComponents.JSONEditor.Parameter[];\n      const jsonEditor = renderJSONEditor();\n\n      jsonEditor.parameters = inputParameters;\n      await jsonEditor.updateComplete;\n      const param = jsonEditor.renderRoot.querySelector('[data-paramId]');\n\n      await renderHoveredElement(param);\n      const popupContent = serializePopupContent();\n      const expectedPopupContent = 'test.Type:arrayLearnMore';\n      assert.deepStrictEqual(popupContent, expectedPopupContent);\n    });\n\n    it('should show the popup with the correct description for the description of command', async () => {\n      const cdpCommand = 'Test.test';\n      const jsonEditor = renderJSONEditor();\n\n      await populateMetadata(jsonEditor);\n      jsonEditor.command = cdpCommand;\n      await jsonEditor.updateComplete;\n\n      const command = jsonEditor.renderRoot.querySelector('.command');\n      await renderHoveredElement(command);\n\n      const popupContent = serializePopupContent();\n\n      const expectedPopupContent = 'Description1.Returns:Test1LearnMore';\n      assert.deepStrictEqual(popupContent, expectedPopupContent);\n    });\n  });\n\n  describe('Suggestion box', () => {\n    it('should display suggestion box with correct suggestions when the parameter is an enum', async () => {\n      const enumsByName = new Map([\n        ['Test.testRef', {'Test': 'test', 'Test1': 'test1', 'Test2': 'test2'}],\n      ]);\n      const command = 'Test.test';\n\n      const jsonEditor = renderJSONEditor();\n\n      await populateMetadata(jsonEditor);\n\n      const suggestions = await renderSuggestionBox(command, jsonEditor, enumsByName);\n      assert.deepStrictEqual(suggestions, ['test', 'test1', 'test2']);\n    });\n\n    it('should display suggestion box with correct suggestions when the parameter is a boolean', async () => {\n      const command = 'Test.test4';\n\n      const jsonEditor = renderJSONEditor();\n\n      await populateMetadata(jsonEditor);\n\n      const suggestions = await renderSuggestionBox(command, jsonEditor);\n\n      assert.deepStrictEqual(suggestions, ['false', 'true']);\n    });\n\n    it('should show the suggestion box for enum parameters nested inside arrays', async () => {\n      const enumsByName = new Map([\n        ['Test.arrayTypeRef', {'Test': 'test', 'Test1': 'test1', 'Test2': 'test2'}],\n      ]);\n      const command = 'Test.test11';\n\n      const jsonEditor = renderJSONEditor();\n\n      await populateMetadata(jsonEditor);\n      jsonEditor.enumsByName = enumsByName;\n      jsonEditor.command = command;\n      jsonEditor.populateParametersForCommandWithDefaultValues();\n\n      await jsonEditor.updateComplete;\n\n      const param = jsonEditor.renderRoot.querySelector('[data-paramId]');\n      await renderHoveredElement(param);\n\n      const addParamButton = jsonEditor.renderRoot.querySelector('devtools-button[title=\"Add a parameter\"]');\n      if (!addParamButton) {\n        throw new Error('No button');\n      }\n      dispatchClickEvent(addParamButton, {\n        bubbles: true,\n        composed: true,\n      });\n\n      await jsonEditor.updateComplete;\n\n      const inputs = jsonEditor.renderRoot.querySelectorAll('devtools-suggestion-input');\n      // inputs[0] corresponds to the devtools-suggestion-input of the command\n      const suggestionInput = inputs[1];\n      // Reset the value to empty string because for boolean it will be set to false by default and the correct suggestions will not show\n      suggestionInput.value = '';\n      suggestionInput.focus();\n\n      await suggestionInput.updateComplete;\n      const suggestionBox = suggestionInput.renderRoot.querySelector('devtools-suggestion-box');\n\n      if (!suggestionBox) {\n        throw new Error('No suggestion box shown');\n      }\n      const suggestions = Array.from(suggestionBox.renderRoot.querySelectorAll('li')).map(item => {\n        if (!item.textContent) {\n          throw new Error('No text inside suggestion');\n        }\n        return (item.textContent.replaceAll(/\\s/g, ''));\n      });\n\n      assert.deepStrictEqual(suggestions, ['test', 'test1', 'test2']);\n    });\n\n    it('should update the values inside the suggestion box when the command changes', async () => {\n      const enumsByName = new Map();\n      enumsByName.set('Test.testRef', {'Test': 'test', 'Test1': 'test1', 'Test2': 'test2'});\n      enumsByName.set('Test.newTestRef', {'NewTest': 'newtest', 'NewTest1': 'newtest1', 'NewTest2': 'newtest2'});\n\n      const command = 'Test.test';\n\n      const jsonEditor = renderJSONEditor();\n\n      await populateMetadata(jsonEditor);\n\n      await renderSuggestionBox(command, jsonEditor, enumsByName);\n\n      const newCommand = 'Test.test13';\n\n      const newSuggestions = await renderSuggestionBox(newCommand, jsonEditor, enumsByName);\n\n      assert.deepStrictEqual(newSuggestions, ['newtest', 'newtest1', 'newtest2']);\n    });\n\n    it('should not display suggestion box when the parameter is neither a string or a boolean', async () => {\n      const command = 'Test.test8';\n\n      const jsonEditor = renderJSONEditor();\n\n      await populateMetadata(jsonEditor);\n\n      const suggestions = await renderSuggestionBox(command, jsonEditor);\n\n      assert.deepStrictEqual(suggestions, []);\n    });\n  });\n\n  describe('Display with default values', () => {\n    it('should show <empty_string> inside the placeholder when clicking on plus button for optional string parameter',\n       async () => {\n         const command = 'Test.test5';\n\n         const placeholder = (await renderParamsWithDefaultValues(command)).placeholder;\n\n         const expectedPlaceholder = '<empty_string>';\n\n         assert.deepStrictEqual(placeholder, expectedPlaceholder);\n       });\n\n    it('should show 0 as a value inside input when clicking on plus button for optional number parameter', async () => {\n      const command = 'Test.test6';\n\n      const value = Number((await renderParamsWithDefaultValues(command)).value);\n\n      const expectedValue = 0;\n\n      assert.deepStrictEqual(value, expectedValue);\n    });\n\n    it('should show false as a value inside input when clicking on plus button for optional boolean parameter',\n       async () => {\n         const command = 'Test.test7';\n\n         const value = Boolean((await renderParamsWithDefaultValues(command)).value);\n\n         const expectedValue = false;\n\n         assert.deepStrictEqual(value, expectedValue);\n       });\n\n    it('should show the keys with default values when clicking of plus button for optional object parameters',\n       async () => {\n         const command = 'Test.test12';\n         const typesByName = new Map();\n         typesByName.set('Optional.Object', [\n           {\n             'optional': false,\n             'type': 'string',\n             'name': 'param1',\n           },\n           {\n             'optional': false,\n             'type': 'number',\n             'name': 'param2',\n           },\n         ]);\n         const jsonEditor = renderJSONEditor();\n         jsonEditor.typesByName = typesByName;\n         await populateMetadata(jsonEditor);\n         jsonEditor.command = command;\n         jsonEditor.populateParametersForCommandWithDefaultValues();\n         await jsonEditor.updateComplete;\n\n         const param = jsonEditor.renderRoot.querySelector('[data-paramId]');\n         await renderHoveredElement(param);\n\n         const showDefaultValuesButton =\n             jsonEditor.renderRoot.querySelector('devtools-button[title=\"Add a parameter\"]');\n         if (!showDefaultValuesButton) {\n           throw new Error('No button');\n         }\n\n         dispatchClickEvent(showDefaultValuesButton, {\n           bubbles: true,\n           composed: true,\n         });\n\n         await jsonEditor.updateComplete;\n\n         // The -1 is need to not take into account the input for the command\n         const numberOfInputs = jsonEditor.renderRoot.querySelectorAll('devtools-suggestion-input').length - 1;\n\n         assert.deepStrictEqual(numberOfInputs, 2);\n       });\n  });\n\n  describe('Reset to default values', () => {\n    it('should reset the value of keys of object parameter to default value when clicking on clear button',\n       async () => {\n         const cdpCommand = {\n           'command': 'Test.test3',\n           'parameters': {\n             'test3': {\n               'param1': 'test1',\n               'param2': 'test2',\n             },\n           },\n         };\n\n         const {command, parameters} = ProtocolMonitor.ProtocolMonitor.parseCommandInput(JSON.stringify(cdpCommand));\n         const {jsonEditor} = await renderEditorForCommand(command, parameters);\n\n         const param = jsonEditor.renderRoot.querySelector('[data-paramId=\\'test3\\']');\n\n         await renderHoveredElement(param);\n\n         const setDefaultValueButton = jsonEditor.renderRoot.querySelector('devtools-button');\n\n         if (!setDefaultValueButton) {\n           throw new Error('No button');\n         }\n         dispatchClickEvent(setDefaultValueButton, {\n           bubbles: true,\n           composed: true,\n         });\n\n         await jsonEditor.updateComplete;\n\n         const input = jsonEditor.renderRoot.querySelectorAll('devtools-suggestion-input');\n         const values = [input[1].value, input[2].value];\n\n         const expectedValues = ['', ''];\n\n         assert.deepStrictEqual(values, expectedValues);\n       });\n\n    it('should reset the value of array parameter to empty array when clicking on clear button', async () => {\n      const inputParameters = [\n        {\n          type: 'array',\n          optional: false,\n          value: [\n            {name: '0', value: 'value0', optional: true, type: 'string'},\n            {name: '1', value: 'value1', optional: true, type: 'string'},\n            {name: '2', value: 'value2', optional: true, type: 'string'},\n          ],\n          name: 'arrayParam',\n          typeRef: 'string',\n        },\n      ];\n\n      const jsonEditor = renderJSONEditor();\n      jsonEditor.parameters = inputParameters as ProtocolComponents.JSONEditor.Parameter[];\n      await jsonEditor.updateComplete;\n\n      const param = jsonEditor.renderRoot.querySelector('[data-paramId=\\'arrayParam\\']');\n\n      await renderHoveredElement(param);\n\n      const setDefaultValueButton =\n          jsonEditor.renderRoot.querySelector('devtools-button[title=\"Reset to default value\"]');\n\n      if (!setDefaultValueButton) {\n        throw new Error('No button');\n      }\n      dispatchClickEvent(setDefaultValueButton, {\n        bubbles: true,\n        composed: true,\n      });\n\n      await jsonEditor.updateComplete;\n\n      const value = jsonEditor.parameters[0].value;\n\n      assert.deepStrictEqual(value, []);\n    });\n\n    it('should reset the value of optional object parameter to undefined after clicking on clear button', async () => {\n      const command = 'Test.test12';\n      const typesByName = new Map();\n      typesByName.set('Optional.Object', [\n        {\n          'optional': false,\n          'type': 'string',\n          'name': 'param1',\n        },\n        {\n          'optional': false,\n          'type': 'number',\n          'name': 'param2',\n        },\n      ]);\n      const jsonEditor = renderJSONEditor();\n      jsonEditor.typesByName = typesByName;\n      await populateMetadata(jsonEditor);\n      jsonEditor.command = command;\n      jsonEditor.populateParametersForCommandWithDefaultValues();\n      await jsonEditor.updateComplete;\n\n      const param = jsonEditor.renderRoot.querySelector('[data-paramId]');\n      await renderHoveredElement(param);\n\n      const showDefaultValuesButton = jsonEditor.renderRoot.querySelector('devtools-button[title=\"Add a parameter\"]');\n      if (!showDefaultValuesButton) {\n        throw new Error('No button');\n      }\n\n      dispatchClickEvent(showDefaultValuesButton, {\n        bubbles: true,\n        composed: true,\n      });\n\n      await jsonEditor.updateComplete;\n\n      await renderHoveredElement(param);\n      const clearButton = jsonEditor.renderRoot.querySelector('devtools-button[title=\"Reset to default value\"]');\n\n      if (!clearButton) {\n        throw new Error('No clear button');\n      }\n\n      dispatchClickEvent(clearButton, {\n        bubbles: true,\n        composed: true,\n      });\n\n      await jsonEditor.updateComplete;\n      // The -1 is need to not take into account the input for the command\n      const numberOfInputs = jsonEditor.renderRoot.querySelectorAll('devtools-suggestion-input').length - 1;\n\n      assert.deepStrictEqual(numberOfInputs, 0);\n    });\n  });\n\n  describe('Delete and add for array parameters', () => {\n    it('should delete the specified array parameter by clicking the \"Delete\" button', async () => {\n      const inputParameters = [\n        {\n          type: 'array',\n          optional: false,\n          value: [\n            {name: '0', value: 'value0', optional: true, type: 'string'},\n            {name: '1', value: 'value1', optional: true, type: 'string'},\n            {name: '2', value: 'value2', optional: true, type: 'string'},\n          ],\n          name: 'arrayParam',\n          typeRef: 'string',\n        },\n\n      ];\n\n      const expectedParams = {\n        arrayParam: ['value1', 'value2'],\n      };\n\n      const jsonEditor = renderJSONEditor();\n      jsonEditor.parameters = inputParameters as ProtocolComponents.JSONEditor.Parameter[];\n      await jsonEditor.updateComplete;\n\n      const shadowRoot = jsonEditor.renderRoot;\n\n      const parameterIndex = 0;\n      const deleteButtons = shadowRoot.querySelectorAll('devtools-button[title=\"Delete parameter\"]');\n      if (deleteButtons.length > parameterIndex) {\n        deleteButtons[parameterIndex].dispatchEvent(new Event('click'));\n      }\n\n      const resultedParams = jsonEditor.getParameters();\n      assert.deepStrictEqual(expectedParams, resultedParams);\n    });\n\n    it('should add parameters when clicking on \"Plus\" button for array parameters', async () => {\n      const command = 'Test.test2';\n\n      const jsonEditor = renderJSONEditor();\n\n      await populateMetadata(jsonEditor);\n      jsonEditor.command = command;\n      jsonEditor.populateParametersForCommandWithDefaultValues();\n      await jsonEditor.updateComplete;\n\n      const param = jsonEditor.renderRoot.querySelector('[data-paramId]');\n      await renderHoveredElement(param);\n\n      const addParamButton = jsonEditor.renderRoot.querySelector('devtools-button[title=\"Add a parameter\"]');\n      if (!addParamButton) {\n        throw new Error('No button');\n      }\n      dispatchClickEvent(addParamButton, {\n        bubbles: true,\n        composed: true,\n      });\n      dispatchClickEvent(addParamButton, {\n        bubbles: true,\n        composed: true,\n      });\n\n      await jsonEditor.updateComplete;\n\n      // The -1 is need to not take into account the input for the command\n      const numberOfInputs = jsonEditor.renderRoot.querySelectorAll('devtools-suggestion-input').length - 1;\n\n      assert.deepStrictEqual(numberOfInputs, 2);\n    });\n  });\n\n  describe('Send parameters in a correct format', () => {\n    it('should return the parameters in a format understandable by the ProtocolMonitor when sending a command via CTRL + Enter',\n       async () => {\n         const jsonEditor = renderJSONEditor();\n\n         const inputParameters = [\n           {\n             'optional': true,\n             'type': 'string',\n             'value': 'test0',\n             'name': 'test0',\n           },\n           {\n             'optional': true,\n             'type': 'string',\n             'value': 'test1',\n             'name': 'test1',\n           },\n           {\n             'optional': false,\n             'type': 'string',\n             'value': 'test2',\n             'name': 'test2',\n           },\n           {\n             'optional': true,\n             'type': 'array',\n             'value': [\n               {\n                 'optional': true,\n                 'type': 'string',\n                 'value': 'param1Value',\n                 'name': 'param1',\n               },\n               {\n                 'optional': true,\n                 'type': 'string',\n                 'value': 'param2Value',\n                 'name': 'param2',\n               },\n             ],\n             'name': 'test3',\n           },\n           {\n             'optional': true,\n             'type': 'object',\n             'value': [\n               {\n                 'optional': true,\n                 'type': 'string',\n                 'value': 'param1Value',\n                 'name': 'param1',\n               },\n               {\n                 'optional': true,\n                 'type': 'string',\n                 'value': 'param2Value',\n                 'name': 'param2',\n               },\n             ],\n             'name': 'test4',\n           },\n         ];\n\n         const expectedParameters = {\n           'test0': 'test0',\n           'test1': 'test1',\n           'test2': 'test2',\n           'test3': ['param1Value', 'param2Value'],\n           'test4': {\n             'param1': 'param1Value',\n             'param2': 'param2Value',\n           },\n         };\n\n         jsonEditor.parameters = inputParameters as ProtocolComponents.JSONEditor.Parameter[];\n         const responsePromise = getEventPromise(jsonEditor, ProtocolComponents.JSONEditor.SubmitEditorEvent.eventName);\n\n         dispatchKeyDownEvent(jsonEditor, {key: 'Enter', ctrlKey: true, metaKey: true});\n\n         const response = await responsePromise as ProtocolComponents.JSONEditor.SubmitEditorEvent;\n\n         assert.deepStrictEqual(response.data.parameters, expectedParameters);\n       });\n\n    it('should return the parameters in a format understandable by the ProtocolMonitor when sending a command via the send button',\n       async () => {\n         const jsonEditor = renderJSONEditor();\n         jsonEditor.command = 'Test.test';\n         jsonEditor.parameters = [\n           {\n             name: 'testName',\n             type: ProtocolComponents.JSONEditor.ParameterType.String,\n             description: 'test',\n             optional: false,\n             value: 'testValue',\n           },\n         ];\n         await jsonEditor.updateComplete;\n\n         const toolbar = jsonEditor.renderRoot.querySelector('devtools-pm-toolbar');\n         if (!toolbar) {\n           throw Error('No toolbar found !');\n         }\n         const event = new ProtocolComponents.Toolbar.SendCommandEvent();\n         const responsePromise = getEventPromise(jsonEditor, ProtocolComponents.JSONEditor.SubmitEditorEvent.eventName);\n\n         toolbar.dispatchEvent(event);\n         const response = await responsePromise as ProtocolComponents.JSONEditor.SubmitEditorEvent;\n\n         const expectedParameters = {\n           'testName': 'testValue',\n         };\n\n         assert.deepStrictEqual(response.data.parameters, expectedParameters);\n       });\n  });\n\n  describe('Verify the type of the entered value', () => {\n    it('should show a warning icon if the type of the parameter is number but the entered value is not', async () => {\n      const command = 'Test.test8';\n\n      const warningIcon = await renderWarningIcon(command);\n      assert.isNotNull(warningIcon);\n    });\n    it('should show a warning icon if the type of the parameter is boolean but the entered value is not true or false',\n       async () => {\n         const command = 'Test.test4';\n         const warningIcon = await renderWarningIcon(command);\n         assert.isNotNull(warningIcon);\n       });\n    it('should show a warning icon if the type of the parameter is enum but the entered value is not among the accepted values',\n       async () => {\n         const enumsByName = new Map([\n           ['Test.testRef', {'Test': 'test', 'Test1': 'test1', 'Test2': 'test2'}],\n         ]);\n         const command = 'Test.test';\n         const warningIcon = await renderWarningIcon(command, enumsByName);\n         assert.isNotNull(warningIcon);\n       });\n  });\n\n  it('should not display parameters if a command is unknown', async () => {\n    const cdpCommand = 'Unknown';\n    const jsonEditor = renderJSONEditor();\n\n    await populateMetadata(jsonEditor);\n    jsonEditor.command = cdpCommand;\n    await jsonEditor.updateComplete;\n\n    const inputs = jsonEditor.renderRoot.querySelectorAll('devtools-suggestion-input');\n    const addButtons = jsonEditor.renderRoot.querySelectorAll('devtools-button[title=\"Add a parameter\"]');\n\n    assert.deepStrictEqual(inputs.length, 1);\n    assert.deepStrictEqual(addButtons.length, 0);\n  });\n\n  it('checks that the selection of a target works', async () => {\n    const jsonEditor = renderJSONEditor();\n    await jsonEditor.updateComplete;\n    const targetId = 'target1';\n    const event = new Menus.SelectMenu.SelectMenuItemSelectedEvent('target1');\n\n    const shadowRoot = jsonEditor.renderRoot;\n    const selectMenu = shadowRoot.querySelector('devtools-select-menu');\n    selectMenu?.dispatchEvent(event);\n    const expectedId = jsonEditor.targetId;\n\n    assert.deepStrictEqual(targetId, expectedId);\n  });\n\n  it('should copy the CDP command to clipboard via copy event', async () => {\n    const jsonEditor = renderJSONEditor();\n    jsonEditor.command = 'Test.test';\n    jsonEditor.parameters = [\n      {\n        name: 'test',\n        type: ProtocolComponents.JSONEditor.ParameterType.String,\n        description: 'test',\n        optional: false,\n        value: 'test',\n      },\n    ];\n    await jsonEditor.updateComplete;\n    const copyText = expectCall(sinon.stub(\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance,\n        'copyText',\n        ));\n    const toolbar = jsonEditor.renderRoot.querySelector('devtools-pm-toolbar');\n    if (!toolbar) {\n      throw Error('No toolbar found !');\n    }\n    const event = new ProtocolComponents.Toolbar.CopyCommandEvent();\n    toolbar.dispatchEvent(event);\n    const [text] = await copyText;\n\n    assert.strictEqual(JSON.stringify({command: 'Test.test', parameters: {'test': 'test'}}), text);\n  });\n\n  it('should display the correct parameters with a command with array nested inside object', async () => {\n    const command = 'Test.test9';\n    const typesByName = new Map();\n    // This nested object contains every subtype including array\n    typesByName.set('Tracing.TraceConfig', [\n      {\n        'name': 'recordMode',\n        'type': 'string',\n        'optional': true,\n        'description': 'Controls how the trace buffer stores data.',\n        'typeRef': null,\n      },\n      {\n        'name': 'traceBufferSizeInKb',\n        'type': 'number',\n        'optional': true,\n        'description':\n            'Size of the trace buffer in kilobytes. If not specified or zero is passed, a default value of 200 MB would be used.',\n        'typeRef': null,\n      },\n      {\n        'name': 'enableSystrace',\n        'type': 'boolean',\n        'optional': true,\n        'description': 'Turns on system tracing.',\n        'typeRef': null,\n      },\n      {\n        'name': 'includedCategories',\n        'type': 'array',\n        'optional': true,\n        'description': 'Included category filters.',\n        'typeRef': 'string',\n      },\n      {\n        'name': 'memoryDumpConfig',\n        'type': 'object',\n        'optional': true,\n        'description': 'Configuration for memory dump triggers. Used only when \\\\\"memory-infra\\\\\" category is enabled.',\n        'typeRef':\n            'Tracing.MemoryDumpConfig',  // This typeref is on purpose not added to show that this param will be treated as a string parameter\n      },\n    ]);\n\n    const jsonEditor = renderJSONEditor();\n\n    await populateMetadata(jsonEditor);\n    jsonEditor.typesByName = typesByName;\n    jsonEditor.command = command;\n    jsonEditor.populateParametersForCommandWithDefaultValues();\n    await jsonEditor.updateComplete;\n    const shadowRoot = jsonEditor.renderRoot;\n    const parameters = shadowRoot.querySelectorAll('.parameter');\n    // This expected value is equal to 6 because there are 5 different parameters inside typesByName + 1\n    // for the name of the parameter (traceConfig)\n    assert.deepStrictEqual(parameters.length, 6);\n  });\n\n  it('should return the parameters in a format understandable by the ProtocolMonitor when sending a command with object parameter that has no typeRef found in map',\n     async () => {\n       const command = 'Test.test10';\n       const typesByName = new Map();\n       // We set the map typesBynames without the key NoTypeRef\n       typesByName.set('Tracing.TraceConfig', [\n         {\n           'name': 'memoryDumpConfig',\n           'type': 'object',\n           'optional': true,\n           'description':\n               'Configuration for memory dump triggers. Used only when \\\\\"memory-infra\\\\\" category is enabled.',\n           'typeRef':\n               'Tracing.MemoryDumpConfig',  // This typeref is on purpose not added to show that this param will be treated as a string parameter\n         },\n       ]);\n\n       const jsonEditor = renderJSONEditor();\n\n       await populateMetadata(jsonEditor);\n       jsonEditor.typesByName = typesByName;\n       jsonEditor.command = command;\n       jsonEditor.populateParametersForCommandWithDefaultValues();\n       await jsonEditor.updateComplete;\n       const shadowRoot = jsonEditor.renderRoot;\n       const parameters = shadowRoot.querySelector('.parameter');\n\n       await renderHoveredElement(parameters);\n\n       const addParamButton = jsonEditor.renderRoot.querySelector('devtools-button[title=\"Add custom property\"]');\n       if (!addParamButton) {\n         throw new Error('No button');\n       }\n       // We click two times to display two parameters with key/value pairs\n       dispatchClickEvent(addParamButton, {\n         bubbles: true,\n         composed: true,\n       });\n       dispatchClickEvent(addParamButton, {\n         bubbles: true,\n         composed: true,\n       });\n\n       await jsonEditor.updateComplete;\n       const editors = shadowRoot.querySelectorAll('devtools-suggestion-input');\n\n       // Editors[0] refers to the command editor, so we start at index 1\n       // We populate the key/value pairs\n       editors[1].value = 'testName1';\n       await jsonEditor.updateComplete;\n       editors[1].focus();\n       editors[1].blur();\n       await jsonEditor.updateComplete;\n\n       editors[2].value = 'testValue1';\n       await jsonEditor.updateComplete;\n       editors[2].focus();\n       editors[2].blur();\n       await jsonEditor.updateComplete;\n\n       editors[3].value = 'testName2';\n       await jsonEditor.updateComplete;\n       editors[3].focus();\n       editors[3].blur();\n       await jsonEditor.updateComplete;\n\n       editors[4].value = 'testValue2';\n       await jsonEditor.updateComplete;\n       editors[4].focus();\n       editors[4].blur();\n       await jsonEditor.updateComplete;\n\n       const responsePromise = getEventPromise(jsonEditor, ProtocolComponents.JSONEditor.SubmitEditorEvent.eventName);\n\n       // We send the command\n       dispatchKeyDownEvent(jsonEditor, {key: 'Enter', ctrlKey: true, metaKey: true});\n\n       const response = await responsePromise as ProtocolComponents.JSONEditor.SubmitEditorEvent;\n\n       const expectedParameters = {\n         'NoTypeRef': {\n           'testName1': 'testValue1',\n           'testName2': 'testValue2',\n         },\n       };\n\n       assert.deepStrictEqual(response.data.parameters, expectedParameters);\n     });\n\n  it('should show the custom editor for an object param that has no type ref', async () => {\n    const command = 'Test.test14';\n    const jsonEditor = renderJSONEditor();\n\n    await populateMetadata(jsonEditor);\n    jsonEditor.command = command;\n    jsonEditor.populateParametersForCommandWithDefaultValues();\n    await jsonEditor.updateComplete;\n    const shadowRoot = jsonEditor.renderRoot;\n    const parameters = shadowRoot.querySelector('.parameter');\n\n    await renderHoveredElement(parameters);\n\n    const addParamButton = jsonEditor.renderRoot.querySelector('devtools-button[title=\"Add custom property\"]');\n    if (!addParamButton) {\n      throw new Error('No button');\n    }\n    // We click two times to display two parameters with key/value pairs\n    dispatchClickEvent(addParamButton, {\n      bubbles: true,\n      composed: true,\n    });\n    dispatchClickEvent(addParamButton, {\n      bubbles: true,\n      composed: true,\n    });\n\n    await jsonEditor.updateComplete;\n    // The -1 is need to not take into account the input for the command\n\n    const numberOfInputs = jsonEditor.renderRoot.querySelectorAll('devtools-suggestion-input').length - 1;\n\n    assert.deepStrictEqual(numberOfInputs, 4);\n  });\n\n  describe('Command suggestion filter', () => {\n    it('filters the commands by substring match', async () => {\n      assert(ProtocolComponents.JSONEditor.suggestionFilter('Test', 'Tes'));\n      assert(ProtocolComponents.JSONEditor.suggestionFilter('Test', 'est'));\n      assert(!ProtocolComponents.JSONEditor.suggestionFilter('Test', 'dest'));\n    });\n  });\n});\n"]}