{"version":3,"file":"Toolbar.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/protocol_monitor/components/Toolbar.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Host from '../../../core/host/host.js';\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as Buttons from '../../../ui/components/buttons/buttons.js';\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\nimport * as VisualLogging from '../../../ui/visual_logging/visual_logging.js';\n\nimport toolbarStyles from './toolbar.css.js';\n\nconst {html, Decorators, LitElement} = LitHtml;\nconst {customElement} = Decorators;\n\nconst UIStrings = {\n  /**\n   * @description The title of a the button that sends a CDP command.\n   */\n  sendCommandCtrlEnter: 'Send command - Ctrl+Enter',\n  /**\n   * @description The title of a the button that sends a CDP command.\n   */\n  sendCommandCmdEnter: 'Send command - âŒ˜+Enter',\n  /**\n   * @description he title of a the button that copies a CDP command.\n   */\n  copyCommand: 'Copy command',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/protocol_monitor/components/Toolbar.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-pm-toolbar': Toolbar;\n  }\n}\n\nconst copyIconUrl = new URL('../../../Images/copy.svg', import.meta.url).toString();\nconst sendIconUrl = new URL('../../../Images/send.svg', import.meta.url).toString();\n\nexport class CopyCommandEvent extends Event {\n  static readonly eventName = 'copycommand';\n  constructor() {\n    super(CopyCommandEvent.eventName, {bubbles: true, composed: true});\n  }\n}\n\nexport class SendCommandEvent extends Event {\n  static readonly eventName = 'commandsent';\n  constructor() {\n    super(SendCommandEvent.eventName, {bubbles: true, composed: true});\n  }\n}\n\n@customElement('devtools-pm-toolbar')\nexport class Toolbar extends LitElement {\n  static override styles = [toolbarStyles];\n\n  #handleCopy = (): void => {\n    this.dispatchEvent(new CopyCommandEvent());\n  };\n\n  #handleSend = (): void => {\n    this.dispatchEvent(new SendCommandEvent());\n  };\n\n  override render(): LitHtml.TemplateResult {\n    // clang-format off\n    return html`\n        <div class=\"toolbar\">\n          <${Buttons.Button.Button.litTagName}\n          title=${i18nString(UIStrings.copyCommand)}\n          .size=${Buttons.Button.Size.SMALL}\n          .iconUrl=${copyIconUrl}\n          .variant=${Buttons.Button.Variant.TOOLBAR}\n          @click=${this.#handleCopy}\n          jslog=${VisualLogging.action('protocol-monitor.copy-command').track({click: true})}\n        ></${Buttons.Button.Button.litTagName}>\n        <${Buttons.Button.Button.litTagName}\n          .size=${Buttons.Button.Size.SMALL}\n          title=${Host.Platform.isMac() ? i18nString(UIStrings.sendCommandCmdEnter) : i18nString(UIStrings.sendCommandCtrlEnter)}\n          .iconUrl=${sendIconUrl}\n          .variant=${Buttons.Button.Variant.PRIMARY_TOOLBAR}\n          @click=${this.#handleSend}\n          jslog=${VisualLogging.action('protocol-monitor.send-command').track({click: true})}\n        ></${Buttons.Button.Button.litTagName}>\n      </div>\n    `;\n    // clang-format on\n  }\n}\n"]}