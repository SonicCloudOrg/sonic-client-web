{"version":3,"file":"KeybindsSettingsTab.js","sourceRoot":"","sources":["../../../../../../front_end/panels/settings/KeybindsSettingsTab.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as IconButton from '../../ui/components/icon_button/icon_button.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport keybindsSettingsTabStyles from './keybindsSettingsTab.css.js';\n\nconst UIStrings = {\n  /**\n   *@description Text for keyboard shortcuts\n   */\n  shortcuts: 'Shortcuts',\n  /**\n   *@description Text appearing before a select control offering users their choice of keyboard shortcut presets.\n   */\n  matchShortcutsFromPreset: 'Match shortcuts from preset',\n  /**\n   *@description Screen reader label for list of keyboard shortcuts in settings\n   */\n  keyboardShortcutsList: 'Keyboard shortcuts list',\n  /**\n   *@description Screen reader label for an icon denoting a shortcut that has been changed from its default\n   */\n  shortcutModified: 'Shortcut modified',\n  /**\n   *@description Screen reader label for an empty shortcut cell in custom shortcuts settings tab\n   */\n  noShortcutForAction: 'No shortcut for action',\n  /**\n   *@description Link text in the settings pane to add another shortcut for an action\n   */\n  addAShortcut: 'Add a shortcut',\n  /**\n   *@description Label for a button in the settings pane that confirms changes to a keyboard shortcut\n   */\n  confirmChanges: 'Confirm changes',\n  /**\n   *@description Label for a button in the settings pane that discards changes to the shortcut being edited\n   */\n  discardChanges: 'Discard changes',\n  /**\n   *@description Label for a button in the settings pane that removes a keyboard shortcut.\n   */\n  removeShortcut: 'Remove shortcut',\n  /**\n   *@description Label for a button in the settings pane that edits a keyboard shortcut\n   */\n  editShortcut: 'Edit shortcut',\n  /**\n   *@description Message shown in settings when the user inputs a modifier-only shortcut such as Ctrl+Shift.\n   */\n  shortcutsCannotContainOnly: 'Shortcuts cannot contain only modifier keys.',\n  /**\n   *@description Messages shown in shortcuts settings when the user inputs a shortcut that is already in use.\n   *@example {Performance} PH1\n   *@example {Start/stop recording} PH2\n   */\n  thisShortcutIsInUseByS: 'This shortcut is in use by {PH1}: {PH2}.',\n  /**\n   *@description Message shown in settings when to restore default shortcuts.\n   */\n  RestoreDefaultShortcuts: 'Restore default shortcuts',\n  /**\n   *@description Message shown in settings to show the full list of keyboard shortcuts.\n   */\n  FullListOfDevtoolsKeyboard: 'Full list of DevTools keyboard shortcuts and gestures',\n  /**\n   *@description Label for a button in the shortcut editor that resets all shortcuts for the current action.\n   */\n  ResetShortcutsForAction: 'Reset shortcuts for action',\n  /**\n   *@description Screen reader announcement for shortcut removed\n   *@example {Start/stop recording} PH1\n   */\n  shortcutRemoved: '{PH1} Shortcut removed',\n  /**\n   *@description Screen reader announcment for shortcut restored to default\n   */\n  shortcutChangesRestored: 'Changes to shortcut restored to default',\n  /**\n   *@description Screen reader announcment for applied short cut changes\n   */\n  shortcutChangesApplied: 'Changes to shortcut applied',\n  /**\n   *@description Screen reader announcment for discarded short cut changes\n   */\n  shortcutChangesDiscared: 'Changes to shortcut discarded',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/settings/KeybindsSettingsTab.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class KeybindsSettingsTab extends UI.Widget.VBox implements UI.ListControl.ListDelegate<KeybindsItem> {\n  private readonly items: UI.ListModel.ListModel<KeybindsItem>;\n  private list: UI.ListControl.ListControl<string|UI.ActionRegistration.Action>;\n  private editingItem: UI.ActionRegistration.Action|null;\n  private editingRow: ShortcutListItem|null;\n\n  constructor() {\n    super(true);\n\n    this.element.setAttribute('jslog', `${VisualLogging.pane('keybinds')}`);\n\n    const header = this.contentElement.createChild('header');\n    header.createChild('h1').textContent = i18nString(UIStrings.shortcuts);\n    const keybindsSetSetting = Common.Settings.Settings.instance().moduleSetting('active-keybind-set');\n    const userShortcutsSetting = Common.Settings.Settings.instance().moduleSetting('user-shortcuts');\n    keybindsSetSetting.addChangeListener(this.update, this);\n    const keybindsSetSelect =\n        UI.SettingsUI.createControlForSetting(keybindsSetSetting, i18nString(UIStrings.matchShortcutsFromPreset));\n    if (keybindsSetSelect) {\n      keybindsSetSelect.classList.add('keybinds-set-select');\n      this.contentElement.appendChild(keybindsSetSelect);\n    }\n\n    this.items = new UI.ListModel.ListModel();\n    this.list = new UI.ListControl.ListControl(this.items, this, UI.ListControl.ListMode.NonViewport);\n    this.items.replaceAll(this.createListItems());\n    UI.ARIAUtils.markAsList(this.list.element);\n\n    this.contentElement.appendChild(this.list.element);\n    UI.ARIAUtils.setLabel(this.list.element, i18nString(UIStrings.keyboardShortcutsList));\n    const footer = this.contentElement.createChild('div');\n    footer.classList.add('keybinds-footer');\n    const docsLink = UI.XLink.XLink.create(\n        'https://developer.chrome.com/docs/devtools/shortcuts/', i18nString(UIStrings.FullListOfDevtoolsKeyboard),\n        undefined, undefined, 'learn-more');\n    docsLink.classList.add('docs-link');\n    footer.appendChild(docsLink);\n    const restoreDefaultShortcutsButton =\n        UI.UIUtils.createTextButton(i18nString(UIStrings.RestoreDefaultShortcuts), () => {\n          userShortcutsSetting.set([]);\n          keybindsSetSetting.set(UI.ShortcutRegistry.DefaultShortcutSetting);\n        }, {jslogContext: 'restore-default-shortcuts'});\n    footer.appendChild(restoreDefaultShortcutsButton);\n    this.editingItem = null;\n    this.editingRow = null;\n\n    this.update();\n  }\n\n  createElementForItem(item: KeybindsItem): Element {\n    let itemElement = document.createElement('div');\n\n    if (typeof item === 'string') {\n      UI.ARIAUtils.setLevel(itemElement, 1);\n      itemElement.classList.add('keybinds-category-header');\n      itemElement.textContent = UI.ActionRegistration.getLocalizedActionCategory(item);\n    } else {\n      const listItem = new ShortcutListItem(item, this, item === this.editingItem);\n      itemElement = listItem.element;\n      UI.ARIAUtils.setLevel(itemElement, 2);\n      if (item === this.editingItem) {\n        this.editingRow = listItem;\n      }\n    }\n\n    itemElement.classList.add('keybinds-list-item');\n    UI.ARIAUtils.markAsListitem(itemElement);\n    itemElement.tabIndex = item === this.list.selectedItem() && item !== this.editingItem ? 0 : -1;\n    return itemElement;\n  }\n\n  commitChanges(\n      item: UI.ActionRegistration.Action,\n      editedShortcuts: Map<UI.KeyboardShortcut.KeyboardShortcut, UI.KeyboardShortcut.Descriptor[]|null>): void {\n    for (const [originalShortcut, newDescriptors] of editedShortcuts) {\n      if (originalShortcut.type !== UI.KeyboardShortcut.Type.UnsetShortcut) {\n        UI.ShortcutRegistry.ShortcutRegistry.instance().removeShortcut(originalShortcut);\n        if (!newDescriptors) {\n          Host.userMetrics.actionTaken(Host.UserMetrics.Action.ShortcutRemoved);\n        }\n      }\n      if (newDescriptors) {\n        UI.ShortcutRegistry.ShortcutRegistry.instance().registerUserShortcut(\n            originalShortcut.changeKeys(newDescriptors as UI.KeyboardShortcut.Descriptor[])\n                .changeType(UI.KeyboardShortcut.Type.UserShortcut));\n        if (originalShortcut.type === UI.KeyboardShortcut.Type.UnsetShortcut) {\n          Host.userMetrics.actionTaken(Host.UserMetrics.Action.UserShortcutAdded);\n        } else {\n          Host.userMetrics.actionTaken(Host.UserMetrics.Action.ShortcutModified);\n        }\n      }\n    }\n    this.stopEditing(item);\n  }\n\n  /**\n   * This method will never be called.\n   */\n  heightForItem(_item: KeybindsItem): number {\n    return 0;\n  }\n\n  isItemSelectable(_item: KeybindsItem): boolean {\n    return true;\n  }\n\n  selectedItemChanged(\n      from: KeybindsItem|null, to: KeybindsItem|null, fromElement: HTMLElement|null,\n      toElement: HTMLElement|null): void {\n    if (fromElement) {\n      fromElement.tabIndex = -1;\n    }\n    if (toElement) {\n      if (to === this.editingItem && this.editingRow) {\n        this.editingRow.focus();\n      } else {\n        toElement.tabIndex = 0;\n        if (this.list.element.hasFocus()) {\n          toElement.focus();\n        }\n      }\n      this.setDefaultFocusedElement(toElement);\n    }\n  }\n\n  updateSelectedItemARIA(_fromElement: Element|null, _toElement: Element|null): boolean {\n    return true;\n  }\n\n  startEditing(action: UI.ActionRegistration.Action): void {\n    this.list.selectItem(action);\n\n    if (this.editingItem) {\n      this.stopEditing(this.editingItem);\n    }\n    UI.UIUtils.markBeingEdited(this.list.element, true);\n    this.editingItem = action;\n    this.list.refreshItem(action);\n  }\n\n  stopEditing(action: UI.ActionRegistration.Action): void {\n    UI.UIUtils.markBeingEdited(this.list.element, false);\n    this.editingItem = null;\n    this.editingRow = null;\n    this.list.refreshItem(action);\n    this.focus();\n  }\n\n  private createListItems(): KeybindsItem[] {\n    const actions = UI.ActionRegistry.ActionRegistry.instance().actions().sort((actionA, actionB) => {\n      if (actionA.category() < actionB.category()) {\n        return -1;\n      }\n      if (actionA.category() > actionB.category()) {\n        return 1;\n      }\n      if (actionA.id() < actionB.id()) {\n        return -1;\n      }\n      if (actionA.id() > actionB.id()) {\n        return 1;\n      }\n      return 0;\n    });\n\n    const items: KeybindsItem[] = [];\n\n    let currentCategory: UI.ActionRegistration.ActionCategory;\n    actions.forEach(action => {\n      if (action.id() === 'elements.toggle-element-search') {\n        return;\n      }\n\n      if (currentCategory !== action.category()) {\n        items.push(action.category());\n      }\n      items.push(action);\n      currentCategory = action.category();\n    });\n    return items;\n  }\n\n  onEscapeKeyPressed(event: Event): void {\n    const deepActiveElement = Platform.DOMUtilities.deepActiveElement(document);\n    if (this.editingRow && deepActiveElement && deepActiveElement.nodeName === 'INPUT') {\n      this.editingRow.onEscapeKeyPressed(event);\n    }\n  }\n\n  update(): void {\n    if (this.editingItem) {\n      this.stopEditing(this.editingItem);\n    }\n    this.list.refreshAllItems();\n    if (!this.list.selectedItem()) {\n      this.list.selectItem(this.items.at(0));\n    }\n  }\n\n  override willHide(): void {\n    if (this.editingItem) {\n      this.stopEditing(this.editingItem);\n    }\n  }\n  override wasShown(): void {\n    super.wasShown();\n    this.registerCSSFiles([keybindsSettingsTabStyles]);\n  }\n}\n\nexport class ShortcutListItem {\n  private isEditing: boolean;\n  private settingsTab: KeybindsSettingsTab;\n  private item: UI.ActionRegistration.Action;\n  element: HTMLDivElement;\n  private editedShortcuts: Map<UI.KeyboardShortcut.KeyboardShortcut, UI.KeyboardShortcut.Descriptor[]|null>;\n  private readonly shortcutInputs: Map<UI.KeyboardShortcut.KeyboardShortcut, Element>;\n  private readonly shortcuts: UI.KeyboardShortcut.KeyboardShortcut[];\n  private elementToFocus: HTMLElement|null;\n  private confirmButton: HTMLButtonElement|null;\n  private addShortcutLinkContainer: Element|null;\n  private errorMessageElement: Element|null;\n  private secondKeyTimeout: number|null;\n  constructor(item: UI.ActionRegistration.Action, settingsTab: KeybindsSettingsTab, isEditing?: boolean) {\n    this.isEditing = Boolean(isEditing);\n    this.settingsTab = settingsTab;\n    this.item = item;\n    this.element = document.createElement('div');\n    this.element.setAttribute('jslog', `${VisualLogging.item().context(item.id()).track({keydown: 'Escape'})}`);\n    this.editedShortcuts = new Map();\n    this.shortcutInputs = new Map();\n    this.shortcuts = UI.ShortcutRegistry.ShortcutRegistry.instance().shortcutsForAction(item.id());\n    this.elementToFocus = null;\n    this.confirmButton = null;\n    this.addShortcutLinkContainer = null;\n    this.errorMessageElement = null;\n    this.secondKeyTimeout = null;\n\n    this.update();\n  }\n\n  focus(): void {\n    if (this.elementToFocus) {\n      this.elementToFocus.focus();\n    }\n  }\n\n  private update(): void {\n    this.element.removeChildren();\n    this.elementToFocus = null;\n    this.shortcutInputs.clear();\n\n    this.element.classList.toggle('keybinds-editing', this.isEditing);\n    this.element.createChild('div', 'keybinds-action-name keybinds-list-text').textContent = this.item.title();\n    this.shortcuts.forEach(this.createShortcutRow, this);\n    if (this.shortcuts.length === 0) {\n      this.createEmptyInfo();\n    }\n    if (this.isEditing) {\n      this.setupEditor();\n    }\n  }\n\n  private createEmptyInfo(): void {\n    if (UI.ShortcutRegistry.ShortcutRegistry.instance().actionHasDefaultShortcut(this.item.id())) {\n      const icon = IconButton.Icon.create('keyboard-pen', 'keybinds-modified');\n      UI.ARIAUtils.setLabel(icon, i18nString(UIStrings.shortcutModified));\n      this.element.appendChild(icon);\n    }\n    if (!this.isEditing) {\n      const emptyElement = this.element.createChild('div', 'keybinds-shortcut keybinds-list-text');\n      UI.ARIAUtils.setLabel(emptyElement, i18nString(UIStrings.noShortcutForAction));\n      this.element.appendChild(this.createEditButton());\n    }\n  }\n\n  private setupEditor(): void {\n    this.addShortcutLinkContainer = this.element.createChild('div', 'keybinds-shortcut devtools-link');\n    const addShortcutLink = this.addShortcutLinkContainer.createChild('span', 'devtools-link') as HTMLDivElement;\n    addShortcutLink.setAttribute('jslog', `${VisualLogging.action('add-shortcut').track({click: true})}`);\n    addShortcutLink.textContent = i18nString(UIStrings.addAShortcut);\n    addShortcutLink.tabIndex = 0;\n    UI.ARIAUtils.markAsLink(addShortcutLink);\n    self.onInvokeElement(addShortcutLink, this.addShortcut.bind(this));\n    if (!this.elementToFocus) {\n      this.elementToFocus = addShortcutLink;\n    }\n\n    this.errorMessageElement = this.element.createChild('div', 'keybinds-info keybinds-error hidden');\n    UI.ARIAUtils.markAsAlert(this.errorMessageElement);\n    this.element.appendChild(this.createIconButton(\n        i18nString(UIStrings.ResetShortcutsForAction), 'undo', '', 'undo', this.resetShortcutsToDefaults.bind(this)));\n    this.confirmButton = this.createIconButton(\n        i18nString(UIStrings.confirmChanges), 'checkmark', 'keybinds-confirm-button', 'confirm', () => {\n          this.settingsTab.commitChanges(this.item, this.editedShortcuts);\n          UI.ARIAUtils.alert(i18nString(UIStrings.shortcutChangesApplied, {PH1: this.item.title()}));\n        });\n    this.element.appendChild(this.confirmButton);\n    this.element.appendChild(\n        this.createIconButton(i18nString(UIStrings.discardChanges), 'cross', 'keybinds-cancel-button', 'cancel', () => {\n          this.settingsTab.stopEditing(this.item);\n          UI.ARIAUtils.alert(i18nString(UIStrings.shortcutChangesDiscared));\n        }));\n    this.element.addEventListener('keydown', event => {\n      if (Platform.KeyboardUtilities.isEscKey(event)) {\n        this.settingsTab.stopEditing(this.item);\n        event.consume(true);\n      }\n    });\n  }\n\n  private addShortcut(): void {\n    const shortcut =\n        new UI.KeyboardShortcut.KeyboardShortcut([], this.item.id(), UI.KeyboardShortcut.Type.UnsetShortcut);\n    this.shortcuts.push(shortcut);\n    this.update();\n    const shortcutInput = this.shortcutInputs.get(shortcut) as HTMLElement;\n    if (shortcutInput) {\n      shortcutInput.focus();\n    }\n  }\n\n  private createShortcutRow(shortcut: UI.KeyboardShortcut.KeyboardShortcut, index?: number): void {\n    if (this.editedShortcuts.has(shortcut) && !this.editedShortcuts.get(shortcut)) {\n      return;\n    }\n    let icon: IconButton.Icon.Icon;\n    if (shortcut.type !== UI.KeyboardShortcut.Type.UnsetShortcut && !shortcut.isDefault()) {\n      icon = IconButton.Icon.create('keyboard-pen', 'keybinds-modified');\n      UI.ARIAUtils.setLabel(icon, i18nString(UIStrings.shortcutModified));\n      this.element.appendChild(icon);\n    }\n    const shortcutElement = this.element.createChild('div', 'keybinds-shortcut keybinds-list-text');\n    if (this.isEditing) {\n      const shortcutInput = shortcutElement.createChild('input', 'harmony-input') as HTMLInputElement;\n      shortcutInput.setAttribute('jslog', `${VisualLogging.textField().track({change: true})}`);\n      shortcutInput.spellcheck = false;\n      shortcutInput.maxLength = 0;\n      this.shortcutInputs.set(shortcut, shortcutInput);\n      if (!this.elementToFocus) {\n        this.elementToFocus = shortcutInput;\n      }\n      shortcutInput.value = shortcut.title();\n      const userDescriptors = this.editedShortcuts.get(shortcut);\n      if (userDescriptors) {\n        shortcutInput.value = this.shortcutInputTextForDescriptors(userDescriptors);\n      }\n      shortcutInput.addEventListener('keydown', this.onShortcutInputKeyDown.bind(this, shortcut, shortcutInput));\n      shortcutInput.addEventListener('blur', () => {\n        if (this.secondKeyTimeout !== null) {\n          clearTimeout(this.secondKeyTimeout);\n          this.secondKeyTimeout = null;\n        }\n      });\n      shortcutElement.appendChild(\n          this.createIconButton(i18nString(UIStrings.removeShortcut), 'bin', 'keybinds-delete-button', 'delete', () => {\n            const index = this.shortcuts.indexOf(shortcut);\n            if (!shortcut.isDefault()) {\n              this.shortcuts.splice(index, 1);\n            }\n            this.editedShortcuts.set(shortcut, null);\n            this.update();\n            this.focus();\n            this.validateInputs();\n            UI.ARIAUtils.alert(i18nString(UIStrings.shortcutRemoved, {PH1: this.item.title()}));\n          }));\n    } else {\n      const keys = shortcut.descriptors.flatMap(descriptor => descriptor.name.split(' + '));\n      keys.forEach(key => {\n        shortcutElement.createChild('span', 'keybinds-key').textContent = key;\n      });\n      if (index === 0) {\n        this.element.appendChild(this.createEditButton());\n      }\n    }\n  }\n\n  private createEditButton(): HTMLElement {\n    return this.createIconButton(\n        i18nString(UIStrings.editShortcut), 'edit', 'keybinds-edit-button', 'edit',\n        () => this.settingsTab.startEditing(this.item));\n  }\n\n  private createIconButton(\n      label: string, iconName: string, className: string, jslogContext: string,\n      listener: () => void): HTMLButtonElement {\n    const button = document.createElement('button') as HTMLButtonElement;\n    button.setAttribute('jslog', `${VisualLogging.action().track({click: true}).context(jslogContext)}`);\n    button.setAttribute('title', label);\n    button.appendChild(IconButton.Icon.create(iconName));\n    button.addEventListener('click', listener);\n    UI.ARIAUtils.setLabel(button, label);\n    if (className) {\n      button.classList.add(className);\n    }\n    return button;\n  }\n\n  private onShortcutInputKeyDown(\n      shortcut: UI.KeyboardShortcut.KeyboardShortcut, shortcutInput: HTMLInputElement, event: Event): void {\n    if ((event as KeyboardEvent).key !== 'Tab') {\n      const eventDescriptor = this.descriptorForEvent(event as KeyboardEvent);\n      const userDescriptors = this.editedShortcuts.get(shortcut) || [];\n      this.editedShortcuts.set(shortcut, userDescriptors);\n      const isLastKeyOfShortcut =\n          userDescriptors.length === 2 && UI.KeyboardShortcut.KeyboardShortcut.isModifier(userDescriptors[1].key);\n      const shouldClearOldShortcut = userDescriptors.length === 2 && !isLastKeyOfShortcut;\n      if (shouldClearOldShortcut) {\n        userDescriptors.splice(0, 2);\n      }\n      if (this.secondKeyTimeout) {\n        clearTimeout(this.secondKeyTimeout);\n        this.secondKeyTimeout = null;\n        userDescriptors.push(eventDescriptor);\n      } else if (isLastKeyOfShortcut) {\n        userDescriptors[1] = eventDescriptor;\n      } else if (!UI.KeyboardShortcut.KeyboardShortcut.isModifier(eventDescriptor.key)) {\n        userDescriptors[0] = eventDescriptor;\n        this.secondKeyTimeout = window.setTimeout(() => {\n          this.secondKeyTimeout = null;\n        }, UI.ShortcutRegistry.KeyTimeout);\n      } else {\n        userDescriptors[0] = eventDescriptor;\n      }\n      shortcutInput.value = this.shortcutInputTextForDescriptors(userDescriptors);\n      this.validateInputs();\n      event.consume(true);\n    }\n  }\n\n  private descriptorForEvent(event: KeyboardEvent): UI.KeyboardShortcut.Descriptor {\n    const userKey = UI.KeyboardShortcut.KeyboardShortcut.makeKeyFromEvent(event as KeyboardEvent);\n    const codeAndModifiers = UI.KeyboardShortcut.KeyboardShortcut.keyCodeAndModifiersFromKey(userKey);\n    let key: UI.KeyboardShortcut.Key|string =\n        UI.KeyboardShortcut.Keys[event.key] || UI.KeyboardShortcut.KeyBindings[event.key];\n\n    if (!key && !/^[a-z]$/i.test(event.key)) {\n      const keyCode = event.code;\n      // if we still don't have a key name, let's try the code before falling back to the raw key\n      key = UI.KeyboardShortcut.Keys[keyCode] || UI.KeyboardShortcut.KeyBindings[keyCode];\n      if (keyCode.startsWith('Digit')) {\n        key = keyCode.slice(5);\n      } else if (keyCode.startsWith('Key')) {\n        key = keyCode.slice(3);\n      }\n    }\n\n    return UI.KeyboardShortcut.KeyboardShortcut.makeDescriptor(key || event.key, codeAndModifiers.modifiers);\n  }\n\n  private shortcutInputTextForDescriptors(descriptors: UI.KeyboardShortcut.Descriptor[]): string {\n    return descriptors.map(descriptor => descriptor.name).join(' ');\n  }\n\n  private resetShortcutsToDefaults(): void {\n    this.editedShortcuts.clear();\n    for (const shortcut of this.shortcuts) {\n      if (shortcut.type === UI.KeyboardShortcut.Type.UnsetShortcut) {\n        const index = this.shortcuts.indexOf(shortcut);\n        this.shortcuts.splice(index, 1);\n      } else if (shortcut.type === UI.KeyboardShortcut.Type.UserShortcut) {\n        this.editedShortcuts.set(shortcut, null);\n      }\n    }\n    const disabledDefaults = UI.ShortcutRegistry.ShortcutRegistry.instance().disabledDefaultsForAction(this.item.id());\n    disabledDefaults.forEach(shortcut => {\n      if (this.shortcuts.includes(shortcut)) {\n        return;\n      }\n\n      this.shortcuts.push(shortcut);\n      this.editedShortcuts.set(shortcut, shortcut.descriptors);\n    });\n    this.update();\n    this.focus();\n    UI.ARIAUtils.alert(i18nString(UIStrings.shortcutChangesRestored, {PH1: this.item.title()}));\n  }\n\n  onEscapeKeyPressed(event: Event): void {\n    const activeElement = Platform.DOMUtilities.deepActiveElement(document);\n    for (const [shortcut, shortcutInput] of this.shortcutInputs.entries()) {\n      if (activeElement === shortcutInput) {\n        this.onShortcutInputKeyDown(\n            shortcut as UI.KeyboardShortcut.KeyboardShortcut, shortcutInput as HTMLInputElement,\n            event as KeyboardEvent);\n      }\n    }\n  }\n\n  private validateInputs(): void {\n    const confirmButton = this.confirmButton;\n    const errorMessageElement = this.errorMessageElement;\n    if (!confirmButton || !errorMessageElement) {\n      return;\n    }\n\n    confirmButton.disabled = false;\n    errorMessageElement.classList.add('hidden');\n    this.shortcutInputs.forEach((shortcutInput, shortcut) => {\n      const userDescriptors = this.editedShortcuts.get(shortcut);\n      if (!userDescriptors) {\n        return;\n      }\n      if (userDescriptors.some(descriptor => UI.KeyboardShortcut.KeyboardShortcut.isModifier(descriptor.key))) {\n        confirmButton.disabled = true;\n        shortcutInput.classList.add('error-input');\n        UI.ARIAUtils.setInvalid(shortcutInput, true);\n        errorMessageElement.classList.remove('hidden');\n        errorMessageElement.textContent = i18nString(UIStrings.shortcutsCannotContainOnly);\n        return;\n      }\n      const conflicts = UI.ShortcutRegistry.ShortcutRegistry.instance()\n                            .actionsForDescriptors(userDescriptors)\n                            .filter(actionId => actionId !== this.item.id());\n      if (conflicts.length) {\n        confirmButton.disabled = true;\n        shortcutInput.classList.add('error-input');\n        UI.ARIAUtils.setInvalid(shortcutInput, true);\n        errorMessageElement.classList.remove('hidden');\n        if (!UI.ActionRegistry.ActionRegistry.instance().hasAction(conflicts[0])) {\n          return;\n        }\n        const action = UI.ActionRegistry.ActionRegistry.instance().getAction(conflicts[0]);\n        const actionTitle = action.title();\n        const actionCategory = action.category();\n        errorMessageElement.textContent =\n            i18nString(UIStrings.thisShortcutIsInUseByS, {PH1: actionCategory, PH2: actionTitle});\n        return;\n      }\n      shortcutInput.classList.remove('error-input');\n      UI.ARIAUtils.setInvalid(shortcutInput, false);\n    });\n  }\n}\n\nexport type KeybindsItem = UI.ActionRegistration.ActionCategory|UI.ActionRegistration.Action;\n"]}