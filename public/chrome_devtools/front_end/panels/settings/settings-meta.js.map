{"version":3,"file":"settings-meta.js","sourceRoot":"","sources":["../../../../../../front_end/panels/settings/settings-meta.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport './emulation/emulation-meta.js';\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Root from '../../core/root/root.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport type * as Settings from './settings.js';\n\nconst UIStrings = {\n  /**\n   *@description Text for keyboard shortcuts\n   */\n  shortcuts: 'Shortcuts',\n  /**\n   *@description Text in Settings Screen of the Settings\n   */\n  preferences: 'Preferences',\n  /**\n   *@description Text in Settings Screen of the Settings\n   */\n  experiments: 'Experiments',\n  /**\n   *@description Title of Ignore List settings\n   */\n  ignoreList: 'Ignore List',\n  /**\n   *@description Command for showing the keyboard shortcuts in Settings\n   */\n  showShortcuts: 'Show Shortcuts',\n  /**\n   *@description Command for showing the preference tab in the Settings Screen\n   */\n  showPreferences: 'Show Preferences',\n  /**\n   *@description Command for showing the experiments tab in the Settings Screen\n   */\n  showExperiments: 'Show Experiments',\n  /**\n   *@description Command for showing the Ignore List settings\n   */\n  showIgnoreList: 'Show Ignore List',\n  /**\n   *@description Name of the Settings view\n   */\n  settings: 'Settings',\n  /**\n   *@description Text for the documentation of something\n   */\n  documentation: 'Documentation',\n};\n\nconst str_ = i18n.i18n.registerUIStrings('panels/settings/settings-meta.ts', UIStrings);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\n\nlet loadedSettingsModule: (typeof Settings|undefined);\n\nasync function loadSettingsModule(): Promise<typeof Settings> {\n  if (!loadedSettingsModule) {\n    loadedSettingsModule = await import('./settings.js');\n  }\n  return loadedSettingsModule;\n}\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.SETTINGS_VIEW,\n  id: 'preferences',\n  title: i18nLazyString(UIStrings.preferences),\n  commandPrompt: i18nLazyString(UIStrings.showPreferences),\n  order: 0,\n  async loadView() {\n    const Settings = await loadSettingsModule();\n    return new Settings.SettingsScreen.GenericSettingsTab();\n  },\n  iconName: 'gear',\n});\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.SETTINGS_VIEW,\n  id: 'experiments',\n  title: i18nLazyString(UIStrings.experiments),\n  commandPrompt: i18nLazyString(UIStrings.showExperiments),\n  order: 3,\n  experiment: Root.Runtime.ExperimentName.ALL,\n  async loadView() {\n    const Settings = await loadSettingsModule();\n    return new Settings.SettingsScreen.ExperimentsSettingsTab();\n  },\n  iconName: 'experiment',\n});\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.SETTINGS_VIEW,\n  id: 'blackbox',\n  title: i18nLazyString(UIStrings.ignoreList),\n  commandPrompt: i18nLazyString(UIStrings.showIgnoreList),\n  order: 4,\n  async loadView() {\n    const Settings = await loadSettingsModule();\n    return new Settings.FrameworkIgnoreListSettingsTab.FrameworkIgnoreListSettingsTab();\n  },\n  iconName: 'clear-list',\n});\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.SETTINGS_VIEW,\n  id: 'keybinds',\n  title: i18nLazyString(UIStrings.shortcuts),\n  commandPrompt: i18nLazyString(UIStrings.showShortcuts),\n  order: 100,\n  async loadView() {\n    const Settings = await loadSettingsModule();\n    return new Settings.KeybindsSettingsTab.KeybindsSettingsTab();\n  },\n  iconName: 'keyboard',\n});\n\nUI.ActionRegistration.registerActionExtension({\n  category: UI.ActionRegistration.ActionCategory.SETTINGS,\n  actionId: 'settings.show',\n  title: i18nLazyString(UIStrings.settings),\n  async loadActionDelegate() {\n    const Settings = await loadSettingsModule();\n    return new Settings.SettingsScreen.ActionDelegate();\n  },\n  iconClass: UI.ActionRegistration.IconClass.LARGEICON_SETTINGS_GEAR,\n  bindings: [\n    {\n      shortcut: 'F1',\n      keybindSets: [\n        UI.ActionRegistration.KeybindSet.DEVTOOLS_DEFAULT,\n      ],\n    },\n    {\n      shortcut: 'Shift+?',\n    },\n    {\n      platform: UI.ActionRegistration.Platforms.WindowsLinux,\n      shortcut: 'Ctrl+,',\n      keybindSets: [\n        UI.ActionRegistration.KeybindSet.VS_CODE,\n      ],\n    },\n    {\n      platform: UI.ActionRegistration.Platforms.Mac,\n      shortcut: 'Meta+,',\n      keybindSets: [\n        UI.ActionRegistration.KeybindSet.VS_CODE,\n      ],\n    },\n  ],\n});\n\nUI.ActionRegistration.registerActionExtension({\n  category: UI.ActionRegistration.ActionCategory.SETTINGS,\n  actionId: 'settings.documentation',\n  title: i18nLazyString(UIStrings.documentation),\n  async loadActionDelegate() {\n    const Settings = await loadSettingsModule();\n    return new Settings.SettingsScreen.ActionDelegate();\n  },\n});\n\nUI.ActionRegistration.registerActionExtension({\n  category: UI.ActionRegistration.ActionCategory.SETTINGS,\n  actionId: 'settings.shortcuts',\n  title: i18nLazyString(UIStrings.showShortcuts),\n  async loadActionDelegate() {\n    const Settings = await loadSettingsModule();\n    return new Settings.SettingsScreen.ActionDelegate();\n  },\n  bindings: [\n    {\n      platform: UI.ActionRegistration.Platforms.WindowsLinux,\n      shortcut: 'Ctrl+K Ctrl+S',\n      keybindSets: [\n        UI.ActionRegistration.KeybindSet.VS_CODE,\n      ],\n    },\n    {\n      platform: UI.ActionRegistration.Platforms.Mac,\n      shortcut: 'Meta+K Meta+S',\n      keybindSets: [\n        UI.ActionRegistration.KeybindSet.VS_CODE,\n      ],\n    },\n  ],\n});\n\nUI.ViewManager.registerLocationResolver({\n  name: UI.ViewManager.ViewLocationValues.SETTINGS_VIEW,\n  category: UI.ViewManager.ViewLocationCategory.SETTINGS,\n  async loadResolver() {\n    const Settings = await loadSettingsModule();\n    return Settings.SettingsScreen.SettingsScreen.instance();\n  },\n});\n\nCommon.Revealer.registerRevealer({\n  contextTypes() {\n    return [\n      Common.Settings.Setting,\n      Root.Runtime.Experiment,\n    ];\n  },\n  destination: undefined,\n  async loadRevealer() {\n    const Settings = await loadSettingsModule();\n    return new Settings.SettingsScreen.Revealer();\n  },\n});\n\nUI.ContextMenu.registerItem({\n  location: UI.ContextMenu.ItemLocation.MAIN_MENU_FOOTER,\n  actionId: 'settings.shortcuts',\n  order: undefined,\n});\n\nUI.ContextMenu.registerItem({\n  location: UI.ContextMenu.ItemLocation.MAIN_MENU_HELP_DEFAULT,\n  actionId: 'settings.documentation',\n  order: undefined,\n});\n"]}