{"version":3,"file":"SyncSection.test.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/settings/components/SyncSection.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {renderElementIntoDOM} from '../../../testing/DOMHelpers.js';\nimport {createFakeSetting, describeWithLocale} from '../../../testing/EnvironmentHelpers.js';\nimport * as Coordinator from '../../../ui/components/render_coordinator/render_coordinator.js';\nimport * as SettingComponents from '../../../ui/components/settings/settings.js';\n\nimport * as PanelComponents from './components.js';\n\nasync function renderSyncSection(data: PanelComponents.SyncSection.SyncSectionData):\n    Promise<{section: PanelComponents.SyncSection.SyncSection, shadowRoot: ShadowRoot}> {\n  const section = new PanelComponents.SyncSection.SyncSection();\n  renderElementIntoDOM(section);\n  section.data = data;\n  await Coordinator.RenderCoordinator.RenderCoordinator.instance().done();\n  assert.isNotNull(section.shadowRoot);\n  return {section, shadowRoot: section.shadowRoot};\n}\n\ndescribeWithLocale('SyncSection', () => {\n  it('shows a warning when sync is not active', async () => {\n    const syncSetting = createFakeSetting<boolean>('setting', true);\n    const {shadowRoot} = await renderSyncSection({syncInfo: {isSyncActive: false}, syncSetting});\n    const warning = shadowRoot.querySelector('.warning');\n    assert.instanceOf(warning, HTMLElement);\n    assert.include(warning.innerText, 'To turn this setting on');\n  });\n\n  it('shows a warning when sync is active but preferences bucket is not synced', async () => {\n    const syncSetting = createFakeSetting<boolean>('setting', true);\n    const {shadowRoot} =\n        await renderSyncSection({syncInfo: {isSyncActive: true, arePreferencesSynced: false}, syncSetting});\n\n    const warning = shadowRoot.querySelector('.warning');\n    assert.instanceOf(warning, HTMLElement);\n\n    assert.include(warning.innerText, 'To turn this setting on');\n  });\n\n  it('disables the checkbox when sync is not active', async () => {\n    const syncSetting = createFakeSetting<boolean>('setting', true);\n    const {shadowRoot} = await renderSyncSection({syncInfo: {isSyncActive: false}, syncSetting});\n\n    const settingCheckbox = shadowRoot.querySelector('setting-checkbox');\n    assert.instanceOf(settingCheckbox, SettingComponents.SettingCheckbox.SettingCheckbox);\n    assert.isNotNull(settingCheckbox.shadowRoot);\n\n    const checkbox = settingCheckbox.shadowRoot.querySelector('input');\n    assert.instanceOf(checkbox, HTMLInputElement);\n\n    assert.isTrue(checkbox.disabled);\n  });\n\n  it('shows the avatar and email of the logged in user when sync is active', async () => {\n    const syncSetting = createFakeSetting<boolean>('setting', true);\n    const {shadowRoot} = await renderSyncSection({\n      syncInfo: {\n        isSyncActive: true,\n        arePreferencesSynced: true,\n        accountEmail: 'user@gmail.com',\n        accountImage: '<png encoded as base64>',\n      },\n      syncSetting,\n    });\n\n    const image = shadowRoot.querySelector('img');\n    assert.instanceOf(image, HTMLImageElement);\n\n    const email = shadowRoot.querySelector('.account-email');\n    assert.instanceOf(email, HTMLElement);\n\n    assert.include(email.innerText, 'user@gmail.com');\n  });\n});\n"]}