{"version":3,"file":"UserAgentClientHintsForm.test.js","sourceRoot":"","sources":["../../../../../../../../front_end/panels/settings/emulation/components/UserAgentClientHintsForm.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport {\n  getElementsWithinComponent,\n  getElementWithinComponent,\n  getEventPromise,\n  renderElementIntoDOM,\n} from '../../../../testing/DOMHelpers.js';\nimport {describeWithLocale} from '../../../../testing/EnvironmentHelpers.js';\nimport * as Buttons from '../../../../ui/components/buttons/buttons.js';\n\nimport * as EmulationComponents from './components.js';\n\ndescribeWithLocale('UserAgentClientHintsForm', () => {\n  const testMetaData = {\n    brands: [\n      {\n        brand: 'Brand1',\n        version: 'v1',\n      },\n      {\n        brand: 'Brand2',\n        version: 'v2',\n      },\n    ],\n    fullVersionList: [\n      {\n        brand: 'Brand3',\n        version: '1.2.3',\n      },\n    ],\n    fullVersion: '',\n    platform: '',\n    platformVersion: '',\n    architecture: '',\n    model: '',\n    mobile: false,\n  };\n\n  const renderUserAgentClientHintsForm = () => {\n    const component = new EmulationComponents.UserAgentClientHintsForm.UserAgentClientHintsForm();\n    renderElementIntoDOM(component);\n    return component;\n  };\n\n  it('renders the UA brands form with brand values', () => {\n    const component = renderUserAgentClientHintsForm();\n    component.value = {\n      metaData: testMetaData,\n    };\n\n    const brandInputs = getElementsWithinComponent(component, '.ua-brand-name-input', HTMLInputElement);\n    const brandInputValues = [...brandInputs].map(brandInput => brandInput.value);\n    assert.deepEqual(brandInputValues, ['Brand1', 'Brand2']);\n  });\n\n  it('renders the full-version-list brands form with brand values', () => {\n    const component = renderUserAgentClientHintsForm();\n    component.value = {\n      metaData: testMetaData,\n    };\n\n    const brandInputs = getElementsWithinComponent(component, '.fvl-brand-name-input', HTMLInputElement);\n    const brandInputValues = [...brandInputs].map(brandInput => brandInput.value);\n    assert.deepEqual(brandInputValues, ['Brand3']);\n  });\n\n  it('Submitting the form returns metaData', async () => {\n    const component = renderUserAgentClientHintsForm();\n    component.value = {\n      metaData: testMetaData,\n      showSubmitButton: true,\n    };\n\n    const eventPromise = getEventPromise<EmulationComponents.UserAgentClientHintsForm.ClientHintsSubmitEvent>(\n        component, 'clienthintssubmit');\n\n    const submitButton = getElementWithinComponent(component, 'devtools-button', Buttons.Button.Button);\n    submitButton.click();\n\n    const event = await eventPromise;\n    assert.deepEqual(event.detail, {value: testMetaData});\n  });\n});\n"]}