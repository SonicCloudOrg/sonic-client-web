{"version":3,"file":"SettingsScreen.js","sourceRoot":"","sources":["../../../../../../front_end/panels/settings/SettingsScreen.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2013 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as Root from '../../core/root/root.js';\nimport * as IconButton from '../../ui/components/icon_button/icon_button.js';\nimport * as Components from '../../ui/legacy/components/utils/utils.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\nimport {PanelUtils} from '../utils/utils.js';\n\nimport * as PanelComponents from './components/components.js';\nimport {type KeybindsSettingsTab} from './KeybindsSettingsTab.js';\nimport settingsScreenStyles from './settingsScreen.css.js';\n\nconst UIStrings = {\n  /**\n   *@description Name of the Settings view\n   */\n  settings: 'Settings',\n  /**\n   *@description Text for keyboard shortcuts\n   */\n  shortcuts: 'Shortcuts',\n  /**\n   *@description Text in Settings Screen of the Settings\n   */\n  preferences: 'Preferences',\n  /**\n   *@description Text of button in Settings Screen of the Settings\n   */\n  restoreDefaultsAndReload: 'Restore defaults and reload',\n  /**\n   *@description Text in Settings Screen of the Settings\n   */\n  experiments: 'Experiments',\n  /**\n   *@description Message shown in the experiments panel to warn users about any possible unstable features.\n   */\n  theseExperimentsCouldBeUnstable:\n      'These experiments could be unstable or unreliable and may require you to restart DevTools.',\n  /**\n   *@description Message text content in Settings Screen of the Settings\n   */\n  theseExperimentsAreParticularly: 'These experiments are particularly unstable. Enable at your own risk.',\n  /**\n   *@description Warning text content in Settings Screen of the Settings\n   */\n  warning: 'WARNING:',\n  /**\n   *@description Message to display if a setting change requires a reload of DevTools\n   */\n  oneOrMoreSettingsHaveChanged: 'One or more settings have changed which requires a reload to take effect.',\n  /**\n   * @description Label for a filter text input that controls which experiments are shown.\n   */\n  filterExperimentsLabel: 'Filter',\n  /**\n   * @description Warning text shown when the user has entered text to filter the\n   * list of experiments, but no experiments match the filter.\n   */\n  noResults: 'No experiments match the filter',\n  /**\n   *@description Text that is usually a hyperlink to more documentation\n   */\n  learnMore: 'Learn more',\n  /**\n   *@description Text that is usually a hyperlink to a feedback form\n   */\n  sendFeedback: 'Send feedback',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/settings/SettingsScreen.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nlet settingsScreenInstance: SettingsScreen;\n\nexport class SettingsScreen extends UI.Widget.VBox implements UI.View.ViewLocationResolver {\n  private readonly tabbedLocation: UI.View.TabbedViewLocation;\n  private keybindsTab?: KeybindsSettingsTab;\n  private reportTabOnReveal: boolean;\n\n  private constructor() {\n    super(true);\n\n    this.contentElement.classList.add('settings-window-main');\n    this.contentElement.classList.add('vbox');\n\n    const settingsLabelElement = document.createElement('div');\n    settingsLabelElement.classList.add('settings-window-label-element');\n    const settingsTitleElement =\n        UI.UIUtils\n            .createShadowRootWithCoreStyles(\n                settingsLabelElement, {cssFile: [settingsScreenStyles], delegatesFocus: undefined})\n            .createChild('div', 'settings-window-title');\n\n    UI.ARIAUtils.markAsHeading(settingsTitleElement, 1);\n    settingsTitleElement.textContent = i18nString(UIStrings.settings);\n\n    this.tabbedLocation = UI.ViewManager.ViewManager.instance().createTabbedLocation(\n        () => SettingsScreen.revealSettingsScreen(), 'settings-view');\n    const tabbedPane = this.tabbedLocation.tabbedPane();\n    tabbedPane.registerCSSFiles([settingsScreenStyles]);\n    tabbedPane.headerElement().prepend(settingsLabelElement);\n    tabbedPane.setShrinkableTabs(false);\n    tabbedPane.makeVerticalTabLayout();\n    const keyBindsView = UI.ViewManager.ViewManager.instance().view('keybinds');\n    if (keyBindsView) {\n      void keyBindsView.widget().then(widget => {\n        this.keybindsTab = widget as KeybindsSettingsTab;\n      });\n    }\n    tabbedPane.show(this.contentElement);\n    tabbedPane.selectTab('preferences');\n    tabbedPane.addEventListener(UI.TabbedPane.Events.TabInvoked, this.tabInvoked, this);\n    this.reportTabOnReveal = false;\n  }\n\n  static instance(opts: {forceNew: boolean|null} = {forceNew: null}): SettingsScreen {\n    const {forceNew} = opts;\n    if (!settingsScreenInstance || forceNew) {\n      settingsScreenInstance = new SettingsScreen();\n    }\n\n    return settingsScreenInstance;\n  }\n\n  private static revealSettingsScreen(): SettingsScreen {\n    const settingsScreen = SettingsScreen.instance();\n    if (settingsScreen.isShowing()) {\n      return settingsScreen;\n    }\n\n    settingsScreen.reportTabOnReveal = true;\n    const dialog = new UI.Dialog.Dialog('settings');\n    dialog.contentElement.tabIndex = -1;\n    dialog.addCloseButton();\n    dialog.setOutsideClickCallback(() => {});\n    dialog.setPointerEventsBehavior(UI.GlassPane.PointerEventsBehavior.PierceGlassPane);\n    dialog.setOutsideTabIndexBehavior(UI.Dialog.OutsideTabIndexBehavior.PreserveMainViewTabIndex);\n    settingsScreen.show(dialog.contentElement);\n    dialog.setEscapeKeyCallback(settingsScreen.onEscapeKeyPressed.bind(settingsScreen));\n    dialog.setMarginBehavior(UI.GlassPane.MarginBehavior.NoMargin);\n    // UI.Dialog extends GlassPane and overrides the `show` method with a wider\n    // accepted type. However, TypeScript uses the supertype declaration to\n    // determine the full type, which requires a `!Document`.\n    // @ts-ignore\n    dialog.show();\n\n    return settingsScreen;\n  }\n\n  static async showSettingsScreen(\n      options: ShowSettingsScreenOptions|undefined = {name: undefined, focusTabHeader: undefined}): Promise<void> {\n    const {name, focusTabHeader} = options;\n    const settingsScreen = SettingsScreen.revealSettingsScreen();\n\n    settingsScreen.selectTab(name || 'preferences');\n    const tabbedPane = settingsScreen.tabbedLocation.tabbedPane();\n    await tabbedPane.waitForTabElementUpdate();\n    if (focusTabHeader) {\n      tabbedPane.focusSelectedTabHeader();\n    } else {\n      tabbedPane.focus();\n    }\n  }\n\n  resolveLocation(_locationName: string): UI.View.ViewLocation|null {\n    return this.tabbedLocation;\n  }\n\n  private selectTab(name: string): void {\n    this.tabbedLocation.tabbedPane().selectTab(name, /* userGesture */ true);\n  }\n\n  private tabInvoked(event: Common.EventTarget.EventTargetEvent<UI.TabbedPane.EventData>): void {\n    const eventData = event.data;\n    if (!eventData.isUserGesture) {\n      return;\n    }\n\n    const prevTabId = eventData.prevTabId;\n    const tabId = eventData.tabId;\n    if (!this.reportTabOnReveal && prevTabId && prevTabId === tabId) {\n      return;\n    }\n\n    this.reportTabOnReveal = false;\n    this.reportSettingsPanelShown(tabId);\n  }\n\n  private reportSettingsPanelShown(tabId: string): void {\n    if (tabId === i18nString(UIStrings.shortcuts)) {\n      Host.userMetrics.settingsPanelShown('shortcuts');\n      return;\n    }\n\n    Host.userMetrics.settingsPanelShown(tabId);\n  }\n\n  private onEscapeKeyPressed(event: Event): void {\n    if (this.tabbedLocation.tabbedPane().selectedTabId === 'keybinds' && this.keybindsTab) {\n      this.keybindsTab.onEscapeKeyPressed(event);\n    }\n  }\n  override wasShown(): void {\n    super.wasShown();\n    this.registerCSSFiles([settingsScreenStyles]);\n  }\n}\n\nabstract class SettingsTab extends UI.Widget.VBox {\n  containerElement: HTMLElement;\n  constructor(name: string, id?: string) {\n    super();\n    this.element.classList.add('settings-tab-container');\n    if (id) {\n      this.element.id = id;\n    }\n    const header = this.element.createChild('header');\n    UI.UIUtils.createTextChild(header.createChild('h1'), name);\n    this.containerElement = this.element.createChild('div', 'settings-container-wrapper')\n                                .createChild('div', 'settings-tab settings-content settings-container');\n  }\n\n  protected appendSection(name?: string): HTMLElement {\n    const block = this.containerElement.createChild('div', 'settings-block');\n    if (name) {\n      UI.ARIAUtils.markAsGroup(block);\n      const title = block.createChild('div', 'settings-section-title');\n      title.textContent = name;\n      UI.ARIAUtils.markAsHeading(title, 2);\n      UI.ARIAUtils.setLabel(block, name);\n    }\n    return block;\n  }\n\n  abstract highlightObject(_object: Object): void;\n}\n\nexport class GenericSettingsTab extends SettingsTab {\n  private readonly syncSection = new PanelComponents.SyncSection.SyncSection();\n  private readonly settingToControl = new Map<Common.Settings.Setting<unknown>, HTMLElement>();\n\n  constructor() {\n    super(i18nString(UIStrings.preferences), 'preferences-tab-content');\n\n    this.element.setAttribute('jslog', `${VisualLogging.pane('preferences')}`);\n\n    // GRID, MOBILE, EMULATION, and RENDERING are intentionally excluded from this list.\n    const explicitSectionOrder: Common.Settings.SettingCategory[] = [\n      Common.Settings.SettingCategory.NONE,\n      Common.Settings.SettingCategory.APPEARANCE,\n      Common.Settings.SettingCategory.SOURCES,\n      Common.Settings.SettingCategory.ELEMENTS,\n      Common.Settings.SettingCategory.NETWORK,\n      Common.Settings.SettingCategory.PERFORMANCE,\n      Common.Settings.SettingCategory.MEMORY,\n      Common.Settings.SettingCategory.CONSOLE,\n      Common.Settings.SettingCategory.EXTENSIONS,\n      Common.Settings.SettingCategory.PERSISTENCE,\n      Common.Settings.SettingCategory.DEBUGGER,\n      Common.Settings.SettingCategory.GLOBAL,\n      Common.Settings.SettingCategory.SYNC,\n    ];\n\n    // Some settings define their initial ordering.\n    const preRegisteredSettings = Common.Settings.Settings.instance().getRegisteredSettings().sort(\n        (firstSetting, secondSetting) => {\n          if (firstSetting.order && secondSetting.order) {\n            return (firstSetting.order - secondSetting.order);\n          }\n          if (firstSetting.order) {\n            return -1;\n          }\n          if (secondSetting.order) {\n            return 1;\n          }\n          return 0;\n        },\n    );\n\n    for (const sectionCategory of explicitSectionOrder) {\n      const settingsForSection = preRegisteredSettings.filter(\n          setting => setting.category === sectionCategory && GenericSettingsTab.isSettingVisible(setting));\n      this.createSectionElement(sectionCategory, settingsForSection);\n    }\n\n    const restoreAndReloadButton = UI.UIUtils.createTextButton(\n        i18nString(UIStrings.restoreDefaultsAndReload), restoreAndReload,\n        {jslogContext: 'settings.restore-defaults-and-reload'});\n    this.appendSection().appendChild(restoreAndReloadButton);\n\n    function restoreAndReload(): void {\n      Common.Settings.Settings.instance().clearAll();\n      Components.Reload.reload();\n    }\n  }\n\n  static isSettingVisible(setting: Common.Settings.SettingRegistration): boolean {\n    return Boolean(setting.title?.()) && Boolean(setting.category);\n  }\n\n  override wasShown(): void {\n    UI.Context.Context.instance().setFlavor(GenericSettingsTab, this);\n    super.wasShown();\n    this.updateSyncSection();\n  }\n\n  override willHide(): void {\n    super.willHide();\n    UI.Context.Context.instance().setFlavor(GenericSettingsTab, null);\n  }\n\n  private updateSyncSection(): void {\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.getSyncInformation(syncInfo => {\n      this.syncSection.data = {\n        syncInfo,\n        syncSetting: Common.Settings.moduleSetting('sync-preferences') as Common.Settings.Setting<boolean>,\n      };\n    });\n  }\n\n  private createExtensionSection(settings: Common.Settings.SettingRegistration[]): void {\n    const sectionName = Common.Settings.SettingCategory.EXTENSIONS;\n    const settingUI = Components.Linkifier.LinkHandlerSettingUI.instance() as UI.SettingsUI.SettingUI;\n    const element = settingUI.settingElement();\n    if (element) {\n      const sectionElement = this.createStandardSectionElement(sectionName, settings);\n      sectionElement.appendChild(element);\n    }\n  }\n\n  private createSectionElement(\n      category: Common.Settings.SettingCategory, settings: Common.Settings.SettingRegistration[]): void {\n    // Always create the EXTENSIONS section and append the link handling control.\n    if (category === Common.Settings.SettingCategory.EXTENSIONS) {\n      this.createExtensionSection(settings);\n    } else if (category === Common.Settings.SettingCategory.SYNC && settings.length > 0) {\n      this.containerElement.appendChild(this.syncSection);\n    } else if (settings.length > 0) {\n      this.createStandardSectionElement(category, settings);\n    }\n  }\n\n  private createStandardSectionElement(\n      category: Common.Settings.SettingCategory, settings: Common.Settings.SettingRegistration[]): Element {\n    const uiSectionName = Common.Settings.getLocalizedSettingsCategory(category);\n    const sectionElement = this.appendSection(uiSectionName);\n    for (const settingRegistration of settings) {\n      const setting = Common.Settings.Settings.instance().moduleSetting(settingRegistration.settingName);\n      const settingControl = UI.SettingsUI.createControlForSetting(setting);\n      if (settingControl) {\n        this.settingToControl.set(setting, settingControl);\n        sectionElement.appendChild(settingControl);\n      }\n    }\n    return sectionElement;\n  }\n\n  highlightObject(setting: Object): void {\n    if (setting instanceof Common.Settings.Setting) {\n      const element = this.settingToControl.get(setting);\n      if (element) {\n        PanelUtils.highlightElement(element);\n      }\n    }\n  }\n}\n\nexport class ExperimentsSettingsTab extends SettingsTab {\n  #experimentsSection: HTMLElement|undefined;\n  #unstableExperimentsSection: HTMLElement|undefined;\n  #inputElement: HTMLInputElement;\n  private readonly experimentToControl = new Map<Root.Runtime.Experiment, HTMLElement>();\n\n  constructor() {\n    super(i18nString(UIStrings.experiments), 'experiments-tab-content');\n    const filterSection = this.appendSection();\n    filterSection.classList.add('experiments-filter');\n\n    this.element.setAttribute('jslog', `${VisualLogging.pane('experiments')}`);\n\n    const labelElement = filterSection.createChild('label');\n    labelElement.textContent = i18nString(UIStrings.filterExperimentsLabel);\n    this.#inputElement = UI.UIUtils.createInput('', 'text', 'experiments-filter');\n    UI.ARIAUtils.bindLabelToControl(labelElement, this.#inputElement);\n    filterSection.appendChild(this.#inputElement);\n    this.#inputElement.addEventListener(\n        'input', () => this.renderExperiments(this.#inputElement.value.toLowerCase()), false);\n    this.setDefaultFocusedElement(this.#inputElement);\n\n    this.setFilter('');\n  }\n\n  private renderExperiments(filterText: string): void {\n    this.experimentToControl.clear();\n    if (this.#experimentsSection) {\n      this.#experimentsSection.remove();\n    }\n    if (this.#unstableExperimentsSection) {\n      this.#unstableExperimentsSection.remove();\n    }\n    const experiments = Root.Runtime.experiments.allConfigurableExperiments().sort();\n    const unstableExperiments = experiments.filter(e => e.unstable && e.title.toLowerCase().includes(filterText));\n    const stableExperiments = experiments.filter(e => !e.unstable && e.title.toLowerCase().includes(filterText));\n    if (stableExperiments.length) {\n      this.#experimentsSection = this.appendSection();\n      const warningMessage = i18nString(UIStrings.theseExperimentsCouldBeUnstable);\n      this.#experimentsSection.appendChild(this.createExperimentsWarningSubsection(warningMessage));\n      for (const experiment of stableExperiments) {\n        this.#experimentsSection.appendChild(this.createExperimentCheckbox(experiment));\n      }\n    }\n    if (unstableExperiments.length) {\n      this.#unstableExperimentsSection = this.appendSection();\n      const warningMessage = i18nString(UIStrings.theseExperimentsAreParticularly);\n      this.#unstableExperimentsSection.appendChild(this.createExperimentsWarningSubsection(warningMessage));\n      for (const experiment of unstableExperiments) {\n        this.#unstableExperimentsSection.appendChild(this.createExperimentCheckbox(experiment));\n      }\n    }\n    if (!stableExperiments.length && !unstableExperiments.length) {\n      this.#experimentsSection = this.appendSection();\n      const warning = this.#experimentsSection.createChild('span');\n      warning.textContent = i18nString(UIStrings.noResults);\n      UI.ARIAUtils.alert(warning.textContent);\n    }\n  }\n\n  private createExperimentsWarningSubsection(warningMessage: string): Element {\n    const subsection = document.createElement('div');\n    const warning = subsection.createChild('span', 'settings-experiments-warning-subsection-warning');\n    warning.textContent = i18nString(UIStrings.warning);\n    UI.UIUtils.createTextChild(subsection, ' ');\n    const message = subsection.createChild('span', 'settings-experiments-warning-subsection-message');\n    message.textContent = warningMessage;\n    return subsection;\n  }\n\n  private createExperimentCheckbox(experiment: Root.Runtime.Experiment): HTMLParagraphElement {\n    const label = UI.UIUtils.CheckboxLabel.create(experiment.title, experiment.isEnabled(), undefined, experiment.name);\n    label.classList.add('experiment-label');\n    const input = label.checkboxElement;\n    input.name = experiment.name;\n    function listener(): void {\n      experiment.setEnabled(input.checked);\n      Host.userMetrics.experimentChanged(experiment.name, experiment.isEnabled());\n      UI.InspectorView.InspectorView.instance().displayReloadRequiredWarning(\n          i18nString(UIStrings.oneOrMoreSettingsHaveChanged));\n    }\n    input.addEventListener('click', listener, false);\n\n    const p = document.createElement('p');\n    this.experimentToControl.set(experiment, p);\n    p.classList.add('settings-experiment');\n    if (experiment.unstable && !experiment.isEnabled()) {\n      p.classList.add('settings-experiment-unstable');\n    }\n    p.appendChild(label);\n\n    if (experiment.docLink) {\n      const link = UI.XLink.XLink.create(\n          experiment.docLink, undefined, undefined, undefined, `${experiment.name}-documentation`);\n      link.textContent = '';\n      link.setAttribute('aria-label', i18nString(UIStrings.learnMore));\n\n      const linkIcon = new IconButton.Icon.Icon();\n      linkIcon.data = {iconName: 'help', color: 'var(--icon-default)', width: '16px', height: '16px'};\n      linkIcon.classList.add('link-icon');\n      link.prepend(linkIcon);\n\n      p.appendChild(link);\n    }\n\n    if (experiment.feedbackLink) {\n      const link = UI.XLink.XLink.create(\n          experiment.feedbackLink, undefined, undefined, undefined, `${experiment.name}-feedback`);\n      link.textContent = i18nString(UIStrings.sendFeedback);\n      link.classList.add('feedback-link');\n\n      p.appendChild(link);\n    }\n\n    return p;\n  }\n\n  highlightObject(experiment: Object): void {\n    if (experiment instanceof Root.Runtime.Experiment) {\n      const element = this.experimentToControl.get(experiment);\n      if (element) {\n        PanelUtils.highlightElement(element);\n      }\n    }\n  }\n\n  setFilter(filterText: string): void {\n    this.#inputElement.value = filterText;\n    this.#inputElement.dispatchEvent(new Event('input', {'bubbles': true, 'cancelable': true}));\n  }\n\n  override wasShown(): void {\n    UI.Context.Context.instance().setFlavor(ExperimentsSettingsTab, this);\n    super.wasShown();\n  }\n\n  override willHide(): void {\n    super.willHide();\n    UI.Context.Context.instance().setFlavor(ExperimentsSettingsTab, null);\n  }\n}\n\nexport class ActionDelegate implements UI.ActionRegistration.ActionDelegate {\n  handleAction(context: UI.Context.Context, actionId: string): boolean {\n    switch (actionId) {\n      case 'settings.show':\n        void SettingsScreen.showSettingsScreen({focusTabHeader: true} as ShowSettingsScreenOptions);\n        return true;\n      case 'settings.documentation':\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance.openInNewTab(UI.UIUtils.addReferrerToURL(\n            'https://developer.chrome.com/docs/devtools/' as Platform.DevToolsPath.UrlString));\n        return true;\n      case 'settings.shortcuts':\n        void SettingsScreen.showSettingsScreen({name: 'keybinds', focusTabHeader: true});\n        return true;\n    }\n    return false;\n  }\n}\nexport class Revealer implements Common.Revealer.Revealer<Root.Runtime.Experiment|Common.Settings.Setting<unknown>> {\n  async reveal(object: Root.Runtime.Experiment|Common.Settings.Setting<unknown>): Promise<void> {\n    const context = UI.Context.Context.instance();\n    if (object instanceof Root.Runtime.Experiment) {\n      Host.InspectorFrontendHost.InspectorFrontendHostInstance.bringToFront();\n      await SettingsScreen.showSettingsScreen({name: 'experiments'});\n      const experimentsSettingsTab = context.flavor(ExperimentsSettingsTab);\n      if (experimentsSettingsTab !== null) {\n        experimentsSettingsTab.highlightObject(object);\n      }\n      return;\n    }\n\n    for (const settingRegistration of Common.Settings.Settings.instance().getRegisteredSettings()) {\n      if (!GenericSettingsTab.isSettingVisible(settingRegistration)) {\n        continue;\n      }\n      if (settingRegistration.settingName === object.name) {\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance.bringToFront();\n        await SettingsScreen.showSettingsScreen();\n        const genericSettingsTab = context.flavor(GenericSettingsTab);\n        if (genericSettingsTab !== null) {\n          genericSettingsTab.highlightObject(object);\n        }\n        return;\n      }\n    }\n\n    // Reveal settings views\n    for (const view of UI.ViewManager.getRegisteredViewExtensions()) {\n      const id = view.viewId();\n      const location = view.location();\n      if (location !== UI.ViewManager.ViewLocationValues.SETTINGS_VIEW) {\n        continue;\n      }\n      const settings = view.settings();\n      if (settings && settings.indexOf(object.name) !== -1) {\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance.bringToFront();\n        await SettingsScreen.showSettingsScreen({name: id});\n        const widget = await view.widget();\n        if (widget instanceof SettingsTab) {\n          widget.highlightObject(object);\n        }\n        return;\n      }\n    }\n  }\n}\nexport interface ShowSettingsScreenOptions {\n  name?: string;\n  focusTabHeader?: boolean;\n}\n"]}