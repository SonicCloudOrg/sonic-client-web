{"version":3,"file":"js_timeline-meta.js","sourceRoot":"","sources":["../../../../../../front_end/panels/js_timeline/js_timeline-meta.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as Timeline from '../timeline/timeline.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nconst UIStrings = {\n  /**\n   *@description Text for the performance of something\n   */\n  performance: 'Performance',\n  /**\n   *@description Command for showing the 'Performance' tool\n   */\n  showPerformance: 'Show Performance',\n  /**\n   *@description Title of an action in the timeline tool to show history\n   */\n  showRecentTimelineSessions: 'Show recent timeline sessions',\n  /**\n   *@description Text to record a series of actions for analysis\n   */\n  record: 'Record',\n  /**\n   *@description Text of an item that stops the running task\n   */\n  stop: 'Stop',\n  /**\n   *@description Title of an action in the timeline tool to record reload\n   */\n  startProfilingAndReloadPage: 'Start profiling and reload page',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/js_timeline/js_timeline-meta.ts', UIStrings);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\n\nlet loadedTimelineModule: (typeof Timeline|undefined);\n\nasync function loadTimelineModule(): Promise<typeof Timeline> {\n  if (!loadedTimelineModule) {\n    loadedTimelineModule = await import('../timeline/timeline.js');\n  }\n  return loadedTimelineModule;\n}\n\nfunction maybeRetrieveTimelineContextTypes<T = unknown>(getClassCallBack: (timelineModule: typeof Timeline) => T[]):\n    T[] {\n  if (loadedTimelineModule === undefined) {\n    return [];\n  }\n  return getClassCallBack(loadedTimelineModule);\n}\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.PANEL,\n  id: 'timeline',\n  title: i18nLazyString(UIStrings.performance),\n  commandPrompt: i18nLazyString(UIStrings.showPerformance),\n  order: 66,\n  hasToolbar: false,\n  isPreviewFeature: true,\n  async loadView() {\n    const Timeline = await loadTimelineModule();\n    return Timeline.TimelinePanel.TimelinePanel.instance({forceNew: null, isNode: true});\n  },\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'timeline.show-history',\n  async loadActionDelegate() {\n    const Timeline = await loadTimelineModule();\n    return new Timeline.TimelinePanel.ActionDelegate();\n  },\n  category: UI.ActionRegistration.ActionCategory.PERFORMANCE,\n  title: i18nLazyString(UIStrings.showRecentTimelineSessions),\n  contextTypes() {\n    return maybeRetrieveTimelineContextTypes(Timeline => [Timeline.TimelinePanel.TimelinePanel]);\n  },\n  bindings: [\n    {\n      platform: UI.ActionRegistration.Platforms.WindowsLinux,\n      shortcut: 'Ctrl+H',\n    },\n    {\n      platform: UI.ActionRegistration.Platforms.Mac,\n      shortcut: 'Meta+Y',\n    },\n  ],\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'timeline.toggle-recording',\n  category: UI.ActionRegistration.ActionCategory.PERFORMANCE,\n  iconClass: UI.ActionRegistration.IconClass.START_RECORDING,\n  toggleable: true,\n  toggledIconClass: UI.ActionRegistration.IconClass.STOP_RECORDING,\n  toggleWithRedColor: true,\n  contextTypes() {\n    return maybeRetrieveTimelineContextTypes(Timeline => [Timeline.TimelinePanel.TimelinePanel]);\n  },\n  async loadActionDelegate() {\n    const Timeline = await loadTimelineModule();\n    return new Timeline.TimelinePanel.ActionDelegate();\n  },\n  options: [\n    {\n      value: true,\n      title: i18nLazyString(UIStrings.record),\n    },\n    {\n      value: false,\n      title: i18nLazyString(UIStrings.stop),\n    },\n  ],\n  bindings: [\n    {\n      platform: UI.ActionRegistration.Platforms.WindowsLinux,\n      shortcut: 'Ctrl+E',\n    },\n    {\n      platform: UI.ActionRegistration.Platforms.Mac,\n      shortcut: 'Meta+E',\n    },\n  ],\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'timeline.record-reload',\n  iconClass: UI.ActionRegistration.IconClass.REFRESH,\n  contextTypes() {\n    return maybeRetrieveTimelineContextTypes(Timeline => [Timeline.TimelinePanel.TimelinePanel]);\n  },\n  category: UI.ActionRegistration.ActionCategory.PERFORMANCE,\n  title: i18nLazyString(UIStrings.startProfilingAndReloadPage),\n  async loadActionDelegate() {\n    const Timeline = await loadTimelineModule();\n    return new Timeline.TimelinePanel.ActionDelegate();\n  },\n  bindings: [\n    {\n      platform: UI.ActionRegistration.Platforms.WindowsLinux,\n      shortcut: 'Ctrl+Shift+E',\n    },\n    {\n      platform: UI.ActionRegistration.Platforms.Mac,\n      shortcut: 'Meta+Shift+E',\n    },\n  ],\n});\n"]}