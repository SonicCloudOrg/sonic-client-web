{"version":3,"file":"AdvancedApp.js","sourceRoot":"","sources":["../../../../../../front_end/panels/emulation/AdvancedApp.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAG7B,OAAO,KAAK,IAAI,MAAM,yBAAyB,CAAC;AAChD,OAAO,KAAK,EAAE,MAAM,2BAA2B,CAAC;AAChD,OAAO,KAAK,YAAY,MAAM,gDAAgD,CAAC;AAE/E,OAAO,EAAC,iBAAiB,EAAC,MAAM,wBAAwB,CAAC;AACzD,OAAO,EAAsB,wBAAwB,EAAC,MAAM,+BAA+B,CAAC;AAE5F,IAAI,WAAwB,CAAC;AAE7B,MAAM,OAAO,WAAW;IACd,eAAe,CAA8B;IAC7C,cAAc,CAAqB;IACnC,wBAAwB,CAA4B;IACpD,aAAa,CAAe;IAC5B,eAAe,CAAwB;IACvC,gBAAgB,CAAW;IAC3B,eAAe,CAAY;IAEnC;QACE,EAAE,CAAC,cAAc,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC,gBAAgB,+EACR,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,CAAC;IACpF,CAAC;IAED;;OAEG;IACH,MAAM,CAAC,QAAQ;QACb,IAAI,CAAC,WAAW,EAAE,CAAC;YACjB,WAAW,GAAG,IAAI,WAAW,EAAE,CAAC;QAClC,CAAC;QACD,OAAO,WAAW,CAAC;IACrB,CAAC;IAED,SAAS,CAAC,QAAkB;QAC1B,MAAM,QAAQ,GAAG,IAAI,EAAE,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;QAE5C,IAAI,CAAC,eAAe;YAChB,IAAI,EAAE,CAAC,WAAW,CAAC,WAAW,CAAC,KAAK,EAAE,IAAI,EAAE,iCAAiC,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;QACnG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QAC5C,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,EAAE,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC,CAAC;QACjF,IAAI,CAAC,eAAe,CAAC,sBAAsB,CAAC,EAAE,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC,CAAC;QACvF,EAAE,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC,aAAa,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QAE9E,IAAI,CAAC,wBAAwB,GAAG,wBAAwB,CAAC,QAAQ,EAAE,CAAC;QACpE,IAAI,CAAC,wBAAwB,CAAC,gBAAgB,+BAAgB,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC;QAC9G,IAAI,CAAC,cAAc;YACf,iBAAiB,CAAC,QAAQ,CAAC,EAAC,wBAAwB,EAAE,IAAI,CAAC,wBAAwB,EAAE,QAAQ,EAAE,KAAK,EAAC,CAAC,CAAC;QAE3G,EAAE,CAAC,cAAc,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC,gBAAgB,+EACR,IAAI,CAAC,sBAAsB,EAAE,IAAI,CAAC,CAAC;QACvF,EAAE,CAAC,cAAc,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC,gBAAgB,mEACd,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC;QAC3E,EAAE,CAAC,cAAc,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC,gBAAgB,6EACT,IAAI,CAAC,qBAAqB,EAAE,IAAI,CAAC,CAAC;QACrF,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAExB,OAAO,CAAC,SAAS,CAAC,0BAA0B,CAAC,CAAC;QAC9C,QAAQ,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;QACpC,QAAQ,CAAC,KAAK,EAAE,CAAC;QACjB,IAAI,CAAC,wBAAwB,CAAC,MAAM,EAAE,CAAC;IACzC,CAAC;IAEO,iBAAiB,CAAC,KAAyE;QACjG,IAAI,KAAK,CAAC,IAAI,CAAC,EAAE,0DAAyC,EAAE,CAAC;YAC3D,OAAO;QACT,CAAC;QAED,IAAI,IAAI,CAAC,aAAa,EAAE,CAAC;YACvB,OAAO;QACT,CAAC;QAED,MAAM,GAAG,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,mBAAmB,EAAE,kCAAkC,CAAC,CAAC;QAClG,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC;IACnD,CAAC;IAED,8BAA8B,CAAC,eAAyB;QACtD,YAAY,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,kBAAkB,CAAC,eAAe,CAAC,CAAC;QACzE,EAAE,CAAC,OAAO,CAAC,iBAAiB,CAAC,eAAe,CAAC,CAAC;QAC9C,EAAE,CAAC,OAAO,CAAC,0BAA0B,CAAE,eAAe,CAAC,IAAgB,CAAC,CAAC;QACzE,EAAE,CAAC,WAAW,CAAC,WAAW,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC;QAE3D,IAAI,CAAC,eAAe,GAAG,IAAI,EAAE,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;QAClD,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,eAAe,CAAC,CAAC;QAEvD,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;QAEvC,IAAI,CAAC,oBAAoB,EAAE,CAAC;IAC9B,CAAC;IAEO,oBAAoB;QAC1B,IAAI,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC;YACpB,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QAC1D,CAAC;aAAM,IAAI,IAAI,CAAC,eAAe,EAAE,CAAC;YAChC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;QACzD,CAAC;IACH,CAAC;IAEO,sBAAsB,CAAC,KAAyE;QACtG,IAAI,KAAK,CAAC,IAAI,CAAC,EAAE,0DAAyC,IAAI,IAAI,CAAC,eAAe,EAAE,CAAC;YACnF,mEAAmE;YACnE,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC;YACnC,IAAI,CAAC,wBAAwB,CAAC,MAAM,EAAE,CAAC;QACzC,CAAC;QAED,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;IAC/B,CAAC;IAEO,gBAAgB,CAAC,KAA0E;QACjG,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAE5B,MAAM,UAAU,GAAG,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,cAAc,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC;QAClG,IAAI,UAAU,KAAK,SAAS,EAAE,CAAC;YAC7B,MAAM,IAAI,KAAK,CAAC,qEAAqE,CAAC,CAAC;QACzF,CAAC;QACD,IAAI,UAAU,0DAAyC,EAAE,CAAC;YACxD,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAC3B,CAAC;aAAM,IAAI,IAAI,CAAC,eAAe,IAAI,KAAK,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,0DAAyC,EAAE,CAAC;YACrG,0CAA0C;YAC1C,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC;QACrC,CAAC;aAAM,CAAC;YACN,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;QACnC,CAAC;IACH,CAAC;IAEO,qBAAqB,CAAC,KAAyE;QACrG,4FAA4F;QAC5F,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE,CAAC;YAC3B,OAAO;QACT,CAAC;QACD,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,0DAAyC,EAAE,CAAC;YAChF,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACtC,CAAC;QACD,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAC9B,IAAI,CAAC,wBAAwB,CAAC,MAAM,EAAE,CAAC;IACzC,CAAC;IAEO,eAAe,CAAC,QAAqC;QAC3D,MAAM,cAAc,GAAI,IAAI,CAAC,eAAe,CAAC,cAAc,EAAkB,CAAC;QAC9E,cAAc,CAAC,KAAK,CAAC,SAAS,GAAG,QAAQ,oDAAsC,CAAC,CAAC,CAAC,iBAAiB,CAAC,CAAC;YACjG,QAAQ,kDAAqC,CAA+B,CAAC,CAAC,kBAAkB,CAAC,CAAC;gBACpB,EAAE,CAAC;QACrF,IAAI,CAAC,eAAe,CAAC,WAAW,CAC5B,QAAQ,oDAAsC,IAAI,QAAQ,kDAAqC,CAAC,CAAC;QACrG,IAAI,CAAC,eAAe,CAAC,kBAAkB,CACnC,QAAQ,oDAAsC,IAAI,QAAQ,sDAAuC,CAAC,CAAC;QACvG,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,IAAI,CAAC,eAAe,CAAC,cAAc,EAAE,EAAE,IAAI,CAAC,CAAC;QAChF,IAAI,CAAC,eAAe,CAAC,aAAa,CAC9B,EAAE,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC,iBAAiB,EAAE,EAAE,QAAQ,sDAAuC,CAAC,CAAC;QACpH,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC;IAClC,CAAC;IAEO,iBAAiB;QACvB,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,IAAI,CAAC,eAAe,CAAC,cAAc,EAAE,EAAE,KAAK,CAAC,CAAC;QACjF,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,EAAE,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC,iBAAiB,EAAE,EAAE,KAAK,CAAC,CAAC;QACzG,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC;IAClC,CAAC;IAEO,QAAQ;QACd,OAAO,EAAE,CAAC,cAAc,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,0DAAyC,CAAC;IACzG,CAAC;IAEO,wBAAwB,CAAC,KAAkD;QACjF,IAAI,IAAI,CAAC,gBAAgB,EAAE,CAAC;YAC1B,OAAO;QACT,CAAC;QACD,MAAM,MAAM,GAAG,IAAI,CAAC,wBAAwB,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;QAC9D,IAAI,CAAC,MAAM,CAAC,UAAU,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC;YAC9C,OAAO;QACT,CAAC;QACD,IAAI,CAAC,IAAI,CAAC,wBAAwB,CAAC,SAAS,EAAE,EAAE,CAAC;YAC/C,OAAO;QACT,CAAC;QACD,MAAM,MAAM,GAAG,KAAK,CAAC,IAAI,CAAC;QAC1B,OAAO,CAAC,SAAS,CAAC,oCAAoC,CAAC,CAAC;QACxD,IAAI,CAAC,qBAAqB,CAAC,6BAA6B,CAAC,sBAAsB,CAAC,MAAM,CAAC,CAAC;IAC1F,CAAC;CACF;AAED,0CAA0C;AAC1C,mCAAmC;AACnC,UAAU,CAAC,SAAS,GAAG,UAAU,CAAC,SAAS,IAAI,EAAE,CAAC;AAClD,mCAAmC;AACnC,UAAU,CAAC,SAAS,CAAC,WAAW,GAAG,WAAW,CAAC;AAE/C,IAAI,2BAAgD,CAAC;AAErD,MAAM,OAAO,mBAAmB;IAC9B,MAAM,CAAC,QAAQ,CAAC,OAEZ,EAAC,QAAQ,EAAE,IAAI,EAAC;QAClB,MAAM,EAAC,QAAQ,EAAC,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,2BAA2B,IAAI,QAAQ,EAAE,CAAC;YAC7C,2BAA2B,GAAG,IAAI,mBAAmB,EAAE,CAAC;QAC1D,CAAC;QAED,OAAO,2BAA2B,CAAC;IACrC,CAAC;IAED,SAAS;QACP,OAAO,WAAW,CAAC,QAAQ,EAAE,CAAC;IAChC,CAAC;CACF","sourcesContent":["// Copyright 2014 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as ThemeSupport from '../../ui/legacy/theme_support/theme_support.js';\n\nimport {DeviceModeWrapper} from './DeviceModeWrapper.js';\nimport {type Bounds, Events, InspectedPagePlaceholder} from './InspectedPagePlaceholder.js';\n\nlet appInstance: AdvancedApp;\n\nexport class AdvancedApp implements Common.App.App {\n  private rootSplitWidget!: UI.SplitWidget.SplitWidget;\n  private deviceModeView!: DeviceModeWrapper;\n  private inspectedPagePlaceholder!: InspectedPagePlaceholder;\n  private toolboxWindow?: Window|null;\n  private toolboxRootView?: UI.RootView.RootView;\n  private changingDockSide?: boolean;\n  private toolboxDocument?: Document;\n\n  constructor() {\n    UI.DockController.DockController.instance().addEventListener(\n        UI.DockController.Events.BeforeDockSideChanged, this.openToolboxWindow, this);\n  }\n\n  /**\n   * Note: it's used by toolbox.ts without real type checks.\n   */\n  static instance(): AdvancedApp {\n    if (!appInstance) {\n      appInstance = new AdvancedApp();\n    }\n    return appInstance;\n  }\n\n  presentUI(document: Document): void {\n    const rootView = new UI.RootView.RootView();\n\n    this.rootSplitWidget =\n        new UI.SplitWidget.SplitWidget(false, true, 'inspector-view.split-view-state', 555, 300, true);\n    this.rootSplitWidget.show(rootView.element);\n    this.rootSplitWidget.setSidebarWidget(UI.InspectorView.InspectorView.instance());\n    this.rootSplitWidget.setDefaultFocusedChild(UI.InspectorView.InspectorView.instance());\n    UI.InspectorView.InspectorView.instance().setOwnerSplit(this.rootSplitWidget);\n\n    this.inspectedPagePlaceholder = InspectedPagePlaceholder.instance();\n    this.inspectedPagePlaceholder.addEventListener(Events.Update, this.onSetInspectedPageBounds.bind(this), this);\n    this.deviceModeView =\n        DeviceModeWrapper.instance({inspectedPagePlaceholder: this.inspectedPagePlaceholder, forceNew: false});\n\n    UI.DockController.DockController.instance().addEventListener(\n        UI.DockController.Events.BeforeDockSideChanged, this.onBeforeDockSideChange, this);\n    UI.DockController.DockController.instance().addEventListener(\n        UI.DockController.Events.DockSideChanged, this.onDockSideChange, this);\n    UI.DockController.DockController.instance().addEventListener(\n        UI.DockController.Events.AfterDockSideChanged, this.onAfterDockSideChange, this);\n    this.onDockSideChange();\n\n    console.timeStamp('AdvancedApp.attachToBody');\n    rootView.attachToDocument(document);\n    rootView.focus();\n    this.inspectedPagePlaceholder.update();\n  }\n\n  private openToolboxWindow(event: Common.EventTarget.EventTargetEvent<UI.DockController.ChangeEvent>): void {\n    if (event.data.to !== UI.DockController.DockState.UNDOCKED) {\n      return;\n    }\n\n    if (this.toolboxWindow) {\n      return;\n    }\n\n    const url = window.location.href.replace('devtools_app.html', 'device_mode_emulation_frame.html');\n    this.toolboxWindow = window.open(url, undefined);\n  }\n\n  deviceModeEmulationFrameLoaded(toolboxDocument: Document): void {\n    ThemeSupport.ThemeSupport.instance().addDocumentToTheme(toolboxDocument);\n    UI.UIUtils.initializeUIUtils(toolboxDocument);\n    UI.UIUtils.installComponentRootStyles((toolboxDocument.body as Element));\n    UI.ContextMenu.ContextMenu.installHandler(toolboxDocument);\n\n    this.toolboxRootView = new UI.RootView.RootView();\n    this.toolboxRootView.attachToDocument(toolboxDocument);\n\n    this.toolboxDocument = toolboxDocument;\n\n    this.updateDeviceModeView();\n  }\n\n  private updateDeviceModeView(): void {\n    if (this.isDocked()) {\n      this.rootSplitWidget.setMainWidget(this.deviceModeView);\n    } else if (this.toolboxRootView) {\n      this.deviceModeView.show(this.toolboxRootView.element);\n    }\n  }\n\n  private onBeforeDockSideChange(event: Common.EventTarget.EventTargetEvent<UI.DockController.ChangeEvent>): void {\n    if (event.data.to === UI.DockController.DockState.UNDOCKED && this.toolboxRootView) {\n      // Hide inspectorView and force layout to mimic the undocked state.\n      this.rootSplitWidget.hideSidebar();\n      this.inspectedPagePlaceholder.update();\n    }\n\n    this.changingDockSide = true;\n  }\n\n  private onDockSideChange(event?: Common.EventTarget.EventTargetEvent<UI.DockController.ChangeEvent>): void {\n    this.updateDeviceModeView();\n\n    const toDockSide = event ? event.data.to : UI.DockController.DockController.instance().dockSide();\n    if (toDockSide === undefined) {\n      throw new Error('Got onDockSideChange event with unexpected undefined for dockSide()');\n    }\n    if (toDockSide === UI.DockController.DockState.UNDOCKED) {\n      this.updateForUndocked();\n    } else if (this.toolboxRootView && event && event.data.from === UI.DockController.DockState.UNDOCKED) {\n      // Don't update yet for smooth transition.\n      this.rootSplitWidget.hideSidebar();\n    } else {\n      this.updateForDocked(toDockSide);\n    }\n  }\n\n  private onAfterDockSideChange(event: Common.EventTarget.EventTargetEvent<UI.DockController.ChangeEvent>): void {\n    // We may get here on the first dock side change while loading without BeforeDockSideChange.\n    if (!this.changingDockSide) {\n      return;\n    }\n    if (event.data.from && event.data.from === UI.DockController.DockState.UNDOCKED) {\n      this.updateForDocked(event.data.to);\n    }\n    this.changingDockSide = false;\n    this.inspectedPagePlaceholder.update();\n  }\n\n  private updateForDocked(dockSide: UI.DockController.DockState): void {\n    const resizerElement = (this.rootSplitWidget.resizerElement() as HTMLElement);\n    resizerElement.style.transform = dockSide === UI.DockController.DockState.RIGHT ? 'translateX(2px)' :\n        dockSide === UI.DockController.DockState.LEFT                               ? 'translateX(-2px)' :\n                                                                                      '';\n    this.rootSplitWidget.setVertical(\n        dockSide === UI.DockController.DockState.RIGHT || dockSide === UI.DockController.DockState.LEFT);\n    this.rootSplitWidget.setSecondIsSidebar(\n        dockSide === UI.DockController.DockState.RIGHT || dockSide === UI.DockController.DockState.BOTTOM);\n    this.rootSplitWidget.toggleResizer(this.rootSplitWidget.resizerElement(), true);\n    this.rootSplitWidget.toggleResizer(\n        UI.InspectorView.InspectorView.instance().topResizerElement(), dockSide === UI.DockController.DockState.BOTTOM);\n    this.rootSplitWidget.showBoth();\n  }\n\n  private updateForUndocked(): void {\n    this.rootSplitWidget.toggleResizer(this.rootSplitWidget.resizerElement(), false);\n    this.rootSplitWidget.toggleResizer(UI.InspectorView.InspectorView.instance().topResizerElement(), false);\n    this.rootSplitWidget.hideMain();\n  }\n\n  private isDocked(): boolean {\n    return UI.DockController.DockController.instance().dockSide() !== UI.DockController.DockState.UNDOCKED;\n  }\n\n  private onSetInspectedPageBounds(event: Common.EventTarget.EventTargetEvent<Bounds>): void {\n    if (this.changingDockSide) {\n      return;\n    }\n    const window = this.inspectedPagePlaceholder.element.window();\n    if (!window.innerWidth || !window.innerHeight) {\n      return;\n    }\n    if (!this.inspectedPagePlaceholder.isShowing()) {\n      return;\n    }\n    const bounds = event.data;\n    console.timeStamp('AdvancedApp.setInspectedPageBounds');\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.setInspectedPageBounds(bounds);\n  }\n}\n\n// Export required for usage in toolbox.ts\n// @ts-ignore Exported for Tests.js\nglobalThis.Emulation = globalThis.Emulation || {};\n// @ts-ignore Exported for Tests.js\nglobalThis.Emulation.AdvancedApp = AdvancedApp;\n\nlet advancedAppProviderInstance: AdvancedAppProvider;\n\nexport class AdvancedAppProvider implements Common.AppProvider.AppProvider {\n  static instance(opts: {\n    forceNew: boolean|null,\n  } = {forceNew: null}): AdvancedAppProvider {\n    const {forceNew} = opts;\n    if (!advancedAppProviderInstance || forceNew) {\n      advancedAppProviderInstance = new AdvancedAppProvider();\n    }\n\n    return advancedAppProviderInstance;\n  }\n\n  createApp(): Common.App.App {\n    return AdvancedApp.instance();\n  }\n}\n"]}