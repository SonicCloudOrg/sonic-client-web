{"version":3,"file":"TickingFlameChartHelpers.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/media/TickingFlameChartHelpers.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Media from './media.js';\n\nfunction assertParameters(\n    bounds: Media.TickingFlameChartHelpers.Bounds, low: number, high: number, min: number, max: number, range: number) {\n  assert.closeTo(bounds.low, low, 0.01);\n  assert.closeTo(bounds.high, high, 0.01);\n  assert.closeTo(bounds.min, min, 0.01);\n  assert.closeTo(bounds.max, max, 0.01);\n  assert.closeTo(bounds.range, range, 0.01);\n}\n\ndescribe('TickingFlameChartTests', () => {\n  it('checks that the formatter works correctly', () => {\n    assert.strictEqual(Media.TickingFlameChartHelpers.formatMillisecondsToSeconds(901, 0), '1 s');\n    assert.strictEqual(Media.TickingFlameChartHelpers.formatMillisecondsToSeconds(901, 1), '0.9 s');\n    assert.strictEqual(Media.TickingFlameChartHelpers.formatMillisecondsToSeconds(901, 2), '0.9 s');\n    assert.strictEqual(Media.TickingFlameChartHelpers.formatMillisecondsToSeconds(901, 3), '0.901 s');\n\n    assert.strictEqual(Media.TickingFlameChartHelpers.formatMillisecondsToSeconds(89129, 2), '89.13 s');\n  });\n\n  it('checks that the bounds are correct', () => {\n    const bounds = new Media.TickingFlameChartHelpers.Bounds(0, 100, 1000, 100);\n    assertParameters(bounds, 0, 100, 0, 100, 100);\n  });\n\n  it('checks zoom toggle works correctly', () => {\n    const bounds = new Media.TickingFlameChartHelpers.Bounds(0, 1000, 1000, 100);\n    bounds.zoomOut(1, 0.5);  // does nothing, because it hasn't been zoomed yet.\n    assertParameters(bounds, 0, 1000, 0, 1000, 1000);\n\n    bounds.zoomIn(1, 0.5);  // zooms in 1 tick right in the middle\n    assertParameters(bounds, 45.45, 954.54, 0, 1000, 909.09);\n\n    bounds.zoomOut(1, 0.5);  // zooms out 1 tick right in the middle\n    assertParameters(bounds, 0, 1000, 0, 1000, 1000);\n  });\n\n  it('checks zoom different locations works correctly', () => {\n    const bounds = new Media.TickingFlameChartHelpers.Bounds(0, 1000, 1000, 100);\n    bounds.zoomOut(1, 0.5);  // does nothing, because its already at max.\n    assertParameters(bounds, 0, 1000, 0, 1000, 1000);\n\n    bounds.zoomIn(1, 0.5);  // zooms in 1 tick right in the middle\n    assertParameters(bounds, 45.45, 954.54, 0, 1000, 909.09);\n\n    bounds.zoomOut(1, 0);  // zooms out 1 tick on the left edge\n    assertParameters(bounds, 45.45, 1000, 0, 1000, 954.54);\n  });\n\n  it('checks adding to the bounds range', () => {\n    const bounds = new Media.TickingFlameChartHelpers.Bounds(0, 1000, 1000, 100);\n\n    bounds.addMax(10);  // Should push up the max because we're zoomed out.\n    assertParameters(bounds, 0, 1010, 0, 1010, 1010);\n\n    bounds.zoomIn(1, 0);  // zoom in at the beginning to move away from the live edge\n    assertParameters(bounds, 0, 918.18, 0, 1010, 918.18);\n\n    bounds.addMax(10);  // adding to max should not move the view window, only the max size.\n    assertParameters(bounds, 0, 918.18, 0, 1020, 918.18);\n\n    bounds.zoomOut(1, 0);\n    bounds.zoomOut(1, 0);  // extra zoom to make sure it's reset.\n    assertParameters(bounds, 0, 1020, 0, 1020, 1020);\n\n    bounds.zoomIn(1, 1);  // zoom in on the leading edge now\n    assertParameters(bounds, 92.72, 1020, 0, 1020, 927.28);\n\n    bounds.addMax(10);  // it won't scroll because the viewport size is less than the max scroll size\n    assertParameters(bounds, 92.72, 1020, 0, 1030, 927.28);\n\n    bounds.zoomOut(1, 1);\n    bounds.zoomOut(1, 0.5);  // extra zoom to make sure it's reset.\n    assertParameters(bounds, 0, 1030, 0, 1030, 1030);\n\n    bounds.addMax(2000);  // push bounds way up, so zoom won't push us below the threshold.\n    assertParameters(bounds, 0, 3030, 0, 3030, 3030);\n\n    bounds.zoomIn(1, 1);  // zoom in on the leading edge now\n    assertParameters(bounds, 275.45, 3030, 0, 3030, 2754.55);\n\n    bounds.addMax(10);  // the viewport range should change now.\n    assertParameters(bounds, 275.45, 3040, 0, 3040, 2764.55);\n  });\n});\n"]}