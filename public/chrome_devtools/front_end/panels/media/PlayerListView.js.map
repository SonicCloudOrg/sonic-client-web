{"version":3,"file":"PlayerListView.js","sourceRoot":"","sources":["../../../../../../front_end/panels/media/PlayerListView.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport * as IconButton from '../../ui/components/icon_button/icon_button.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport {type MainView, type TriggerDispatcher} from './MainView.js';\nimport {type PlayerEvent} from './MediaModel.js';\nimport playerListViewStyles from './playerListView.css.js';\nimport {PlayerPropertyKeys} from './PlayerPropertiesView.js';\n\nconst UIStrings = {\n  /**\n   *@description A right-click context menu entry which when clicked causes the menu entry for that player to be removed.\n   */\n  hidePlayer: 'Hide player',\n  /**\n   *@description A right-click context menu entry which should keep the element selected, while hiding all other entries.\n   */\n  hideAllOthers: 'Hide all others',\n  /**\n   *@description Context menu entry which downloads the json dump when clicked\n   */\n  savePlayerInfo: 'Save player info',\n  /**\n   *@description Side-panel entry title text for the players section.\n   */\n  players: 'Players',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/media/PlayerListView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport interface PlayerStatus {\n  playerTitle: string;\n  playerID: string;\n  exists: boolean;\n  playing: boolean;\n  titleEdited: boolean;\n}\nexport interface PlayerStatusMapElement {\n  playerStatus: PlayerStatus;\n  playerTitleElement: HTMLElement|null;\n}\n\nexport class PlayerListView extends UI.Widget.VBox implements TriggerDispatcher {\n  private readonly playerEntryFragments: Map<string, UI.Fragment.Fragment>;\n  private readonly playerEntriesWithHostnameFrameTitle: Set<string>;\n  private readonly mainContainer: MainView;\n  private currentlySelectedEntry: Element|null;\n\n  constructor(mainContainer: MainView) {\n    super(true);\n\n    this.playerEntryFragments = new Map();\n    this.playerEntriesWithHostnameFrameTitle = new Set();\n\n    // Container where new panels can be added based on clicks.\n    this.mainContainer = mainContainer;\n\n    this.currentlySelectedEntry = null;\n    this.contentElement.createChild('div', 'player-entry-header').textContent = i18nString(UIStrings.players);\n  }\n\n  private createPlayerListEntry(playerID: string): UI.Fragment.Fragment {\n    const entry = UI.Fragment.Fragment.build`\n    <div class=\"player-entry-row hbox\">\n    <div class=\"player-entry-status-icon vbox\">\n    <div $=\"icon\" class=\"player-entry-status-icon-centering\"></div>\n    </div>\n    <div $=\"frame-title\" class=\"player-entry-frame-title\">FrameTitle</div>\n    <div $=\"player-title\" class=\"player-entry-player-title\">PlayerTitle</div>\n    </div>\n    `;\n    const element = entry.element();\n    element.setAttribute('jslog', `${VisualLogging.item('player').track({click: true})}`);\n    element.addEventListener('click', this.selectPlayer.bind(this, playerID, element));\n    element.addEventListener('contextmenu', this.rightClickPlayer.bind(this, playerID));\n\n    entry.$('icon').appendChild(IconButton.Icon.create('pause', 'media-player'));\n    return entry;\n  }\n\n  private selectPlayer(playerID: string, element: Element): void {\n    this.mainContainer.renderMainPanel(playerID);\n    if (this.currentlySelectedEntry !== null) {\n      this.currentlySelectedEntry.classList.remove('selected');\n      this.currentlySelectedEntry.classList.remove('force-white-icons');\n    }\n    element.classList.add('selected');\n    element.classList.add('force-white-icons');\n    this.currentlySelectedEntry = element;\n  }\n\n  private rightClickPlayer(playerID: string, event: Event): boolean {\n    const contextMenu = new UI.ContextMenu.ContextMenu(event);\n    contextMenu.headerSection().appendItem(\n        i18nString(UIStrings.hidePlayer), this.mainContainer.markPlayerForDeletion.bind(this.mainContainer, playerID),\n        {jslogContext: 'hide-player'});\n    contextMenu.headerSection().appendItem(\n        i18nString(UIStrings.hideAllOthers),\n        this.mainContainer.markOtherPlayersForDeletion.bind(this.mainContainer, playerID),\n        {jslogContext: 'hide-all-others'});\n    contextMenu.headerSection().appendItem(\n        i18nString(UIStrings.savePlayerInfo), this.mainContainer.exportPlayerData.bind(this.mainContainer, playerID),\n        {jslogContext: 'save-player-info'});\n    void contextMenu.show();\n    return true;\n  }\n\n  private setMediaElementFrameTitle(playerID: string, frameTitle: string, isHostname: boolean): void {\n    // Only remove the title from the set if we arent setting a hostname title.\n    // Otherwise, if it has a non-hostname title, and the requested new title is\n    // a hostname, just drop it.\n    if (this.playerEntriesWithHostnameFrameTitle.has(playerID)) {\n      if (!isHostname) {\n        this.playerEntriesWithHostnameFrameTitle.delete(playerID);\n      }\n    } else if (isHostname) {\n      return;\n    }\n\n    if (!this.playerEntryFragments.has(playerID)) {\n      return;\n    }\n    const fragment = this.playerEntryFragments.get(playerID);\n    if (fragment === undefined || fragment.element() === undefined) {\n      return;\n    }\n    fragment.$('frame-title').textContent = frameTitle;\n  }\n\n  private setMediaElementPlayerTitle(playerID: string, playerTitle: string): void {\n    if (!this.playerEntryFragments.has(playerID)) {\n      return;\n    }\n    const fragment = this.playerEntryFragments.get(playerID);\n    if (fragment === undefined) {\n      return;\n    }\n    fragment.$('player-title').textContent = playerTitle;\n  }\n\n  private setMediaElementPlayerIcon(playerID: string, iconName: string): void {\n    if (!this.playerEntryFragments.has(playerID)) {\n      return;\n    }\n    const fragment = this.playerEntryFragments.get(playerID);\n    if (fragment === undefined) {\n      return;\n    }\n    const icon = fragment.$('icon');\n    if (icon === undefined) {\n      return;\n    }\n    icon.textContent = '';\n    icon.appendChild(IconButton.Icon.create(iconName, 'media-player'));\n  }\n\n  private formatAndEvaluate(playerID: string, func: Function, candidate: string, min: number, max: number): void {\n    if (candidate.length <= min) {\n      return;\n    }\n    if (candidate.length >= max) {\n      candidate = candidate.substring(0, max - 3) + '...';\n    }\n    func.bind(this)(playerID, candidate);\n  }\n\n  addMediaElementItem(playerID: string): void {\n    const sidebarEntry = this.createPlayerListEntry(playerID);\n    this.contentElement.appendChild(sidebarEntry.element());\n    this.playerEntryFragments.set(playerID, sidebarEntry);\n    this.playerEntriesWithHostnameFrameTitle.add(playerID);\n  }\n\n  deletePlayer(playerID: string): void {\n    if (!this.playerEntryFragments.has(playerID)) {\n      return;\n    }\n    const fragment = this.playerEntryFragments.get(playerID);\n    if (fragment === undefined || fragment.element() === undefined) {\n      return;\n    }\n    this.contentElement.removeChild(fragment.element());\n    this.playerEntryFragments.delete(playerID);\n  }\n\n  onEvent(playerID: string, event: PlayerEvent): void {\n    const parsed = JSON.parse(event.value);\n    const eventType = parsed.event;\n\n    // Load events provide the actual underlying URL for the video, which makes\n    // a great way to identify a specific video within a page that potentially\n    // may have many videos. MSE videos have a special blob:http(s) protocol\n    // that we'd like to keep mind of, so we do prepend blob:\n    if (eventType === 'kLoad') {\n      const url = parsed.url as string;\n      const videoName = url.substring(url.lastIndexOf('/') + 1);\n      this.formatAndEvaluate(playerID, this.setMediaElementPlayerTitle, videoName, 1, 20);\n      return;\n    }\n\n    if (eventType === 'kPlay') {\n      this.setMediaElementPlayerIcon(playerID, 'play');\n      return;\n    }\n\n    if (eventType === 'kPause' || eventType === 'kEnded') {\n      this.setMediaElementPlayerIcon(playerID, 'pause');\n      return;\n    }\n\n    if (eventType === 'kWebMediaPlayerDestroyed') {\n      this.setMediaElementPlayerIcon(playerID, 'cross');\n      return;\n    }\n  }\n\n  onProperty(playerID: string, property: Protocol.Media.PlayerProperty): void {\n    // FrameUrl is always present, and we can generate a basic frame title from\n    // it by grabbing the hostname. It's not possible to generate a \"good\" player\n    // title from the FrameUrl though, since the page location itself might not\n    // have any relevance to the video being played, and would be shared by all\n    // videos on the page.\n    if (property.name === PlayerPropertyKeys.FrameUrl) {\n      const frameTitle = new URL(property.value).hostname;\n      this.formatAndEvaluate(playerID, this.setMediaElementFrameTitle, frameTitle, 1, 20);\n      return;\n    }\n\n    // On the other hand, the page may set a title, which usually makes for a\n    // better frame title than a hostname. Unfortunately, its only \"usually\",\n    // since the site is free to set the title to _anything_, it might just be\n    // junk, or it might be super long. If it's empty, or 1 character, It's\n    // preferable to just drop it. Titles longer than 20 will have the first\n    // 17 characters kept and an elipsis appended.\n    if (property.name === PlayerPropertyKeys.FrameTitle && property.value) {\n      this.formatAndEvaluate(playerID, this.setMediaElementFrameTitle, property.value, 1, 20);\n      return;\n    }\n  }\n\n  onError(_playerID: string, _error: Protocol.Media.PlayerError): void {\n    // TODO(tmathmeyer) show an error icon next to the player name\n  }\n\n  onMessage(_playerID: string, _message: Protocol.Media.PlayerMessage): void {\n    // TODO(tmathmeyer) show a message count number next to the player name.\n  }\n\n  override wasShown(): void {\n    super.wasShown();\n    this.registerCSSFiles([playerListViewStyles]);\n  }\n}\n"]}