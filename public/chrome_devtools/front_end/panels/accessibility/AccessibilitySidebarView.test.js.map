{"version":3,"file":"AccessibilitySidebarView.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/accessibility/AccessibilitySidebarView.test.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,GAAG,MAAM,uBAAuB,CAAC;AAE7C,OAAO,EAAC,YAAY,EAAE,gBAAgB,EAAC,MAAM,qCAAqC,CAAC;AACnF,OAAO,EAAC,0BAA0B,EAAE,gCAAgC,EAAC,MAAM,iCAAiC,CAAC;AAE7G,OAAO,KAAK,aAAa,MAAM,oBAAoB,CAAC;AAEpD,MAAM,OAAO,GAAG,CAAwB,CAAC;AAEzC,0BAA0B,CAAC,0BAA0B,EAAE,GAAG,EAAE;IAC1D,IAAI,MAAyB,CAAC;IAC9B,IAAI,IAAqE,CAAC;IAE1E,UAAU,CAAC,GAAG,EAAE;QACd,gBAAgB,EAAE,CAAC;QACnB,MAAM,GAAG,YAAY,EAAE,CAAC;QACxB,gCAAgC,CAAC,iBAAiB,EAAE,GAAG,EAAE,CAAC,CAAC,EAAC,IAAI,EAAE,EAAC,MAAM,EAAE,OAAO,EAAC,EAAC,CAAC,CAAC,CAAC;QACvF,gCAAgC,CAAC,+BAA+B,EAAE,GAAG,EAAE,CAAC,CAAC,EAAC,OAAO,EAAE,EAAE,EAAC,CAAC,CAAC,CAAC;IAC3F,CAAC,CAAC,CAAC;IAEH,SAAS,CAAC,GAAG,EAAE;QACb,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC,CAAC,CAAC;IAEH,8DAA8D;IAC9D,MAAM,gBAAgB,GAAG,CAAC,KAAU,EAAE,OAAgB,EAAE,EAAE,CAAC,KAAK,IAAI,EAAE;QACpE,GAAG,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;QACnF,MAAM,QAAQ,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;QACrD,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QACxB,MAAM,kBAAkB,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,CAAC;QACnF,MAAM,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC;QAClC,MAAM,oBAAoB,GAAG,KAAK,CAAC,IAAI,CAAC,kBAAkB,EAAE,sBAAsB,CAAC,CAAC;QACpF,oBAAoB,CAAC,QAAQ,EAAE,CAAC;QAChC,MAAM,IAAI,GAAG,IAAI,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QAEhD,IAAI,GAAG,aAAa,CAAC,wBAAwB,CAAC,wBAAwB,CAAC,QAAQ,CAC3E,EAAC,QAAQ,EAAE,IAAI,EAAE,iBAAiB,EAAE,CAAC,EAAC,CAAC,CAAC;QAC5C,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QACzB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACnB,MAAM,IAAI,OAAO,CAAO,OAAO,CAAC,EAAE,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC;QAE3D,oBAAoB,CAAC,YAAY,EAAE,CAAC;QACpC,QAAQ,CAAC,wBAAwB,CAAC,KAAK,EAAE,EAAC,IAAI,EAAC,CAAC,CAAC;QACjD,MAAM,IAAI,OAAO,CAAO,OAAO,CAAC,EAAE,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC;QAC3D,MAAM,CAAC,WAAW,CAAC,oBAAoB,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;IAC3D,CAAC,CAAC;IAEF,EAAE,CAAC,iDAAiD,EAAE,gBAAgB,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC,CAAC;IAChH,EAAE,CAAC,6DAA6D,EAC7D,gBAAgB,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC,CAAC;IAC9D,EAAE,CAAC,gDAAgD,EAAE,gBAAgB,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC,CAAC;IAC9G,EAAE,CAAC,4DAA4D,EAC5D,gBAAgB,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC,CAAC;IAC7D,EAAE,CAAC,uDAAuD,EACvD,gBAAgB,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,qBAAqB,EAAE,IAAI,CAAC,CAAC,CAAC;IACtE,EAAE,CAAC,mEAAmE,EACnE,gBAAgB,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,qBAAqB,EAAE,KAAK,CAAC,CAAC,CAAC;IACvE,EAAE,CAAC,uDAAuD,EACvD,gBAAgB,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,qBAAqB,EAAE,IAAI,CAAC,CAAC,CAAC;IACtE,EAAE,CAAC,mEAAmE,EACnE,gBAAgB,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,qBAAqB,EAAE,KAAK,CAAC,CAAC,CAAC;AACzE,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport {createTarget, stubNoopSettings} from '../../testing/EnvironmentHelpers.js';\nimport {describeWithMockConnection, setMockConnectionResponseHandler} from '../../testing/MockConnection.js';\n\nimport * as Accessibility from './accessibility.js';\n\nconst NODE_ID = 1 as Protocol.DOM.NodeId;\n\ndescribeWithMockConnection('AccessibilitySidebarView', () => {\n  let target: SDK.Target.Target;\n  let view: Accessibility.AccessibilitySidebarView.AccessibilitySidebarView;\n\n  beforeEach(() => {\n    stubNoopSettings();\n    target = createTarget();\n    setMockConnectionResponseHandler('DOM.getDocument', () => ({root: {nodeId: NODE_ID}}));\n    setMockConnectionResponseHandler('DOM.getNodesForSubtreeByStyle', () => ({nodeIds: []}));\n  });\n\n  afterEach(() => {\n    view.detach();\n  });\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const updatesUiOnEvent = (event: any, inScope: boolean) => async () => {\n    SDK.TargetManager.TargetManager.instance().setScopeTarget(inScope ? target : null);\n    const domModel = target.model(SDK.DOMModel.DOMModel);\n    assert.exists(domModel);\n    const accessibilityModel = target.model(SDK.AccessibilityModel.AccessibilityModel);\n    assert.exists(accessibilityModel);\n    const requestPartialAXTree = sinon.stub(accessibilityModel, 'requestPartialAXTree');\n    requestPartialAXTree.resolves();\n    const node = new SDK.DOMModel.DOMNode(domModel);\n\n    view = Accessibility.AccessibilitySidebarView.AccessibilitySidebarView.instance(\n        {forceNew: true, throttlingTimeout: 0});\n    view.markAsRoot();\n    view.show(document.body);\n    view.setNode(node);\n    await new Promise<void>(resolve => setTimeout(resolve, 0));\n\n    requestPartialAXTree.resetHistory();\n    domModel.dispatchEventToListeners(event, {node});\n    await new Promise<void>(resolve => setTimeout(resolve, 0));\n    assert.strictEqual(requestPartialAXTree.called, inScope);\n  };\n\n  it('updates UI on in scope attribute modified event', updatesUiOnEvent(SDK.DOMModel.Events.AttrModified, true));\n  it('does not update UI on out of scope attribute modified event',\n     updatesUiOnEvent(SDK.DOMModel.Events.AttrModified, false));\n  it('updates UI on in scope attribute removed event', updatesUiOnEvent(SDK.DOMModel.Events.AttrRemoved, true));\n  it('does not update UI on out of scope attribute removed event',\n     updatesUiOnEvent(SDK.DOMModel.Events.AttrRemoved, false));\n  it('updates UI on in scope charachter data modified event',\n     updatesUiOnEvent(SDK.DOMModel.Events.CharacterDataModified, true));\n  it('does not update UI on out of scope charachter data modified event',\n     updatesUiOnEvent(SDK.DOMModel.Events.CharacterDataModified, false));\n  it('updates UI on in scope child node count updated event',\n     updatesUiOnEvent(SDK.DOMModel.Events.ChildNodeCountUpdated, true));\n  it('does not update UI on out of scope child node count updated event',\n     updatesUiOnEvent(SDK.DOMModel.Events.ChildNodeCountUpdated, false));\n});\n"]}