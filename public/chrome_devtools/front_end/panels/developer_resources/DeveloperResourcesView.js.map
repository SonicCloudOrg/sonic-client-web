{"version":3,"file":"DeveloperResourcesView.js","sourceRoot":"","sources":["../../../../../../front_end/panels/developer_resources/DeveloperResourcesView.ts"],"names":[],"mappings":"AAAA,gEAAgE;AAChE,yEAAyE;AACzE,6BAA6B;AAG7B,OAAO,KAAK,IAAI,MAAM,yBAAyB,CAAC;AAChD,OAAO,KAAK,QAAQ,MAAM,iCAAiC,CAAC;AAC5D,OAAO,KAAK,GAAG,MAAM,uBAAuB,CAAC;AAC7C,OAAO,KAAK,EAAE,MAAM,2BAA2B,CAAC;AAChD,OAAO,KAAK,aAAa,MAAM,2CAA2C,CAAC;AAE3E,OAAO,EAAC,0BAA0B,EAAC,MAAM,iCAAiC,CAAC;AAC3E,OAAO,4BAA4B,MAAM,iCAAiC,CAAC;AAE3E,MAAM,SAAS,GAAG;IAChB;;OAEG;IACH,YAAY,EAAE,yBAAyB;IACvC;;;OAGG;IACH,2BAA2B,EACvB,0FAA0F;IAC9F;;;;;OAKG;IACH,0BAA0B,EAAE,sBAAsB;IAClD;;;;OAIG;IACH,yBAAyB,EAAE,0CAA0C;IACrE;;;OAGG;IACH,SAAS,EAAE,kDAAkD;CAC9D,CAAC;AACF,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,sDAAsD,EAAE,SAAS,CAAC,CAAC;AAC5G,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AACtE,MAAM,OAAO,0BAA0B;IACrC,KAAK,CAAC,MAAM,CAAC,oBAAwD;QACnE,MAAM,MAAM,GAAG,GAAG,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,QAAQ,EAAE,CAAC;QACpE,MAAM,QAAQ,GAAG,MAAM,CAAC,kBAAkB,EAAE,CAAC,GAAG,CAAC,oBAAoB,CAAC,GAAG,CAAC,CAAC;QAC3E,IAAI,QAAQ,EAAE,CAAC;YACb,MAAM,EAAE,CAAC,WAAW,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,qBAAqB,CAAC,CAAC;YAC5E,MAAM,sBAAsB,GACxB,MAAM,EAAE,CAAC,WAAW,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC,MAAM,EAA4B,CAAC;YAC/G,OAAO,sBAAsB,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QACjD,CAAC;IACH,CAAC;CACF;AAED,MAAM,OAAO,sBAAuB,SAAQ,EAAE,CAAC,eAAe,CAAC,eAAe;IACpE,gBAAgB,CAAc;IACrB,WAAW,CAA0B;IACrC,sBAAsB,CAAc;IAC7C,QAAQ,CAA6B;IAC5B,oBAAoB,CAAc;IAC3C,oBAAoB,CAAc;IACzB,MAAM,CAA4C;IAEnE;QACE,KAAK,CAAC,IAAI,CAAC,CAAC;QAEZ,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,OAAO,EAAE,GAAG,aAAa,CAAC,KAAK,CAAC,qBAAqB,CAAC,CAAC,KAAK,CAAC,EAAC,MAAM,EAAE,IAAI,EAAC,CAAC,EAAE,CAAC,CAAC;QAE1G,MAAM,gBAAgB,GAAG,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,KAAK,EAAE,2CAA2C,CAAC,CAAC;QAC7G,gBAAgB,CAAC,YAAY,CAAC,OAAO,EAAE,GAAG,aAAa,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;QACrE,MAAM,OAAO,GAAG,IAAI,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,iCAAiC,EAAE,gBAAgB,CAAC,CAAC;QAE5F,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAC7B,IAAI,CAAC,WAAW,GAAG,IAAI,EAAE,CAAC,OAAO,CAAC,aAAa,CAAC,UAAU,CAAC,SAAS,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC;QACvF,IAAI,CAAC,WAAW,CAAC,gBAAgB,gEAA4C,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;QACzG,OAAO,CAAC,iBAAiB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAE5C,MAAM,iBAAiB,GAAG,GAAG,CAAC,kBAAkB,CAAC,2BAA2B,EAAE,CAAC;QAC/E,MAAM,yBAAyB,GAAG,IAAI,EAAE,CAAC,OAAO,CAAC,sBAAsB,CACnE,iBAAiB,EAAE,UAAU,CAAC,SAAS,CAAC,2BAA2B,CAAC,EACpE,UAAU,CAAC,SAAS,CAAC,0BAA0B,CAAC,CAAC,CAAC;QACtD,OAAO,CAAC,iBAAiB,CAAC,yBAAyB,CAAC,CAAC;QAErD,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,KAAK,EAAE,iCAAiC,CAAC,CAAC;QACxG,IAAI,CAAC,QAAQ,GAAG,IAAI,0BAA0B,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAC1E,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;QAChD,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,KAAK,EAAE,yCAAyC,CAAC,CAAC;QAC9G,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,oBAAoB,CAAC,WAAW,CAAC,KAAK,EAAE,iCAAiC,CAAC,CAAC;QAE5G,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,QAAQ,EAAE,CAAC;QACnE,IAAI,CAAC,MAAM,CAAC,gBAAgB,sDAAuC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QACtF,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IAEQ,KAAK,CAAC,QAAQ;QACrB,MAAM,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC;QAClD,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;QACtB,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,wBAAwB,EAAE,CAAC,MAAM,EAAE,CAAC,CAAC;QACtE,IAAI,YAAY,EAAE,CAAC;YACjB,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;QACrC,CAAC;QACD,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED,KAAK,CAAC,MAAM,CAAC,QAA6C;QACxD,MAAM,IAAI,CAAC,iBAAiB,CAAC;QAC7B,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;IACjC,CAAC;IAED,KAAK,CAAC,YAAY;QAChB,MAAM,IAAI,CAAC,iBAAiB,CAAC;QAC7B,OAAO,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC;IACtC,CAAC;IAEO,WAAW;QACjB,MAAM,EAAC,OAAO,EAAE,SAAS,EAAC,GAAG,IAAI,CAAC,MAAM,CAAC,0BAA0B,EAAE,CAAC;QACtE,IAAI,OAAO,GAAG,CAAC,EAAE,CAAC;YAChB,IAAI,CAAC,oBAAoB,CAAC,WAAW;gBACjC,UAAU,CAAC,SAAS,CAAC,yBAAyB,EAAE,EAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,OAAO,EAAC,CAAC,CAAC;QACtF,CAAC;aAAM,CAAC;YACN,IAAI,CAAC,oBAAoB,CAAC,WAAW,GAAG,UAAU,CAAC,SAAS,CAAC,SAAS,EAAE,EAAC,CAAC,EAAE,SAAS,EAAC,CAAC,CAAC;QAC1F,CAAC;IACH,CAAC;IAEO,SAAS,CAAC,IAAyC;QACzD,OAAO,CAAC,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;YACjE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,IAAI,EAAE,CAAC,CAAC;IAC1D,CAAC;IAEO,eAAe;QACrB,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;YACnB,OAAO;QACT,CAAC;QAED,MAAM,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;QACtC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,eAAe,CAAC,0BAA0B,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QACrG,IAAI,CAAC,QAAQ,CAAC,wBAAwB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAC9D,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAEQ,QAAQ;QACf,KAAK,CAAC,QAAQ,EAAE,CAAC;QACjB,IAAI,CAAC,gBAAgB,CAAC,CAAC,4BAA4B,CAAC,CAAC,CAAC;IACxD,CAAC;CACF","sourcesContent":["// Copyright (c) 2016 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport {DeveloperResourcesListView} from './DeveloperResourcesListView.js';\nimport developerResourcesViewStyles from './developerResourcesView.css.js';\n\nconst UIStrings = {\n  /**\n   *@description Placeholder for a search field in a toolbar\n   */\n  filterByText: 'Filter by URL and error',\n  /**\n   * @description Tooltip for a checkbox in the toolbar of the developer resources view. The\n   * inspected target is the webpage that DevTools is debugging/inspecting/attached to.\n   */\n  loadHttpsDeveloperResources:\n      'Load `HTTP(S)` developer resources through the website you inspect, not through DevTools',\n  /**\n   * @description Text for a checkbox in the toolbar of the developer resources view. The target is\n   * the webpage that DevTools is debugging/inspecting/attached to. This setting makes it so\n   * developer resources are requested from the webpage itself, and not from the DevTools\n   * application.\n   */\n  enableLoadingThroughTarget: 'Load through website',\n  /**\n   *@description Text for resources load status\n   *@example {1} PH1\n   *@example {1} PH2\n   */\n  resourcesCurrentlyLoading: '{PH1} resources, {PH2} currently loading',\n  /**\n   * @description Status text that appears to tell the developer how many resources were loaded in\n   * total. Resources are files related to the webpage.\n   */\n  resources: '{n, plural, =1 {# resource} other {# resources}}',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/developer_resources/DeveloperResourcesView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class DeveloperResourcesRevealer implements Common.Revealer.Revealer<SDK.PageResourceLoader.ResourceKey> {\n  async reveal(resourceInitiatorKey: SDK.PageResourceLoader.ResourceKey): Promise<void> {\n    const loader = SDK.PageResourceLoader.PageResourceLoader.instance();\n    const resource = loader.getResourcesLoaded().get(resourceInitiatorKey.key);\n    if (resource) {\n      await UI.ViewManager.ViewManager.instance().showView('developer-resources');\n      const developerResourcesView =\n          await UI.ViewManager.ViewManager.instance().view('developer-resources').widget() as DeveloperResourcesView;\n      return developerResourcesView.select(resource);\n    }\n  }\n}\n\nexport class DeveloperResourcesView extends UI.ThrottledWidget.ThrottledWidget {\n  private textFilterRegExp: RegExp|null;\n  private readonly filterInput: UI.Toolbar.ToolbarInput;\n  private readonly coverageResultsElement: HTMLElement;\n  private listView: DeveloperResourcesListView;\n  private readonly statusToolbarElement: HTMLElement;\n  private statusMessageElement: HTMLElement;\n  private readonly loader: SDK.PageResourceLoader.PageResourceLoader;\n\n  constructor() {\n    super(true);\n\n    this.element.setAttribute('jslog', `${VisualLogging.panel('developer-resources').track({resize: true})}`);\n\n    const toolbarContainer = this.contentElement.createChild('div', 'developer-resource-view-toolbar-container');\n    toolbarContainer.setAttribute('jslog', `${VisualLogging.toolbar()}`);\n    const toolbar = new UI.Toolbar.Toolbar('developer-resource-view-toolbar', toolbarContainer);\n\n    this.textFilterRegExp = null;\n    this.filterInput = new UI.Toolbar.ToolbarFilter(i18nString(UIStrings.filterByText), 1);\n    this.filterInput.addEventListener(UI.Toolbar.ToolbarInput.Event.TextChanged, this.onFilterChanged, this);\n    toolbar.appendToolbarItem(this.filterInput);\n\n    const loadThroughTarget = SDK.PageResourceLoader.getLoadThroughTargetSetting();\n    const loadThroughTargetCheckbox = new UI.Toolbar.ToolbarSettingCheckbox(\n        loadThroughTarget, i18nString(UIStrings.loadHttpsDeveloperResources),\n        i18nString(UIStrings.enableLoadingThroughTarget));\n    toolbar.appendToolbarItem(loadThroughTargetCheckbox);\n\n    this.coverageResultsElement = this.contentElement.createChild('div', 'developer-resource-view-results');\n    this.listView = new DeveloperResourcesListView(this.isVisible.bind(this));\n    this.listView.show(this.coverageResultsElement);\n    this.statusToolbarElement = this.contentElement.createChild('div', 'developer-resource-view-toolbar-summary');\n    this.statusMessageElement = this.statusToolbarElement.createChild('div', 'developer-resource-view-message');\n\n    this.loader = SDK.PageResourceLoader.PageResourceLoader.instance();\n    this.loader.addEventListener(SDK.PageResourceLoader.Events.Update, this.update, this);\n    this.update();\n  }\n\n  override async doUpdate(): Promise<void> {\n    const selectedItem = this.listView.selectedItem();\n    this.listView.reset();\n    this.listView.update(this.loader.getScopedResourcesLoaded().values());\n    if (selectedItem) {\n      this.listView.select(selectedItem);\n    }\n    this.updateStats();\n  }\n\n  async select(resource: SDK.PageResourceLoader.PageResource): Promise<void> {\n    await this.lastUpdatePromise;\n    this.listView.select(resource);\n  }\n\n  async selectedItem(): Promise<SDK.PageResourceLoader.PageResource|null> {\n    await this.lastUpdatePromise;\n    return this.listView.selectedItem();\n  }\n\n  private updateStats(): void {\n    const {loading, resources} = this.loader.getScopedNumberOfResources();\n    if (loading > 0) {\n      this.statusMessageElement.textContent =\n          i18nString(UIStrings.resourcesCurrentlyLoading, {PH1: resources, PH2: loading});\n    } else {\n      this.statusMessageElement.textContent = i18nString(UIStrings.resources, {n: resources});\n    }\n  }\n\n  private isVisible(item: SDK.PageResourceLoader.PageResource): boolean {\n    return !this.textFilterRegExp || this.textFilterRegExp.test(item.url) ||\n        this.textFilterRegExp.test(item.errorMessage || '');\n  }\n\n  private onFilterChanged(): void {\n    if (!this.listView) {\n      return;\n    }\n\n    const text = this.filterInput.value();\n    this.textFilterRegExp = text ? Platform.StringUtilities.createPlainTextSearchRegex(text, 'i') : null;\n    this.listView.updateFilterAndHighlight(this.textFilterRegExp);\n    this.updateStats();\n  }\n\n  override wasShown(): void {\n    super.wasShown();\n    this.registerCSSFiles([developerResourcesViewStyles]);\n  }\n}\n"]}