{"version":3,"file":"DeveloperResourcesView.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/developer_resources/DeveloperResourcesView.test.ts"],"names":[],"mappings":"AAAA,gEAAgE;AAChE,yEAAyE;AACzE,6BAA6B;AAG7B,OAAO,KAAK,GAAG,MAAM,uBAAuB,CAAC;AAC7C,OAAO,EAAC,uBAAuB,EAAC,MAAM,qCAAqC,CAAC;AAE5E,OAAO,KAAK,sBAAsB,MAAM,6BAA6B,CAAC;AAEtE,uBAAuB,CAAC,wBAAwB,EAAE,GAAG,EAAE;IACrD,EAAE,CAAC,4BAA4B,EAAE,KAAK,IAAI,EAAE;QAC1C,MAAM,WAAW,GAAG,aAAa,CAAC;QAClC,MAAM,SAAS,GACX,EAAC,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,WAAW,EAAE,YAAY,EAAE,WAA8C,EAAC,CAAC;QAE7G,MAAM,UAAU,GAAG,EAAC,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,EAAE,EAAC,CAAC;QACxD,MAAM,SAAS,GAAG,EAAC,GAAG,EAAE,6BAAgE,EAAE,GAAG,UAAU,EAAC,CAAC;QACzG,MAAM,SAAS,GAAG,EAAC,GAAG,EAAE,8BAAiE,EAAE,GAAG,UAAU,EAAC,CAAC;QAC1G,MAAM,SAAS,GAAG,EAAC,GAAG,EAAE,8BAAiE,EAAE,GAAG,UAAU,EAAC,CAAC;QAE1G,MAAM,MAAM,GAAG,GAAG,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,QAAQ,EAAE,CAAC;QACpE,MAAM,CAAC,8BAA8B,CAAC,SAAS,CAAC,CAAC;QACjD,MAAM,CAAC,8BAA8B,CAAC,SAAS,CAAC,CAAC;QAEjD,MAAM,sBAAsB,GAAG,IAAI,sBAAsB,CAAC,sBAAsB,EAAE,CAAC;QAEnF,0DAA0D;QAC1D,KAAK,CAAC,IAAI,CAAC,sBAAsB,EAAE,WAAW,CAAC,CAAC,SAAS,CAAC,GAAG,EAAE;YAC7D,OAAO,IAAI,CAAC;QACd,CAAC,CAAC,CAAC;QAEH,MAAM,CAAC,MAAM,CAAC,MAAM,sBAAsB,CAAC,YAAY,EAAE,CAAC,CAAC;QAC3D,sBAAsB,CAAC,MAAM,EAAE,CAAC;QAEhC,MAAM,sBAAsB,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;QAC/C,MAAM,CAAC,SAAS,CAAC,MAAM,sBAAsB,CAAC,YAAY,EAAE,EAAE,SAAS,CAAC,CAAC;QAEzE,MAAM,CAAC,8BAA8B,CAAC,SAAS,CAAC,CAAC;QACjD,MAAM,CAAC,SAAS,CAAC,MAAM,sBAAsB,CAAC,YAAY,EAAE,EAAE,SAAS,CAAC,CAAC;IAC3E,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright (c) 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport {describeWithEnvironment} from '../../testing/EnvironmentHelpers.js';\n\nimport * as DeveloperResourcesView from './DeveloperResourcesView.js';\n\ndescribeWithEnvironment('DeveloperResourcesView', () => {\n  it('allows selecting resources', async () => {\n    const extensionId = 'extensionId';\n    const initiator =\n        {target: null, frameId: null, extensionId, initiatorUrl: extensionId as Platform.DevToolsPath.UrlString};\n\n    const commonInfo = {success: true, initiator, size: 10};\n    const resource1 = {url: 'http://www.test.com/test.js' as Platform.DevToolsPath.UrlString, ...commonInfo};\n    const resource2 = {url: 'http://www.test.com/test2.js' as Platform.DevToolsPath.UrlString, ...commonInfo};\n    const resource3 = {url: 'http://www.test.com/test3.js' as Platform.DevToolsPath.UrlString, ...commonInfo};\n\n    const loader = SDK.PageResourceLoader.PageResourceLoader.instance();\n    loader.resourceLoadedThroughExtension(resource1);\n    loader.resourceLoadedThroughExtension(resource2);\n\n    const developerResourcesView = new DeveloperResourcesView.DeveloperResourcesView();\n\n    // This is required, as otherwise the view is not updated.\n    sinon.stub(developerResourcesView, 'isShowing').callsFake(() => {\n      return true;\n    });\n\n    assert.isNull(await developerResourcesView.selectedItem());\n    developerResourcesView.update();\n\n    await developerResourcesView.select(resource2);\n    assert.deepEqual(await developerResourcesView.selectedItem(), resource2);\n\n    loader.resourceLoadedThroughExtension(resource3);\n    assert.deepEqual(await developerResourcesView.selectedItem(), resource2);\n  });\n});\n"]}