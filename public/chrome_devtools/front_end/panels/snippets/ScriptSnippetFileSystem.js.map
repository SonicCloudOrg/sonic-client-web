{"version":3,"file":"ScriptSnippetFileSystem.js","sourceRoot":"","sources":["../../../../../../front_end/panels/snippets/ScriptSnippetFileSystem.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2018 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport * as Persistence from '../../models/persistence/persistence.js';\nimport * as TextUtils from '../../models/text_utils/text_utils.js';\nimport * as Workspace from '../../models/workspace/workspace.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nconst UIStrings = {\n  /**\n   *@description Default snippet name when a new snippet is created in the Sources panel\n   *@example {1} PH1\n   */\n  scriptSnippet: 'Script snippet #{PH1}',\n  /**\n   *@description Text to show something is linked to another\n   *@example {example.url} PH1\n   */\n  linkedTo: 'Linked to {PH1}',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/snippets/ScriptSnippetFileSystem.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nfunction escapeSnippetName(name: Platform.DevToolsPath.RawPathString): Platform.DevToolsPath.EncodedPathString {\n  return Common.ParsedURL.ParsedURL.rawPathToEncodedPathString(name);\n}\n\nfunction unescapeSnippetName(name: Platform.DevToolsPath.EncodedPathString): Platform.DevToolsPath.RawPathString {\n  return Common.ParsedURL.ParsedURL.encodedPathToRawPathString(name);\n}\n\nexport class SnippetFileSystem extends Persistence.PlatformFileSystem.PlatformFileSystem {\n  private readonly lastSnippetIdentifierSetting: Common.Settings.Setting<number>;\n  private readonly snippetsSetting: Common.Settings.Setting<Snippet[]>;\n  constructor() {\n    super('snippet://' as Platform.DevToolsPath.UrlString, 'snippets');\n    this.lastSnippetIdentifierSetting =\n        Common.Settings.Settings.instance().createSetting('script-snippets-last-identifier', 0);\n    this.snippetsSetting = Common.Settings.Settings.instance().createSetting('script-snippets', []);\n  }\n\n  override initialFilePaths(): Platform.DevToolsPath.EncodedPathString[] {\n    const savedSnippets: Snippet[] = this.snippetsSetting.get();\n    return savedSnippets.map(snippet => escapeSnippetName(snippet.name));\n  }\n\n  override async createFile(_path: Platform.DevToolsPath.EncodedPathString, _name: Platform.DevToolsPath.RawPathString|null):\n      Promise<Platform.DevToolsPath.EncodedPathString|null> {\n    const nextId = this.lastSnippetIdentifierSetting.get() + 1;\n    this.lastSnippetIdentifierSetting.set(nextId);\n\n    const snippetName =\n        i18nString(UIStrings.scriptSnippet, {PH1: nextId}) as string as Platform.DevToolsPath.RawPathString;\n    const snippets = this.snippetsSetting.get();\n    snippets.push({name: snippetName, content: ''});\n    this.snippetsSetting.set(snippets);\n\n    return escapeSnippetName(snippetName);\n  }\n\n  override async deleteFile(path: Platform.DevToolsPath.EncodedPathString): Promise<boolean> {\n    const name = unescapeSnippetName(Common.ParsedURL.ParsedURL.substring(path, 1));\n    const allSnippets: Snippet[] = this.snippetsSetting.get();\n    const snippets = allSnippets.filter(snippet => snippet.name !== name);\n    if (allSnippets.length !== snippets.length) {\n      this.snippetsSetting.set(snippets);\n      return true;\n    }\n    return false;\n  }\n\n  override async requestFileContent(path: Platform.DevToolsPath.EncodedPathString):\n      Promise<TextUtils.ContentData.ContentDataOrError> {\n    const name = unescapeSnippetName(Common.ParsedURL.ParsedURL.substring(path, 1));\n    const snippets: Snippet[] = this.snippetsSetting.get();\n    const snippet = snippets.find(snippet => snippet.name === name);\n    if (snippet) {\n      return new TextUtils.ContentData.ContentData(snippet.content, /* isBase64 */ false, 'text/javascript');\n    }\n    return {error: `A snippet with name '${name}' was not found`};\n  }\n\n  override async setFileContent(path: Platform.DevToolsPath.EncodedPathString, content: string, _isBase64: boolean):\n      Promise<boolean> {\n    const name = unescapeSnippetName(Common.ParsedURL.ParsedURL.substring(path, 1));\n    const snippets: Snippet[] = this.snippetsSetting.get();\n    const snippet = snippets.find(snippet => snippet.name === name);\n    if (snippet) {\n      snippet.content = content;\n      this.snippetsSetting.set(snippets);\n      return true;\n    }\n    return false;\n  }\n\n  override renameFile(\n      path: Platform.DevToolsPath.EncodedPathString, newName: Platform.DevToolsPath.RawPathString,\n      callback: (arg0: boolean, arg1?: string|undefined) => void): void {\n    const name = unescapeSnippetName(Common.ParsedURL.ParsedURL.substring(path, 1));\n    const snippets: Snippet[] = this.snippetsSetting.get();\n    const snippet = snippets.find(snippet => snippet.name === name);\n    newName = Common.ParsedURL.ParsedURL.trim(newName);\n    if (!snippet || newName.length === 0 || snippets.find(snippet => snippet.name === newName)) {\n      callback(false);\n      return;\n    }\n    snippet.name = newName;\n    this.snippetsSetting.set(snippets);\n    callback(true, newName);\n  }\n\n  override async searchInPath(query: string, _progress: Common.Progress.Progress): Promise<string[]> {\n    const re = new RegExp(Platform.StringUtilities.escapeForRegExp(query), 'i');\n    const allSnippets: Snippet[] = this.snippetsSetting.get();\n    const matchedSnippets = allSnippets.filter(snippet => snippet.content.match(re));\n    return matchedSnippets.map(snippet => `snippet:///${escapeSnippetName(snippet.name)}`);\n  }\n\n  override mimeFromPath(_path: Platform.DevToolsPath.UrlString): string {\n    return 'text/javascript';\n  }\n\n  override contentType(_path: string): Common.ResourceType.ResourceType {\n    return Common.ResourceType.resourceTypes.Script;\n  }\n\n  override tooltipForURL(url: Platform.DevToolsPath.UrlString): string {\n    return i18nString(\n        UIStrings.linkedTo,\n        {PH1: unescapeSnippetName(Common.ParsedURL.ParsedURL.sliceUrlToEncodedPathString(url, this.path().length))});\n  }\n\n  override supportsAutomapping(): boolean {\n    return true;\n  }\n}\n\nexport async function evaluateScriptSnippet(uiSourceCode: Workspace.UISourceCode.UISourceCode): Promise<void> {\n  if (!Common.ParsedURL.schemeIs(uiSourceCode.url(), 'snippet:')) {\n    return;\n  }\n\n  const executionContext = UI.Context.Context.instance().flavor(SDK.RuntimeModel.ExecutionContext);\n  if (!executionContext) {\n    return;\n  }\n\n  const runtimeModel = executionContext.runtimeModel;\n  const consoleModel = executionContext.target().model(SDK.ConsoleModel.ConsoleModel);\n  await uiSourceCode.requestContent();\n  uiSourceCode.commitWorkingCopy();\n  const expression = uiSourceCode.workingCopy();\n  Common.Console.Console.instance().show();\n\n  const url = uiSourceCode.url();\n\n  const result = await executionContext.evaluate(\n      {\n        expression: `${expression}\\n//# sourceURL=${url}`,\n        objectGroup: 'console',\n        silent: false,\n        includeCommandLineAPI: true,\n        returnByValue: false,\n        generatePreview: true,\n        replMode: true,\n      } as SDK.RuntimeModel.EvaluationOptions,\n      true, true);\n\n  if ('exceptionDetails' in result && result.exceptionDetails) {\n    consoleModel?.addMessage(SDK.ConsoleModel.ConsoleMessage.fromException(\n        runtimeModel, result.exceptionDetails, /* messageType */ undefined, /* timestamp */ undefined, url));\n    return;\n  }\n  if (!('object' in result) || !result.object) {\n    return;\n  }\n\n  const scripts = executionContext.debuggerModel.scriptsForSourceURL(url);\n  if (scripts.length < 1) {\n    return;\n  }\n  const scriptId = scripts[scripts.length - 1].scriptId;\n  const details = {\n    type: SDK.ConsoleModel.FrontendMessageType.Result,\n    url,\n    parameters: [result.object],\n    executionContextId: executionContext.id,\n    scriptId,\n  };\n  consoleModel?.addMessage(new SDK.ConsoleModel.ConsoleMessage(\n      runtimeModel, Protocol.Log.LogEntrySource.Javascript, Protocol.Log.LogEntryLevel.Info, '', details));\n}\n\nexport function isSnippetsUISourceCode(uiSourceCode: Workspace.UISourceCode.UISourceCode): boolean {\n  return Common.ParsedURL.schemeIs(uiSourceCode.url(), 'snippet:');\n}\n\nexport function isSnippetsProject(project: Workspace.Workspace.Project): boolean {\n  return project.type() === Workspace.Workspace.projectTypes.FileSystem &&\n      Persistence.FileSystemWorkspaceBinding.FileSystemWorkspaceBinding.fileSystemType(project) === 'snippets';\n}\n\nexport function findSnippetsProject(): Workspace.Workspace.Project {\n  const workspaceProject =\n      Workspace.Workspace.WorkspaceImpl.instance()\n          .projectsForType(Workspace.Workspace.projectTypes.FileSystem)\n          .find(\n              project => Persistence.FileSystemWorkspaceBinding.FileSystemWorkspaceBinding.fileSystemType(project) ===\n                  'snippets');\n\n  if (!workspaceProject) {\n    throw new Error('Unable to find workspace project for the snippets file system');\n  }\n\n  return workspaceProject;\n}\nexport interface Snippet {\n  name: Platform.DevToolsPath.RawPathString;\n  content: string;\n}\n"]}