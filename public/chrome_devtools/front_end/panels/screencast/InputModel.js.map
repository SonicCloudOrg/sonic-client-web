{"version":3,"file":"InputModel.js","sourceRoot":"","sources":["../../../../../../front_end/panels/screencast/InputModel.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as ProtocolProxyApi from '../../generated/protocol-proxy-api.js';\nimport * as Protocol from '../../generated/protocol.js';\n\nconst BUTTONS = [\n  Protocol.Input.MouseButton.Left,\n  Protocol.Input.MouseButton.Middle,\n  Protocol.Input.MouseButton.Right,\n  Protocol.Input.MouseButton.Back,\n  Protocol.Input.MouseButton.Forward,\n];\nconst MOUSE_EVENT_TYPES: {[key: string]: Protocol.Input.DispatchMouseEventRequestType} = {\n  mousedown: Protocol.Input.DispatchMouseEventRequestType.MousePressed,\n  mouseup: Protocol.Input.DispatchMouseEventRequestType.MouseReleased,\n  mousemove: Protocol.Input.DispatchMouseEventRequestType.MouseMoved,\n};\n\nexport class InputModel extends SDK.SDKModel.SDKModel<void> {\n  private readonly inputAgent: ProtocolProxyApi.InputApi;\n  private activeMouseOffsetTop: number|null;\n\n  constructor(target: SDK.Target.Target) {\n    super(target);\n    this.inputAgent = target.inputAgent();\n    this.activeMouseOffsetTop = null;\n  }\n\n  emitKeyEvent(event: KeyboardEvent): void {\n    let type: Protocol.Input.DispatchKeyEventRequestType;\n    switch (event.type) {\n      case 'keydown':\n        type = Protocol.Input.DispatchKeyEventRequestType.KeyDown;\n        break;\n      case 'keyup':\n        type = Protocol.Input.DispatchKeyEventRequestType.KeyUp;\n        break;\n      case 'keypress':\n        type = Protocol.Input.DispatchKeyEventRequestType.Char;\n        break;\n      default:\n        return;\n    }\n    const text = event.type === 'keypress' ? String.fromCharCode(event.charCode) : undefined;\n    void this.inputAgent.invoke_dispatchKeyEvent({\n      type: type,\n      modifiers: this.modifiersForEvent(event),\n      text: text,\n      unmodifiedText: text ? text.toLowerCase() : undefined,\n      keyIdentifier: (event as {keyIdentifier?: string}).keyIdentifier,\n      code: event.code,\n      key: event.key,\n      windowsVirtualKeyCode: event.keyCode,\n      nativeVirtualKeyCode: event.keyCode,\n      autoRepeat: event.repeat,\n      isKeypad: event.location === 3,\n      isSystemKey: false,\n      location: event.location !== 3 ? event.location : undefined,\n    });\n  }\n\n  emitMouseEvent(event: MouseEvent, offsetTop: number, zoom: number): void {\n    if (!(event.type in MOUSE_EVENT_TYPES)) {\n      return;\n    }\n    if (event.type === 'mousedown' || this.activeMouseOffsetTop === null) {\n      this.activeMouseOffsetTop = offsetTop;\n    }\n    void this.inputAgent.invoke_dispatchMouseEvent({\n      type: MOUSE_EVENT_TYPES[event.type],\n      x: Math.round(event.offsetX / zoom),\n      y: Math.round(event.offsetY / zoom - this.activeMouseOffsetTop),\n      modifiers: this.modifiersForEvent(event),\n      button: BUTTONS[event.button],\n      clickCount: event.detail,\n    });\n    if (event.type === 'mouseup') {\n      this.activeMouseOffsetTop = null;\n    }\n  }\n\n  emitWheelEvent(event: WheelEvent, offsetTop: number, zoom: number): void {\n    if (this.activeMouseOffsetTop === null) {\n      this.activeMouseOffsetTop = offsetTop;\n    }\n    void this.inputAgent.invoke_dispatchMouseEvent({\n      type: Protocol.Input.DispatchMouseEventRequestType.MouseWheel,\n      x: Math.round(event.offsetX / zoom),\n      y: Math.round(event.offsetY / zoom - this.activeMouseOffsetTop),\n      modifiers: this.modifiersForEvent(event),\n      button: BUTTONS[event.button],\n      clickCount: event.detail,\n      deltaX: event.deltaX / zoom,\n      deltaY: event.deltaY / zoom,\n    });\n  }\n\n  private modifiersForEvent(event: KeyboardEvent|MouseEvent): number {\n    return Number(event.getModifierState('Alt')) | (Number(event.getModifierState('Control')) << 1) |\n        (Number(event.getModifierState('Meta')) << 2) | (Number(event.getModifierState('Shift')) << 3);\n  }\n}\n\nSDK.SDKModel.SDKModel.register(InputModel, {\n  capabilities: SDK.Target.Capability.Input,\n  autostart: false,\n});\n"]}