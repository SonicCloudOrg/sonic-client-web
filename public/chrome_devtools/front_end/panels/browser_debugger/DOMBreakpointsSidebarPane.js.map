{"version":3,"file":"DOMBreakpointsSidebarPane.js","sourceRoot":"","sources":["../../../../../../front_end/panels/browser_debugger/DOMBreakpointsSidebarPane.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2011 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\nimport * as Sources from '../sources/sources.js';\n\nimport domBreakpointsSidebarPaneStyles from './domBreakpointsSidebarPane.css.js';\n\nconst UIStrings = {\n  /**\n   *@description Text to indicate there are no breakpoints\n   */\n  noBreakpoints: 'No breakpoints',\n  /**\n   *@description Accessibility label for the DOM breakpoints list in the Sources panel\n   */\n  domBreakpointsList: 'DOM Breakpoints list',\n  /**\n   *@description Text with two placeholders separated by a colon\n   *@example {Node removed} PH1\n   *@example {div#id1} PH2\n   */\n  sS: '{PH1}: {PH2}',\n  /**\n   *@description Text with three placeholders separated by a colon and a comma\n   *@example {Node removed} PH1\n   *@example {div#id1} PH2\n   *@example {checked} PH3\n   */\n  sSS: '{PH1}: {PH2}, {PH3}',\n  /**\n   *@description Text exposed to screen readers on checked items.\n   */\n  checked: 'checked',\n  /**\n   *@description Accessible text exposed to screen readers when the screen reader encounters an unchecked checkbox.\n   */\n  unchecked: 'unchecked',\n  /**\n   *@description Accessibility label for hit breakpoints in the Sources panel.\n   *@example {checked} PH1\n   */\n  sBreakpointHit: '{PH1} breakpoint hit',\n  /**\n   *@description Screen reader description of a hit breakpoint in the Sources panel\n   */\n  breakpointHit: 'breakpoint hit',\n  /**\n   *@description A context menu item in the DOM Breakpoints sidebar that reveals the node on which the current breakpoint is set.\n   */\n  revealDomNodeInElementsPanel: 'Reveal DOM node in Elements panel',\n  /**\n   *@description Text to remove a breakpoint\n   */\n  removeBreakpoint: 'Remove breakpoint',\n  /**\n   *@description A context menu item in the DOMBreakpoints Sidebar Pane of the JavaScript Debugging pane in the Sources panel or the DOM Breakpoints pane in the Elements panel\n   */\n  removeAllDomBreakpoints: 'Remove all DOM breakpoints',\n  /**\n   *@description Text in DOMBreakpoints Sidebar Pane of the JavaScript Debugging pane in the Sources panel or the DOM Breakpoints pane in the Elements panel\n   */\n  subtreeModified: 'Subtree modified',\n  /**\n   *@description Text in DOMBreakpoints Sidebar Pane of the JavaScript Debugging pane in the Sources panel or the DOM Breakpoints pane in the Elements panel\n   */\n  attributeModified: 'Attribute modified',\n  /**\n   *@description Text in DOMBreakpoints Sidebar Pane of the JavaScript Debugging pane in the Sources panel or the DOM Breakpoints pane in the Elements panel\n   */\n  nodeRemoved: 'Node removed',\n  /**\n   *@description Entry in context menu of the elements pane, allowing developers to select a DOM\n   * breakpoint for the element that they have right-clicked on. Short for the action 'set a\n   * breakpoint on this DOM Element'. A breakpoint pauses the website when the code reaches a\n   * specified line, or when a specific action happen (in this case, when the DOM Element is\n   * modified).\n   */\n  breakOn: 'Break on',\n  /**\n   *@description Screen reader description for removing a DOM breakpoint.\n   */\n  breakpointRemoved: 'Breakpoint removed',\n  /**\n   *@description Screen reader description for setting a DOM breakpoint.\n   */\n  breakpointSet: 'Breakpoint set',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/browser_debugger/DOMBreakpointsSidebarPane.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\n\nlet domBreakpointsSidebarPaneInstance: DOMBreakpointsSidebarPane;\n\nexport class DOMBreakpointsSidebarPane extends UI.Widget.VBox implements\n    UI.ContextFlavorListener.ContextFlavorListener, UI.ListControl.ListDelegate<SDK.DOMDebuggerModel.DOMBreakpoint> {\n  elementToCheckboxes: WeakMap<Element, HTMLInputElement>;\n  readonly #emptyElement: HTMLElement;\n  readonly #breakpoints: UI.ListModel.ListModel<SDK.DOMDebuggerModel.DOMBreakpoint>;\n  #list: UI.ListControl.ListControl<SDK.DOMDebuggerModel.DOMBreakpoint>;\n  #highlightedBreakpoint: SDK.DOMDebuggerModel.DOMBreakpoint|null;\n\n  private constructor() {\n    super(true);\n\n    this.elementToCheckboxes = new WeakMap();\n\n    this.contentElement.setAttribute(\n        'jslog', `${VisualLogging.section('sources.dom-breakpoints').track({resize: true})}`);\n    this.#emptyElement = this.contentElement.createChild('div', 'gray-info-message');\n    this.#emptyElement.textContent = i18nString(UIStrings.noBreakpoints);\n    this.#breakpoints = new UI.ListModel.ListModel();\n    this.#list = new UI.ListControl.ListControl(this.#breakpoints, this, UI.ListControl.ListMode.NonViewport);\n    this.contentElement.appendChild(this.#list.element);\n    this.#list.element.classList.add('breakpoint-list', 'hidden');\n    UI.ARIAUtils.markAsList(this.#list.element);\n    UI.ARIAUtils.setLabel(this.#list.element, i18nString(UIStrings.domBreakpointsList));\n    this.#emptyElement.tabIndex = -1;\n\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.DOMDebuggerModel.DOMDebuggerModel, SDK.DOMDebuggerModel.Events.DOMBreakpointAdded, this.breakpointAdded,\n        this);\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.DOMDebuggerModel.DOMDebuggerModel, SDK.DOMDebuggerModel.Events.DOMBreakpointToggled, this.breakpointToggled,\n        this);\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.DOMDebuggerModel.DOMDebuggerModel, SDK.DOMDebuggerModel.Events.DOMBreakpointsRemoved,\n        this.breakpointsRemoved, this);\n\n    for (const domDebuggerModel of SDK.TargetManager.TargetManager.instance().models(\n             SDK.DOMDebuggerModel.DOMDebuggerModel)) {\n      domDebuggerModel.retrieveDOMBreakpoints();\n      for (const breakpoint of domDebuggerModel.domBreakpoints()) {\n        this.addBreakpoint(breakpoint);\n      }\n    }\n\n    this.#highlightedBreakpoint = null;\n    this.update();\n  }\n\n  static instance(): DOMBreakpointsSidebarPane {\n    if (!domBreakpointsSidebarPaneInstance) {\n      domBreakpointsSidebarPaneInstance = new DOMBreakpointsSidebarPane();\n    }\n    return domBreakpointsSidebarPaneInstance;\n  }\n\n  createElementForItem(item: SDK.DOMDebuggerModel.DOMBreakpoint): Element {\n    const element = document.createElement('div');\n    element.classList.add('breakpoint-entry');\n    element.setAttribute(\n        'jslog',\n        `${VisualLogging.domBreakpoint().context(item.type).track({keydown: 'ArrowUp|ArrowDown|PageUp|PageDown'})}`);\n    element.addEventListener('contextmenu', this.contextMenu.bind(this, item), true);\n    UI.ARIAUtils.markAsListitem(element);\n    element.tabIndex = -1;\n\n    const checkboxLabel = UI.UIUtils.CheckboxLabel.create(/* title */ undefined, item.enabled);\n    const checkboxElement = checkboxLabel.checkboxElement;\n    checkboxElement.addEventListener('click', this.checkboxClicked.bind(this, item), false);\n    checkboxElement.tabIndex = -1;\n    this.elementToCheckboxes.set(element, checkboxElement);\n    element.appendChild(checkboxLabel);\n    element.addEventListener('keydown', event => {\n      if (event.key === ' ') {\n        checkboxLabel.checkboxElement.click();\n        event.consume(true);\n      }\n    });\n\n    const labelElement = document.createElement('div');\n    labelElement.classList.add('dom-breakpoint');\n    element.appendChild(labelElement);\n    const description = document.createElement('div');\n    const breakpointTypeLabel = BreakpointTypeLabels.get(item.type);\n    description.textContent = breakpointTypeLabel ? breakpointTypeLabel() : null;\n    const breakpointTypeText = breakpointTypeLabel ? breakpointTypeLabel() : '';\n    UI.ARIAUtils.setLabel(checkboxElement, breakpointTypeText);\n    checkboxElement.setAttribute('jslog', `${VisualLogging.toggle().track({click: true})}`);\n    const checkedStateText = item.enabled ? i18nString(UIStrings.checked) : i18nString(UIStrings.unchecked);\n    const linkifiedNode = document.createElement('monospace');\n    linkifiedNode.style.display = 'block';\n    labelElement.appendChild(linkifiedNode);\n    void Common.Linkifier.Linkifier.linkify(item.node, {preventKeyboardFocus: true, tooltip: undefined})\n        .then(linkified => {\n          linkifiedNode.appendChild(linkified);\n          // Give the checkbox an aria-label as it is required for all form element\n          UI.ARIAUtils.setLabel(\n              checkboxElement, i18nString(UIStrings.sS, {PH1: breakpointTypeText, PH2: linkified.deepTextContent()}));\n          // The parent list element is the one that actually gets focused.\n          // Assign it an aria-label with complete information for the screen reader to read out properly\n          UI.ARIAUtils.setLabel(\n              element,\n              i18nString(\n                  UIStrings.sSS, {PH1: breakpointTypeText, PH2: linkified.deepTextContent(), PH3: checkedStateText}));\n        });\n\n    labelElement.appendChild(description);\n\n    if (item === this.#highlightedBreakpoint) {\n      element.classList.add('breakpoint-hit');\n      UI.ARIAUtils.setDescription(element, i18nString(UIStrings.sBreakpointHit, {PH1: checkedStateText}));\n      UI.ARIAUtils.setDescription(checkboxElement, i18nString(UIStrings.breakpointHit));\n    } else {\n      UI.ARIAUtils.setDescription(element, checkedStateText);\n    }\n\n    this.#emptyElement.classList.add('hidden');\n    this.#list.element.classList.remove('hidden');\n\n    return element;\n  }\n\n  heightForItem(_item: SDK.DOMDebuggerModel.DOMBreakpoint): number {\n    return 0;\n  }\n\n  isItemSelectable(_item: SDK.DOMDebuggerModel.DOMBreakpoint): boolean {\n    return true;\n  }\n\n  updateSelectedItemARIA(_fromElement: Element|null, _toElement: Element|null): boolean {\n    return true;\n  }\n\n  selectedItemChanged(\n      from: SDK.DOMDebuggerModel.DOMBreakpoint|null, to: SDK.DOMDebuggerModel.DOMBreakpoint|null,\n      fromElement: HTMLElement|null, toElement: HTMLElement|null): void {\n    if (fromElement) {\n      fromElement.tabIndex = -1;\n    }\n\n    if (toElement) {\n      this.setDefaultFocusedElement(toElement);\n      toElement.tabIndex = 0;\n      if (this.hasFocus()) {\n        toElement.focus();\n      }\n    }\n  }\n\n  private breakpointAdded(event: Common.EventTarget.EventTargetEvent<SDK.DOMDebuggerModel.DOMBreakpoint>): void {\n    this.addBreakpoint(event.data);\n  }\n\n  private breakpointToggled(event: Common.EventTarget.EventTargetEvent<SDK.DOMDebuggerModel.DOMBreakpoint>): void {\n    const hadFocus = this.hasFocus();\n    const breakpoint = event.data;\n    this.#list.refreshItem(breakpoint);\n    if (hadFocus) {\n      this.focus();\n    }\n  }\n\n  private breakpointsRemoved(event: Common.EventTarget.EventTargetEvent<SDK.DOMDebuggerModel.DOMBreakpoint[]>): void {\n    const hadFocus = this.hasFocus();\n    const breakpoints = event.data;\n    let lastIndex = -1;\n    for (const breakpoint of breakpoints) {\n      const index = this.#breakpoints.indexOf(breakpoint);\n      if (index >= 0) {\n        this.#breakpoints.remove(index);\n        lastIndex = index;\n      }\n    }\n    if (this.#breakpoints.length === 0) {\n      this.#emptyElement.classList.remove('hidden');\n      this.setDefaultFocusedElement(this.#emptyElement);\n      this.#list.element.classList.add('hidden');\n    } else if (lastIndex >= 0) {\n      const breakpointToSelect = this.#breakpoints.at(lastIndex);\n      if (breakpointToSelect) {\n        this.#list.selectItem(breakpointToSelect);\n      }\n    }\n    if (hadFocus) {\n      this.focus();\n    }\n  }\n\n  private addBreakpoint(breakpoint: SDK.DOMDebuggerModel.DOMBreakpoint): void {\n    this.#breakpoints.insertWithComparator(breakpoint, (breakpointA, breakpointB) => {\n      if (breakpointA.type > breakpointB.type) {\n        return -1;\n      }\n      if (breakpointA.type < breakpointB.type) {\n        return 1;\n      }\n      return 0;\n    });\n    if (!this.#list.selectedItem() || !this.hasFocus()) {\n      this.#list.selectItem(this.#breakpoints.at(0));\n    }\n  }\n\n  private contextMenu(breakpoint: SDK.DOMDebuggerModel.DOMBreakpoint, event: Event): void {\n    const contextMenu = new UI.ContextMenu.ContextMenu(event);\n    contextMenu.defaultSection().appendItem(\n        i18nString(UIStrings.revealDomNodeInElementsPanel), () => Common.Revealer.reveal(breakpoint.node),\n        {jslogContext: 'reveal-in-elements'});\n    contextMenu.defaultSection().appendItem(i18nString(UIStrings.removeBreakpoint), () => {\n      breakpoint.domDebuggerModel.removeDOMBreakpoint(breakpoint.node, breakpoint.type);\n    }, {jslogContext: 'remove-breakpoint'});\n    contextMenu.defaultSection().appendItem(i18nString(UIStrings.removeAllDomBreakpoints), () => {\n      breakpoint.domDebuggerModel.removeAllDOMBreakpoints();\n    }, {jslogContext: 'remove-all-dom-breakpoints'});\n    void contextMenu.show();\n  }\n\n  private checkboxClicked(breakpoint: SDK.DOMDebuggerModel.DOMBreakpoint, event: Event): void {\n    breakpoint.domDebuggerModel.toggleDOMBreakpoint(\n        breakpoint, event.target ? (event.target as HTMLInputElement).checked : false);\n  }\n\n  flavorChanged(_object: Object|null): void {\n    this.update();\n  }\n\n  private update(): void {\n    const details = UI.Context.Context.instance().flavor(SDK.DebuggerModel.DebuggerPausedDetails);\n    if (this.#highlightedBreakpoint) {\n      const oldHighlightedBreakpoint = this.#highlightedBreakpoint;\n      this.#highlightedBreakpoint = null;\n      this.#list.refreshItem(oldHighlightedBreakpoint);\n    }\n    if (!details || !details.auxData || details.reason !== Protocol.Debugger.PausedEventReason.DOM) {\n      return;\n    }\n\n    const domDebuggerModel = details.debuggerModel.target().model(SDK.DOMDebuggerModel.DOMDebuggerModel);\n    if (!domDebuggerModel) {\n      return;\n    }\n    // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const data = domDebuggerModel.resolveDOMBreakpointData(details.auxData as any);\n    if (!data) {\n      return;\n    }\n\n    for (const breakpoint of this.#breakpoints) {\n      if (breakpoint.node === data.node && breakpoint.type === data.type) {\n        this.#highlightedBreakpoint = breakpoint;\n      }\n    }\n    if (this.#highlightedBreakpoint) {\n      this.#list.refreshItem(this.#highlightedBreakpoint);\n    }\n    void UI.ViewManager.ViewManager.instance().showView('sources.dom-breakpoints');\n  }\n  override wasShown(): void {\n    super.wasShown();\n    this.registerCSSFiles([domBreakpointsSidebarPaneStyles]);\n  }\n}\n\nconst BreakpointTypeLabels = new Map([\n  [Protocol.DOMDebugger.DOMBreakpointType.SubtreeModified, i18nLazyString(UIStrings.subtreeModified)],\n  [Protocol.DOMDebugger.DOMBreakpointType.AttributeModified, i18nLazyString(UIStrings.attributeModified)],\n  [Protocol.DOMDebugger.DOMBreakpointType.NodeRemoved, i18nLazyString(UIStrings.nodeRemoved)],\n]);\n\nexport class ContextMenuProvider implements UI.ContextMenu.Provider<SDK.DOMModel.DOMNode> {\n  appendApplicableItems(event: Event, contextMenu: UI.ContextMenu.ContextMenu, node: SDK.DOMModel.DOMNode): void {\n    if (node.pseudoType()) {\n      return;\n    }\n    const domDebuggerModel = node.domModel().target().model(SDK.DOMDebuggerModel.DOMDebuggerModel);\n    if (!domDebuggerModel) {\n      return;\n    }\n\n    function toggleBreakpoint(type: Protocol.DOMDebugger.DOMBreakpointType): void {\n      if (!domDebuggerModel) {\n        return;\n      }\n      const label = Sources.DebuggerPausedMessage.BreakpointTypeNouns.get(type);\n      const labelString = label ? label() : '';\n      if (domDebuggerModel.hasDOMBreakpoint(node, type)) {\n        domDebuggerModel.removeDOMBreakpoint(node, type);\n        UI.ARIAUtils.alert(`${i18nString(UIStrings.breakpointRemoved)}: ${labelString}`);\n      } else {\n        domDebuggerModel.setDOMBreakpoint(node, type);\n        UI.ARIAUtils.alert(`${i18nString(UIStrings.breakpointSet)}: ${labelString}`);\n      }\n    }\n\n    const breakpointsMenu =\n        contextMenu.debugSection().appendSubMenuItem(i18nString(UIStrings.breakOn), false, 'break-on');\n    const allBreakpointTypes: Protocol.EnumerableEnum<typeof Protocol.DOMDebugger.DOMBreakpointType> = {\n      SubtreeModified: Protocol.DOMDebugger.DOMBreakpointType.SubtreeModified,\n      AttributeModified: Protocol.DOMDebugger.DOMBreakpointType.AttributeModified,\n      NodeRemoved: Protocol.DOMDebugger.DOMBreakpointType.NodeRemoved,\n    };\n    for (const type of Object.values(allBreakpointTypes)) {\n      const label = Sources.DebuggerPausedMessage.BreakpointTypeNouns.get(type);\n      if (label) {\n        breakpointsMenu.defaultSection().appendCheckboxItem(\n            label(), toggleBreakpoint.bind(null, type),\n            {checked: domDebuggerModel.hasDOMBreakpoint(node, type), jslogContext: type});\n      }\n    }\n  }\n}\n"]}