{"version":3,"file":"LighthouseReportRenderer.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/lighthouse/LighthouseReportRenderer.test.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,MAAM,MAAM,6BAA6B,CAAC;AACtD,OAAO,KAAK,GAAG,MAAM,uBAAuB,CAAC;AAE7C,OAAO,EAAC,YAAY,EAAC,MAAM,qCAAqC,CAAC;AACjE,OAAO,EAAC,0BAA0B,EAAC,MAAM,iCAAiC,CAAC;AAC3E,OAAO,KAAK,EAAE,MAAM,2BAA2B,CAAC;AAIhD,0BAA0B,CAAC,0BAA0B,EAAE,GAAG,EAAE;IAC1D,gEAAgE;IAChE,IAAI,UAAmC,CAAC;IACxC,IAAI,MAAyB,CAAC;IAC9B,IAAI,aAA0B,CAAC;IAC/B,IAAI,WAAwB,CAAC;IAC7B,MAAM,IAAI,GAAG,WAAW,CAAC;IACzB,MAAM,OAAO,GAAG,EAAyB,CAAC;IAC1C,MAAM,IAAI,GAAG,EAAC,EAAE,EAAE,OAAO,EAAyB,CAAC;IACnD,MAAM,OAAO,GAAG,SAAS,CAAC;IAC1B,MAAM,YAAY,GAAG,CAAC,IAAY,EAAE,OAAe,EAAE,EAAE,CACnD,mCAAmC,IAAI,mBAAmB,OAAO,UAAU,CAAC;IAChF,UAAU,CAAC,KAAK,IAAI,EAAE;QACpB,UAAU,GAAG,MAAM,MAAM,CAAC,iBAAiB,CAAC,CAAC;QAC7C,MAAM,SAAS,GAAG,YAAY,CAAC,EAAC,IAAI,EAAE,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAC,CAAC,CAAC;QAC5D,YAAY,CAAC,EAAC,YAAY,EAAE,SAAS,EAAE,OAAO,EAAE,WAAW,EAAC,CAAC,CAAC;QAC9D,MAAM,GAAG,YAAY,CAAC,EAAC,YAAY,EAAE,SAAS,EAAC,CAAC,CAAC;QACjD,WAAW,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC5C,WAAW,CAAC,WAAW,GAAG,MAAM,CAAC;QACjC,aAAa,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IAChD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mCAAmC,EAAE,KAAK,IAAI,EAAE;QACjD,aAAa,CAAC,SAAS,GAAG,YAAY,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QAEtD,MAAM,QAAQ,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;QACrD,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QACxB,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE,0BAA0B,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;QAClG,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAClE,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,SAAS,EAAE,SAAS,CAAC;aAC5C,QAAQ,CAAC,IAAI,EAAE,EAAC,OAAO,EAAE,OAAO,EAAE,oBAAoB,EAAE,SAAS,EAAC,CAAC;aACnE,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;QAE3C,MAAM,UAAU,CAAC,wBAAwB,CAAC,wBAAwB,CAAC,kBAAkB,CAAC,aAAa,CAAC,CAAC;QAErG,MAAM,CAAC,OAAO,CAAC,CAAC,GAAG,aAAa,CAAC,UAAU,EAAE,UAAU,IAAI,EAAE,CAAC,EAAE,WAAW,CAAC,CAAC;IAC/E,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,wBAAwB,EAAE,KAAK,IAAI,EAAE;QACtC,MAAM,QAAQ,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;QACrD,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QACxB,MAAM,wBAAwB,GAAG,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE,0BAA0B,CAAC,CAAC;QAClF,MAAM,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC;QACpD,MAAM,OAAO,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;QAClE,MAAM,SAAS,GAAG,CAAC,CAAC;QACpB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,SAAS,EAAE,EAAE,CAAC,EAAE,CAAC;YACpC,aAAa,CAAC,SAAS,IAAI,YAAY,CAAC,IAAI,GAAG,CAAC,EAAE,OAAO,GAAG,CAAC,CAAC,CAAC;YAE/D,MAAM,MAAM,GAAG,CAAwB,CAAC;YACxC,MAAM,IAAI,GAAG,EAAC,EAAE,EAAE,MAAM,EAAyB,CAAC;YAClD,wBAAwB,CAAC,QAAQ,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;YAC7E,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YACzC,OAAO,CAAC,QAAQ,CAAC,IAAI,EAAE,EAAC,OAAO,EAAE,OAAO,GAAG,CAAC,EAAE,oBAAoB,EAAE,SAAS,EAAC,CAAC;iBAC1E,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,cAAc,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACrE,CAAC;QAED,MAAM,UAAU,CAAC,wBAAwB,CAAC,wBAAwB,CAAC,kBAAkB,CAAC,aAAa,CAAC,CAAC;QAErG,MAAM,CAAC,WAAW,CAAC,aAAa,CAAC,UAAU,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;QAC/D,MAAM,CAAC,eAAe,CAAC,CAAC,GAAG,aAAa,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC;IAC7G,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,gBAAgB,EAAE,KAAK,IAAI,EAAE;QAC9B,aAAa,CAAC,SAAS,GAAG,YAAY,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QAEtD,MAAM,QAAQ,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;QACrD,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QACxB,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE,0BAA0B,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;QACnF,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAChD,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;QACxF,MAAM,cAAc,GAAG,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;QAEhE,MAAM,UAAU,CAAC,wBAAwB,CAAC,wBAAwB,CAAC,kBAAkB,CAAC,aAAa,CAAC,CAAC;QAErG,MAAM,CAAC,MAAM,CAAC,cAAc,CAAC,cAAc,CAAC,aAAa,CAAC,UAAyB,EAAE,EAAE,CAAC,CAAC,CAAC;IAC5F,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,gCAAgC,EAAE,KAAK,IAAI,EAAE;QAC9C,aAAa,CAAC,SAAS,GAAG,YAAY,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QACtD,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,iBAAiB,CAAC,CAAC;QAC/C,aAAa,CAAC,iBAAiB,CAAC,SAAS,GAAG,iDAAiD,CAAC;QAE9F,MAAM,QAAQ,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;QACrD,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QACxB,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE,0BAA0B,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;QACnF,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAChD,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;QAExF,MAAM,UAAU,CAAC,wBAAwB,CAAC,wBAAwB,CAAC,kBAAkB,CAAC,aAAa,CAAC,CAAC;QAErG,MAAM,CAAC,WAAW,CACd,aAAa,CAAC,iBAAiB,CAAC,SAAS,EAAE,0DAA0D,CAAC,CAAC;IAC7G,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,uBAAuB,EAAE,KAAK,IAAI,EAAE;QACrC,MAAM,YAAY,GAAG;YACnB,YAAY,CAAC,EAAE,EAAE,OAAO,CAAC;YACzB,YAAY,CAAC,cAAc,EAAE,OAAO,CAAC;YACrC,YAAY,CAAC,mBAAmB,EAAE,OAAO,CAAC;SAC3C,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACX,MAAM,QAAQ,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;QACrD,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QACxB,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE,0BAA0B,CAAC,CAAC,QAAQ,CAAC,mBAAmB,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;QACjH,aAAa,CAAC,SAAS,GAAG,YAAY,CAAC;QAEvC,MAAM,UAAU,CAAC,wBAAwB,CAAC,wBAAwB,CAAC,kBAAkB,CAAC,aAAa,CAAC,CAAC;QAErG,MAAM,CAAC,WAAW,CAAC,aAAa,CAAC,SAAS,EAAE,YAAY,CAAC,CAAC;IAC5D,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport {createTarget} from '../../testing/EnvironmentHelpers.js';\nimport {describeWithMockConnection} from '../../testing/MockConnection.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport type * as LighthouseModule from './lighthouse.js';\n\ndescribeWithMockConnection('LighthouseReportRenderer', () => {\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  let Lighthouse: typeof LighthouseModule;\n  let target: SDK.Target.Target;\n  let sourceElement: HTMLElement;\n  let linkElement: HTMLElement;\n  const PATH = 'TEST_PATH';\n  const NODE_ID = 42 as Protocol.DOM.NodeId;\n  const NODE = {id: NODE_ID} as SDK.DOMModel.DOMNode;\n  const SNIPPET = 'SNIPPET';\n  const LH_NODE_HTML = (path: string, snippet: string) =>\n      `<div class=\"lh-node\" data-path=\"${path}\" data-snippet=\"${snippet}\"></div>`;\n  beforeEach(async () => {\n    Lighthouse = await import('./lighthouse.js');\n    const tabTarget = createTarget({type: SDK.Target.Type.Tab});\n    createTarget({parentTarget: tabTarget, subtype: 'prerender'});\n    target = createTarget({parentTarget: tabTarget});\n    linkElement = document.createElement('div');\n    linkElement.textContent = 'link';\n    sourceElement = document.createElement('div');\n  });\n\n  it('resolves node and calls linkifier', async () => {\n    sourceElement.innerHTML = LH_NODE_HTML(PATH, SNIPPET);\n\n    const domModel = target.model(SDK.DOMModel.DOMModel);\n    assert.exists(domModel);\n    sinon.stub(domModel, 'pushNodeByPathToFrontend').withArgs(PATH).returns(Promise.resolve(NODE_ID));\n    sinon.stub(domModel, 'nodeForId').withArgs(NODE_ID).returns(NODE);\n    sinon.stub(Common.Linkifier.Linkifier, 'linkify')\n        .withArgs(NODE, {tooltip: SNIPPET, preventKeyboardFocus: undefined})\n        .returns(Promise.resolve(linkElement));\n\n    await Lighthouse.LighthouseReportRenderer.LighthouseReportRenderer.linkifyNodeDetails(sourceElement);\n\n    assert.include([...sourceElement.firstChild?.childNodes || []], linkElement);\n  });\n\n  it('handles multiple nodes', async () => {\n    const domModel = target.model(SDK.DOMModel.DOMModel);\n    assert.exists(domModel);\n    const pushNodeByPathToFrontend = sinon.stub(domModel, 'pushNodeByPathToFrontend');\n    const nodeForId = sinon.stub(domModel, 'nodeForId');\n    const linkify = sinon.stub(Common.Linkifier.Linkifier, 'linkify');\n    const NUM_NODES = 3;\n    for (let i = 1; i <= NUM_NODES; ++i) {\n      sourceElement.innerHTML += LH_NODE_HTML(PATH + i, SNIPPET + i);\n\n      const nodeId = i as Protocol.DOM.NodeId;\n      const node = {id: nodeId} as SDK.DOMModel.DOMNode;\n      pushNodeByPathToFrontend.withArgs(PATH + i).returns(Promise.resolve(nodeId));\n      nodeForId.withArgs(nodeId).returns(node);\n      linkify.withArgs(node, {tooltip: SNIPPET + i, preventKeyboardFocus: undefined})\n          .returns(Promise.resolve(document.createTextNode(`link${i}`)));\n    }\n\n    await Lighthouse.LighthouseReportRenderer.LighthouseReportRenderer.linkifyNodeDetails(sourceElement);\n\n    assert.strictEqual(sourceElement.childNodes.length, NUM_NODES);\n    assert.deepStrictEqual([...sourceElement.childNodes].map(n => n.textContent), ['link1', 'link2', 'link3']);\n  });\n\n  it('resets tooltip', async () => {\n    sourceElement.innerHTML = LH_NODE_HTML(PATH, SNIPPET);\n\n    const domModel = target.model(SDK.DOMModel.DOMModel);\n    assert.exists(domModel);\n    sinon.stub(domModel, 'pushNodeByPathToFrontend').returns(Promise.resolve(NODE_ID));\n    sinon.stub(domModel, 'nodeForId').returns(NODE);\n    sinon.stub(Common.Linkifier.Linkifier, 'linkify').returns(Promise.resolve(linkElement));\n    const installTooltip = sinon.spy(UI.Tooltip.Tooltip, 'install');\n\n    await Lighthouse.LighthouseReportRenderer.LighthouseReportRenderer.linkifyNodeDetails(sourceElement);\n\n    assert.isTrue(installTooltip.calledOnceWith(sourceElement.firstChild as HTMLElement, ''));\n  });\n\n  it('only keeps link and screenshot', async () => {\n    sourceElement.innerHTML = LH_NODE_HTML(PATH, SNIPPET);\n    assert.exists(sourceElement.firstElementChild);\n    sourceElement.firstElementChild.innerHTML = 'foo<div class=\"lh-element-screenshot\"></div>bar';\n\n    const domModel = target.model(SDK.DOMModel.DOMModel);\n    assert.exists(domModel);\n    sinon.stub(domModel, 'pushNodeByPathToFrontend').returns(Promise.resolve(NODE_ID));\n    sinon.stub(domModel, 'nodeForId').returns(NODE);\n    sinon.stub(Common.Linkifier.Linkifier, 'linkify').returns(Promise.resolve(linkElement));\n\n    await Lighthouse.LighthouseReportRenderer.LighthouseReportRenderer.linkifyNodeDetails(sourceElement);\n\n    assert.strictEqual(\n        sourceElement.firstElementChild.innerHTML, '<div class=\"lh-element-screenshot\"></div><div>link</div>');\n  });\n\n  it('skips malformed nodes', async () => {\n    const originalHtml = [\n      LH_NODE_HTML('', SNIPPET),\n      LH_NODE_HTML('UNKNOWN_PATH', SNIPPET),\n      LH_NODE_HTML('PATH_WIHTOUT_NODE', SNIPPET),\n    ].join('');\n    const domModel = target.model(SDK.DOMModel.DOMModel);\n    assert.exists(domModel);\n    sinon.stub(domModel, 'pushNodeByPathToFrontend').withArgs('PATH_WIHTOUT_NODE').returns(Promise.resolve(NODE_ID));\n    sourceElement.innerHTML = originalHtml;\n\n    await Lighthouse.LighthouseReportRenderer.LighthouseReportRenderer.linkifyNodeDetails(sourceElement);\n\n    assert.strictEqual(sourceElement.innerHTML, originalHtml);\n  });\n});\n"]}