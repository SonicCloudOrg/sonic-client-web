{"version":3,"file":"LighthousePanel.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/lighthouse/LighthousePanel.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Common from '../../core/common/common.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport {createTarget, stubNoopSettings} from '../../testing/EnvironmentHelpers.js';\nimport {describeWithMockConnection} from '../../testing/MockConnection.js';\n\nimport type * as LighthouseModule from './lighthouse.js';\n\ndescribeWithMockConnection('LighthousePanel', () => {\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  let Lighthouse: typeof LighthouseModule;\n  let target: SDK.Target.Target;\n  let resourceTreeModelNavigate: sinon.SinonStub;\n  let protocolService: LighthouseModule.LighthouseProtocolService.ProtocolService;\n  let controller: LighthouseModule.LighthouseController.LighthouseController;\n\n  const URL = 'http://example.com';\n  const LH_REPORT = {\n    lhr: {\n      finalDisplayedUrl: URL,\n      configSettings: {},\n      audits: {},\n      categories: {_: {auditRefs: [], id: ''}},\n      lighthouseVersion: '',\n      userAgent: '',\n      fetchTime: 0,\n      environment: {benchmarkIndex: 0},\n      i18n: {rendererFormattedStrings: {}},\n    },\n  } as unknown as LighthouseModule.LighthouseReporterTypes.RunnerResult;\n\n  beforeEach(async () => {\n    Lighthouse = await import('./lighthouse.js');\n    const tabTarget = createTarget({type: SDK.Target.Type.Tab});\n    createTarget({parentTarget: tabTarget, subtype: 'prerender'});\n    target = createTarget({parentTarget: tabTarget});\n    sinon.stub(target.pageAgent(), 'invoke_getNavigationHistory').resolves({\n      currentIndex: 0,\n      entries: [{url: URL}],\n      getError: () => null,\n    } as unknown as Protocol.Page.GetNavigationHistoryResponse);\n\n    const resourceTreeModel = target.model(SDK.ResourceTreeModel.ResourceTreeModel);\n    assert.exists(resourceTreeModel);\n    resourceTreeModelNavigate = sinon.stub(resourceTreeModel, 'navigate').resolves();\n    sinon.stub(resourceTreeModel, 'addEventListener')\n        .callThrough()\n        .withArgs(SDK.ResourceTreeModel.Events.Load, sinon.match.any)\n        .callsArgWithAsync(1, {resourceTreeModel, loadTime: 0})\n        .returns({} as Common.EventTarget.EventDescriptor);\n\n    protocolService = new Lighthouse.LighthouseProtocolService.ProtocolService();\n    sinon.stub(protocolService, 'attach').resolves();\n    sinon.stub(protocolService, 'detach').resolves();\n    sinon.stub(protocolService, 'collectLighthouseResults').resolves(LH_REPORT);\n\n    controller = new Lighthouse.LighthouseController.LighthouseController(protocolService);\n\n    stubNoopSettings();\n  });\n\n  // Failing due to StartView not finding settings title.\n  it.skip('[crbug.com/326214132] restores the original URL when done', async () => {\n    const instance = Lighthouse.LighthousePanel.LighthousePanel.instance({forceNew: true, protocolService, controller});\n    void instance.handleCompleteRun();\n\n    await new Promise<void>(resolve => resourceTreeModelNavigate.withArgs(URL).callsFake(() => {\n      resolve();\n      return Promise.resolve();\n    }));\n  });\n\n  // Failing due to StartView not finding settings title.\n  it.skip('[crbug.com/326214132] waits for main taget to load before linkifying', async () => {\n    const instance = Lighthouse.LighthousePanel.LighthousePanel.instance({forceNew: true, protocolService, controller});\n    void instance.handleCompleteRun();\n\n    await new Promise<void>(\n        resolve => sinon.stub(Lighthouse.LighthouseReportRenderer.LighthouseReportRenderer, 'linkifyNodeDetails')\n                       .callsFake((_: Element) => {\n                         resolve();\n                         return Promise.resolve();\n                       }));\n  });\n});\n"]}