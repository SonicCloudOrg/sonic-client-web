{"version":3,"file":"PromptBuilder.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/explain/PromptBuilder.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport * as Bindings from '../../models/bindings/bindings.js';\nimport * as Logs from '../../models/logs/logs.js';\nimport * as Workspace from '../../models/workspace/workspace.js';\nimport {\n  createConsoleViewMessageWithStubDeps,\n  createStackTrace,\n} from '../../testing/ConsoleHelpers.js';\nimport {createTarget, describeWithLocale} from '../../testing/EnvironmentHelpers.js';\nimport {describeWithMockConnection} from '../../testing/MockConnection.js';\nimport {\n  createContentProviderUISourceCode,\n  createFakeScriptMapping,\n} from '../../testing/UISourceCodeHelpers.js';\n\nimport * as Explain from './explain.js';\n\ndescribeWithLocale('PromptBuilder', () => {\n  describe('allowHeader', () => {\n    it('disallows cookie headers', () => {\n      assert(!Explain.allowHeader({name: 'Cookie', value: ''}));\n      assert(!Explain.allowHeader({name: 'cookiE', value: ''}));\n      assert(!Explain.allowHeader({name: 'cookie', value: ''}));\n      assert(!Explain.allowHeader({name: 'set-cookie', value: ''}));\n      assert(!Explain.allowHeader({name: 'Set-cOokie', value: ''}));\n    });\n\n    it('disallows authorization headers', () => {\n      assert(!Explain.allowHeader({name: 'AuthoRization', value: ''}));\n      assert(!Explain.allowHeader({name: 'authorization', value: ''}));\n    });\n\n    it('disallows custom headers', () => {\n      assert(!Explain.allowHeader({name: 'X-smth', value: ''}));\n      assert(!Explain.allowHeader({name: 'X-', value: ''}));\n      assert(!Explain.allowHeader({name: 'x-smth', value: ''}));\n      assert(!Explain.allowHeader({name: 'x-', value: ''}));\n    });\n  });\n\n  const NETWORK_REQUEST = {\n    url() {\n      return 'https://example.com' as Platform.DevToolsPath.UrlString;\n    },\n    requestHeaders() {\n      return [{\n        name: 'Origin',\n        value: 'https://example.com',\n      }];\n    },\n    statusCode: 404,\n    statusText: 'Not found',\n    responseHeaders: [{\n      name: 'Origin',\n      value: 'https://example.com',\n    }],\n  } as SDK.NetworkRequest.NetworkRequest;\n\n  describe('format formatNetworkRequest', () => {\n    it('formats a network request', () => {\n      assert.strictEqual(Explain.formatNetworkRequest(NETWORK_REQUEST), `Request: https://example.com\n\nRequest headers:\nOrigin: https://example.com\n\nResponse headers:\nOrigin: https://example.com\n\nResponse status: 404 Not found`);\n    });\n  });\n\n  describe('formatRelatedCode', () => {\n    it('formats a single line code', () => {\n      assert.strictEqual(\n          Explain.formatRelatedCode(\n              {\n                text: '12345678901234567890',\n                columnNumber: 10,\n                lineNumber: 0,\n              },\n              /* maxLength=*/ 5),\n          '89012');\n      assert.strictEqual(\n          Explain.formatRelatedCode(\n              {\n                text: '12345678901234567890',\n                columnNumber: 10,\n                lineNumber: 0,\n              },\n              /* maxLength=*/ 6),\n          '890123');\n      assert.strictEqual(\n          Explain.formatRelatedCode(\n              {\n                text: '12345678901234567890',\n                columnNumber: 10,\n                lineNumber: 0,\n              },\n              /* maxLength=*/ 30),\n          '12345678901234567890');\n    });\n\n    it('formats a multiline code', () => {\n      assert.strictEqual(\n          Explain.formatRelatedCode(\n              {\n                text: '123\\n456\\n789\\n123\\n456\\n789\\n',\n                columnNumber: 1,\n                lineNumber: 1,\n              },\n              /* maxLength=*/ 5),\n          '456');\n      assert.strictEqual(\n          Explain.formatRelatedCode(\n              {\n                text: '123\\n456\\n789\\n123\\n456\\n789\\n',\n                columnNumber: 1,\n                lineNumber: 1,\n              },\n              /* maxLength=*/ 10),\n          '456\\n789\\n123');\n      assert.strictEqual(\n          Explain.formatRelatedCode(\n              {\n                text: '123\\n456\\n789\\n123\\n456\\n789\\n',\n                columnNumber: 1,\n                lineNumber: 1,\n              },\n              /* maxLength=*/ 16),\n          '123\\n456\\n789\\n123');\n    });\n\n    it('uses indentation to select blocks or functions', () => {\n      // Somewhat realistic code\n      const text = `import something;\nimport anotherthing;\n\nconst x = 1;\nfunction f1() {\n  // a\n\n  // b\n}\n\nfunction bigger() {\n  // x\n  if (true) {\n    // y\n\n    // zzzzzz\n  }\n\n  let y = x + 2;\n\n  if (false) {\n    // a\n\n    f1();\n    if (x == x) {\n      // z\n    }\n  }\n}\n\nexport const y = \"\";\n`;\n      assert.strictEqual(\n          Explain.formatRelatedCode({text, columnNumber: 4, lineNumber: 11}, /* maxLength=*/ 233),\n          '  // x\\n  if (true) {\\n    // y\\n\\n    // zzzzzz\\n  }\\n\\n  let y = x + 2;\\n\\n  if (false) {\\n    // a\\n\\n    f1();\\n    if (x == x) {\\n      // z\\n    }\\n  }',\n      );\n      assert.strictEqual(\n          Explain.formatRelatedCode({text, columnNumber: 4, lineNumber: 11}, /* maxLength=*/ 232),\n          '  // x\\n  if (true) {\\n    // y\\n\\n    // zzzzzz\\n  }\\n\\n  let y = x + 2;',\n      );\n      assert.strictEqual(\n          Explain.formatRelatedCode({text, columnNumber: 4, lineNumber: 11}, /* maxLength=*/ 600),\n          text.trim(),\n      );\n      assert.strictEqual(\n          Explain.formatRelatedCode({text, columnNumber: 4, lineNumber: 11}, /* maxLength=*/ 50),\n          '  // x\\n  if (true) {\\n    // y\\n\\n    // zzzzzz\\n  }',\n      );\n      assert.strictEqual(\n          Explain.formatRelatedCode({text, columnNumber: 4, lineNumber: 11}, /* maxLength=*/ 40),\n          '  // x',\n      );\n      assert.strictEqual(\n          Explain.formatRelatedCode({text, columnNumber: 4, lineNumber: 18}, /* maxLength=*/ 50),\n          '  let y = x + 2;',\n      );\n    });\n  });\n\n  it('Extracts expected whitespace from beginnings of lines', () => {\n    assert.strictEqual(Explain.lineWhitespace(' a'), ' ');\n    assert.strictEqual(Explain.lineWhitespace('a'), '');\n    assert.strictEqual(Explain.lineWhitespace(' '), null);\n    assert.strictEqual(Explain.lineWhitespace(''), null);\n    assert.strictEqual(Explain.lineWhitespace('\\t\\ta'), '\\t\\t');\n  });\n\n  describeWithMockConnection('buildPrompt', () => {\n    let target: SDK.Target.Target;\n    let debuggerWorkspaceBinding: Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding;\n\n    beforeEach(() => {\n      target = createTarget();\n      const targetManager = target.targetManager();\n      const workspace = Workspace.Workspace.WorkspaceImpl.instance();\n      const resourceMapping = new Bindings.ResourceMapping.ResourceMapping(targetManager, workspace);\n      debuggerWorkspaceBinding = Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.instance(\n          {forceNew: true, resourceMapping, targetManager});\n    });\n\n    const PREAMBLE = 'Why does browser show an error';\n    const RELATED_CODE_PREFIX = 'For the following code in my web app';\n    const RELATED_NETWORK_REQUEST_PREFIX = 'For the following network request in my web app';\n\n    it('builds a simple prompt', async () => {\n      const runtimeModel = target.model(SDK.RuntimeModel.RuntimeModel);\n      const messageDetails = {\n        type: Protocol.Runtime.ConsoleAPICalledEventType.Log,\n      };\n      const ERROR_MESSAGE = 'kaboom!';\n      const rawMessage = new SDK.ConsoleModel.ConsoleMessage(\n          runtimeModel, Common.Console.FrontendMessageSource.ConsoleAPI, /* level */ null, ERROR_MESSAGE,\n          messageDetails);\n      const {message} = createConsoleViewMessageWithStubDeps(rawMessage);\n      const promptBuilder = new Explain.PromptBuilder(message);\n      const {prompt, sources} = await promptBuilder.buildPrompt();\n      assert.strictEqual(prompt, [\n        PREAMBLE,\n        ERROR_MESSAGE,\n      ].join('\\n'));\n      assert.deepStrictEqual(sources, [{type: 'message', value: ERROR_MESSAGE}]);\n    });\n\n    it('builds a prompt with related code', async () => {\n      const runtimeModel = target.model(SDK.RuntimeModel.RuntimeModel);\n      const SCRIPT_ID = '1' as Protocol.Runtime.ScriptId;\n      const LINE_NUMBER = 42;\n      const URL = 'http://example.com/script.js' as Platform.DevToolsPath.UrlString;\n      const stackTrace = createStackTrace([\n        `${SCRIPT_ID}::userNestedFunction::${URL}::${LINE_NUMBER}::15`,\n        `${SCRIPT_ID}::userFunction::http://example.com/script.js::10::2`,\n        `${SCRIPT_ID}::entry::http://example.com/app.js::25::10`,\n      ]);\n      const messageDetails = {\n        type: Protocol.Runtime.ConsoleAPICalledEventType.Log,\n        stackTrace,\n      };\n      const RELATED_CODE = `${'\\n'.repeat(LINE_NUMBER)}console.error('kaboom!')`;\n      const {uiSourceCode, project} =\n          createContentProviderUISourceCode({url: URL, mimeType: 'text/javascript', content: RELATED_CODE});\n      const debuggerModel = target.model(SDK.DebuggerModel.DebuggerModel);\n      assert.exists(debuggerModel);\n      const mapping = createFakeScriptMapping(debuggerModel, uiSourceCode, LINE_NUMBER, SCRIPT_ID);\n      debuggerWorkspaceBinding.addSourceMapping(mapping);\n      const ERROR_MESSAGE = 'kaboom!';\n      const rawMessage = new SDK.ConsoleModel.ConsoleMessage(\n          runtimeModel, Common.Console.FrontendMessageSource.ConsoleAPI, /* level */ null, ERROR_MESSAGE,\n          messageDetails);\n      const {message} = createConsoleViewMessageWithStubDeps(rawMessage);\n      const promptBuilder = new Explain.PromptBuilder(message);\n      const {prompt, sources} = await promptBuilder.buildPrompt();\n      assert.strictEqual(prompt, [\n        PREAMBLE,\n        ERROR_MESSAGE,\n        RELATED_CODE_PREFIX,\n        '',\n        '```',\n        RELATED_CODE.trim(),\n        '```',\n      ].join('\\n'));\n\n      assert.deepStrictEqual(\n          sources, [{type: 'message', value: ERROR_MESSAGE}, {type: 'relatedCode', value: RELATED_CODE.trim()}]);\n\n      Workspace.Workspace.WorkspaceImpl.instance().removeProject(project);\n      Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.instance().removeSourceMapping(mapping);\n    });\n\n    it('builds a prompt with related code and stacktrace', async () => {\n      const runtimeModel = target.model(SDK.RuntimeModel.RuntimeModel);\n      const SCRIPT_ID = '1' as Protocol.Runtime.ScriptId;\n      const LINE_NUMBER = 42;\n      const URL = 'http://example.com/script.js' as Platform.DevToolsPath.UrlString;\n      const stackTrace = createStackTrace([\n        `${SCRIPT_ID}::userNestedFunction::${URL}::${LINE_NUMBER}::15`,\n        `${SCRIPT_ID}::userFunction::http://example.com/script.js::10::2`,\n        `${SCRIPT_ID}::entry::http://example.com/app.js::25::10`,\n      ]);\n      // Linkifier is mocked in this test, therefore, no link text after @.\n      const STACK_TRACE = ['userNestedFunction @ ', 'userFunction @ ', 'entry @'].join('\\n');\n      const messageDetails = {\n        type: Protocol.Runtime.ConsoleAPICalledEventType.Log,\n        stackTrace,\n      };\n      const RELATED_CODE = `${'\\n'.repeat(LINE_NUMBER)}console.error('kaboom!')`;\n      const {uiSourceCode, project} =\n          createContentProviderUISourceCode({url: URL, mimeType: 'text/javascript', content: RELATED_CODE});\n      const debuggerModel = target.model(SDK.DebuggerModel.DebuggerModel);\n      assert.exists(debuggerModel);\n      const mapping = createFakeScriptMapping(debuggerModel, uiSourceCode, LINE_NUMBER, SCRIPT_ID);\n      debuggerWorkspaceBinding.addSourceMapping(mapping);\n      const ERROR_MESSAGE = 'kaboom!';\n      const rawMessage = new SDK.ConsoleModel.ConsoleMessage(\n          runtimeModel, Common.Console.FrontendMessageSource.ConsoleAPI, Protocol.Log.LogEntryLevel.Error,\n          ERROR_MESSAGE, messageDetails);\n      const {message} = createConsoleViewMessageWithStubDeps(rawMessage);\n      const promptBuilder = new Explain.PromptBuilder(message);\n      const {prompt, sources} = await promptBuilder.buildPrompt();\n      assert.strictEqual(prompt, [\n        PREAMBLE,\n        ERROR_MESSAGE,\n        STACK_TRACE,\n        RELATED_CODE_PREFIX,\n        '',\n        '```',\n        RELATED_CODE.trim(),\n        '```',\n      ].join('\\n'));\n\n      assert.deepStrictEqual(sources, [\n        {type: 'message', value: ERROR_MESSAGE},\n        {type: 'stacktrace', value: STACK_TRACE},\n        {type: 'relatedCode', value: RELATED_CODE.trim()},\n      ]);\n\n      Workspace.Workspace.WorkspaceImpl.instance().removeProject(project);\n      Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.instance().removeSourceMapping(mapping);\n    });\n\n    it('trims a very long network request', async () => {\n      const runtimeModel = target.model(SDK.RuntimeModel.RuntimeModel);\n      const REQUEST_ID = '29.1' as Protocol.Network.RequestId;\n      const messageDetails = {\n        type: Protocol.Runtime.ConsoleAPICalledEventType.Log,\n        affectedResources: {\n          requestId: REQUEST_ID,\n        },\n      };\n      const NETWORK_REQUEST = {\n        url() {\n          return 'https://example.com' as Platform.DevToolsPath.UrlString;\n        },\n        requestHeaders() {\n          return Array(100).fill({\n            name: 'Origin',\n            value: 'https://example.com',\n          });\n        },\n        statusCode: 404,\n        statusText: 'Not found',\n        responseHeaders: Array(100).fill({\n          name: 'Origin',\n          value: 'https://example.com',\n        }),\n      } as SDK.NetworkRequest.NetworkRequest;\n      sinon.stub(Logs.NetworkLog.NetworkLog.instance(), 'requestsForId').withArgs(REQUEST_ID).returns([\n        NETWORK_REQUEST,\n      ]);\n      const RELATED_REQUEST = [\n        'Request: https://example.com',\n        '',\n        'Request headers:',\n        'Origin: https://example.com\\n'.repeat(35),\n        'Response headers:',\n        'Origin: https://example.com\\n'.repeat(35),\n        'Response status: 404 Not found',\n      ].join('\\n');\n      const ERROR_MESSAGE = 'kaboom!';\n      const rawMessage = new SDK.ConsoleModel.ConsoleMessage(\n          runtimeModel, Common.Console.FrontendMessageSource.ConsoleAPI, /* level */ null, ERROR_MESSAGE,\n          messageDetails);\n      const {message} = createConsoleViewMessageWithStubDeps(rawMessage);\n      const promptBuilder = new Explain.PromptBuilder(message);\n      const {prompt, sources} = await promptBuilder.buildPrompt();\n      assert.strictEqual(prompt, [\n        PREAMBLE,\n        ERROR_MESSAGE,\n        RELATED_NETWORK_REQUEST_PREFIX,\n        '',\n        '```',\n        RELATED_REQUEST,\n        '```',\n      ].join('\\n'));\n\n      assert.deepStrictEqual(\n          sources, [{type: 'message', value: ERROR_MESSAGE}, {type: 'networkRequest', value: RELATED_REQUEST}]);\n    });\n\n    it('trims a very long console message', async () => {\n      const runtimeModel = target.model(SDK.RuntimeModel.RuntimeModel);\n      const messageDetails = {\n        type: Protocol.Runtime.ConsoleAPICalledEventType.Log,\n      };\n      const ERROR_MESSAGE = 'a'.repeat(2000);\n      const TRIMMED_ERROR_MESSAGE = 'a'.repeat(1000);\n      const rawMessage = new SDK.ConsoleModel.ConsoleMessage(\n          runtimeModel, Common.Console.FrontendMessageSource.ConsoleAPI, /* level */ null, ERROR_MESSAGE,\n          messageDetails);\n      const {message} = createConsoleViewMessageWithStubDeps(rawMessage);\n      const promptBuilder = new Explain.PromptBuilder(message);\n      const {prompt, sources} = await promptBuilder.buildPrompt();\n      assert.strictEqual(prompt, [\n        PREAMBLE,\n        TRIMMED_ERROR_MESSAGE,\n      ].join('\\n'));\n      assert.deepStrictEqual(sources, [{type: 'message', value: TRIMMED_ERROR_MESSAGE}]);\n    });\n\n    it('trims a very long stack trace', async () => {\n      const runtimeModel = target.model(SDK.RuntimeModel.RuntimeModel);\n      const SCRIPT_ID = '1' as Protocol.Runtime.ScriptId;\n      const LINE_NUMBER = 0;\n      const URL = `http://example.com/${'a'.repeat(100)}.js` as Platform.DevToolsPath.UrlString;\n      const STACK_FRAME = `${SCRIPT_ID}::userNestedFunction::${URL}::${LINE_NUMBER}::15`;\n      const stackTrace = createStackTrace(Array(80).fill(STACK_FRAME));\n      const STACK_TRACE = 'userNestedFunction @ \\n'.repeat(45).trim();\n      const messageDetails = {\n        type: Protocol.Runtime.ConsoleAPICalledEventType.Log,\n        stackTrace,\n      };\n      const RELATED_CODE = 'console.error(\\'kaboom!\\')';\n      const {uiSourceCode, project} =\n          createContentProviderUISourceCode({url: URL, mimeType: 'text/javascript', content: RELATED_CODE});\n      const debuggerModel = target.model(SDK.DebuggerModel.DebuggerModel);\n      assert.isNotNull(debuggerModel);\n      const mapping = createFakeScriptMapping(debuggerModel, uiSourceCode, LINE_NUMBER, SCRIPT_ID);\n      debuggerWorkspaceBinding.addSourceMapping(mapping);\n      const ERROR_MESSAGE = 'kaboom!';\n      const rawMessage = new SDK.ConsoleModel.ConsoleMessage(\n          runtimeModel, Common.Console.FrontendMessageSource.ConsoleAPI, Protocol.Log.LogEntryLevel.Error,\n          ERROR_MESSAGE, messageDetails);\n      const {message} = createConsoleViewMessageWithStubDeps(rawMessage);\n      const promptBuilder = new Explain.PromptBuilder(message);\n      const {prompt, sources} = await promptBuilder.buildPrompt();\n      assert.strictEqual(prompt, [\n        PREAMBLE,\n        ERROR_MESSAGE,\n        STACK_TRACE,\n        RELATED_CODE_PREFIX,\n        '',\n        '```',\n        RELATED_CODE.trim(),\n        '```',\n      ].join('\\n'));\n\n      assert.deepStrictEqual(sources, [\n        {type: 'message', value: ERROR_MESSAGE},\n        {type: 'stacktrace', value: STACK_TRACE},\n        {type: 'relatedCode', value: RELATED_CODE.trim()},\n      ]);\n\n      Workspace.Workspace.WorkspaceImpl.instance().removeProject(project);\n      Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.instance().removeSourceMapping(mapping);\n    });\n\n    it('builds a prompt with related request', async () => {\n      const runtimeModel = target.model(SDK.RuntimeModel.RuntimeModel);\n      const REQUEST_ID = '29.1' as Protocol.Network.RequestId;\n      const messageDetails = {\n        type: Protocol.Runtime.ConsoleAPICalledEventType.Log,\n        affectedResources: {\n          requestId: REQUEST_ID,\n        },\n      };\n      sinon.stub(Logs.NetworkLog.NetworkLog.instance(), 'requestsForId').withArgs(REQUEST_ID).returns([\n        NETWORK_REQUEST,\n      ]);\n      const RELATED_REQUEST = [\n        'Request: https://example.com',\n        '',\n        'Request headers:',\n        'Origin: https://example.com',\n        '',\n        'Response headers:',\n        'Origin: https://example.com',\n        '',\n        'Response status: 404 Not found',\n      ].join('\\n');\n      const ERROR_MESSAGE = 'kaboom!';\n      const rawMessage = new SDK.ConsoleModel.ConsoleMessage(\n          runtimeModel, Common.Console.FrontendMessageSource.ConsoleAPI, /* level */ null, ERROR_MESSAGE,\n          messageDetails);\n      const {message} = createConsoleViewMessageWithStubDeps(rawMessage);\n      const promptBuilder = new Explain.PromptBuilder(message);\n      const {prompt, sources, isPageReloadRecommended} = await promptBuilder.buildPrompt();\n      assert.strictEqual(prompt, [\n        PREAMBLE,\n        ERROR_MESSAGE,\n        RELATED_NETWORK_REQUEST_PREFIX,\n        '',\n        '```',\n        RELATED_REQUEST,\n        '```',\n      ].join('\\n'));\n\n      assert.isNotTrue(isPageReloadRecommended, 'PromptBuilder did recommend reloading the page');\n      assert.deepStrictEqual(\n          sources, [{type: 'message', value: ERROR_MESSAGE}, {type: 'networkRequest', value: RELATED_REQUEST}]);\n    });\n\n    it('recommends page reload if the sources are not complete', async () => {\n      const runtimeModel = target.model(SDK.RuntimeModel.RuntimeModel);\n      const REQUEST_ID = '29.1' as Protocol.Network.RequestId;\n      const messageDetails = {\n        type: Protocol.Runtime.ConsoleAPICalledEventType.Log,\n        affectedResources: {\n          requestId: REQUEST_ID,\n        },\n      };\n      sinon.stub(Logs.NetworkLog.NetworkLog.instance(), 'requestsForId').withArgs(REQUEST_ID).returns([]);\n      const ERROR_MESSAGE = 'kaboom!';\n      const rawMessage = new SDK.ConsoleModel.ConsoleMessage(\n          runtimeModel, Common.Console.FrontendMessageSource.ConsoleAPI, /* level */ null, ERROR_MESSAGE,\n          messageDetails);\n      const {message} = createConsoleViewMessageWithStubDeps(rawMessage);\n      const promptBuilder = new Explain.PromptBuilder(message);\n      const {sources, isPageReloadRecommended} = await promptBuilder.buildPrompt();\n      assert.isTrue(isPageReloadRecommended, 'PromptBuilder did not recommend reloading the page');\n      assert.isNotTrue(sources.some(source => source.type === Explain.SourceType.NETWORK_REQUEST));\n    });\n\n  });\n\n  describeWithMockConnection('getSearchQuery', () => {\n    let target: SDK.Target.Target;\n\n    beforeEach(() => {\n      target = createTarget();\n    });\n\n    it('builds a simple search query', async () => {\n      const runtimeModel = target.model(SDK.RuntimeModel.RuntimeModel);\n      const messageDetails = {\n        type: Protocol.Runtime.ConsoleAPICalledEventType.Log,\n      };\n      const ERROR_MESSAGE = 'kaboom!';\n      const rawMessage = new SDK.ConsoleModel.ConsoleMessage(\n          runtimeModel, Common.Console.FrontendMessageSource.ConsoleAPI, Protocol.Log.LogEntryLevel.Error,\n          ERROR_MESSAGE, messageDetails);\n      const {message} = createConsoleViewMessageWithStubDeps(rawMessage);\n      const promptBuilder = new Explain.PromptBuilder(message);\n      const query = await promptBuilder.getSearchQuery();\n      assert.strictEqual(query, 'kaboom!');\n    });\n\n    it('builds a search query from an error without the callstack', async () => {\n      const runtimeModel = target.model(SDK.RuntimeModel.RuntimeModel);\n      const messageDetails = {\n        type: Protocol.Runtime.ConsoleAPICalledEventType.Log,\n      };\n      const ERROR_MESSAGE = 'Got an error: ' + new Error('fail').stack;\n      const rawMessage = new SDK.ConsoleModel.ConsoleMessage(\n          runtimeModel, Common.Console.FrontendMessageSource.ConsoleAPI, Protocol.Log.LogEntryLevel.Error,\n          ERROR_MESSAGE, messageDetails);\n      const {message} = createConsoleViewMessageWithStubDeps(rawMessage);\n      const promptBuilder = new Explain.PromptBuilder(message);\n      const query = await promptBuilder.getSearchQuery();\n      assert.strictEqual(query, 'Got an error: Error: fail');\n    });\n  });\n});\n"]}