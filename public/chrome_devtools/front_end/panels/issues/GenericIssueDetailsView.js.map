{"version":3,"file":"GenericIssueDetailsView.js","sourceRoot":"","sources":["../../../../../../front_end/panels/issues/GenericIssueDetailsView.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport type * as IssuesManager from '../../models/issues_manager/issues_manager.js';\nimport * as Protocol from '../../generated/protocol.js';\n\nimport {AffectedResourcesView} from './AffectedResourcesView.js';\n\nconst UIStrings = {\n  /**\n   *@description Label for number of affected resources indication in issue view\n   */\n  nResources: '{n, plural, =1 {# resource} other {# resources}}',\n  /**\n   *@description Title for the 'Frame' column.\n   */\n  frameId: 'Frame',\n  /**\n   *@description Label for the violating node link in the issue view.\n   */\n  violatingNode: 'Violating node',\n};\n\nconst str_ = i18n.i18n.registerUIStrings('panels/issues/GenericIssueDetailsView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class GenericIssueDetailsView extends AffectedResourcesView {\n  protected getResourceNameWithCount(count: number): Platform.UIString.LocalizedString {\n    return i18nString(UIStrings.nResources, {n: count});\n  }\n\n  #appendDetails(genericIssues: ReadonlySet<IssuesManager.GenericIssue.GenericIssue>): void {\n    const header = document.createElement('tr');\n\n    const sampleIssueDetails = genericIssues.values().next().value.details();\n    if (sampleIssueDetails.frameId) {\n      this.appendColumnTitle(header, i18nString(UIStrings.frameId));\n    }\n\n    // Only some `GenericIssueDetails` have information for the 'affected\n    // resources' view. We'll count them and only call `#appendDetail` for\n    // those. `updateAffectedResourceCount` will hide the section if the\n    // count is zero.\n    this.affectedResources.appendChild(header);\n    let count = 0;\n    for (const genericIssue of genericIssues) {\n      const hasAffectedResource = genericIssue.details().frameId || genericIssue.details().violatingNodeId;\n      if (hasAffectedResource) {\n        count++;\n        void this.#appendDetail(genericIssue);\n      }\n    }\n    this.updateAffectedResourceCount(count);\n  }\n\n  async #appendDetail(genericIssue: IssuesManager.GenericIssue.GenericIssue): Promise<void> {\n    const element = document.createElement('tr');\n    element.classList.add('affected-resource-directive');\n\n    const details = genericIssue.details();\n    if (details.frameId) {\n      element.appendChild(this.createFrameCell(details.frameId, genericIssue.getCategory()));\n    }\n    if (details.violatingNodeId) {\n      const target = genericIssue.model()?.target() || null;\n      element.appendChild(await this.createElementCell(\n          {backendNodeId: details.violatingNodeId, nodeName: this.violatingNodeIdName(details.errorType), target},\n          genericIssue.getCategory()));\n    }\n\n    this.affectedResources.appendChild(element);\n  }\n\n  private violatingNodeIdName(errorType: Protocol.Audits.GenericIssueErrorType): Platform.UIString.LocalizedString {\n    switch (errorType) {\n      case Protocol.Audits.GenericIssueErrorType.FormLabelForNameError:\n        // Since the error is referencing the <label> tag, this string doesn't\n        // need to be translated.\n        return i18n.i18n.lockedString('Label');\n      default:\n        return i18nString(UIStrings.violatingNode);\n    }\n  }\n\n  update(): void {\n    this.clear();\n    const issues = this.issue.getGenericIssues();\n    if (issues.size > 0) {\n      this.#appendDetails(issues);\n    } else {\n      this.updateAffectedResourceCount(0);\n    }\n  }\n}\n"]}