{"version":3,"file":"ProfilesPanel.js","sourceRoot":"","sources":["../../../../../../front_end/panels/profiler/ProfilesPanel.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/*\n * Copyright (C) 2008 Apple Inc. All Rights Reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\n * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\n// eslint-disable-next-line rulesdir/es_modules_import\nimport objectValueStyles from '../../ui/legacy/components/object_ui/objectValue.css.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport heapProfilerStyles from './heapProfiler.css.js';\nimport {\n  type DataDisplayDelegate,\n  ProfileEvents as ProfileTypeEvents,\n  ProfileHeader,\n  type ProfileType,\n} from './ProfileHeader.js';\nimport {Events as ProfileLauncherEvents, ProfileLauncherView} from './ProfileLauncherView.js';\nimport {ProfileSidebarTreeElement} from './ProfileSidebarTreeElement.js';\nimport profilesPanelStyles from './profilesPanel.css.js';\nimport profilesSidebarTreeStyles from './profilesSidebarTree.css.js';\n\nconst UIStrings = {\n  /**\n   *@description Text in Profiles Panel of a profiler tool\n   *@example {'.js', '.json'} PH1\n   */\n  cantLoadFileSupportedFile: 'Can’t load file. Supported file extensions: \\'\\'{PH1}\\'\\'.',\n  /**\n   *@description Text in Profiles Panel of a profiler tool\n   */\n  cantLoadProfileWhileAnother: 'Can’t load profile while another profile is being recorded.',\n  /**\n   *@description Text in Profiles Panel of a profiler tool\n   *@example {cannot open file} PH1\n   */\n  profileLoadingFailedS: 'Profile loading failed: {PH1}.',\n  /**\n   *@description Text in Profiles Panel of a profiler tool\n   *@example {2} PH1\n   */\n  runD: 'Run {PH1}',\n  /**\n   *@description Text in Profiles Panel of a profiler tool\n   */\n  profiles: 'Profiles',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/profiler/ProfilesPanel.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class ProfilesPanel extends UI.Panel.PanelWithSidebar implements DataDisplayDelegate {\n  readonly profileTypes: ProfileType[];\n  profilesItemTreeElement: ProfilesSidebarTreeElement;\n  sidebarTree: UI.TreeOutline.TreeOutlineInShadow;\n  profileViews: HTMLDivElement;\n  readonly toolbarElement: HTMLDivElement;\n  toggleRecordAction: UI.ActionRegistration.Action;\n  readonly toggleRecordButton: UI.Toolbar.ToolbarButton;\n  readonly #saveToFileAction: UI.ActionRegistration.Action;\n  readonly profileViewToolbar: UI.Toolbar.Toolbar;\n  profileGroups: {};\n  launcherView: ProfileLauncherView;\n  visibleView!: UI.Widget.Widget|undefined;\n  readonly profileToView: {\n    profile: ProfileHeader,\n    view: UI.Widget.Widget,\n  }[];\n  typeIdToSidebarSection: {\n    [x: string]: ProfileTypeSidebarSection,\n  };\n  fileSelectorElement!: HTMLInputElement;\n  selectedProfileType?: ProfileType;\n  constructor(name: string, profileTypes: ProfileType[], recordingActionId: string) {\n    super(name);\n    this.profileTypes = profileTypes;\n\n    const mainContainer = new UI.Widget.VBox();\n    this.splitWidget().setMainWidget(mainContainer);\n\n    this.profilesItemTreeElement = new ProfilesSidebarTreeElement(this);\n\n    this.sidebarTree = new UI.TreeOutline.TreeOutlineInShadow();\n\n    this.sidebarTree.element.classList.add('profiles-sidebar-tree-box');\n    this.panelSidebarElement().appendChild(this.sidebarTree.element);\n\n    this.sidebarTree.appendChild(this.profilesItemTreeElement);\n\n    this.sidebarTree.element.addEventListener('keydown', this.onKeyDown.bind(this), false);\n\n    this.profileViews = document.createElement('div');\n    this.profileViews.id = 'profile-views';\n    this.profileViews.classList.add('vbox');\n    mainContainer.element.appendChild(this.profileViews);\n\n    this.toolbarElement = document.createElement('div');\n    this.toolbarElement.classList.add('profiles-toolbar');\n    mainContainer.element.insertBefore(this.toolbarElement, mainContainer.element.firstChild);\n\n    this.panelSidebarElement().classList.add('profiles-tree-sidebar');\n    const toolbarContainerLeft = document.createElement('div');\n    toolbarContainerLeft.classList.add('profiles-toolbar');\n    toolbarContainerLeft.setAttribute('jslog', `${VisualLogging.toolbar('profiles-sidebar')}`);\n    this.panelSidebarElement().insertBefore(toolbarContainerLeft, this.panelSidebarElement().firstChild);\n    const toolbar = new UI.Toolbar.Toolbar('', toolbarContainerLeft);\n    toolbar.makeWrappable(true);\n    this.toggleRecordAction = UI.ActionRegistry.ActionRegistry.instance().getAction(recordingActionId);\n    this.toggleRecordButton = UI.Toolbar.Toolbar.createActionButton(this.toggleRecordAction);\n    toolbar.appendToolbarItem(this.toggleRecordButton);\n\n    toolbar.appendToolbarItem(UI.Toolbar.Toolbar.createActionButtonForId('profiler.clear-all'));\n    toolbar.appendSeparator();\n    toolbar.appendToolbarItem(UI.Toolbar.Toolbar.createActionButtonForId('profiler.load-from-file'));\n    this.#saveToFileAction = UI.ActionRegistry.ActionRegistry.instance().getAction('profiler.save-to-file');\n    this.#saveToFileAction.setEnabled(false);\n    toolbar.appendToolbarItem(UI.Toolbar.Toolbar.createActionButton(this.#saveToFileAction));\n    toolbar.appendSeparator();\n    toolbar.appendToolbarItem(UI.Toolbar.Toolbar.createActionButtonForId('components.collect-garbage'));\n\n    this.profileViewToolbar = new UI.Toolbar.Toolbar('', this.toolbarElement);\n    this.profileViewToolbar.makeWrappable(true);\n    this.profileViewToolbar.element.setAttribute('jslog', `${VisualLogging.toolbar('profile-view')}`);\n\n    this.profileGroups = {};\n    this.launcherView = new ProfileLauncherView(this);\n    this.launcherView.addEventListener(ProfileLauncherEvents.ProfileTypeSelected, this.onProfileTypeSelected, this);\n\n    this.profileToView = [];\n\n    this.typeIdToSidebarSection = {};\n\n    const types = this.profileTypes;\n    for (let i = 0; i < types.length; i++) {\n      this.registerProfileType(types[i]);\n    }\n    this.launcherView.restoreSelectedProfileType();\n    this.profilesItemTreeElement.select();\n    this.showLauncherView();\n    this.createFileSelectorElement();\n\n    SDK.TargetManager.TargetManager.instance().addEventListener(\n        SDK.TargetManager.Events.SuspendStateChanged, this.onSuspendStateChanged, this);\n    UI.Context.Context.instance().addFlavorChangeListener(\n        SDK.CPUProfilerModel.CPUProfilerModel, this.updateProfileTypeSpecificUI, this);\n    UI.Context.Context.instance().addFlavorChangeListener(\n        SDK.HeapProfilerModel.HeapProfilerModel, this.updateProfileTypeSpecificUI, this);\n  }\n\n  onKeyDown(ev: Event): void {\n    const event = (ev as KeyboardEvent);\n    let handled = false;\n    if (event.key === 'ArrowDown' && !event.altKey) {\n      handled = this.sidebarTree.selectNext();\n    } else if (event.key === 'ArrowUp' && !event.altKey) {\n      handled = this.sidebarTree.selectPrevious();\n    }\n    if (handled) {\n      event.consume(true);\n    }\n  }\n\n  override searchableView(): UI.SearchableView.SearchableView|null {\n    // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const visibleView = (this.visibleView as any);\n    return visibleView && visibleView.searchableView ? visibleView.searchableView() : null;\n  }\n\n  createFileSelectorElement(): void {\n    if (this.fileSelectorElement) {\n      this.element.removeChild(this.fileSelectorElement);\n    }\n    this.fileSelectorElement = UI.UIUtils.createFileSelectorElement(this.loadFromFile.bind(this));\n    this.element.appendChild(this.fileSelectorElement);\n  }\n\n  findProfileTypeByExtension(fileName: string): ProfileType|null {\n    return this.profileTypes.find(\n               type => Boolean(type.fileExtension()) && fileName.endsWith(type.fileExtension() || '')) ||\n        null;\n  }\n\n  async loadFromFile(file: File): Promise<void> {\n    this.createFileSelectorElement();\n\n    const profileType = this.findProfileTypeByExtension(file.name);\n    if (!profileType) {\n      const extensions = new Set(this.profileTypes.map(type => type.fileExtension()).filter(ext => ext));\n      Common.Console.Console.instance().error(\n          i18nString(UIStrings.cantLoadFileSupportedFile, {PH1: Array.from(extensions).join('\\', \\'')}));\n      return;\n    }\n\n    if (Boolean(profileType.profileBeingRecorded())) {\n      Common.Console.Console.instance().error(i18nString(UIStrings.cantLoadProfileWhileAnother));\n      return;\n    }\n\n    const error = await profileType.loadFromFile(file);\n    if (error && 'message' in error) {\n      void UI.UIUtils.MessageDialog.show(\n          i18nString(UIStrings.profileLoadingFailedS, {PH1: error.message}), undefined, 'profile-loading-failed');\n    }\n  }\n\n  toggleRecord(): boolean {\n    if (!this.toggleRecordAction.enabled()) {\n      return true;\n    }\n    const toggleButton = Platform.DOMUtilities.deepActiveElement(this.element.ownerDocument);\n    const type = this.selectedProfileType;\n    if (!type) {\n      return true;\n    }\n    const isProfiling = type.buttonClicked();\n    this.updateToggleRecordAction(isProfiling);\n    if (isProfiling) {\n      this.launcherView.profileStarted();\n      if (type.hasTemporaryView()) {\n        this.showProfile(type.profileBeingRecorded());\n      }\n    } else {\n      this.launcherView.profileFinished();\n    }\n    if (toggleButton) {\n      (toggleButton as HTMLElement).focus();\n    }\n    return true;\n  }\n\n  onSuspendStateChanged(): void {\n    this.updateToggleRecordAction(this.toggleRecordAction.toggled());\n  }\n\n  updateToggleRecordAction(toggled: boolean): void {\n    const hasSelectedTarget = Boolean(\n        UI.Context.Context.instance().flavor(SDK.CPUProfilerModel.CPUProfilerModel) ||\n        UI.Context.Context.instance().flavor(SDK.HeapProfilerModel.HeapProfilerModel));\n    const enable = toggled || (!SDK.TargetManager.TargetManager.instance().allTargetsSuspended() && hasSelectedTarget);\n    this.toggleRecordAction.setEnabled(enable);\n    this.toggleRecordAction.setToggled(toggled);\n    if (enable) {\n      this.toggleRecordButton.setTitle(this.selectedProfileType ? this.selectedProfileType.buttonTooltip : '');\n    } else {\n      this.toggleRecordButton.setTitle(UI.UIUtils.anotherProfilerActiveLabel());\n    }\n    if (this.selectedProfileType) {\n      this.launcherView.updateProfileType(this.selectedProfileType, enable);\n    }\n  }\n\n  profileBeingRecordedRemoved(): void {\n    this.updateToggleRecordAction(false);\n    this.launcherView.profileFinished();\n  }\n\n  onProfileTypeSelected(event: Common.EventTarget.EventTargetEvent<ProfileType>): void {\n    this.selectedProfileType = event.data;\n    this.updateProfileTypeSpecificUI();\n  }\n\n  updateProfileTypeSpecificUI(): void {\n    this.updateToggleRecordAction(this.toggleRecordAction.toggled());\n  }\n\n  reset(): void {\n    this.profileTypes.forEach(type => type.reset());\n\n    delete this.visibleView;\n\n    this.profileGroups = {};\n    this.updateToggleRecordAction(false);\n    this.launcherView.profileFinished();\n\n    this.sidebarTree.element.classList.remove('some-expandable');\n\n    this.launcherView.detach();\n    this.profileViews.removeChildren();\n    this.profileViewToolbar.removeToolbarItems();\n\n    this.profilesItemTreeElement.select();\n    this.showLauncherView();\n  }\n\n  showLauncherView(): void {\n    this.closeVisibleView();\n    this.profileViewToolbar.removeToolbarItems();\n    this.launcherView.show(this.profileViews);\n    this.visibleView = this.launcherView;\n    this.toolbarElement.classList.add('hidden');\n    this.#saveToFileAction.setEnabled(false);\n  }\n\n  registerProfileType(profileType: ProfileType): void {\n    this.launcherView.addProfileType(profileType);\n    const profileTypeSection = new ProfileTypeSidebarSection(this, profileType);\n    this.typeIdToSidebarSection[profileType.id] = profileTypeSection;\n    this.sidebarTree.appendChild(profileTypeSection);\n\n    function onAddProfileHeader(this: ProfilesPanel, event: Common.EventTarget.EventTargetEvent<ProfileHeader>): void {\n      this.addProfileHeader(event.data);\n    }\n\n    function onRemoveProfileHeader(\n        this: ProfilesPanel, event: Common.EventTarget.EventTargetEvent<ProfileHeader>): void {\n      this.removeProfileHeader(event.data);\n    }\n\n    function profileComplete(this: ProfilesPanel, event: Common.EventTarget.EventTargetEvent<ProfileHeader>): void {\n      this.showProfile(event.data);\n    }\n\n    profileType.addEventListener(ProfileTypeEvents.ViewUpdated, this.updateProfileTypeSpecificUI, this);\n    profileType.addEventListener(ProfileTypeEvents.AddProfileHeader, onAddProfileHeader, this);\n    profileType.addEventListener(ProfileTypeEvents.RemoveProfileHeader, onRemoveProfileHeader, this);\n    profileType.addEventListener(ProfileTypeEvents.ProfileComplete, profileComplete, this);\n\n    const profiles = profileType.getProfiles();\n    for (let i = 0; i < profiles.length; i++) {\n      this.addProfileHeader(profiles[i]);\n    }\n  }\n\n  showLoadFromFileDialog(): void {\n    this.fileSelectorElement.click();\n  }\n\n  addProfileHeader(profile: ProfileHeader): void {\n    const profileType = profile.profileType();\n    const typeId = profileType.id;\n    this.typeIdToSidebarSection[typeId].addProfileHeader(profile);\n    if (!this.visibleView || this.visibleView === this.launcherView) {\n      this.showProfile(profile);\n    }\n  }\n\n  removeProfileHeader(profile: ProfileHeader): void {\n    if (profile.profileType().profileBeingRecorded() === profile) {\n      this.profileBeingRecordedRemoved();\n    }\n\n    const i = this.indexOfViewForProfile(profile);\n    if (i !== -1) {\n      this.profileToView.splice(i, 1);\n    }\n\n    const typeId = profile.profileType().id;\n    const sectionIsEmpty = this.typeIdToSidebarSection[typeId].removeProfileHeader(profile);\n\n    // No other item will be selected if there aren't any other profiles, so\n    // make sure that view gets cleared when the last profile is removed.\n    if (sectionIsEmpty) {\n      this.profilesItemTreeElement.select();\n      this.showLauncherView();\n    }\n  }\n\n  showProfile(profile: ProfileHeader|null): UI.Widget.Widget|null {\n    if (!profile ||\n        (profile.profileType().profileBeingRecorded() === profile) && !profile.profileType().hasTemporaryView()) {\n      return null;\n    }\n\n    const view = this.viewForProfile(profile);\n    if (view === this.visibleView) {\n      return view;\n    }\n\n    this.closeVisibleView();\n    UI.Context.Context.instance().setFlavor(ProfileHeader, profile);\n    this.#saveToFileAction.setEnabled(profile.canSaveToFile());\n\n    view.show(this.profileViews);\n    this.toolbarElement.classList.remove('hidden');\n    this.visibleView = view;\n\n    const profileTypeSection = this.typeIdToSidebarSection[profile.profileType().id];\n    const sidebarElement = profileTypeSection.sidebarElementForProfile(profile);\n    if (sidebarElement) {\n      sidebarElement.revealAndSelect();\n    }\n\n    this.profileViewToolbar.removeToolbarItems();\n\n    void (view as unknown as UI.View.View).toolbarItems().then(items => {\n      items.map(item => this.profileViewToolbar.appendToolbarItem(item));\n    });\n\n    return view;\n  }\n\n  showObject(_snapshotObjectId: string, _perspectiveName: string): void {\n  }\n\n  async linkifyObject(_nodeIndex: number): Promise<Element|null> {\n    return null;\n  }\n\n  viewForProfile(profile: ProfileHeader): UI.Widget.Widget {\n    const index = this.indexOfViewForProfile(profile);\n    if (index !== -1) {\n      return this.profileToView[index].view;\n    }\n    const view = profile.createView(this);\n    view.element.classList.add('profile-view');\n    this.profileToView.push({profile: profile, view: view});\n    return view;\n  }\n\n  indexOfViewForProfile(profile: ProfileHeader): number {\n    return this.profileToView.findIndex(item => item.profile === profile);\n  }\n\n  closeVisibleView(): void {\n    UI.Context.Context.instance().setFlavor(ProfileHeader, null);\n    this.#saveToFileAction.setEnabled(false);\n    if (this.visibleView) {\n      this.visibleView.detach();\n    }\n    delete this.visibleView;\n  }\n\n  override focus(): void {\n    this.sidebarTree.focus();\n  }\n\n  override wasShown(): void {\n    super.wasShown();\n    UI.Context.Context.instance().setFlavor(ProfilesPanel, this);\n    this.registerCSSFiles([objectValueStyles, profilesPanelStyles, heapProfilerStyles]);\n    this.sidebarTree.registerCSSFiles([profilesSidebarTreeStyles]);\n  }\n\n  override willHide(): void {\n    UI.Context.Context.instance().setFlavor(ProfilesPanel, null);\n    super.willHide();\n  }\n}\n\nexport class ProfileTypeSidebarSection extends UI.TreeOutline.TreeElement {\n  dataDisplayDelegate: DataDisplayDelegate;\n  readonly profileTreeElements: ProfileSidebarTreeElement[];\n  profileGroups: {\n    [x: string]: ProfileGroup,\n  };\n\n  constructor(dataDisplayDelegate: DataDisplayDelegate, profileType: ProfileType) {\n    super(profileType.treeItemTitle, true);\n    this.selectable = false;\n    this.dataDisplayDelegate = dataDisplayDelegate;\n    this.profileTreeElements = [];\n    this.profileGroups = {};\n    this.expand();\n    this.hidden = true;\n    this.setCollapsible(false);\n  }\n\n  addProfileHeader(profile: ProfileHeader): void {\n    this.hidden = false;\n    const profileType = profile.profileType();\n    let sidebarParent: (ProfileGroupSidebarTreeElement|null)|this = this;\n    const profileTreeElement =\n        (profile.createSidebarTreeElement(this.dataDisplayDelegate) as ProfileSidebarTreeElement);\n    this.profileTreeElements.push(profileTreeElement);\n\n    if (!profile.fromFile() && profileType.profileBeingRecorded() !== profile) {\n      const profileTitle = profile.title;\n      let group: ProfileGroup = this.profileGroups[profileTitle];\n      if (!group) {\n        group = new ProfileGroup();\n        this.profileGroups[profileTitle] = group;\n      }\n      group.profileSidebarTreeElements.push(profileTreeElement);\n\n      const groupSize = group.profileSidebarTreeElements.length;\n      if (groupSize === 2) {\n        // Make a group UI.TreeOutline.TreeElement now that there are 2 profiles.\n        group.sidebarTreeElement = new ProfileGroupSidebarTreeElement(this.dataDisplayDelegate, profile.title);\n\n        const firstProfileTreeElement = group.profileSidebarTreeElements[0];\n        // Insert at the same index for the first profile of the group.\n        const index = this.children().indexOf(firstProfileTreeElement);\n        this.insertChild(group.sidebarTreeElement, index);\n\n        // Move the first profile to the group.\n        const selected = firstProfileTreeElement.selected;\n        this.removeChild(firstProfileTreeElement);\n        group.sidebarTreeElement.appendChild(firstProfileTreeElement);\n        if (selected) {\n          firstProfileTreeElement.revealAndSelect();\n        }\n\n        firstProfileTreeElement.setSmall(true);\n        firstProfileTreeElement.setMainTitle(i18nString(UIStrings.runD, {PH1: 1}));\n\n        if (this.treeOutline) {\n          this.treeOutline.element.classList.add('some-expandable');\n        }\n      }\n\n      if (groupSize >= 2) {\n        sidebarParent = group.sidebarTreeElement;\n        profileTreeElement.setSmall(true);\n        profileTreeElement.setMainTitle(i18nString(UIStrings.runD, {PH1: groupSize}));\n      }\n    }\n\n    if (sidebarParent) {\n      sidebarParent.appendChild(profileTreeElement);\n    }\n  }\n\n  removeProfileHeader(profile: ProfileHeader): boolean {\n    const index = this.sidebarElementIndex(profile);\n    if (index === -1) {\n      return false;\n    }\n    const profileTreeElement = this.profileTreeElements[index];\n    this.profileTreeElements.splice(index, 1);\n\n    let sidebarParent: (ProfileGroupSidebarTreeElement|null)|this = this;\n    const group = this.profileGroups[profile.title];\n    if (group) {\n      const groupElements = group.profileSidebarTreeElements;\n      groupElements.splice(groupElements.indexOf(profileTreeElement), 1);\n      if (groupElements.length === 1) {\n        // Move the last profile out of its group and remove the group.\n        const pos = sidebarParent.children().indexOf((group.sidebarTreeElement as ProfileGroupSidebarTreeElement));\n        if (group.sidebarTreeElement) {\n          group.sidebarTreeElement.removeChild(groupElements[0]);\n        }\n        this.insertChild(groupElements[0], pos);\n        groupElements[0].setSmall(false);\n        groupElements[0].setMainTitle(profile.title);\n        if (group.sidebarTreeElement) {\n          this.removeChild(group.sidebarTreeElement);\n        }\n      }\n      if (groupElements.length !== 0) {\n        sidebarParent = group.sidebarTreeElement;\n      }\n    }\n    if (sidebarParent) {\n      sidebarParent.removeChild(profileTreeElement);\n    }\n    profileTreeElement.dispose();\n\n    if (this.childCount()) {\n      return false;\n    }\n    this.hidden = true;\n    return true;\n  }\n\n  sidebarElementForProfile(profile: ProfileHeader): ProfileSidebarTreeElement|null {\n    const index = this.sidebarElementIndex(profile);\n    return index === -1 ? null : this.profileTreeElements[index];\n  }\n\n  sidebarElementIndex(profile: ProfileHeader): number {\n    const elements = this.profileTreeElements;\n    for (let i = 0; i < elements.length; i++) {\n      if (elements[i].profile === profile) {\n        return i;\n      }\n    }\n    return -1;\n  }\n\n  override onattach(): void {\n    this.listItemElement.classList.add('profiles-tree-section');\n  }\n}\n\nexport class ProfileGroup {\n  profileSidebarTreeElements: ProfileSidebarTreeElement[];\n  sidebarTreeElement: ProfileGroupSidebarTreeElement|null;\n  constructor() {\n    this.profileSidebarTreeElements = [];\n    this.sidebarTreeElement = null;\n  }\n}\n\nexport class ProfileGroupSidebarTreeElement extends UI.TreeOutline.TreeElement {\n  readonly dataDisplayDelegate: DataDisplayDelegate;\n  profileTitle: string;\n  override toggleOnClick: boolean;\n\n  constructor(dataDisplayDelegate: DataDisplayDelegate, title: string) {\n    super('', true);\n    this.selectable = false;\n    this.dataDisplayDelegate = dataDisplayDelegate;\n    this.profileTitle = title;\n    this.expand();\n    this.toggleOnClick = true;\n  }\n\n  override onselect(): boolean {\n    const hasChildren = this.childCount() > 0;\n    if (hasChildren) {\n      const lastChild = this.lastChild();\n      if (lastChild instanceof ProfileSidebarTreeElement) {\n        this.dataDisplayDelegate.showProfile(lastChild.profile);\n      }\n    }\n    return hasChildren;\n  }\n\n  override onattach(): void {\n    this.listItemElement.classList.add('profile-group-sidebar-tree-item');\n    this.listItemElement.createChild('div', 'icon');\n    this.listItemElement.createChild('div', 'titles no-subtitle')\n        .createChild('span', 'title-container')\n        .createChild('span', 'title')\n        .textContent = this.profileTitle;\n  }\n}\n\nexport class ProfilesSidebarTreeElement extends UI.TreeOutline.TreeElement {\n  readonly panel: ProfilesPanel;\n\n  constructor(panel: ProfilesPanel) {\n    super('', false);\n    this.selectable = true;\n    this.panel = panel;\n  }\n\n  override onselect(): boolean {\n    this.panel.showLauncherView();\n    return true;\n  }\n\n  override onattach(): void {\n    this.listItemElement.classList.add('profile-launcher-view-tree-item');\n    this.listItemElement.createChild('div', 'icon');\n    this.listItemElement.createChild('div', 'titles no-subtitle')\n        .createChild('span', 'title-container')\n        .createChild('span', 'title')\n        .textContent = i18nString(UIStrings.profiles);\n  }\n}\n\nexport class ActionDelegate implements UI.ActionRegistration.ActionDelegate {\n  handleAction(context: UI.Context.Context, actionId: string): boolean {\n    switch (actionId) {\n      case 'profiler.clear-all': {\n        const profilesPanel = context.flavor(ProfilesPanel);\n        if (profilesPanel !== null) {\n          profilesPanel.reset();\n          return true;\n        }\n        return false;\n      }\n      case 'profiler.load-from-file': {\n        const profilesPanel = context.flavor(ProfilesPanel);\n        if (profilesPanel !== null) {\n          profilesPanel.showLoadFromFileDialog();\n          return true;\n        }\n        return false;\n      }\n      case 'profiler.save-to-file': {\n        const profile = context.flavor(ProfileHeader);\n        if (profile !== null) {\n          profile.saveToFile();\n          return true;\n        }\n        return false;\n      }\n      case 'profiler.delete-profile': {\n        const profile = context.flavor(ProfileHeader);\n        if (profile !== null) {\n          profile.profileType().removeProfile(profile);\n          return true;\n        }\n        return false;\n      }\n    }\n    return false;\n  }\n}\n"]}