{"version":3,"file":"SearchResultsPane.js","sourceRoot":"","sources":["../../../../../../front_end/panels/search/SearchResultsPane.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2014 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as TextUtils from '../../models/text_utils/text_utils.js';\nimport type * as Workspace from '../../models/workspace/workspace.js';\nimport * as Components from '../../ui/legacy/components/utils/utils.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport searchResultsPaneStyles from './searchResultsPane.css.js';\n\nimport {type SearchResult} from './SearchScope.js';\n\nconst UIStrings = {\n  /**\n   *@description Accessibility label for number of matches in each file in search results pane\n   *@example {2} PH1\n   */\n  matchesCountS: 'Matches Count {PH1}',\n  /**\n   *@description Search result label for results in the Search tool\n   *@example {2} PH1\n   */\n  lineS: 'Line {PH1}',\n  /**\n   *@description Text in Search Results Pane of the Search tab\n   *@example {2} PH1\n   */\n  showDMore: 'Show {PH1} more',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/search/SearchResultsPane.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class SearchResultsPane extends UI.Widget.VBox {\n  private readonly searchConfig: Workspace.SearchConfig.SearchConfig;\n  private readonly searchResults: SearchResult[];\n  private readonly treeElements: SearchResultsTreeElement[];\n  private treeOutline: UI.TreeOutline.TreeOutlineInShadow;\n  private matchesExpandedCount: number;\n\n  constructor(searchConfig: Workspace.SearchConfig.SearchConfig) {\n    super(true);\n    this.searchConfig = searchConfig;\n\n    this.searchResults = [];\n    this.treeElements = [];\n    this.treeOutline = new UI.TreeOutline.TreeOutlineInShadow();\n    this.treeOutline.hideOverflow();\n\n    this.contentElement.appendChild(this.treeOutline.element);\n\n    this.matchesExpandedCount = 0;\n  }\n\n  addSearchResult(searchResult: SearchResult): void {\n    this.searchResults.push(searchResult);\n    this.addTreeElement(searchResult);\n  }\n\n  showAllMatches(): void {\n    this.treeElements.forEach(treeElement => {\n      treeElement.expand();\n      treeElement.showAllMatches();\n    });\n  }\n\n  collapseAllResults(): void {\n    this.treeElements.forEach(treeElement => {\n      treeElement.collapse();\n    });\n  }\n\n  private addTreeElement(searchResult: SearchResult): void {\n    const treeElement = new SearchResultsTreeElement(this.searchConfig, searchResult);\n    this.treeOutline.appendChild(treeElement);\n    if (!this.treeOutline.selectedTreeElement) {\n      treeElement.select(/* omitFocus */ true, /* selectedByUser */ true);\n    }\n    // Expand until at least a certain number of matches is expanded.\n    if (this.matchesExpandedCount < matchesExpandedByDefault) {\n      treeElement.expand();\n    }\n    this.matchesExpandedCount += searchResult.matchesCount();\n    this.treeElements.push(treeElement);\n  }\n  override wasShown(): void {\n    super.wasShown();\n    this.treeOutline.registerCSSFiles([searchResultsPaneStyles]);\n  }\n}\n\nexport const matchesExpandedByDefault = 200;\nexport const matchesShownAtOnce = 20;\n\nexport class SearchResultsTreeElement extends UI.TreeOutline.TreeElement {\n  private searchConfig: Workspace.SearchConfig.SearchConfig;\n  private searchResult: SearchResult;\n  private initialized: boolean;\n  override toggleOnClick: boolean;\n\n  constructor(searchConfig: Workspace.SearchConfig.SearchConfig, searchResult: SearchResult) {\n    super('', true);\n    this.searchConfig = searchConfig;\n    this.searchResult = searchResult;\n    this.initialized = false;\n    this.toggleOnClick = true;\n  }\n\n  override onexpand(): void {\n    if (this.initialized) {\n      return;\n    }\n\n    this.updateMatchesUI();\n    this.initialized = true;\n  }\n\n  showAllMatches(): void {\n    this.removeChildren();\n    this.appendSearchMatches(0, this.searchResult.matchesCount());\n  }\n\n  private updateMatchesUI(): void {\n    this.removeChildren();\n    const toIndex = Math.min(this.searchResult.matchesCount(), matchesShownAtOnce);\n    if (toIndex < this.searchResult.matchesCount()) {\n      this.appendSearchMatches(0, toIndex - 1);\n      this.appendShowMoreMatchesElement(toIndex - 1);\n    } else {\n      this.appendSearchMatches(0, toIndex);\n    }\n  }\n\n  override onattach(): void {\n    this.updateSearchMatches();\n  }\n\n  private updateSearchMatches(): void {\n    this.listItemElement.classList.add('search-result');\n\n    const fileNameSpan = span(this.searchResult.label(), 'search-result-file-name');\n    fileNameSpan.appendChild(span('\\u2014', 'search-result-dash'));\n    fileNameSpan.appendChild(span(this.searchResult.description(), 'search-result-qualifier'));\n\n    this.tooltip = this.searchResult.description();\n    this.listItemElement.appendChild(fileNameSpan);\n    const matchesCountSpan = document.createElement('span');\n    matchesCountSpan.className = 'search-result-matches-count';\n\n    matchesCountSpan.textContent = `${this.searchResult.matchesCount()}`;\n    UI.ARIAUtils.setLabel(\n        matchesCountSpan, i18nString(UIStrings.matchesCountS, {PH1: this.searchResult.matchesCount()}));\n\n    this.listItemElement.appendChild(matchesCountSpan);\n    if (this.expanded) {\n      this.updateMatchesUI();\n    }\n\n    function span(text: string, className: string): Element {\n      const span = document.createElement('span');\n      span.className = className;\n      span.textContent = text;\n      return span;\n    }\n  }\n\n  private appendSearchMatches(fromIndex: number, toIndex: number): void {\n    const searchResult = this.searchResult;\n\n    const queries = this.searchConfig.queries();\n    const regexes = [];\n    for (let i = 0; i < queries.length; ++i) {\n      regexes.push(Platform.StringUtilities.createSearchRegex(\n          queries[i], !this.searchConfig.ignoreCase(), this.searchConfig.isRegex()));\n    }\n\n    for (let i = fromIndex; i < toIndex; ++i) {\n      let lineContent = searchResult.matchLineContent(i);\n      let matchRanges: TextUtils.TextRange.SourceRange[] = [];\n      // Searching in scripts and network response bodies produces one result entry per match. We can skip re-doing the\n      // search since we have the exact match range.\n      // For matches found in headers or the request URL we re-do the search to find all match ranges.\n      const column = searchResult.matchColumn(i);\n      const matchLength = searchResult.matchLength(i);\n      if (column !== undefined && matchLength !== undefined) {\n        const {matchRange, lineSegment} =\n            lineSegmentForMatch(lineContent, new TextUtils.TextRange.SourceRange(column, matchLength));\n        lineContent = lineSegment;\n        matchRanges = [matchRange];\n      } else {\n        lineContent = lineContent.trim();\n        for (let j = 0; j < regexes.length; ++j) {\n          matchRanges = matchRanges.concat(this.regexMatchRanges(lineContent, regexes[j]));\n        }\n        ({lineSegment: lineContent, matchRanges} = lineSegmentForMultipleMatches(lineContent, matchRanges));\n      }\n\n      const anchor = Components.Linkifier.Linkifier.linkifyRevealable(\n          searchResult.matchRevealable(i), '', undefined, undefined, undefined, 'search-match');\n      anchor.classList.add('search-match-link');\n      anchor.tabIndex = 0;\n      const labelSpan = document.createElement('span');\n      labelSpan.classList.add('search-match-line-number');\n      const resultLabel = searchResult.matchLabel(i);\n      labelSpan.textContent = resultLabel;\n      if (typeof resultLabel === 'number' && !isNaN(resultLabel)) {\n        UI.ARIAUtils.setLabel(labelSpan, i18nString(UIStrings.lineS, {PH1: resultLabel}));\n      } else {\n        UI.ARIAUtils.setLabel(labelSpan, resultLabel);\n      }\n      anchor.appendChild(labelSpan);\n\n      const contentSpan = this.createContentSpan(lineContent, matchRanges);\n      anchor.appendChild(contentSpan);\n\n      const searchMatchElement = new UI.TreeOutline.TreeElement();\n      this.appendChild(searchMatchElement);\n      searchMatchElement.listItemElement.className = 'search-match';\n      searchMatchElement.listItemElement.appendChild(anchor);\n      searchMatchElement.listItemElement.addEventListener('keydown', event => {\n        if (event.key === 'Enter') {\n          event.consume(true);\n          void Common.Revealer.reveal(searchResult.matchRevealable(i));\n        }\n      });\n      searchMatchElement.tooltip = lineContent;\n    }\n  }\n\n  private appendShowMoreMatchesElement(startMatchIndex: number): void {\n    const matchesLeftCount = this.searchResult.matchesCount() - startMatchIndex;\n    const showMoreMatchesText = i18nString(UIStrings.showDMore, {PH1: matchesLeftCount});\n    const showMoreMatchesTreeElement = new UI.TreeOutline.TreeElement(showMoreMatchesText);\n    this.appendChild(showMoreMatchesTreeElement);\n    showMoreMatchesTreeElement.listItemElement.classList.add('show-more-matches');\n    showMoreMatchesTreeElement.onselect =\n        this.showMoreMatchesElementSelected.bind(this, showMoreMatchesTreeElement, startMatchIndex);\n  }\n\n  private createContentSpan(lineContent: string, matchRanges: TextUtils.TextRange.SourceRange[]): Element {\n    const contentSpan = document.createElement('span');\n    contentSpan.className = 'search-match-content';\n    contentSpan.textContent = lineContent;\n    UI.ARIAUtils.setLabel(contentSpan, `${lineContent} line`);\n    UI.UIUtils.highlightRangesWithStyleClass(contentSpan, matchRanges, 'highlighted-search-result');\n    return contentSpan;\n  }\n\n  private regexMatchRanges(lineContent: string, regex: RegExp): TextUtils.TextRange.SourceRange[] {\n    regex.lastIndex = 0;\n    let match;\n    const matchRanges = [];\n    while ((regex.lastIndex < lineContent.length) && (match = regex.exec(lineContent))) {\n      matchRanges.push(new TextUtils.TextRange.SourceRange(match.index, match[0].length));\n    }\n\n    return matchRanges;\n  }\n\n  private showMoreMatchesElementSelected(\n      showMoreMatchesTreeElement: UI.TreeOutline.TreeElement, startMatchIndex: number): boolean {\n    this.removeChild(showMoreMatchesTreeElement);\n    this.appendSearchMatches(startMatchIndex, this.searchResult.matchesCount());\n    return false;\n  }\n}\n\nconst DEFAULT_OPTS = {\n  prefixLength: 25,\n  maxLength: 1000,\n};\n\n/**\n * Takes a whole line and calculates the substring we want to actually display in the UI.\n * Also returns a translated {matchRange} (the parameter is relative to {lineContent} but the\n * caller needs it relative to {lineSegment}).\n *\n * {lineContent} is modified in the following way:\n *\n *   * Whitespace is trimmed from the beginning (unless the match includes it).\n *   * We only leave {options.prefixLength} characters before the match (and add an ellipsis in\n *     case we removed anything)\n *   * Truncate the remainder to {options.maxLength} characters.\n */\nexport function lineSegmentForMatch(\n    lineContent: string, range: TextUtils.TextRange.SourceRange,\n    optionsArg: Partial<typeof DEFAULT_OPTS> =\n        DEFAULT_OPTS): {lineSegment: string, matchRange: TextUtils.TextRange.SourceRange} {\n  const options = {...DEFAULT_OPTS, ...optionsArg};\n\n  // Remove the whitespace at the beginning, but stop where the match starts.\n  const attemptedTrimmedLine = lineContent.trimStart();\n  const potentiallyRemovedWhitespaceLength = lineContent.length - attemptedTrimmedLine.length;\n  const actuallyRemovedWhitespaceLength = Math.min(range.offset, potentiallyRemovedWhitespaceLength);\n\n  // Apply {options.prefixLength} and {options.maxLength}.\n  const lineSegmentBegin = Math.max(actuallyRemovedWhitespaceLength, range.offset - options.prefixLength);\n  const lineSegmentEnd = Math.min(lineContent.length, lineSegmentBegin + options.maxLength);\n  const lineSegmentPrefix = lineSegmentBegin > actuallyRemovedWhitespaceLength ? '…' : '';\n\n  // Build the resulting line segment and match range.\n  const lineSegment = lineSegmentPrefix + lineContent.substring(lineSegmentBegin, lineSegmentEnd);\n  const rangeOffset = range.offset - lineSegmentBegin + lineSegmentPrefix.length;\n  const rangeLength = Math.min(range.length, lineSegment.length - rangeOffset);\n  const matchRange = new TextUtils.TextRange.SourceRange(rangeOffset, rangeLength);\n\n  return {lineSegment, matchRange};\n}\n\n/**\n * Takes a line and multiple match ranges and trims/cuts the line accordingly.\n * The match ranges are then adjusted to reflect the transformation.\n *\n * Ideally prefer `lineSegmentForMatch`, it can center the line on the match\n * whereas this method risks cutting matches out of the string.\n */\nfunction lineSegmentForMultipleMatches(lineContent: string, ranges: TextUtils.TextRange.SourceRange[]):\n    {lineSegment: string, matchRanges: TextUtils.TextRange.SourceRange[]} {\n  let trimBy = 0;\n  let matchRanges = ranges;\n  if (matchRanges.length > 0 && matchRanges[0].offset > 20) {\n    trimBy = 15;\n  }\n  let lineSegment = lineContent.substring(trimBy, 1000 + trimBy);\n  if (trimBy) {\n    matchRanges =\n        matchRanges.map(range => new TextUtils.TextRange.SourceRange(range.offset - trimBy + 1, range.length));\n    lineSegment = '…' + lineSegment;\n  }\n  return {lineSegment, matchRanges};\n}\n"]}