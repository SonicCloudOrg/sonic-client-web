{"version":3,"file":"RecorderController.js","sourceRoot":"","sources":["../../../../../../front_end/panels/recorder/RecorderController.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Bindings from '../../models/bindings/bindings.js';\nimport * as PublicExtensions from '../../models/extensions/extensions.js';\nimport type * as TraceEngine from '../../models/trace/trace.js';\nimport * as Emulation from '../../panels/emulation/emulation.js';\nimport * as Timeline from '../../panels/timeline/timeline.js';\nimport * as Tracing from '../../services/tracing/tracing.js';\nimport * as Buttons from '../../ui/components/buttons/buttons.js';\nimport * as Dialogs from '../../ui/components/dialogs/dialogs.js';\nimport * as ComponentHelpers from '../../ui/components/helpers/helpers.js';\nimport * as Menus from '../../ui/components/menus/menus.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as LitHtml from '../../ui/lit-html/lit-html.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport * as Components from './components/components.js';\nimport {type AddBreakpointEvent, type RemoveBreakpointEvent} from './components/StepView.js';\nimport type * as Controllers from './controllers/controllers.js';\nimport * as Converters from './converters/converters.js';\nimport * as Extensions from './extensions/extensions.js';\nimport * as Models from './models/models.js';\nimport * as Actions from './recorder-actions/recorder-actions.js';\nimport recorderControllerStyles from './recorderController.css.js';\nimport * as Events from './RecorderEvents.js';\n\nconst {html, Decorators, LitElement} = LitHtml;\nconst {customElement, state} = Decorators;\n\nconst UIStrings = {\n  /**\n   * @description The title of the button that leads to a page for creating a new recording.\n   */\n  createRecording: 'Create a new recording',\n  /**\n   * @description The title of the button that allows importing a recording.\n   */\n  importRecording: 'Import recording',\n  /**\n   * @description The title of the button that deletes the recording\n   */\n  deleteRecording: 'Delete recording',\n  /**\n   * @description The title of the select if user has no saved recordings\n   */\n  noRecordings: 'No recordings',\n  /**\n   * @description The title of the select option for one or more recording\n   * number followed by this text - `1 recording(s)` or `4 recording(s)`\n   */\n  numberOfRecordings: 'recording(s)',\n  /**\n   * @description The title of the button that continues the replay\n   */\n  continueReplay: 'Continue',\n  /**\n   * @description The title of the button that executes only one step in the replay\n   */\n  stepOverReplay: 'Execute one step',\n  /**\n   * @description The title of the button that opens a menu with various options of exporting a recording to file.\n   */\n  exportRecording: 'Export',\n  /**\n   * @description The title of shortcut for starting and stopping recording.\n   */\n  startStopRecording: 'Start/Stop recording',\n  /**\n   * @description The title of shortcut for replaying recording.\n   */\n  replayRecording: 'Replay recording',\n  /**\n   * @description The title of shortcut for copying a recording or selected step.\n   */\n  copyShortcut: 'Copy recording or selected step',\n  /**\n   * @description The title of shortcut for toggling code view.\n   */\n  toggleCode: 'Toggle code view',\n  /**\n   * @description The title of the menu group in the export menu of the Recorder\n   * panel that is followed by the list of built-in export formats.\n   */\n  export: 'Export',\n  /**\n   * @description The title of the menu group in the export menu of the Recorder\n   * panel that is followed by the list of export formats available via browser\n   * extensions.\n   */\n  exportViaExtensions: 'Export via extensions',\n  /**\n   * @description The title of the menu option that leads to a page that lists\n   * all browsers extensions available for Recorder.\n   */\n  getExtensions: 'Get extensions…',\n  /**\n   * @description The button label that leads to the feedback form for Recorder.\n   */\n  sendFeedback: 'Send feedback',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/recorder/RecorderController.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nconst GET_EXTENSIONS_MENU_ITEM = 'get-extensions-link';\nconst GET_EXTENSIONS_URL = 'https://goo.gle/recorder-extension-list' as Platform.DevToolsPath.UrlString;\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-recorder-controller': RecorderController;\n  }\n\n  interface FileSystemWritableFileStream extends WritableStream {\n    write(data: unknown): Promise<void>;\n    close(): Promise<void>;\n  }\n\n  interface FileSystemHandle {\n    createWritable(): Promise<FileSystemWritableFileStream>;\n  }\n\n  interface Window {\n    showSaveFilePicker(opts: unknown): Promise<FileSystemHandle>;\n  }\n}\n\ninterface StoredRecording {\n  storageName: string;\n  flow: Models.Schema.UserFlow;\n}\n\ninterface SetCurrentRecordingOptions {\n  /**\n   * Whether to keep breakpoints in the recording.\n   */\n  keepBreakpoints: boolean;\n  /**\n   * Whether to upstream the recording to a recording session if it exists.\n   */\n  updateSession: boolean;\n}\n\nexport const enum Pages {\n  StartPage = 'StartPage',\n  AllRecordingsPage = 'AllRecordingsPage',\n  CreateRecordingPage = 'CreateRecordingPage',\n  RecordingPage = 'RecordingPage',\n}\n\nconst CONVERTER_ID_TO_METRIC: Record<string, Host.UserMetrics.RecordingExported|undefined> = {\n  [Models.ConverterIds.ConverterIds.JSON]: Host.UserMetrics.RecordingExported.ToJSON,\n  [Models.ConverterIds.ConverterIds.Replay]: Host.UserMetrics.RecordingExported.ToPuppeteerReplay,\n  [Models.ConverterIds.ConverterIds.Puppeteer]: Host.UserMetrics.RecordingExported.ToPuppeteer,\n  [Models.ConverterIds.ConverterIds.Lighthouse]: Host.UserMetrics.RecordingExported.ToLighthouse,\n};\n\n@customElement('devtools-recorder-controller')\nexport class RecorderController extends LitElement {\n  static override readonly styles = [recorderControllerStyles];\n\n  @state() declare private currentRecordingSession?: Models.RecordingSession.RecordingSession;\n  @state() declare private currentRecording: StoredRecording|undefined;\n  @state() declare private currentStep?: Models.Schema.Step;\n  @state() declare private recordingError?: Error;\n\n  #storage = Models.RecordingStorage.RecordingStorage.instance();\n  #screenshotStorage = Models.ScreenshotStorage.ScreenshotStorage.instance();\n\n  @state() declare private isRecording: boolean;\n  @state() declare private isToggling: boolean;\n\n  // TODO: we keep the functionality to allow/disallow replay but right now it's not used.\n  // It can be used to decide if we allow replay on a certain target for example.\n  #replayAllowed = true;\n  @state() declare private recordingPlayer?: Models.RecordingPlayer.RecordingPlayer;\n  @state() declare private lastReplayResult?: Models.RecordingPlayer.ReplayResult;\n  readonly #replayState: Components.RecordingView.ReplayState = {isPlaying: false, isPausedOnBreakpoint: false};\n\n  @state() declare private currentPage: Pages;\n  @state() declare private previousPage?: Pages;\n  #fileSelector?: HTMLInputElement;\n\n  @state() declare private sections?: Models.Section.Section[];\n  @state() declare private settings?: Models.RecordingSettings.RecordingSettings;\n\n  @state() declare private importError?: Error;\n\n  @state() declare private exportMenuExpanded: boolean;\n  #exportMenuButton: Buttons.Button.Button|undefined;\n\n  #stepBreakpointIndexes: Set<number> = new Set();\n\n  #builtInConverters: Readonly<Converters.Converter.Converter[]>;\n  @state() declare private extensionConverters: Converters.Converter.Converter[];\n  @state() declare private replayExtensions: Extensions.ExtensionManager.Extension[];\n\n  @state() declare private viewDescriptor?: PublicExtensions.RecorderPluginManager.ViewDescriptor;\n\n  #recorderSettings = new Models.RecorderSettings.RecorderSettings();\n  #shortcutHelper = new Models.RecorderShortcutHelper.RecorderShortcutHelper();\n\n  constructor() {\n    super();\n\n    this.isRecording = false;\n    this.isToggling = false;\n    this.exportMenuExpanded = false;\n\n    this.currentPage = Pages.StartPage;\n    if (this.#storage.getRecordings().length) {\n      this.#setCurrentPage(Pages.AllRecordingsPage);\n    }\n\n    const textEditorIndent = Common.Settings.Settings.instance().moduleSetting('text-editor-indent').get();\n    this.#builtInConverters = Object.freeze([\n      new Converters.JSONConverter.JSONConverter(textEditorIndent),\n      new Converters.PuppeteerReplayConverter.PuppeteerReplayConverter(textEditorIndent),\n      new Converters.PuppeteerConverter.PuppeteerConverter(textEditorIndent),\n      new Converters.LighthouseConverter.LighthouseConverter(textEditorIndent),\n    ]);\n\n    const extensionManager = Extensions.ExtensionManager.ExtensionManager.instance();\n    this.#updateExtensions(extensionManager.extensions());\n    extensionManager.addEventListener(Extensions.ExtensionManager.Events.ExtensionsUpdated, event => {\n      this.#updateExtensions(event.data);\n    });\n\n    // used in e2e tests only.\n    this.addEventListener('setrecording', (event: Event) => this.#onSetRecording(event));\n  }\n\n  override disconnectedCallback(): void {\n    super.disconnectedCallback();\n\n    if (this.currentRecordingSession) {\n      void this.currentRecordingSession.stop();\n    }\n  }\n\n  #updateExtensions(extensions: Extensions.ExtensionManager.Extension[]): void {\n    this.extensionConverters =\n        extensions.filter(extension => extension.getCapabilities().includes('export')).map((extension, idx) => {\n          return new Converters.ExtensionConverter.ExtensionConverter(idx, extension);\n        });\n    this.replayExtensions = extensions.filter(extension => extension.getCapabilities().includes('replay'));\n  }\n\n  setIsRecordingStateForTesting(isRecording: boolean): void {\n    this.isRecording = isRecording;\n  }\n\n  setRecordingStateForTesting(state: Components.RecordingView.ReplayState): void {\n    this.#replayState.isPlaying = state.isPlaying;\n    this.#replayState.isPausedOnBreakpoint = state.isPausedOnBreakpoint;\n  }\n\n  setCurrentPageForTesting(page: Pages): void {\n    this.#setCurrentPage(page);\n  }\n\n  getCurrentPageForTesting(): Pages {\n    return this.currentPage;\n  }\n\n  getCurrentRecordingForTesting(): StoredRecording|undefined {\n    return this.currentRecording;\n  }\n\n  getStepBreakpointIndexesForTesting(): number[] {\n    return [...this.#stepBreakpointIndexes.values()];\n  }\n\n  /**\n   * We should clear errors on every new action in the controller.\n   * TODO: think how to make handle this centrally so that in no case\n   * the error remains shown for longer than needed. Maybe a timer?\n   */\n  #clearError(): void {\n    this.importError = undefined;\n  }\n\n  async #importFile(file: File): Promise<void> {\n    const outputStream = new Common.StringOutputStream.StringOutputStream();\n    const reader = new Bindings.FileUtils.ChunkedFileReader(\n        file,\n        /* chunkSize */ 10000000);\n    const success = await reader.read(outputStream);\n    if (!success) {\n      throw reader.error();\n    }\n\n    let flow: Models.Schema.UserFlow|undefined;\n    try {\n      flow = Models.SchemaUtils.parse(JSON.parse(outputStream.data()));\n    } catch (error) {\n      this.importError = error;\n      return;\n    }\n    this.#setCurrentRecording(await this.#storage.saveRecording(flow));\n    this.#setCurrentPage(Pages.RecordingPage);\n    this.#clearError();\n  }\n\n  setCurrentRecordingForTesting(recording: StoredRecording|undefined): void {\n    this.#setCurrentRecording(recording);\n  }\n\n  getSectionsForTesting(): Array<Models.Section.Section>|undefined {\n    return this.sections;\n  }\n\n  #setCurrentRecording(recording: StoredRecording|undefined, opts: Partial<SetCurrentRecordingOptions> = {}): void {\n    const {keepBreakpoints = false, updateSession = false} = opts;\n    this.recordingPlayer?.abort();\n    this.currentStep = undefined;\n    this.recordingError = undefined;\n    this.lastReplayResult = undefined;\n    this.recordingPlayer = undefined;\n    this.#replayState.isPlaying = false;\n    this.#replayState.isPausedOnBreakpoint = false;\n    this.#stepBreakpointIndexes = keepBreakpoints ? this.#stepBreakpointIndexes : new Set();\n\n    if (recording) {\n      this.currentRecording = recording;\n      this.sections = Models.Section.buildSections(recording.flow.steps);\n      this.settings = this.#buildSettings(recording.flow);\n      if (updateSession && this.currentRecordingSession) {\n        this.currentRecordingSession.overwriteUserFlow(recording.flow);\n      }\n    } else {\n      this.currentRecording = undefined;\n      this.sections = undefined;\n      this.settings = undefined;\n    }\n\n    this.#updateScreenshotsForSections();\n  }\n\n  #setCurrentPage(page: Pages): void {\n    if (page === this.currentPage) {\n      return;\n    }\n\n    this.previousPage = this.currentPage;\n    this.currentPage = page;\n  }\n\n  #buildSettings(flow: Models.Schema.UserFlow): Models.RecordingSettings.RecordingSettings {\n    const steps = flow.steps;\n    const navigateStepIdx = steps.findIndex(step => step.type === 'navigate');\n    const settings: Models.RecordingSettings.RecordingSettings = {timeout: flow.timeout};\n    for (let i = navigateStepIdx - 1; i >= 0; i--) {\n      const step = steps[i];\n      if (!settings.viewportSettings && step.type === 'setViewport') {\n        settings.viewportSettings = step;\n      }\n      if (!settings.networkConditionsSettings && step.type === 'emulateNetworkConditions') {\n        settings.networkConditionsSettings = {...step};\n        for (const preset\n                 of [SDK.NetworkManager.OfflineConditions, SDK.NetworkManager.Slow3GConditions,\n                     SDK.NetworkManager.Slow4GConditions, SDK.NetworkManager.Fast4GConditions]) {\n          // Using i18nTitleKey as a title here because we only want to compare the parameters of the network conditions.\n          if (SDK.NetworkManager.networkConditionsEqual(\n                  {...preset, title: preset.i18nTitleKey || ''}, {...step, title: preset.i18nTitleKey || ''})) {\n            settings.networkConditionsSettings.title = preset.title instanceof Function ? preset.title() : preset.title;\n            settings.networkConditionsSettings.i18nTitleKey = preset.i18nTitleKey;\n          }\n        }\n      }\n    }\n    return settings;\n  }\n\n  #getMainTarget(): SDK.Target.Target {\n    const target = SDK.TargetManager.TargetManager.instance().primaryPageTarget();\n    if (!target) {\n      throw new Error('Missing main page target');\n    }\n    return target;\n  }\n\n  #getSectionFromStep(step: Models.Schema.Step): Models.Section.Section|null {\n    if (!this.sections) {\n      return null;\n    }\n\n    for (const section of this.sections) {\n      if (section.steps.indexOf(step) !== -1) {\n        return section;\n      }\n    }\n\n    return null;\n  }\n\n  #updateScreenshotsForSections(): void {\n    if (!this.sections || !this.currentRecording) {\n      return;\n    }\n    const storageName = this.currentRecording.storageName;\n    for (let i = 0; i < this.sections.length; i++) {\n      const screenshot = this.#screenshotStorage.getScreenshotForSection(storageName, i);\n      this.sections[i].screenshot = screenshot || undefined;\n    }\n    this.requestUpdate();\n  }\n\n  #onAbortReplay(): void {\n    this.recordingPlayer?.abort();\n  }\n\n  async #onPlayViaExtension(extension: Extensions.ExtensionManager.Extension): Promise<void> {\n    if (!this.currentRecording || !this.#replayAllowed) {\n      return;\n    }\n    const pluginManager = PublicExtensions.RecorderPluginManager.RecorderPluginManager.instance();\n    const promise = pluginManager.once(PublicExtensions.RecorderPluginManager.Events.ShowViewRequested);\n    extension.replay(this.currentRecording.flow);\n    const descriptor = await promise;\n    this.viewDescriptor = descriptor;\n    Host.userMetrics.recordingReplayStarted(Host.UserMetrics.RecordingReplayStarted.ReplayViaExtension);\n  }\n\n  async #onPlayRecording(event: Components.RecordingView.PlayRecordingEvent): Promise<void> {\n    if (!this.currentRecording || !this.#replayAllowed) {\n      return;\n    }\n    if (this.viewDescriptor) {\n      this.viewDescriptor = undefined;\n    }\n    if (event.data.extension) {\n      return this.#onPlayViaExtension(event.data.extension);\n    }\n    Host.userMetrics.recordingReplayStarted(\n        event.data.targetPanel !== Components.RecordingView.TargetPanel.Default ?\n            Host.UserMetrics.RecordingReplayStarted.ReplayWithPerformanceTracing :\n            Host.UserMetrics.RecordingReplayStarted.ReplayOnly);\n    this.#replayState.isPlaying = true;\n    this.currentStep = undefined;\n    this.recordingError = undefined;\n    this.lastReplayResult = undefined;\n    const currentRecording = this.currentRecording;\n    this.#clearError();\n\n    await this.#disableDeviceModeIfEnabled();\n\n    this.recordingPlayer = new Models.RecordingPlayer.RecordingPlayer(\n        this.currentRecording.flow, {speed: event.data.speed, breakpointIndexes: this.#stepBreakpointIndexes});\n\n    const withPerformanceTrace = event.data.targetPanel === Components.RecordingView.TargetPanel.PerformancePanel;\n    const sectionsWithScreenshot = new Set();\n    this.recordingPlayer.addEventListener(Models.RecordingPlayer.Events.Step, async ({data: {step, resolve}}) => {\n      this.currentStep = step;\n      const currentSection = this.#getSectionFromStep(step);\n      if (this.sections && currentSection && !sectionsWithScreenshot.has(currentSection)) {\n        sectionsWithScreenshot.add(currentSection);\n        const currentSectionIndex = this.sections.indexOf(currentSection);\n        const screenshot = await Models.ScreenshotUtils.takeScreenshot();\n        currentSection.screenshot = screenshot;\n        Models.ScreenshotStorage.ScreenshotStorage.instance().storeScreenshotForSection(\n            currentRecording.storageName, currentSectionIndex, screenshot);\n      }\n      resolve();\n    });\n\n    this.recordingPlayer.addEventListener(Models.RecordingPlayer.Events.Stop, () => {\n      this.#replayState.isPausedOnBreakpoint = true;\n      this.requestUpdate();\n    });\n\n    this.recordingPlayer.addEventListener(Models.RecordingPlayer.Events.Continue, () => {\n      this.#replayState.isPausedOnBreakpoint = false;\n      this.requestUpdate();\n    });\n\n    this.recordingPlayer.addEventListener(Models.RecordingPlayer.Events.Error, ({data: error}) => {\n      this.recordingError = error;\n      if (!withPerformanceTrace) {\n        this.#replayState.isPlaying = false;\n        this.recordingPlayer = undefined;\n      }\n      this.lastReplayResult = Models.RecordingPlayer.ReplayResult.Failure;\n      const errorMessage = error.message.toLowerCase();\n      if (errorMessage.startsWith('could not find element')) {\n        Host.userMetrics.recordingReplayFinished(Host.UserMetrics.RecordingReplayFinished.TimeoutErrorSelectors);\n      } else if (errorMessage.startsWith('waiting for target failed')) {\n        Host.userMetrics.recordingReplayFinished(Host.UserMetrics.RecordingReplayFinished.TimeoutErrorTarget);\n      } else {\n        Host.userMetrics.recordingReplayFinished(Host.UserMetrics.RecordingReplayFinished.OtherError);\n      }\n    });\n\n    this.recordingPlayer.addEventListener(Models.RecordingPlayer.Events.Done, () => {\n      if (!withPerformanceTrace) {\n        this.#replayState.isPlaying = false;\n        this.recordingPlayer = undefined;\n      }\n      this.lastReplayResult = Models.RecordingPlayer.ReplayResult.Success;\n      // Dispatch an event for e2e testing.\n      this.dispatchEvent(new Events.ReplayFinishedEvent());\n      Host.userMetrics.recordingReplayFinished(Host.UserMetrics.RecordingReplayFinished.Success);\n    });\n\n    this.recordingPlayer.addEventListener(Models.RecordingPlayer.Events.Abort, () => {\n      this.currentStep = undefined;\n      this.recordingError = undefined;\n      this.lastReplayResult = undefined;\n      this.#replayState.isPlaying = false;\n    });\n\n    let resolveWithEvents = (_events: Object[]): void => {};\n    const eventsPromise = new Promise<Object[]>((resolve): void => {\n      resolveWithEvents = resolve;\n    });\n\n    let performanceTracing = null;\n    switch (event.data?.targetPanel) {\n      case Components.RecordingView.TargetPanel.PerformancePanel:\n        performanceTracing = new Tracing.PerformanceTracing.PerformanceTracing(this.#getMainTarget(), {\n          tracingBufferUsage(): void{},\n          eventsRetrievalProgress(): void{},\n          tracingComplete(events: Object[]): void {\n            resolveWithEvents(events);\n          },\n        });\n        break;\n    }\n\n    if (performanceTracing) {\n      await performanceTracing.start();\n    }\n\n    this.#setTouchEmulationAllowed(false);\n    await this.recordingPlayer.play();\n    this.#setTouchEmulationAllowed(true);\n\n    if (performanceTracing) {\n      await performanceTracing.stop();\n      const events = await eventsPromise;\n      this.#replayState.isPlaying = false;\n      this.recordingPlayer = undefined;\n      await UI.InspectorView.InspectorView.instance().showPanel(event.data?.targetPanel as string);\n      switch (event.data?.targetPanel) {\n        case Components.RecordingView.TargetPanel.PerformancePanel:\n          Timeline.TimelinePanel.TimelinePanel.instance().loadFromEvents(\n              events as TraceEngine.Types.TraceEvents.TraceEventData[]);\n          break;\n      }\n    }\n  }\n\n  async #disableDeviceModeIfEnabled(): Promise<void> {\n    try {\n      const deviceModeWrapper = Emulation.DeviceModeWrapper.DeviceModeWrapper.instance();\n      if (deviceModeWrapper.isDeviceModeOn()) {\n        deviceModeWrapper.toggleDeviceMode();\n        const emulationModel = this.#getMainTarget().model(SDK.EmulationModel.EmulationModel);\n        await emulationModel?.emulateDevice(null);\n      }\n    } catch {\n      // in the hosted mode, when the DeviceMode toolbar is not supported,\n      // Emulation.DeviceModeWrapper.DeviceModeWrapper.instance throws an exception.\n    }\n  }\n\n  #setTouchEmulationAllowed(touchEmulationAllowed: boolean): void {\n    const emulationModel = this.#getMainTarget().model(SDK.EmulationModel.EmulationModel);\n    emulationModel?.setTouchEmulationAllowed(touchEmulationAllowed);\n  }\n\n  async #onSetRecording(event: Event): Promise<void> {\n    const json = JSON.parse((event as CustomEvent).detail);\n    this.#setCurrentRecording(await this.#storage.saveRecording(Models.SchemaUtils.parse(json)));\n    this.#setCurrentPage(Pages.RecordingPage);\n    this.#clearError();\n  }\n\n  // Used by e2e tests to inspect the current recording.\n  getUserFlow(): Models.Schema.UserFlow|undefined {\n    return this.currentRecording?.flow;\n  }\n\n  async #handleRecordingChanged(event: Components.StepView.StepChanged): Promise<void> {\n    if (!this.currentRecording) {\n      throw new Error('Current recording expected to be defined.');\n    }\n    const recording = {\n      ...this.currentRecording,\n      flow: {\n        ...this.currentRecording.flow,\n        steps: this.currentRecording.flow.steps.map(step => step === event.currentStep ? event.newStep : step),\n      },\n    };\n    this.#setCurrentRecording(\n        await this.#storage.updateRecording(recording.storageName, recording.flow),\n        {keepBreakpoints: true, updateSession: true});\n  }\n\n  async #handleStepAdded(event: Components.StepView.AddStep): Promise<void> {\n    if (!this.currentRecording) {\n      throw new Error('Current recording expected to be defined.');\n    }\n    const stepOrSection = event.stepOrSection;\n    let step;\n    let position = event.position;\n    if ('steps' in stepOrSection) {\n      // section\n      const sectionIdx = this.sections?.indexOf(stepOrSection);\n      if (sectionIdx === undefined || sectionIdx === -1) {\n        throw new Error('There is no section to add a step to');\n      }\n      if (event.position === Components.StepView.AddStepPosition.AFTER) {\n        if (this.sections?.[sectionIdx].steps.length) {\n          step = this.sections?.[sectionIdx].steps[0];\n          position = Components.StepView.AddStepPosition.BEFORE;\n        } else {\n          step = this.sections?.[sectionIdx].causingStep;\n          position = Components.StepView.AddStepPosition.AFTER;\n        }\n      } else {\n        if (sectionIdx <= 0) {\n          throw new Error('There is no section to add a step to');\n        }\n        const prevSection = this.sections?.[sectionIdx - 1];\n        step = prevSection?.steps[prevSection.steps.length - 1];\n        position = Components.StepView.AddStepPosition.AFTER;\n      }\n    } else {\n      // step\n      step = stepOrSection;\n    }\n    if (!step) {\n      throw new Error('Anchor step is not found when adding a step');\n    }\n    const steps = this.currentRecording.flow.steps;\n    const currentIndex = steps.indexOf(step);\n    const indexToInsertAt = currentIndex + (position === Components.StepView.AddStepPosition.BEFORE ? 0 : 1);\n    steps.splice(indexToInsertAt, 0, {type: Models.Schema.StepType.WaitForElement, selectors: ['body']});\n    const recording = {...this.currentRecording, flow: {...this.currentRecording.flow, steps}};\n    Host.userMetrics.recordingEdited(Host.UserMetrics.RecordingEdited.StepAdded);\n    this.#stepBreakpointIndexes = new Set([...this.#stepBreakpointIndexes.values()].map(breakpointIndex => {\n      if (indexToInsertAt > breakpointIndex) {\n        return breakpointIndex;\n      }\n\n      return breakpointIndex + 1;\n    }));\n    this.#setCurrentRecording(\n        await this.#storage.updateRecording(recording.storageName, recording.flow),\n        {keepBreakpoints: true, updateSession: true});\n  }\n\n  async #handleRecordingTitleChanged(event: Components.RecordingView.RecordingTitleChangedEvent): Promise<void> {\n    if (!this.currentRecording) {\n      throw new Error('Current recording expected to be defined.');\n    }\n\n    const flow = {...this.currentRecording.flow, title: event.title};\n    this.#setCurrentRecording(await this.#storage.updateRecording(this.currentRecording.storageName, flow));\n  }\n\n  async #handleStepRemoved(event: Components.StepView.RemoveStep): Promise<void> {\n    if (!this.currentRecording) {\n      throw new Error('Current recording expected to be defined.');\n    }\n\n    const steps = this.currentRecording.flow.steps;\n    const currentIndex = steps.indexOf(event.step);\n    steps.splice(currentIndex, 1);\n    const flow = {...this.currentRecording.flow, steps};\n    Host.userMetrics.recordingEdited(Host.UserMetrics.RecordingEdited.StepRemoved);\n    this.#stepBreakpointIndexes = new Set([...this.#stepBreakpointIndexes.values()]\n                                              .map(breakpointIndex => {\n                                                if (currentIndex > breakpointIndex) {\n                                                  return breakpointIndex;\n                                                }\n\n                                                if (currentIndex === breakpointIndex) {\n                                                  return -1;\n                                                }\n\n                                                return breakpointIndex - 1;\n                                              })\n                                              .filter(index => index >= 0));\n    this.#setCurrentRecording(\n        await this.#storage.updateRecording(this.currentRecording.storageName, flow),\n        {keepBreakpoints: true, updateSession: true});\n  }\n\n  async #onNetworkConditionsChanged(event: Components.RecordingView.NetworkConditionsChanged): Promise<void> {\n    if (!this.currentRecording) {\n      throw new Error('Current recording expected to be defined.');\n    }\n    const navigateIdx = this.currentRecording.flow.steps.findIndex(step => step.type === 'navigate');\n    if (navigateIdx === -1) {\n      throw new Error('Current recording does not have a navigate step');\n    }\n    const emulateNetworkConditionsIdx = this.currentRecording.flow.steps.findIndex((step, idx) => {\n      if (idx >= navigateIdx) {\n        return false;\n      }\n      return step.type === 'emulateNetworkConditions';\n    });\n    if (!event.data) {\n      // Delete step if present.\n      if (emulateNetworkConditionsIdx !== -1) {\n        this.currentRecording.flow.steps.splice(emulateNetworkConditionsIdx, 1);\n      }\n    } else if (emulateNetworkConditionsIdx === -1) {\n      // Insert at the first position.\n      this.currentRecording.flow.steps.splice(\n          0, 0,\n          Models.SchemaUtils.createEmulateNetworkConditionsStep(\n              {download: event.data.download, upload: event.data.upload, latency: event.data.latency}));\n    } else {\n      // Update existing step.\n      const step =\n          this.currentRecording.flow.steps[emulateNetworkConditionsIdx] as Models.Schema.EmulateNetworkConditionsStep;\n      step.download = event.data.download;\n      step.upload = event.data.upload;\n      step.latency = event.data.latency;\n    }\n    this.#setCurrentRecording(\n        await this.#storage.updateRecording(this.currentRecording.storageName, this.currentRecording.flow));\n  }\n\n  async #onTimeoutChanged(event: Components.RecordingView.TimeoutChanged): Promise<void> {\n    if (!this.currentRecording) {\n      throw new Error('Current recording expected to be defined.');\n    }\n    this.currentRecording.flow.timeout = event.data;\n    this.#setCurrentRecording(\n        await this.#storage.updateRecording(this.currentRecording.storageName, this.currentRecording.flow));\n  }\n\n  async #onDeleteRecording(event: Event): Promise<void> {\n    event.stopPropagation();\n    if (event instanceof Components.RecordingListView.DeleteRecordingEvent) {\n      await this.#storage.deleteRecording(event.storageName);\n      this.#screenshotStorage.deleteScreenshotsForRecording(event.storageName);\n      this.requestUpdate();\n    } else {\n      if (!this.currentRecording) {\n        return;\n      }\n      await this.#storage.deleteRecording(this.currentRecording.storageName);\n      this.#screenshotStorage.deleteScreenshotsForRecording(this.currentRecording.storageName);\n    }\n    if ((await this.#storage.getRecordings()).length) {\n      this.#setCurrentPage(Pages.AllRecordingsPage);\n    } else {\n      this.#setCurrentPage(Pages.StartPage);\n    }\n    this.#setCurrentRecording(undefined);\n    this.#clearError();\n  }\n\n  #onCreateNewRecording(event?: Event): void {\n    event?.stopPropagation();\n    this.#setCurrentPage(Pages.CreateRecordingPage);\n    this.#clearError();\n  }\n\n  async #onRecordingStarted(event: Components.CreateRecordingView.RecordingStartedEvent): Promise<void> {\n    // Recording is not available in device mode.\n    await this.#disableDeviceModeIfEnabled();\n\n    // Setting up some variables to notify the user we are initializing a recording.\n    this.isToggling = true;\n    this.#clearError();\n\n    // -- Recording logic starts here --\n    Host.userMetrics.recordingToggled(Host.UserMetrics.RecordingToggled.RecordingStarted);\n    this.currentRecordingSession = new Models.RecordingSession.RecordingSession(this.#getMainTarget(), {\n      title: event.name,\n      selectorAttribute: event.selectorAttribute,\n      selectorTypesToRecord: event.selectorTypesToRecord.length ? event.selectorTypesToRecord :\n                                                                  Object.values(Models.Schema.SelectorType),\n    });\n    this.#setCurrentRecording(await this.#storage.saveRecording(this.currentRecordingSession.cloneUserFlow()));\n\n    let previousSectionIndex = -1;\n    let screenshotPromise:|Promise<Models.ScreenshotStorage.Screenshot>|undefined;\n    const takeScreenshot = async(currentRecording: StoredRecording): Promise<void> => {\n      if (!this.sections) {\n        throw new Error('Could not find sections.');\n      }\n\n      const currentSectionIndex = this.sections.length - 1;\n      const currentSection = this.sections[currentSectionIndex];\n      if (screenshotPromise || previousSectionIndex === currentSectionIndex) {\n        return;\n      }\n\n      screenshotPromise = Models.ScreenshotUtils.takeScreenshot();\n      const screenshot = await screenshotPromise;\n      screenshotPromise = undefined;\n      currentSection.screenshot = screenshot;\n      Models.ScreenshotStorage.ScreenshotStorage.instance().storeScreenshotForSection(\n          currentRecording.storageName, currentSectionIndex, screenshot);\n      previousSectionIndex = currentSectionIndex;\n      this.#updateScreenshotsForSections();\n    };\n\n    this.currentRecordingSession.addEventListener(\n        Models.RecordingSession.Events.RecordingUpdated, async ({data}: {data: Models.Schema.UserFlow}) => {\n          if (!this.currentRecording) {\n            throw new Error('No current recording found');\n          }\n          this.#setCurrentRecording(await this.#storage.updateRecording(this.currentRecording.storageName, data));\n          const recordingView = this.shadowRoot?.querySelector('devtools-recording-view');\n          recordingView?.scrollToBottom();\n\n          await takeScreenshot(this.currentRecording);\n        });\n\n    this.currentRecordingSession.addEventListener(\n        Models.RecordingSession.Events.RecordingStopped, async ({data}: {data: Models.Schema.UserFlow}) => {\n          if (!this.currentRecording) {\n            throw new Error('No current recording found');\n          }\n          Host.userMetrics.keyboardShortcutFired(Actions.RecorderActions.StartRecording);\n          this.#setCurrentRecording(await this.#storage.updateRecording(this.currentRecording.storageName, data));\n          await this.#onRecordingFinished();\n        });\n\n    await this.currentRecordingSession.start();\n    // -- Recording logic ends here --\n\n    // Setting up some variables to notify the user we are finished initialization.\n    this.isToggling = false;\n    this.isRecording = true;\n    this.#setCurrentPage(Pages.RecordingPage);\n\n    // Dispatch an event for e2e testing.\n    this.dispatchEvent(new Events.RecordingStateChangedEvent((this.currentRecording as StoredRecording).flow));\n  }\n\n  async #onRecordingFinished(): Promise<void> {\n    if (!this.currentRecording || !this.currentRecordingSession) {\n      throw new Error('Recording was never started');\n    }\n\n    // Setting up some variables to notify the user we are finalizing a recording.\n    this.isToggling = true;\n    this.#clearError();\n\n    // -- Recording logic starts here --\n    Host.userMetrics.recordingToggled(Host.UserMetrics.RecordingToggled.RecordingFinished);\n    await this.currentRecordingSession.stop();\n    this.currentRecordingSession = undefined;\n    // -- Recording logic ends here --\n\n    // Setting up some variables to notify the user we are finished finalizing.\n    this.isToggling = false;\n    this.isRecording = false;\n\n    // Dispatch an event for e2e testing.\n    this.dispatchEvent(new Events.RecordingStateChangedEvent(this.currentRecording.flow));\n  }\n\n  async #onRecordingCancelled(): Promise<void> {\n    if (this.previousPage) {\n      this.#setCurrentPage(this.previousPage);\n    }\n  }\n\n  async #onRecordingSelected(event: Event): Promise<void> {\n    const storageName = event instanceof Components.RecordingListView.OpenRecordingEvent ||\n            event instanceof Components.RecordingListView.PlayRecordingEvent ?\n        event.storageName :\n        ((event as InputEvent).target as HTMLSelectElement)?.value;\n    this.#setCurrentRecording(await this.#storage.getRecording(storageName));\n    if (this.currentRecording) {\n      this.#setCurrentPage(Pages.RecordingPage);\n    } else if (storageName === Pages.StartPage) {\n      this.#setCurrentPage(Pages.StartPage);\n    } else if (storageName === Pages.AllRecordingsPage) {\n      this.#setCurrentPage(Pages.AllRecordingsPage);\n    }\n  }\n\n  async #onExportOptionSelected(event: Menus.SelectMenu.SelectMenuItemSelectedEvent): Promise<void> {\n    if (typeof event.itemValue !== 'string') {\n      throw new Error('Invalid export option value');\n    }\n    if (event.itemValue === GET_EXTENSIONS_MENU_ITEM) {\n      Host.InspectorFrontendHost.InspectorFrontendHostInstance.openInNewTab(GET_EXTENSIONS_URL);\n      return;\n    }\n    if (!this.currentRecording) {\n      throw new Error('No recording selected');\n    }\n    const id = event.itemValue;\n    const byId = (converter: Converters.Converter.Converter): boolean => converter.getId() === id;\n    const converter = this.#builtInConverters.find(byId) || this.extensionConverters.find(byId);\n    if (!converter) {\n      throw new Error('No recording selected');\n    }\n    const [content] = await converter.stringify(this.currentRecording.flow);\n    await this.#exportContent(converter.getFilename(this.currentRecording.flow), content);\n    const builtInMetric = CONVERTER_ID_TO_METRIC[converter.getId()];\n    if (builtInMetric) {\n      Host.userMetrics.recordingExported(builtInMetric);\n    } else if (converter.getId().startsWith(Converters.ExtensionConverter.EXTENSION_PREFIX)) {\n      Host.userMetrics.recordingExported(Host.UserMetrics.RecordingExported.ToExtension);\n    } else {\n      throw new Error('Could not find a metric for the export option with id = ' + id);\n    }\n  }\n\n  async #exportContent(suggestedName: string, data: string): Promise<void> {\n    try {\n      const handle = await window.showSaveFilePicker({suggestedName});\n      const writable = await handle.createWritable();\n      await writable.write(data);\n      await writable.close();\n    } catch (error) {\n      // If the user aborts the action no need to report it, otherwise do.\n      if (error.name === 'AbortError') {\n        return;\n      }\n\n      throw error;\n    }\n  }\n\n  async #handleAddAssertionEvent(): Promise<void> {\n    if (!this.currentRecordingSession || !this.currentRecording) {\n      return;\n    }\n    const flow = this.currentRecordingSession.cloneUserFlow();\n    flow.steps.push({type: 'waitForElement' as Models.Schema.StepType.WaitForElement, selectors: [['.cls']]});\n    this.#setCurrentRecording(\n        await this.#storage.updateRecording(this.currentRecording.storageName, flow),\n        {keepBreakpoints: true, updateSession: true});\n    Host.userMetrics.recordingAssertion(Host.UserMetrics.RecordingAssertion.AssertionAdded);\n    await this.updateComplete;\n    this.renderRoot.querySelector('devtools-recording-view')\n        ?.shadowRoot?.querySelector('.section:last-child devtools-step-view:last-of-type')\n        ?.shadowRoot?.querySelector<HTMLElement>('.action')\n        ?.click();\n  }\n\n  #onImportRecording(event: Event): void {\n    event.stopPropagation();\n    this.#clearError();\n    this.#fileSelector = UI.UIUtils.createFileSelectorElement(this.#importFile.bind(this));\n    this.#fileSelector.click();\n  }\n\n  async #onPlayRecordingByName(event: Components.RecordingListView.PlayRecordingEvent): Promise<void> {\n    await this.#onRecordingSelected(event);\n    await this.#onPlayRecording(new Components.RecordingView.PlayRecordingEvent(\n        {targetPanel: Components.RecordingView.TargetPanel.Default, speed: this.#recorderSettings.speed}));\n  }\n\n  #onAddBreakpoint = (event: AddBreakpointEvent): void => {\n    this.#stepBreakpointIndexes.add(event.index);\n    this.recordingPlayer?.updateBreakpointIndexes(this.#stepBreakpointIndexes);\n    this.requestUpdate();\n  };\n\n  #onRemoveBreakpoint = (event: RemoveBreakpointEvent): void => {\n    this.#stepBreakpointIndexes.delete(event.index);\n    this.recordingPlayer?.updateBreakpointIndexes(this.#stepBreakpointIndexes);\n    this.requestUpdate();\n  };\n\n  #onExtensionViewClosed(): void {\n    this.viewDescriptor = undefined;\n  }\n\n  handleActions(actionId: Actions.RecorderActions): void {\n    if (!this.isActionPossible(actionId)) {\n      return;\n    }\n\n    switch (actionId) {\n      case Actions.RecorderActions.CreateRecording:\n        this.#onCreateNewRecording();\n        return;\n\n      case Actions.RecorderActions.StartRecording:\n        if (this.currentPage !== Pages.CreateRecordingPage && !this.isRecording) {\n          this.#shortcutHelper.handleShortcut(this.#onRecordingStarted.bind(\n              this,\n              new Components.CreateRecordingView.RecordingStartedEvent(\n                  this.#recorderSettings.defaultTitle, this.#recorderSettings.defaultSelectors,\n                  this.#recorderSettings.selectorAttribute)));\n        } else if (this.currentPage === Pages.CreateRecordingPage) {\n          const view = this.renderRoot.querySelector('devtools-create-recording-view');\n          if (view) {\n            this.#shortcutHelper.handleShortcut(view.startRecording.bind(view));\n          }\n        } else if (this.isRecording) {\n          void this.#onRecordingFinished();\n        }\n        return;\n\n      case Actions.RecorderActions.ReplayRecording:\n        void this.#onPlayRecording(new Components.RecordingView.PlayRecordingEvent(\n            {targetPanel: Components.RecordingView.TargetPanel.Default, speed: this.#recorderSettings.speed}));\n        return;\n\n      case Actions.RecorderActions.ToggleCodeView: {\n        const view = this.renderRoot.querySelector('devtools-recording-view');\n        if (view) {\n          view.showCodeToggle();\n        }\n        return;\n      }\n    }\n  }\n\n  isActionPossible(actionId: Actions.RecorderActions): boolean {\n    switch (actionId) {\n      case Actions.RecorderActions.CreateRecording:\n        return !this.isRecording && !this.#replayState.isPlaying;\n      case Actions.RecorderActions.StartRecording:\n        return !this.#replayState.isPlaying;\n      case Actions.RecorderActions.ReplayRecording:\n        return (this.currentPage === Pages.RecordingPage && !this.#replayState.isPlaying);\n      case Actions.RecorderActions.ToggleCodeView:\n        return this.currentPage === Pages.RecordingPage;\n      case Actions.RecorderActions.CopyRecordingOrStep:\n        // This action is handled in the RecordingView\n        // It relies on browser `copy` event.\n        return false;\n    }\n  }\n\n  #getShortcutsInfo(): Dialogs.ShortcutDialog.Shortcut[] {\n    const getBindingForAction = (action: Actions.RecorderActions): string[] => {\n      const shortcuts = UI.ShortcutRegistry.ShortcutRegistry.instance().shortcutsForAction(action);\n\n      return shortcuts.map(shortcut => shortcut.title());\n    };\n\n    return [\n      {\n        title: i18nString(UIStrings.startStopRecording),\n        bindings: getBindingForAction(Actions.RecorderActions.StartRecording),\n      },\n      {\n        title: i18nString(UIStrings.replayRecording),\n        bindings: getBindingForAction(Actions.RecorderActions.ReplayRecording),\n      },\n      {title: i18nString(UIStrings.copyShortcut), bindings: [`${Host.Platform.isMac() ? '⌘ C' : 'Ctrl+C'}`]},\n      {title: i18nString(UIStrings.toggleCode), bindings: getBindingForAction(Actions.RecorderActions.ToggleCodeView)},\n    ];\n  }\n\n  #renderCurrentPage(): LitHtml.TemplateResult {\n    switch (this.currentPage) {\n      case Pages.StartPage:\n        return this.#renderStartPage();\n      case Pages.AllRecordingsPage:\n        return this.#renderAllRecordingsPage();\n      case Pages.RecordingPage:\n        return this.#renderRecordingPage();\n      case Pages.CreateRecordingPage:\n        return this.#renderCreateRecordingPage();\n    }\n  }\n\n  #renderAllRecordingsPage(): LitHtml.TemplateResult {\n    const recordings = this.#storage.getRecordings();\n    // clang-format off\n    return html`\n      <${Components.RecordingListView.RecordingListView.litTagName}\n        .recordings=${recordings.map(recording => ({\n          storageName: recording.storageName,\n          name: recording.flow.title,\n        }))}\n        .replayAllowed=${this.#replayAllowed}\n        @createrecording=${this.#onCreateNewRecording}\n        @deleterecording=${this.#onDeleteRecording}\n        @openrecording=${this.#onRecordingSelected}\n        @playrecording=${this.#onPlayRecordingByName}\n        >\n      </${Components.RecordingListView.RecordingListView.litTagName}>\n    `;\n    // clang-format on\n  }\n\n  #renderStartPage(): LitHtml.TemplateResult {\n    // clang-format off\n    return html`\n      <${Components.StartView.StartView.litTagName}\n        @createrecording=${this.#onCreateNewRecording}\n      ></${Components.StartView.StartView.litTagName}>\n    `;\n    // clang-format on\n  }\n\n  #renderRecordingPage(): LitHtml.TemplateResult {\n    // clang-format off\n    return html`\n      <${Components.RecordingView.RecordingView.litTagName}\n        .data=${\n          {\n            recording: this.currentRecording?.flow,\n            replayState: this.#replayState,\n            isRecording: this.isRecording,\n            recordingTogglingInProgress: this.isToggling,\n            currentStep: this.currentStep,\n            currentError: this.recordingError,\n            sections: this.sections,\n            settings: this.settings,\n            recorderSettings: this.#recorderSettings,\n            lastReplayResult: this.lastReplayResult,\n            replayAllowed: this.#replayAllowed,\n            breakpointIndexes: this.#stepBreakpointIndexes,\n            builtInConverters: this.#builtInConverters,\n            extensionConverters: this.extensionConverters,\n            replayExtensions: this.replayExtensions,\n            extensionDescriptor: this.viewDescriptor,\n          } as Components.RecordingView.RecordingViewData\n        }\n        @networkconditionschanged=${this.#onNetworkConditionsChanged}\n        @timeoutchanged=${this.#onTimeoutChanged}\n        @requestselectorattribute=${(\n          event: Controllers.SelectorPicker.RequestSelectorAttributeEvent,\n        ) => {\n          event.send(this.currentRecording?.flow.selectorAttribute);\n        }}\n        @recordingfinished=${this.#onRecordingFinished}\n        @stepchanged=${this.#handleRecordingChanged.bind(this)}\n        @recordingtitlechanged=${this.#handleRecordingTitleChanged.bind(this)}\n        @addstep=${this.#handleStepAdded.bind(this)}\n        @removestep=${this.#handleStepRemoved.bind(this)}\n        @addbreakpoint=${this.#onAddBreakpoint}\n        @removebreakpoint=${this.#onRemoveBreakpoint}\n        @playrecording=${this.#onPlayRecording}\n        @abortreplay=${this.#onAbortReplay}\n        @recorderextensionviewclosed=${this.#onExtensionViewClosed}\n        @addassertion=${this.#handleAddAssertionEvent}\n      ></${Components.RecordingView.RecordingView.litTagName}>\n    `;\n    // clang-format on\n  }\n\n  #renderCreateRecordingPage(): LitHtml.TemplateResult {\n    // clang-format off\n    return html`\n      <${Components.CreateRecordingView.CreateRecordingView.litTagName}\n        .data=${\n          {\n            recorderSettings: this.#recorderSettings,\n          } as Components.CreateRecordingView.CreateRecordingViewData\n        }\n        @recordingstarted=${this.#onRecordingStarted}\n        @recordingcancelled=${this.#onRecordingCancelled}\n      ></${Components.CreateRecordingView.CreateRecordingView.litTagName}>\n    `;\n    // clang-format on\n  }\n\n  #getExportMenuButton = (): Buttons.Button.Button => {\n    if (!this.#exportMenuButton) {\n      throw new Error('#exportMenuButton not found');\n    }\n    return this.#exportMenuButton;\n  };\n\n  #onExportRecording(event: Event): void {\n    event.stopPropagation();\n    this.#clearError();\n    this.exportMenuExpanded = !this.exportMenuExpanded;\n  }\n\n  #onExportMenuClosed(): void {\n    this.exportMenuExpanded = false;\n  }\n\n  protected override render(): LitHtml.TemplateResult {\n    const recordings = this.#storage.getRecordings();\n    const selectValue: string = this.currentRecording ? this.currentRecording.storageName : this.currentPage;\n    // clang-format off\n    const values = [\n      recordings.length === 0\n        ? {\n            value: Pages.StartPage,\n            name: i18nString(UIStrings.noRecordings),\n            selected: selectValue === Pages.StartPage,\n          }\n        : {\n            value: Pages.AllRecordingsPage,\n            name: `${recordings.length} ${i18nString(UIStrings.numberOfRecordings)}`,\n            selected: selectValue === Pages.AllRecordingsPage,\n          },\n      ...recordings.map(recording => ({\n        value: recording.storageName,\n        name: recording.flow.title,\n        selected: selectValue === recording.storageName,\n      })),\n    ];\n\n    return html`\n        <div class=\"wrapper\">\n          <div class=\"header\" jslog=${VisualLogging.toolbar()}>\n            <${Buttons.Button.Button.litTagName}\n              @click=${this.#onCreateNewRecording}\n              .data=${\n                {\n                  variant: Buttons.Button.Variant.TOOLBAR,\n                  iconName: 'plus',\n                  disabled:\n                    this.#replayState.isPlaying ||\n                    this.isRecording ||\n                    this.isToggling,\n                  title: Models.Tooltip.getTooltipForActions(\n                    i18nString(UIStrings.createRecording),\n                    Actions.RecorderActions.CreateRecording,\n                  ),\n                  jslogContext: Actions.RecorderActions.CreateRecording,\n                } as Buttons.Button.ButtonData\n              }\n            ></${Buttons.Button.Button.litTagName}>\n            <div class=\"separator\"></div>\n            <select\n              .disabled=${\n                recordings.length === 0 ||\n                this.#replayState.isPlaying ||\n                this.isRecording ||\n                this.isToggling\n              }\n              @click=${(e: Event) => e.stopPropagation()}\n              @change=${this.#onRecordingSelected}\n              jslog=${VisualLogging.dropDown('recordings').track({change: true})}\n            >\n              ${LitHtml.Directives.repeat(\n                values,\n                item => item.value,\n                item => {\n                  return html`<option .selected=${item.selected} value=${item.value}>${item.name}</option>`;\n                },\n              )}\n            </select>\n            <div class=\"separator\"></div>\n            <${Buttons.Button.Button.litTagName}\n              @click=${this.#onImportRecording}\n              .data=${\n                {\n                  variant: Buttons.Button.Variant.TOOLBAR,\n                  iconName: 'import',\n                  title: i18nString(UIStrings.importRecording),\n                  jslogContext: 'import-recording',\n                } as Buttons.Button.ButtonData\n              }\n            ></${Buttons.Button.Button.litTagName}>\n            <${Buttons.Button.Button.litTagName}\n              id='origin'\n              @click=${this.#onExportRecording}\n              on-render=${ComponentHelpers.Directives.nodeRenderedCallback(\n                node => {\n                  this.#exportMenuButton = node as Buttons.Button.Button;\n                },\n              )}\n              .data=${\n                {\n                  variant: Buttons.Button.Variant.TOOLBAR,\n                  iconName: 'download',\n                  title: i18nString(UIStrings.exportRecording),\n                  disabled: !this.currentRecording,\n                } as Buttons.Button.ButtonData\n              }\n              jslog=${VisualLogging.dropDown('export-recording').track({click: true})}\n            ></${Buttons.Button.Button.litTagName}>\n            <${Menus.Menu.Menu.litTagName}\n              @menucloserequest=${this.#onExportMenuClosed}\n              @menuitemselected=${this.#onExportOptionSelected}\n              .origin=${this.#getExportMenuButton}\n              .showDivider=${false}\n              .showSelectedItem=${false}\n              .showConnector=${false}\n              .open=${this.exportMenuExpanded}\n            >\n              <${Menus.Menu.MenuGroup.litTagName} .name=${i18nString(\n      UIStrings.export,\n    )}>\n                ${LitHtml.Directives.repeat(\n                  this.#builtInConverters,\n                  converter => {\n                    return html`\n                    <${\n                      Menus.Menu.MenuItem.litTagName\n                    } .value=${converter.getId()}\n                      jslog=${VisualLogging.item(`converter-${converter.getFormatName()}`).track({click: true})}>\n                      ${converter.getFormatName()}\n                    </${Menus.Menu.MenuItem.litTagName}>\n                  `;\n                  },\n                )}\n              </${Menus.Menu.MenuGroup.litTagName}>\n              <${Menus.Menu.MenuGroup.litTagName} .name=${i18nString(\n      UIStrings.exportViaExtensions,\n    )}>\n                ${LitHtml.Directives.repeat(\n                  this.extensionConverters,\n                  converter => {\n                    return html`\n                    <${\n                      Menus.Menu.MenuItem.litTagName\n                    } .value=${converter.getId()}\n                      jslog=${VisualLogging.item(`converter-${converter.getFormatName()}`).track({click: true})}>\n                    ${converter.getFormatName()}\n                    </${Menus.Menu.MenuItem.litTagName}>\n                  `;\n                  },\n                )}\n                <${\n                  Menus.Menu.MenuItem.litTagName\n                } .value=${GET_EXTENSIONS_MENU_ITEM}>\n                  ${i18nString(UIStrings.getExtensions)}\n                </${Menus.Menu.MenuItem.litTagName}>\n              </${Menus.Menu.MenuGroup.litTagName}>\n            </${Menus.Menu.Menu.litTagName}>\n            <${Buttons.Button.Button.litTagName}\n              @click=${this.#onDeleteRecording}\n              .data=${\n                {\n                  variant: Buttons.Button.Variant.TOOLBAR,\n                  iconName: 'bin',\n                  disabled:\n                    !this.currentRecording ||\n                    this.#replayState.isPlaying ||\n                    this.isRecording ||\n                    this.isToggling,\n                  title: i18nString(UIStrings.deleteRecording),\n                  jslogContext: 'delete-recording',\n                } as Buttons.Button.ButtonData\n              }\n            ></${Buttons.Button.Button.litTagName}>\n            <div class=\"separator\"></div>\n            <${Buttons.Button.Button.litTagName}\n              @click=${() => this.recordingPlayer?.continue()}\n              .data=${\n                {\n                  variant: Buttons.Button.Variant.PRIMARY_TOOLBAR,\n                  iconName: 'resume',\n                  disabled:\n                    !this.recordingPlayer ||\n                    !this.#replayState.isPausedOnBreakpoint,\n                  title: i18nString(UIStrings.continueReplay),\n                  jslogContext: 'continue-replay',\n                } as Buttons.Button.ButtonData\n              }\n            ></${Buttons.Button.Button.litTagName}>\n            <${Buttons.Button.Button.litTagName}\n              @click=${() => this.recordingPlayer?.stepOver()}\n              .data=${\n                {\n                  variant: Buttons.Button.Variant.TOOLBAR,\n                  iconName: 'step-over',\n                  disabled:\n                    !this.recordingPlayer ||\n                    !this.#replayState.isPausedOnBreakpoint,\n                  title: i18nString(UIStrings.stepOverReplay),\n                  jslogContext: 'step-over',\n                } as Buttons.Button.ButtonData\n              }\n            ></${Buttons.Button.Button.litTagName}>\n            <div class=\"feedback\">\n              <x-link class=\"x-link\" href=${\n                Components.StartView.FEEDBACK_URL\n              } jslog=${VisualLogging.link('feedback').track({click: true})}>${i18nString(UIStrings.sendFeedback)}</x-link>\n            </div>\n            <div class=\"separator\"></div>\n            <${Dialogs.ShortcutDialog.ShortcutDialog.litTagName}\n              .data=${\n                {\n                  shortcuts: this.#getShortcutsInfo(),\n                } as Dialogs.ShortcutDialog.ShortcutDialogData\n              } jslog=${VisualLogging.action('show-shortcuts').track({click: true})}\n            ></${Dialogs.ShortcutDialog.ShortcutDialog.litTagName}>\n          </div>\n          ${\n            this.importError\n              ? html`<div class='error'>Import error: ${\n                  this.importError.message\n                }</div>`\n              : ''\n          }\n          ${this.#renderCurrentPage()}\n        </div>\n      `;\n    // clang-format on\n  }\n}\n"]}