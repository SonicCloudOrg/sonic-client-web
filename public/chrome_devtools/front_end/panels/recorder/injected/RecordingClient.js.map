{"version":3,"file":"RecordingClient.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/recorder/injected/RecordingClient.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {\n  type Schema,\n  type SelectorType,\n  type StepType,\n} from '../../../third_party/puppeteer-replay/puppeteer-replay.js';\nimport {Logger} from './Logger.js';\nimport {SelectorComputer} from './SelectorComputer.js';\nimport {type Step} from './Step.js';\nimport {type AccessibilityBindings} from './selectors/ARIASelector.js';\nimport {queryCSSSelectorAll} from './selectors/CSSSelector.js';\nimport {type Selector} from './selectors/Selector.js';\nimport {\n  getClickableTargetFromEvent,\n  haultImmediateEvent,\n  assert,\n  createClickAttributes,\n} from './util.js';\n\ndeclare global {\n  interface Window {\n    stopShortcut(payload: string): void;\n    addStep(step: string): void;\n  }\n}\n\ninterface Shortcut {\n  meta: boolean;\n  ctrl: boolean;\n  shift: boolean;\n  alt: boolean;\n  keyCode: number;\n}\n\nexport interface RecordingClientOptions {\n  debug: boolean;\n  allowUntrustedEvents: boolean;\n  selectorAttribute?: string;\n  selectorTypesToRecord: SelectorType[];\n  stopShortcuts?: Shortcut[];\n}\n\n/**\n * Determines whether an element is ignorable as an input.\n *\n * This is only called on input-like elements (elements that emit the `input`\n * event).\n *\n * With every `if` statement, please write a comment above explaining your\n * reasoning for ignoring the event.\n */\nconst isIgnorableInputElement = (element: Element): boolean => {\n  if (element instanceof HTMLInputElement) {\n    switch (element.type) {\n      // Checkboxes are always changed as a consequence of another type of action\n      // such as the keyboard or mouse. As such, we can safely ignore these\n      // elements.\n      case 'checkbox':\n        return true;\n        // Radios are always changed as a consequence of another type of action\n        // such as the keyboard or mouse. As such, we can safely ignore these\n        // elements.\n      case 'radio':\n        return true;\n    }\n  }\n  return false;\n};\n\nconst getShortcutLength = (shortcut: Shortcut): string => {\n  return Object.values(shortcut).filter(key => Boolean(key)).length.toString();\n};\n\nclass RecordingClient {\n  static readonly defaultSetupOptions: Readonly<RecordingClientOptions> = Object.freeze({\n    debug: false,\n    allowUntrustedEvents: false,\n    selectorTypesToRecord:\n                             [\n                               'aria',\n                               'css',\n                               'text',\n                               'xpath',\n                               'pierce',\n                             ] as SelectorType[],\n  });\n\n  #computer: SelectorComputer;\n\n  #isTrustedEvent = (event: Event): boolean => event.isTrusted;\n  #stopShortcuts: Shortcut[] = [];\n  #logger: Logger;\n\n  constructor(\n      bindings: AccessibilityBindings,\n      options = RecordingClient.defaultSetupOptions,\n  ) {\n    this.#logger = new Logger(options.debug ? 'debug' : 'silent');\n    this.#logger.log('creating a RecordingClient');\n    this.#computer = new SelectorComputer(\n        bindings,\n        this.#logger,\n        options.selectorAttribute,\n        options.selectorTypesToRecord,\n    );\n\n    if (options.allowUntrustedEvents) {\n      this.#isTrustedEvent = (): boolean => true;\n    }\n\n    this.#stopShortcuts = options.stopShortcuts ?? [];\n  }\n\n  start = (): void => {\n    this.#logger.log('Setting up recording listeners');\n\n    window.addEventListener('keydown', this.#onKeyDown, true);\n    window.addEventListener('beforeinput', this.#onBeforeInput, true);\n    window.addEventListener('input', this.#onInput, true);\n    window.addEventListener('keyup', this.#onKeyUp, true);\n\n    window.addEventListener('pointerdown', this.#onPointerDown, true);\n    window.addEventListener('click', this.#onClick, true);\n    window.addEventListener('auxclick', this.#onClick, true);\n\n    window.addEventListener('beforeunload', this.#onBeforeUnload, true);\n  };\n\n  stop = (): void => {\n    this.#logger.log('Tearing down client listeners');\n\n    window.removeEventListener('keydown', this.#onKeyDown, true);\n    window.removeEventListener('beforeinput', this.#onBeforeInput, true);\n    window.removeEventListener('input', this.#onInput, true);\n    window.removeEventListener('keyup', this.#onKeyUp, true);\n\n    window.removeEventListener('pointerdown', this.#onPointerDown, true);\n    window.removeEventListener('click', this.#onClick, true);\n    window.removeEventListener('auxclick', this.#onClick, true);\n\n    window.removeEventListener('beforeunload', this.#onBeforeUnload, true);\n  };\n\n  getSelectors = (node: Node): Selector[] => {\n    return this.#computer.getSelectors(node);\n  };\n\n  getCSSSelector = (node: Node): Selector|undefined => {\n    return this.#computer.getCSSSelector(node);\n  };\n\n  getTextSelector = (node: Node): Selector|undefined => {\n    return this.#computer.getTextSelector(node);\n  };\n\n  queryCSSSelectorAllForTesting = (selector: Selector): Element[] => {\n    return queryCSSSelectorAll(selector);\n  };\n\n  #wasStopShortcutPress = (event: KeyboardEvent): boolean => {\n    for (const shortcut of this.#stopShortcuts ?? []) {\n      if (event.shiftKey === shortcut.shift && event.ctrlKey === shortcut.ctrl && event.metaKey === shortcut.meta &&\n          event.keyCode === shortcut.keyCode) {\n        this.stop();\n        haultImmediateEvent(event);\n        window.stopShortcut(getShortcutLength(shortcut));\n        return true;\n      }\n    }\n    return false;\n  };\n\n  #initialInputTarget: {element: Element, selectors: Selector[]} = {element: document.documentElement, selectors: []};\n\n  /**\n   * Sets the current input target and computes the selector.\n   *\n   * This needs to be called before any input-related events (keydown, keyup,\n   * input, change, etc) occur so the precise selector is known. Since we\n   * capture on the `Window`, it suffices to call this on the first event in any\n   * given input sequence. This will always be either `keydown`, `beforeinput`,\n   * or `input`.\n   */\n  #setInitialInputTarget = (event: Event): void => {\n    const element = event.composedPath()[0];\n    assert(element instanceof Element);\n    if (this.#initialInputTarget.element === element) {\n      return;\n    }\n    this.#initialInputTarget = {element, selectors: this.getSelectors(element)};\n  };\n\n  #onKeyDown = (event: KeyboardEvent): void => {\n    if (!this.#isTrustedEvent(event)) {\n      return;\n    }\n    if (this.#wasStopShortcutPress(event)) {\n      return;\n    }\n    this.#setInitialInputTarget(event);\n    this.#addStep({\n      type: 'keyDown' as StepType.KeyDown,\n      key: event.key as Schema.Key,\n    });\n  };\n\n  #onBeforeInput = (event: Event): void => {\n    if (!this.#isTrustedEvent(event)) {\n      return;\n    }\n    this.#setInitialInputTarget(event);\n  };\n\n  #onInput = (event: Event): void => {\n    if (!this.#isTrustedEvent(event)) {\n      return;\n    }\n    this.#setInitialInputTarget(event);\n    if (isIgnorableInputElement(this.#initialInputTarget.element)) {\n      return;\n    }\n    const {element, selectors} = this.#initialInputTarget;\n    this.#addStep({\n      type: 'change' as StepType.Change,\n      selectors,\n      value: 'value' in element ? element.value as string : element.textContent as string,\n    });\n  };\n\n  #onKeyUp = (event: KeyboardEvent): void => {\n    if (!this.#isTrustedEvent(event)) {\n      return;\n    }\n    this.#addStep({\n      type: 'keyUp' as StepType.KeyUp,\n      key: event.key as Schema.Key,\n    });\n  };\n\n  #initialPointerTarget: {element: Element, selectors: Selector[]} = {\n    element: document.documentElement,\n    selectors: [],\n  };\n  #setInitialPointerTarget = (event: Event): void => {\n    const element = getClickableTargetFromEvent(event);\n    if (this.#initialPointerTarget.element === element) {\n      return;\n    }\n    this.#initialPointerTarget = {\n      element,\n      selectors: this.#computer.getSelectors(element),\n    };\n  };\n\n  #pointerDownTimestamp = 0;\n  #onPointerDown = (event: MouseEvent): void => {\n    if (!this.#isTrustedEvent(event)) {\n      return;\n    }\n    this.#pointerDownTimestamp = event.timeStamp;\n    this.#setInitialPointerTarget(event);\n  };\n\n  #onClick = (event: MouseEvent): void => {\n    if (!this.#isTrustedEvent(event)) {\n      return;\n    }\n    this.#setInitialPointerTarget(event);\n    const attributes = createClickAttributes(event, this.#initialPointerTarget.element);\n    if (!attributes) {\n      return;\n    }\n    const duration = event.timeStamp - this.#pointerDownTimestamp;\n    this.#addStep({\n      type: event.detail === 2 ? 'doubleClick' as StepType.DoubleClick : 'click' as StepType.Click,\n      selectors: this.#initialPointerTarget.selectors,\n      duration: duration > 350 ? duration : undefined,\n      ...attributes,\n    });\n  };\n\n  #onBeforeUnload = (event: Event): void => {\n    this.#logger.log('Unloading...');\n    if (!this.#isTrustedEvent(event)) {\n      return;\n    }\n    this.#addStep({type: 'beforeUnload'});\n  };\n\n  #addStep = (step: Step): void => {\n    const payload = JSON.stringify(step);\n    this.#logger.log(`Adding step: ${payload}`);\n    window.addStep(payload);\n  };\n}\n\nexport {RecordingClient};\n"]}