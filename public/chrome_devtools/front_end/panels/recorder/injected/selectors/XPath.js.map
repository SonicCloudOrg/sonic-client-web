{"version":3,"file":"XPath.js","sourceRoot":"","sources":["../../../../../../../../front_end/panels/recorder/injected/selectors/XPath.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {SelectorPart, type Selector} from './Selector.js';\n\nconst attributeSelector = (name: string, value: string): string => {\n  return `//*[@${name}=${JSON.stringify(value)}]`;\n};\n\nconst getSelectorPart = (\n    node: Node,\n    optimized?: boolean,\n    attributes: string[] = [],\n    ): SelectorPart|undefined => {\n  let value: string;\n  switch (node.nodeType) {\n    case Node.ELEMENT_NODE:\n      if (!(node instanceof Element)) {\n        return;\n      }\n      if (optimized) {\n        for (const attribute of attributes) {\n          value = node.getAttribute(attribute) ?? '';\n          if (value) {\n            return new SelectorPart(attributeSelector(attribute, value), true);\n          }\n        }\n      }\n      if (node.id) {\n        return new SelectorPart(attributeSelector('id', node.id), true);\n      }\n      value = node.localName;\n      break;\n    case Node.ATTRIBUTE_NODE:\n      value = '@' + node.nodeName;\n      break;\n    case Node.TEXT_NODE:\n    case Node.CDATA_SECTION_NODE:\n      value = 'text()';\n      break;\n    case Node.PROCESSING_INSTRUCTION_NODE:\n      value = 'processing-instruction()';\n      break;\n    case Node.COMMENT_NODE:\n      value = 'comment()';\n      break;\n    case Node.DOCUMENT_NODE:\n      value = '';\n      break;\n    default:\n      value = '';\n      break;\n  }\n\n  const index = getXPathIndexInParent(node);\n  if (index > 0) {\n    value += `[${index}]`;\n  }\n\n  return new SelectorPart(value, node.nodeType === Node.DOCUMENT_NODE);\n};\n\nconst getXPathIndexInParent = (node: Node): number => {\n  /**\n   * @returns -1 in case of error, 0 if no siblings matching the same expression,\n   * XPath index among the same expression-matching sibling nodes otherwise.\n   */\n  function areNodesSimilar(left: Node, right: Node): boolean {\n    if (left === right) {\n      return true;\n    }\n\n    if (left instanceof Element && right instanceof Element) {\n      return left.localName === right.localName;\n    }\n\n    if (left.nodeType === right.nodeType) {\n      return true;\n    }\n\n    // XPath treats CDATA as text nodes.\n    const leftType = left.nodeType === Node.CDATA_SECTION_NODE ? Node.TEXT_NODE : left.nodeType;\n    const rightType = right.nodeType === Node.CDATA_SECTION_NODE ? Node.TEXT_NODE : right.nodeType;\n    return leftType === rightType;\n  }\n\n  const children = node.parentNode ? node.parentNode.children : null;\n  if (!children) {\n    return 0;\n  }\n  let hasSameNamedElements;\n  for (let i = 0; i < children.length; ++i) {\n    if (areNodesSimilar(node, children[i]) && children[i] !== node) {\n      hasSameNamedElements = true;\n      break;\n    }\n  }\n  if (!hasSameNamedElements) {\n    return 0;\n  }\n  let ownIndex = 1;  // XPath indices start with 1.\n  for (let i = 0; i < children.length; ++i) {\n    if (areNodesSimilar(node, children[i])) {\n      if (children[i] === node) {\n        return ownIndex;\n      }\n      ++ownIndex;\n    }\n  }\n\n  throw new Error(\n      'This is impossible; a child must be the child of the parent',\n  );\n};\n\n/**\n * Computes the XPath for a node.\n *\n * @param node - The node to compute.\n * @param optimized - Whether to optimize the XPath for the node. Does not imply\n * the XPath is shorter; implies the XPath will be highly-scoped to the node.\n * @returns The computed XPath.\n *\n * @internal\n */\nexport const computeXPath = (\n    node: Node,\n    optimized?: boolean,\n    attributes?: string[],\n    ): Selector|undefined => {\n  if (node.nodeType === Node.DOCUMENT_NODE) {\n    return '/';\n  }\n\n  const selectors = [];\n\n  const buffer = [];\n  let contextNode: Node|null = node;\n  while (contextNode !== document && contextNode) {\n    const part = getSelectorPart(contextNode, optimized, attributes);\n    if (!part) {\n      return;\n    }\n    buffer.unshift(part);\n    if (part.optimized) {\n      contextNode = contextNode.getRootNode();\n    } else {\n      contextNode = contextNode.parentNode;\n    }\n    if (contextNode instanceof ShadowRoot) {\n      selectors.unshift((buffer[0].optimized ? '' : '/') + buffer.join('/'));\n      buffer.splice(0, buffer.length);\n      contextNode = contextNode.host;\n    }\n  }\n\n  if (buffer.length) {\n    selectors.unshift((buffer[0].optimized ? '' : '/') + buffer.join('/'));\n  }\n\n  if (!selectors.length || selectors.length > 1) {\n    // XPath evaluation does not work on shadowRoot.\n    return;\n  }\n\n  return selectors;\n};\n"]}