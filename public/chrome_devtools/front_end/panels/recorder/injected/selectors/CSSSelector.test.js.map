{"version":3,"file":"CSSSelector.test.js","sourceRoot":"","sources":["../../../../../../../../front_end/panels/recorder/injected/selectors/CSSSelector.test.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,+CAA+C;AAE/C,OAAO,EAAC,UAAU,EAAC,MAAM,kBAAkB,CAAC;AAE5C,QAAQ,CAAC,YAAY,EAAE,GAAG,EAAE;IAC1B,EAAE,CAAC,aAAa,EAAE,GAAG,EAAE;QACrB,MAAM,MAAM,GAAG,UAAU,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE;YACjC,GAAG,CAAC,KAAa;gBACf,OAAO,KAAK,GAAG,CAAC,CAAC;YACnB,CAAC;YACD,OAAO,CAAC,KAAa;gBACnB,OAAO,KAAK,CAAC;YACf,CAAC;YACD,GAAG,CAAC,KAAa,EAAE,KAAa;gBAC9B,OAAO,KAAK,IAAI,KAAK,CAAC;YACxB,CAAC;SACF,CAAC,CAAC;QAEH,MAAM,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,0BAA0B,EAAE,GAAG,EAAE;QAClC,MAAM,MAAM,GAAG,UAAU,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE;YACjC,GAAG,CAAC,KAAa;gBACf,OAAO,KAAK,GAAG,CAAC,CAAC;YACnB,CAAC;YACD,OAAO,CAAC,KAAa;gBACnB,OAAO,KAAK,CAAC;YACf,CAAC;YACD,GAAG,CAAC,KAAa,EAAE,KAAa;gBAC9B,OAAO,KAAK,IAAI,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YACrC,CAAC;SACF,CAAC,CAAC;QAEH,MAAM,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable rulesdir/es_modules_import */\n\nimport {findMinMax} from './CSSSelector.js';\n\ndescribe('findMinMax', () => {\n  it('should work', () => {\n    const minmax = findMinMax([0, 10], {\n      inc(index: number): number {\n        return index + 1;\n      },\n      valueOf(index: number): number {\n        return index;\n      },\n      gte(value: number, index: number): boolean {\n        return value >= index;\n      },\n    });\n\n    assert.strictEqual(minmax, 9);\n  });\n\n  it('should work, non trivial', () => {\n    const minmax = findMinMax([0, 10], {\n      inc(index: number): number {\n        return index + 1;\n      },\n      valueOf(index: number): number {\n        return index;\n      },\n      gte(value: number, index: number): boolean {\n        return value >= Math.min(index, 5);\n      },\n    });\n\n    assert.strictEqual(minmax, 5);\n  });\n});\n"]}