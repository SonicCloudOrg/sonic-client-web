{"version":3,"file":"ARIASelector.js","sourceRoot":"","sources":["../../../../../../../../front_end/panels/recorder/injected/selectors/ARIASelector.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {type Selector, type DeepSelector} from './Selector.js';\n\nexport interface AccessibilityBindings {\n  getAccessibleName(node: Node): string;\n  getAccessibleRole(node: Node): string;\n}\n\nclass ARIASelectorComputer {\n  #bindings: AccessibilityBindings;\n\n  constructor(bindings: AccessibilityBindings) {\n    this.#bindings = bindings;\n  }\n\n  // Takes a path consisting of element names and roles and makes sure that\n  // every element resolves to a single result. If it does, the selector is added\n  // to the chain of selectors.\n  #computeUniqueARIASelectorForElements = (\n      elements: {name: string, role: string}[],\n      queryByRoleOnly: boolean,\n      ): DeepSelector|undefined => {\n    const selectors: string[] = [];\n    let parent: Element|Document = document;\n    for (const element of elements) {\n      let result = this.#queryA11yTreeOneByName(parent, element.name);\n      if (result) {\n        selectors.push(element.name);\n        parent = result;\n        continue;\n      }\n      if (queryByRoleOnly) {\n        result = this.#queryA11yTreeOneByRole(parent, element.role);\n        if (result) {\n          selectors.push(`[role=\"${element.role}\"]`);\n          parent = result;\n          continue;\n        }\n      }\n      result = this.#queryA11yTreeOneByNameAndRole(\n          parent,\n          element.name,\n          element.role,\n      );\n      if (result) {\n        selectors.push(`${element.name}[role=\"${element.role}\"]`);\n        parent = result;\n        continue;\n      }\n      return;\n    }\n    return selectors;\n  };\n\n  #queryA11yTreeOneByName = (\n      parent: Element|Document,\n      name?: string,\n      ): Element|null => {\n    if (!name) {\n      return null;\n    }\n    const maxResults = 2;\n    const result = this.#queryA11yTree(parent, name, undefined, maxResults);\n    if (result.length !== 1) {\n      return null;\n    }\n    return result[0];\n  };\n\n  #queryA11yTreeOneByRole = (\n      parent: Element|Document,\n      role?: string,\n      ): Element|null => {\n    if (!role) {\n      return null;\n    }\n    const maxResults = 2;\n    const result = this.#queryA11yTree(parent, undefined, role, maxResults);\n    if (result.length !== 1) {\n      return null;\n    }\n    return result[0];\n  };\n\n  #queryA11yTreeOneByNameAndRole = (\n      parent: Element|Document,\n      name?: string,\n      role?: string,\n      ): Element|null => {\n    if (!role || !name) {\n      return null;\n    }\n    const maxResults = 2;\n    const result = this.#queryA11yTree(parent, name, role, maxResults);\n    if (result.length !== 1) {\n      return null;\n    }\n    return result[0];\n  };\n\n  // Queries the DOM tree for elements with matching accessibility name and role.\n  // It attempts to mimic https://chromedevtools.github.io/devtools-protocol/tot/Accessibility/#method-queryAXTree.\n  #queryA11yTree = (\n      parent: Element|Document,\n      name?: string,\n      role?: string,\n      maxResults = 0,\n      ): Element[] => {\n    const result: Element[] = [];\n    if (!name && !role) {\n      throw new Error('Both role and name are empty');\n    }\n    const shouldMatchName = Boolean(name);\n    const shouldMatchRole = Boolean(role);\n    const collect = (root: Element|ShadowRoot): void => {\n      const iter = document.createTreeWalker(root, NodeFilter.SHOW_ELEMENT);\n      do {\n        const currentNode = iter.currentNode as HTMLElement;\n        if (currentNode.shadowRoot) {\n          collect(currentNode.shadowRoot);\n        }\n        if (currentNode instanceof ShadowRoot) {\n          continue;\n        }\n        if (shouldMatchName && this.#bindings.getAccessibleName(currentNode) !== name) {\n          continue;\n        }\n        if (shouldMatchRole && this.#bindings.getAccessibleRole(currentNode) !== role) {\n          continue;\n        }\n        result.push(currentNode);\n        if (maxResults && result.length >= maxResults) {\n          return;\n        }\n      } while (iter.nextNode());\n    };\n    collect(parent instanceof Document ? document.documentElement : parent);\n    return result;\n  };\n\n  compute = (node: Node): Selector|undefined => {\n    let selector: Selector|undefined;\n    let current: Node|null = node;\n    const elements: {name: string, role: string}[] = [];\n    while (current) {\n      const role = this.#bindings.getAccessibleRole(current);\n      const name = this.#bindings.getAccessibleName(current);\n      if (!role && !name) {\n        if (current === node) {\n          break;\n        }\n      } else {\n        elements.unshift({name, role});\n        selector = this.#computeUniqueARIASelectorForElements(\n            elements,\n            current !== node,\n        );\n        if (selector) {\n          break;\n        }\n        if (current !== node) {\n          elements.shift();\n        }\n      }\n      current = current.parentNode;\n      if (current instanceof ShadowRoot) {\n        current = current.host;\n      }\n    }\n    return selector;\n  };\n}\n\n/**\n * Computes the ARIA selector for a node.\n *\n * @param node - The node to compute.\n * @returns The computed CSS selector.\n *\n * @internal\n */\nexport const computeARIASelector = (\n    node: Node,\n    bindings: AccessibilityBindings,\n    ): Selector|undefined => {\n  return new ARIASelectorComputer(bindings).compute(node);\n};\n"]}