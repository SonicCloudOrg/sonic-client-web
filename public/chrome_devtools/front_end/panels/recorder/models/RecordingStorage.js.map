{"version":3,"file":"RecordingStorage.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/recorder/models/RecordingStorage.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../../core/common/common.js';\n\nimport {type UserFlow} from './Schema.js';\n\nlet instance: RecordingStorage|null = null;\n\ninterface IdGenerator {\n  next(): string;\n}\n\nclass UUIDGenerator implements IdGenerator {\n  next(): string {\n    // @ts-ignore\n    return crypto.randomUUID();\n  }\n}\n\nexport class RecordingStorage {\n  #recordingsSetting: Common.Settings.Setting<StoredRecording[]>;\n  #mutex = new Common.Mutex.Mutex();\n  #idGenerator: IdGenerator = new UUIDGenerator();\n\n  constructor() {\n    this.#recordingsSetting = Common.Settings.Settings.instance().createSetting(\n        'recorder-recordings-ng',\n        [],\n    );\n  }\n\n  clearForTest(): void {\n    this.#recordingsSetting.set([]);\n    this.#idGenerator = new UUIDGenerator();\n  }\n\n  setIdGeneratorForTest(idGenerator: IdGenerator): void {\n    this.#idGenerator = idGenerator;\n  }\n\n  async saveRecording(flow: UserFlow): Promise<StoredRecording> {\n    const release = await this.#mutex.acquire();\n    try {\n      const recordings = await this.#recordingsSetting.forceGet();\n      const storageName = this.#idGenerator.next();\n      const recording = {storageName, flow};\n      recordings.push(recording);\n      this.#recordingsSetting.set(recordings);\n      return recording;\n    } finally {\n      release();\n    }\n  }\n\n  async updateRecording(\n      storageName: string,\n      flow: UserFlow,\n      ): Promise<StoredRecording> {\n    const release = await this.#mutex.acquire();\n    try {\n      const recordings = await this.#recordingsSetting.forceGet();\n      const recording = recordings.find(\n          recording => recording.storageName === storageName,\n      );\n      if (!recording) {\n        throw new Error('No recording is found during updateRecording');\n      }\n      recording.flow = flow;\n      this.#recordingsSetting.set(recordings);\n      return recording;\n    } finally {\n      release();\n    }\n  }\n\n  async deleteRecording(storageName: string): Promise<void> {\n    const release = await this.#mutex.acquire();\n    try {\n      const recordings = await this.#recordingsSetting.forceGet();\n      this.#recordingsSetting.set(\n          recordings.filter(recording => recording.storageName !== storageName),\n      );\n    } finally {\n      release();\n    }\n  }\n\n  getRecording(storageName: string): StoredRecording|undefined {\n    const recordings = this.#recordingsSetting.get();\n    return recordings.find(\n        recording => recording.storageName === storageName,\n    );\n  }\n\n  getRecordings(): StoredRecording[] {\n    return this.#recordingsSetting.get();\n  }\n\n  static instance(): RecordingStorage {\n    if (!instance) {\n      instance = new RecordingStorage();\n    }\n    return instance;\n  }\n}\n\nexport interface StoredRecording {\n  storageName: string;\n  flow: UserFlow;\n}\n"]}