{"version":3,"file":"recording-storage.test.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/recorder/models/recording-storage.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {\n  describeWithEnvironment,\n} from '../../../testing/EnvironmentHelpers.js';\n\nimport * as Recorder from './models.js';\n\ndescribeWithEnvironment('RecordingStorage', () => {\n  beforeEach(() => {\n    Recorder.RecordingStorage.RecordingStorage.instance().clearForTest();\n  });\n\n  after(() => {\n    Recorder.RecordingStorage.RecordingStorage.instance().clearForTest();\n  });\n\n  class MockIdGenerator {\n    #id = 1;\n    next() {\n      const result = `recording_${this.#id}`;\n      this.#id++;\n      return result;\n    }\n  }\n\n  it('should create and retrieve recordings', async () => {\n    const storage = Recorder.RecordingStorage.RecordingStorage.instance();\n    storage.setIdGeneratorForTest(new MockIdGenerator());\n    const flow1 = {title: 'Test1', steps: []};\n    const flow2 = {title: 'Test2', steps: []};\n    const flow3 = {title: 'Test3', steps: []};\n    assert.deepEqual(await storage.saveRecording(flow1), {\n      storageName: 'recording_1',\n      flow: flow1,\n    });\n    assert.deepEqual(await storage.saveRecording(flow2), {\n      storageName: 'recording_2',\n      flow: flow2,\n    });\n    assert.deepEqual(await storage.getRecordings(), [\n      {storageName: 'recording_1', flow: flow1},\n      {storageName: 'recording_2', flow: flow2},\n    ]);\n    assert.deepEqual(await storage.getRecording('recording_2'), {\n      storageName: 'recording_2',\n      flow: flow2,\n    });\n    assert.deepEqual(await storage.getRecording('recording_3'), undefined);\n    assert.deepEqual(await storage.updateRecording('recording_2', flow3), {\n      storageName: 'recording_2',\n      flow: flow3,\n    });\n    assert.deepEqual(await storage.getRecording('recording_2'), {\n      storageName: 'recording_2',\n      flow: flow3,\n    });\n\n    await storage.deleteRecording('recording_2');\n    assert.deepEqual(await storage.getRecordings(), [\n      {storageName: 'recording_1', flow: flow1},\n    ]);\n  });\n});\n"]}