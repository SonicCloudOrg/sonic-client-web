{"version":3,"file":"RecorderHelpers.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/recorder/testing/RecorderHelpers.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,GAAG,MAAM,0BAA0B,CAAC;AAChD,OAAO,KAAK,MAAM,MAAM,qBAAqB,CAAC;AAM9C,MAAM,CAAC,MAAM,gBAAgB,GAAG,GAAuB,EAAE,CAAC,CAAC;IACzD,IAAI,EAAE,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,UAAU;IACvC,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,EAAE;CACf,CAAC,CAAC;AAEH,MAAM,CAAC,MAAM,8BAA8B,GAAG,GAAS,EAAE;IACvD,MAAM,IAAI,GAAG;QACX,IAAI,EAAE;YACJ,OAAO,EAAE,GAAG,EAAE,CAAC,CAAC;gBACd,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,CAAC,QAAQ,EAAE;aAC9B,CAAC;YACF,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC;oBACb,MAAM,EAAE,EAAC,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,CAAC,QAAQ,EAAE,EAAC;iBACxC,CAAC;YACF,QAAQ,EAAE,GAAG,EAAE,CAAC,EAAE;YAClB,GAAG;gBACD,OAAO,EAAE,CAAC;YACZ,CAAC;YACD,YAAY;gBACV,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;YAC3B,CAAC;SACF;QACD,OAAO,EAAE;YACP,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;YACxB,UAAU,EAAE,GAAG,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,QAAQ,EAAE;SAC1C;KACF,CAAC;IACF,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,eAAe,EAAE,kBAAkB,CAAC,CAAC,QAAQ,CAAC,IAAa,CAAC,CAAC;AACjG,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,4BAA4B,GAAG,GAAS,EAAE;IACrD,MAAM,IAAI,GAAG;QACX,iBAAiB,EAAE,KAAK,CAAC,IAAI,EAAE,CAAC,QAAQ,EAAE;QAC1C,gBAAgB,EAAE,KAAK,CAAC,IAAI,EAAE,CAAC,QAAQ,EAAE;QACzC,iBAAiB,EAAE,KAAK,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC;YACtC,WAAW,EAAE,KAAK,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,EAAE,CAAC;SACtC,CAAC;KACH,CAAC;IACF,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,aAAa,EAAE,UAAU,CAAC;SAClD,SAAS,CAAC,GAAG,EAAE,CAAC,IAAkD,CAAC,CAAC;AAC3E,CAAC,CAAC","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as SDK from '../../../core/sdk/sdk.js';\nimport * as Models from '../models/models.js';\n\nexport interface ClientMock {\n  send(): sinon.SinonStub;\n}\n\nexport const createCustomStep = (): Models.Schema.Step => ({\n  type: Models.Schema.StepType.CustomStep,\n  name: 'dummy step',\n  parameters: {},\n});\n\nexport const installMocksForRecordingPlayer = (): void => {\n  const mock = {\n    page: {\n      _client: () => ({\n        send: sinon.stub().resolves(),\n      }),\n      frames: () => [{\n        client: {send: sinon.stub().resolves()},\n      }],\n      evaluate: () => '',\n      url() {\n        return '';\n      },\n      bringToFront() {\n        return Promise.resolve();\n      },\n    },\n    browser: {\n      pages: () => [mock.page],\n      disconnect: () => sinon.stub().resolves(),\n    },\n  };\n  sinon.stub(Models.RecordingPlayer.RecordingPlayer, 'connectPuppeteer').resolves(mock as never);\n};\n\nexport const installMocksForTargetManager = (): void => {\n  const stub = {\n    suspendAllTargets: sinon.stub().resolves(),\n    resumeAllTargets: sinon.stub().resolves(),\n    primaryPageTarget: sinon.stub().returns({\n      targetAgent: sinon.stub().returns({}),\n    }),\n  };\n  sinon.stub(SDK.TargetManager.TargetManager, 'instance')\n      .callsFake(() => stub as unknown as SDK.TargetManager.TargetManager);\n};\n"]}