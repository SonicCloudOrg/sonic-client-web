{"version":3,"file":"SelectButton.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/recorder/components/SelectButton.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Platform from '../../../core/platform/platform.js';\nimport {type LocalizedString} from '../../../core/platform/UIString.js';\nimport * as Buttons from '../../../ui/components/buttons/buttons.js';\nimport * as Dialogs from '../../../ui/components/dialogs/dialogs.js';\nimport * as ComponentHelpers from '../../../ui/components/helpers/helpers.js';\nimport * as Menus from '../../../ui/components/menus/menus.js';\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\nimport * as VisualLogging from '../../../ui/visual_logging/visual_logging.js';\nimport * as Models from '../models/models.js';\nimport type * as Actions from '../recorder-actions/recorder-actions.js';\n\nimport selectButtonStyles from './selectButton.css.js';\n\nexport const enum Variant {\n  PRIMARY = 'primary',\n  OUTLINED = 'outlined',\n}\n\ntype SelectMenuGroup = {\n  name: string,\n  items: SelectButtonItem[],\n};\n\ninterface SelectButtonProps {\n  /**\n   * Whether the button is disabled or not\n   * Defaults to false\n   */\n  disabled: boolean;\n  /**\n   * Current value of the button\n   * The same value must correspond to an item in the `items` array\n   */\n  value: string;\n  /**\n   * Items for the select menu of the button\n   * Selected item is shown in the button itself\n   */\n  items: SelectButtonItem[];\n  /**\n   * Groups for the select menu of the button.\n   */\n  buttonLabel: LocalizedString;\n  /**\n   * Groups for the select menu of the button.\n   */\n  groups: Array<SelectMenuGroup>;\n  /**\n   * Similar to the button variant\n   */\n  variant: Variant;\n  /**\n   * Action that the button is linked to\n   */\n  action?: Actions.RecorderActions;\n}\n\nexport interface SelectButtonItem {\n  /**\n   * Specifies the clicked item\n   */\n  value: string;\n  /**\n   * `icon` to be shown on the button\n   */\n  buttonIconName?: string;\n  /**\n   * Text to be shown in the select menu\n   */\n  label: () => string;\n  /**\n   * Text to be shown in the button when the item is selected for the button\n   */\n  buttonLabel?: () => string;\n}\n\nexport class SelectButtonClickEvent extends Event {\n  static readonly eventName = 'selectbuttonclick';\n\n  constructor(public value?: string) {\n    super(SelectButtonClickEvent.eventName, {bubbles: true, composed: true});\n  }\n}\n\nexport class SelectMenuSelectedEvent extends Event {\n  static readonly eventName = 'selectmenuselected';\n\n  constructor(public value: string) {\n    super(SelectMenuSelectedEvent.eventName, {bubbles: true, composed: true});\n  }\n}\n\nexport class SelectButton extends HTMLElement {\n  static readonly litTagName = LitHtml.literal`devtools-select-button`;\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  readonly #props: SelectButtonProps = {\n    disabled: false,\n    value: '',\n    items: [],\n    buttonLabel: '' as LocalizedString,\n    groups: [],\n    variant: Variant.PRIMARY,\n  };\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [selectButtonStyles];\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n  }\n\n  get disabled(): boolean {\n    return this.#props.disabled;\n  }\n\n  set disabled(disabled: boolean) {\n    this.#props.disabled = disabled;\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n  }\n\n  get items(): SelectButtonItem[] {\n    return this.#props.items;\n  }\n\n  set items(items: SelectButtonItem[]) {\n    this.#props.items = items;\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n  }\n\n  set buttonLabel(buttonLabel: LocalizedString) {\n    this.#props.buttonLabel = buttonLabel;\n  }\n\n  set groups(groups: Array<SelectMenuGroup>) {\n    this.#props.groups = groups;\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n  }\n\n  get value(): string {\n    return this.#props.value;\n  }\n\n  set value(value: string) {\n    this.#props.value = value;\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n  }\n\n  get variant(): Variant {\n    return this.#props.variant;\n  }\n\n  set variant(variant: Variant) {\n    this.#props.variant = variant;\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n  }\n\n  set action(value: Actions.RecorderActions) {\n    this.#props.action = value;\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n  }\n\n  #handleClick(ev: Event): void {\n    ev.stopPropagation();\n    this.dispatchEvent(new SelectButtonClickEvent(this.#props.value));\n  }\n\n  #handleSelectMenuSelect(\n      evt: Menus.SelectMenu.SelectMenuItemSelectedEvent,\n      ): void {\n    this.dispatchEvent(new SelectMenuSelectedEvent(evt.itemValue as string));\n    void ComponentHelpers.ScheduledRender.scheduleRender(this, this.#render);\n  }\n\n  #renderSelectItem(\n      item: SelectButtonItem,\n      selectedItem: SelectButtonItem,\n      ): LitHtml.TemplateResult {\n    // clang-format off\n    return LitHtml.html`\n      <${Menus.Menu.MenuItem.litTagName} .value=${item.value} .selected=${\n      item.value === selectedItem.value\n    } jslog=${VisualLogging.item(Platform.StringUtilities.toKebabCase(item.value)).track({click: true})}>\n        ${item.label()}\n      </${Menus.Menu.MenuItem.litTagName}>\n    `;\n    // clang-format on\n  }\n\n  #renderSelectGroup(\n      group: SelectMenuGroup,\n      selectedItem: SelectButtonItem,\n      ): LitHtml.TemplateResult {\n    // clang-format off\n    return LitHtml.html`\n      <${Menus.Menu.MenuGroup.litTagName} .name=${group.name}>\n        ${group.items.map(item => this.#renderSelectItem(item, selectedItem))}\n      </${Menus.Menu.MenuGroup.litTagName}>\n    `;\n    // clang-format on\n  }\n\n  #getTitle(label: string): string {\n    return this.#props.action ? Models.Tooltip.getTooltipForActions(label, this.#props.action) : '';\n  }\n\n  #render = (): void => {\n    const hasGroups = Boolean(this.#props.groups.length);\n    const items = hasGroups ? this.#props.groups.flatMap(group => group.items) : this.#props.items;\n    const selectedItem = items.find(item => item.value === this.#props.value) || items[0];\n    if (!selectedItem) {\n      return;\n    }\n\n    const classes = {\n      primary: this.#props.variant === Variant.PRIMARY,\n      secondary: this.#props.variant === Variant.OUTLINED,\n    };\n\n    const buttonVariant =\n        this.#props.variant === Variant.OUTLINED ? Buttons.Button.Variant.OUTLINED : Buttons.Button.Variant.PRIMARY;\n    const menuLabel = selectedItem.buttonLabel ? selectedItem.buttonLabel() : selectedItem.label();\n\n    // clang-format off\n    LitHtml.render(\n      LitHtml.html`\n      <div class=\"select-button\" title=${\n        this.#getTitle(menuLabel) || LitHtml.nothing\n      }>\n      <${Menus.SelectMenu.SelectMenu.litTagName}\n          class=${LitHtml.Directives.classMap(classes)}\n          @selectmenuselected=${this.#handleSelectMenuSelect}\n          ?disabled=${this.#props.disabled}\n          .showArrow=${true}\n          .sideButton=${false}\n          .showSelectedItem=${true}\n          .disabled=${this.#props.disabled}\n          .buttonTitle=${LitHtml.html`${menuLabel}`}\n          .position=${Dialogs.Dialog.DialogVerticalPosition.BOTTOM}\n          .horizontalAlignment=${\n            Dialogs.Dialog.DialogHorizontalAlignment.RIGHT\n          }\n        >\n          ${\n            hasGroups\n              ? this.#props.groups.map(group =>\n                  this.#renderSelectGroup(group, selectedItem),\n                )\n              : this.#props.items.map(item =>\n                  this.#renderSelectItem(item, selectedItem),\n                )\n          }\n        </${Menus.SelectMenu.SelectMenu.litTagName}>\n        ${\n          selectedItem\n            ? LitHtml.html`\n        <${Buttons.Button.Button.litTagName}\n            .disabled=${this.#props.disabled}\n            .variant=${buttonVariant}\n            .iconName=${selectedItem.buttonIconName}\n            @click=${this.#handleClick}>\n            ${this.#props.buttonLabel}\n        </${Buttons.Button.Button.litTagName}>`\n            : ''\n        }\n      </div>`,\n      this.#shadow,\n      { host: this },\n    );\n    // clang-format on\n  };\n}\n\ncustomElements.define(\n    'devtools-select-button',\n    SelectButton,\n);\n\ndeclare global {\n  interface HTMLElementEventMap {\n    selectbuttonclick: SelectButtonClickEvent;\n  }\n\n  interface HTMLElementTagNameMap {\n    'devtools-select-button': SelectButton;\n  }\n}\n"]}