{"version":3,"file":"RecordingView.test.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/recorder/components/RecordingView.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Host from '../../../core/host/host.js';\nimport {\n  dispatchClickEvent,\n  dispatchMouseOverEvent,\n  getEventPromise,\n  renderElementIntoDOM,\n} from '../../../testing/DOMHelpers.js';\nimport {\n  describeWithEnvironment,\n  setupActionRegistry,\n} from '../../../testing/EnvironmentHelpers.js';\nimport {expectCall} from '../../../testing/ExpectStubCall.js';\nimport * as Menus from '../../../ui/components/menus/menus.js';\nimport * as Coordinator from '../../../ui/components/render_coordinator/render_coordinator.js';\nimport type * as TextEditor from '../../../ui/components/text_editor/text_editor.js';\nimport * as Converters from '../converters/converters.js';\nimport * as Models from '../models/models.js';\n\nimport * as Components from './components.js';\n\nconst coordinator = Coordinator.RenderCoordinator.RenderCoordinator.instance();\n\ndescribeWithEnvironment('RecordingView', () => {\n  setupActionRegistry();\n\n  const step = {type: Models.Schema.StepType.Scroll as const};\n  const section = {title: 'test', steps: [step], url: 'https://example.com'};\n  const userFlow = {title: 'test', steps: [step]};\n  const recorderSettingsMock = {\n    preferredCopyFormat: Models.ConverterIds.ConverterIds.JSON,\n  } as Models.RecorderSettings.RecorderSettings;\n\n  async function renderView(): Promise<Components.RecordingView.RecordingView> {\n    const view = new Components.RecordingView.RecordingView();\n    recorderSettingsMock.preferredCopyFormat = Models.ConverterIds.ConverterIds.JSON;\n    renderElementIntoDOM(view);\n    view.data = {\n      replayState: {isPlaying: false, isPausedOnBreakpoint: false},\n      isRecording: false,\n      recordingTogglingInProgress: false,\n      recording: userFlow,\n      currentStep: undefined,\n      currentError: undefined,\n      sections: [section],\n      settings: undefined,\n      recorderSettings: recorderSettingsMock,\n      lastReplayResult: undefined,\n      replayAllowed: true,\n      breakpointIndexes: new Set(),\n      builtInConverters: [\n        new Converters.JSONConverter.JSONConverter('  '),\n        new Converters.PuppeteerReplayConverter.PuppeteerReplayConverter('  '),\n      ],\n      extensionConverters: [],\n      replayExtensions: [],\n    };\n    await coordinator.done();\n    return view;\n  }\n\n  async function waitForTextEditor(\n      view: Components.RecordingView.RecordingView,\n      ): Promise<TextEditor.TextEditor.TextEditor> {\n    await getEventPromise(view, 'code-generated');\n    const textEditor = view.shadowRoot?.querySelector('devtools-text-editor');\n    assert.isNotNull(textEditor);\n    return textEditor as TextEditor.TextEditor.TextEditor;\n  }\n\n  function hoverOverScrollStep(\n      view: Components.RecordingView.RecordingView,\n      ): void {\n    const steps = view.shadowRoot?.querySelectorAll('devtools-step-view') || [];\n    assert.lengthOf(steps, 2);\n    dispatchMouseOverEvent(steps[1]);\n  }\n\n  function clickStep(view: Components.RecordingView.RecordingView) {\n    const steps = view.shadowRoot?.querySelectorAll('devtools-step-view') || [];\n    assert.lengthOf(steps, 2);\n    dispatchClickEvent(steps[1]);\n  }\n\n  function dispatchOnStep(\n      view: Components.RecordingView.RecordingView,\n      customEvent: Event,\n  ) {\n    const steps = view.shadowRoot?.querySelectorAll('devtools-step-view') || [];\n    assert.lengthOf(steps, 2);\n    steps[1].dispatchEvent(customEvent);\n  }\n\n  function clickShowCode(view: Components.RecordingView.RecordingView) {\n    const button = view.shadowRoot?.querySelector(\n                       '.show-code',\n                       ) as HTMLDivElement;\n    assert.ok(button);\n    dispatchClickEvent(button);\n  }\n\n  function clickHideCode(view: Components.RecordingView.RecordingView) {\n    const button = view.shadowRoot?.querySelector(\n                       '[title=\"Hide code\"]',\n                       ) as HTMLDivElement;\n    assert.ok(button);\n    dispatchClickEvent(button);\n  }\n\n  async function waitForSplitViewToDissappear(\n      view: Components.RecordingView.RecordingView,\n      ): Promise<void> {\n    await getEventPromise(view, 'code-generated');\n    const splitView = view.shadowRoot?.querySelector('devtools-split-view');\n    assert.isNull(splitView);\n  }\n\n  async function changeCodeView(view: Components.RecordingView.RecordingView): Promise<void> {\n    const menu = view.shadowRoot?.querySelector(\n                     'devtools-select-menu',\n                     ) as Menus.SelectMenu.SelectMenu;\n    assert.ok(menu);\n\n    const event = new Menus.SelectMenu.SelectMenuItemSelectedEvent(Models.ConverterIds.ConverterIds.Replay);\n    menu.dispatchEvent(event);\n  }\n\n  it('should show code and highlight on hover', async () => {\n    const view = await renderView();\n\n    clickShowCode(view);\n\n    // Click is handled async, therefore, waiting for the text editor.\n    const textEditor = await waitForTextEditor(view);\n    assert.deepStrictEqual(textEditor.editor.state.selection.toJSON(), {\n      ranges: [{anchor: 0, head: 0}],\n      main: 0,\n    });\n\n    hoverOverScrollStep(view);\n    assert.deepStrictEqual(textEditor.editor.state.selection.toJSON(), {\n      ranges: [{anchor: 34, head: 68}],\n      main: 0,\n    });\n  });\n\n  it('should close code', async () => {\n    const view = await renderView();\n\n    clickShowCode(view);\n\n    // Click is handled async, therefore, waiting for the text editor.\n    await waitForTextEditor(view);\n\n    clickHideCode(view);\n\n    // Click is handled async, therefore, waiting for split view to be removed.\n    await waitForSplitViewToDissappear(view);\n  });\n\n  it('should copy the recording to clipboard via copy event', async () => {\n    await renderView();\n    const clipboardData = new DataTransfer();\n    const copyText = expectCall(sinon.stub(\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance,\n        'copyText',\n        ));\n    const event = new ClipboardEvent('copy', {clipboardData, bubbles: true});\n\n    document.body.dispatchEvent(event);\n\n    const [text] = await copyText;\n\n    assert.strictEqual(JSON.stringify(userFlow, null, 2) + '\\n', text);\n  });\n\n  it('should copy a step to clipboard via copy event', async () => {\n    const view = await renderView();\n\n    clickStep(view);\n\n    const clipboardData = new DataTransfer();\n    const isCalled = sinon.promise();\n    const copyText = sinon\n                         .stub(\n                             Host.InspectorFrontendHost.InspectorFrontendHostInstance,\n                             'copyText',\n                             )\n                         .callsFake(() => {\n                           void isCalled.resolve(true);\n                         });\n    const event = new ClipboardEvent('copy', {clipboardData, bubbles: true});\n\n    document.body.dispatchEvent(event);\n\n    await isCalled;\n\n    assert.isTrue(copyText.calledWith(JSON.stringify(step, null, 2) + '\\n'));\n  });\n\n  it('should copy a step to clipboard via custom event', async () => {\n    const view = await renderView();\n    const isCalled = sinon.promise();\n    const copyText = sinon\n                         .stub(\n                             Host.InspectorFrontendHost.InspectorFrontendHostInstance,\n                             'copyText',\n                             )\n                         .callsFake(() => {\n                           void isCalled.resolve(true);\n                         });\n    const event = new Components.StepView.CopyStepEvent(step);\n\n    dispatchOnStep(view, event);\n\n    await isCalled;\n\n    assert.isTrue(copyText.calledWith(JSON.stringify(step, null, 2) + '\\n'));\n  });\n\n  it('should show code and change preferred copy method', async () => {\n    const view = await renderView();\n\n    clickShowCode(\n        view,\n    );\n\n    await waitForTextEditor(view);\n    await changeCodeView(view);\n    await waitForTextEditor(view);\n\n    assert.notEqual(recorderSettingsMock.preferredCopyFormat, Models.ConverterIds.ConverterIds.JSON);\n  });\n});\n"]}