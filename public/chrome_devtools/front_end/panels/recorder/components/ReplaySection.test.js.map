{"version":3,"file":"ReplaySection.test.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/recorder/components/ReplaySection.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {renderElementIntoDOM} from '../../../testing/DOMHelpers.js';\nimport {\n  describeWithEnvironment,\n  setupActionRegistry,\n} from '../../../testing/EnvironmentHelpers.js';\nimport * as Coordinator from '../../../ui/components/render_coordinator/render_coordinator.js';\nimport * as Models from '../models/models.js';\n\nimport * as RecorderComponents from './components.js';\n\nconst coordinator = Coordinator.RenderCoordinator.RenderCoordinator.instance();\n\ndescribeWithEnvironment('ReplaySection', () => {\n  setupActionRegistry();\n\n  let settings: Models.RecorderSettings.RecorderSettings;\n  async function createReplaySection() {\n    settings = new Models.RecorderSettings.RecorderSettings();\n    const component = new RecorderComponents.ReplaySection.ReplaySection();\n    component.data = {settings, replayExtensions: []};\n    renderElementIntoDOM(component);\n    await coordinator.done();\n\n    return component;\n  }\n\n  afterEach(() => {\n    settings.speed = Models.RecordingPlayer.PlayRecordingSpeed.Normal;\n  });\n\n  it('should change the button value when another option is selected in select menu', async () => {\n    const component = await createReplaySection();\n    const selectButton = component.shadowRoot?.querySelector(\n        'devtools-select-button',\n    );\n    assert.strictEqual(\n        selectButton?.value,\n        Models.RecordingPlayer.PlayRecordingSpeed.Normal,\n    );\n\n    selectButton?.dispatchEvent(\n        new RecorderComponents.SelectButton.SelectMenuSelectedEvent(\n            Models.RecordingPlayer.PlayRecordingSpeed.Slow,\n            ),\n    );\n    await coordinator.done();\n    assert.strictEqual(\n        selectButton?.value,\n        Models.RecordingPlayer.PlayRecordingSpeed.Slow,\n    );\n  });\n\n  it('should emit startreplayevent on selectbuttonclick event', async () => {\n    const component = await createReplaySection();\n    const onceClicked = new Promise<RecorderComponents.ReplaySection.StartReplayEvent>(\n        resolve => {\n          component.addEventListener('startreplay', resolve, {once: true});\n        },\n    );\n\n    const selectButton = component.shadowRoot?.querySelector(\n        'devtools-select-button',\n    );\n    selectButton?.dispatchEvent(\n        new RecorderComponents.SelectButton.SelectMenuSelectedEvent(\n            Models.RecordingPlayer.PlayRecordingSpeed.Slow,\n            ),\n    );\n    selectButton?.dispatchEvent(\n        new RecorderComponents.SelectButton.SelectButtonClickEvent(),\n    );\n\n    const event = await onceClicked;\n    assert.deepEqual(\n        event.speed,\n        Models.RecordingPlayer.PlayRecordingSpeed.Slow,\n    );\n  });\n\n  it('should save the changed button when option is selected in select menu', async () => {\n    const component = await createReplaySection();\n    const selectButton = component.shadowRoot?.querySelector(\n        'devtools-select-button',\n    );\n\n    selectButton?.dispatchEvent(\n        new RecorderComponents.SelectButton.SelectMenuSelectedEvent(\n            Models.RecordingPlayer.PlayRecordingSpeed.Slow,\n            ),\n    );\n\n    assert.strictEqual(\n        settings.speed,\n        Models.RecordingPlayer.PlayRecordingSpeed.Slow,\n    );\n  });\n\n  it('should load the saved button on initial render', async () => {\n    settings.speed = Models.RecordingPlayer.PlayRecordingSpeed.Slow;\n\n    const component = await createReplaySection();\n\n    const selectButton = component.shadowRoot?.querySelector(\n        'devtools-select-button',\n    );\n    assert.strictEqual(\n        selectButton?.value,\n        Models.RecordingPlayer.PlayRecordingSpeed.Slow,\n    );\n  });\n});\n"]}