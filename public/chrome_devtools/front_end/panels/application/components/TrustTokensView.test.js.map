{"version":3,"file":"TrustTokensView.test.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/application/components/TrustTokensView.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as SDK from '../../../core/sdk/sdk.js';\nimport {\n  getCellByIndexes,\n  getValuesOfAllBodyRows,\n} from '../../../testing/DataGridHelpers.js';\nimport {\n  dispatchClickEvent,\n  getElementWithinComponent,\n  renderElementIntoDOM,\n} from '../../../testing/DOMHelpers.js';\nimport {createTarget} from '../../../testing/EnvironmentHelpers.js';\nimport {describeWithMockConnection} from '../../../testing/MockConnection.js';\nimport * as DataGrid from '../../../ui/components/data_grid/data_grid.js';\nimport * as Coordinator from '../../../ui/components/render_coordinator/render_coordinator.js';\n\nimport * as ApplicationComponents from './components.js';\n\nconst coordinator = Coordinator.RenderCoordinator.RenderCoordinator.instance();\n\nasync function renderTrustTokensView(): Promise<ApplicationComponents.TrustTokensView.TrustTokensView> {\n  const component = new ApplicationComponents.TrustTokensView.TrustTokensView();\n  renderElementIntoDOM(component);\n\n  // The data-grid's renderer is scheduled, so we need to wait until the coordinator\n  // is done before we can test against it.\n  await coordinator.done({waitForWork: true});\n\n  return component;\n}\n\nfunction getInternalDataGridShadowRoot(component: ApplicationComponents.TrustTokensView.TrustTokensView): ShadowRoot {\n  const dataGridController = getElementWithinComponent(\n      component, 'devtools-data-grid-controller', DataGrid.DataGridController.DataGridController);\n  const dataGrid = getElementWithinComponent(dataGridController, 'devtools-data-grid', DataGrid.DataGrid.DataGrid);\n  assert.isNotNull(dataGrid.shadowRoot);\n  return dataGrid.shadowRoot;\n}\n\ndescribeWithMockConnection('TrustTokensView', () => {\n  let target: SDK.Target.Target;\n\n  beforeEach(() => {\n    target = createTarget();\n  });\n\n  it('renders trust token data', async () => {\n    sinon.stub(target.storageAgent(), 'invoke_getTrustTokens').resolves({\n      tokens: [\n        {issuerOrigin: 'foo.com', count: 42},\n        {issuerOrigin: 'bar.org', count: 7},\n      ],\n      getError: () => undefined,\n    });\n    const component = await renderTrustTokensView();\n\n    const dataGridShadowRoot = getInternalDataGridShadowRoot(component);\n    const rowValues = getValuesOfAllBodyRows(dataGridShadowRoot);\n    assert.deepEqual(rowValues, [\n      ['bar.org', '7', ''],\n      ['foo.com', '42', ''],\n    ]);\n  });\n\n  it('does not display issuers with zero stored tokens', async () => {\n    sinon.stub(target.storageAgent(), 'invoke_getTrustTokens').resolves({\n      tokens: [\n        {issuerOrigin: 'no-issuer.org', count: 0},\n        {issuerOrigin: 'foo.com', count: 42},\n      ],\n      getError: () => undefined,\n    });\n    const component = await renderTrustTokensView();\n\n    const dataGridShadowRoot = getInternalDataGridShadowRoot(component);\n    const rowValues = getValuesOfAllBodyRows(dataGridShadowRoot);\n    assert.deepEqual(rowValues, [['foo.com', '42', '']]);\n  });\n\n  it('removes trailing slashes from issuer origins', async () => {\n    sinon.stub(target.storageAgent(), 'invoke_getTrustTokens').resolves({\n      tokens: [\n        {issuerOrigin: 'example.com/', count: 20},\n        {issuerOrigin: 'sub.domain.org/', count: 14},\n      ],\n      getError: () => undefined,\n    });\n    const component = await renderTrustTokensView();\n\n    const dataGridShadowRoot = getInternalDataGridShadowRoot(component);\n    const rowValues = getValuesOfAllBodyRows(dataGridShadowRoot);\n    assert.deepEqual(rowValues, [\n      ['example.com', '20', ''],\n      ['sub.domain.org', '14', ''],\n    ]);\n  });\n\n  it('hides trust token table when there are no trust tokens', async () => {\n    sinon.stub(target.storageAgent(), 'invoke_getTrustTokens').resolves({tokens: [], getError: () => undefined});\n    const component = await renderTrustTokensView();\n\n    const nullGridElement = component.shadowRoot!.querySelector('devtools-data-grid-controller');\n    assert.isNull(nullGridElement);\n\n    const noTrustTokensElement = component.shadowRoot!.querySelector('div.no-tt-message');\n    assert.instanceOf(noTrustTokensElement, HTMLDivElement);\n  });\n\n  it('calls the delete handler with the right issuer when the delete button is clicked in a row', async () => {\n    // Create a Promise that resolves with the issuer for which the delete button was clicked.\n    sinon.stub(target.storageAgent(), 'invoke_getTrustTokens').resolves({\n      tokens: [\n        {issuerOrigin: 'bar.org', count: 42},\n        {issuerOrigin: 'foo.com', count: 7},\n      ],\n      getError: () => undefined,\n    });\n    const clearTrustTokens = sinon.stub(target.storageAgent(), 'invoke_clearTrustTokens').resolves();\n\n    const component = await renderTrustTokensView();\n\n    const dataGridShadowRoot = getInternalDataGridShadowRoot(component);\n    const deleteCell = getCellByIndexes(dataGridShadowRoot, {column: 2, row: 1});\n    const deleteButtonComponent = deleteCell.querySelector('devtools-button');\n    assert.instanceOf(deleteButtonComponent, HTMLElement);\n    dispatchClickEvent(deleteButtonComponent);\n\n    assert.isTrue(clearTrustTokens.calledOnceWith({issuerOrigin: 'bar.org'}));\n  });\n});\n"]}