{"version":3,"file":"TrustTokensView.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/application/components/TrustTokensView.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as SDK from '../../../core/sdk/sdk.js';\nimport type * as Protocol from '../../../generated/protocol.js';\nimport * as Buttons from '../../../ui/components/buttons/buttons.js';\nimport * as DataGrid from '../../../ui/components/data_grid/data_grid.js';\nimport * as IconButton from '../../../ui/components/icon_button/icon_button.js';\nimport * as LegacyWrapper from '../../../ui/components/legacy_wrapper/legacy_wrapper.js';\nimport * as RenderCoordinator from '../../../ui/components/render_coordinator/render_coordinator.js';\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\n\nimport trustTokensViewStyles from './trustTokensView.css.js';\n\nconst UIStrings = {\n  /**\n   *@description Text for the issuer of an item\n   */\n  issuer: 'Issuer',\n  /**\n   *@description Column header for Trust Token table\n   */\n  storedTokenCount: 'Stored token count',\n  /**\n   *@description Hover text for an info icon in the Private State Token panel\n   */\n  allStoredTrustTokensAvailableIn: 'All stored private state tokens available in this browser instance.',\n  /**\n   * @description Text shown instead of a table when the table would be empty.\n   */\n  noTrustTokensStored: 'No private state tokens are currently stored.',\n  /**\n   * @description Each row in the Private State Token table has a delete button. This is the text shown\n   * when hovering over this button. The placeholder is a normal URL, indicating the site which\n   * provided the Private State Tokens that will be deleted when the button is clicked.\n   * @example {https://google.com} PH1\n   */\n  deleteTrustTokens: 'Delete all stored private state tokens issued by {PH1}.',\n  /**\n   * @description Heading label for a view. Previously known as 'Trust Tokens'.\n   */\n  trustTokens: 'Private state tokens',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/application/components/TrustTokensView.ts', UIStrings);\nexport const i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport interface TrustTokensViewData {\n  tokens: Protocol.Storage.TrustTokens[];\n  deleteClickHandler: (issuerOrigin: string) => void;\n}\n\nconst coordinator = RenderCoordinator.RenderCoordinator.RenderCoordinator.instance();\n\n/** Fetch the Trust Token data regularly from the backend while the panel is open */\nconst REFRESH_INTERVAL_MS = 1000;\n\nexport class TrustTokensView extends LegacyWrapper.LegacyWrapper.WrappableComponent {\n  static readonly litTagName = LitHtml.literal`devtools-trust-tokens-storage-view`;\n  readonly #shadow = this.attachShadow({mode: 'open'});\n\n  #deleteClickHandler(issuerOrigin: string): void {\n    const mainTarget = SDK.TargetManager.TargetManager.instance().primaryPageTarget();\n    void mainTarget?.storageAgent().invoke_clearTrustTokens({issuerOrigin});\n  }\n\n  connectedCallback(): void {\n    this.wrapper?.contentElement.classList.add('vbox');\n    this.#shadow.adoptedStyleSheets = [trustTokensViewStyles];\n    void this.render();\n  }\n\n  override async render(): Promise<void> {\n    const mainTarget = SDK.TargetManager.TargetManager.instance().primaryPageTarget();\n    if (!mainTarget) {\n      return;\n    }\n    const {tokens} = await mainTarget.storageAgent().invoke_getTrustTokens();\n\n    await coordinator.write('Render TrustTokensView', () => {\n      // clang-format off\n      LitHtml.render(LitHtml.html`\n        <div>\n          <span class=\"heading\">${i18nString(UIStrings.trustTokens)}</span>\n          <${IconButton.Icon.Icon.litTagName} name=\"info\" title=${i18nString(UIStrings.allStoredTrustTokensAvailableIn)}></${IconButton.Icon.Icon.litTagName}>\n          ${this.#renderGridOrNoDataMessage(tokens)}\n        </div>\n      `, this.#shadow, {host: this});\n      // clang-format on\n      if (this.isConnected) {\n        setTimeout(() => this.render(), REFRESH_INTERVAL_MS);\n      }\n    });\n  }\n\n  #renderGridOrNoDataMessage(tokens: Protocol.Storage.TrustTokens[]): LitHtml.TemplateResult {\n    if (tokens.length === 0) {\n      return LitHtml.html`<div class=\"no-tt-message\">${i18nString(UIStrings.noTrustTokensStored)}</div>`;\n    }\n\n    const gridData: DataGrid.DataGridController.DataGridControllerData = {\n      columns: [\n        {\n          id: 'issuer',\n          title: i18nString(UIStrings.issuer),\n          widthWeighting: 10,\n          hideable: false,\n          visible: true,\n          sortable: true,\n        },\n        {\n          id: 'count',\n          title: i18nString(UIStrings.storedTokenCount),\n          widthWeighting: 5,\n          hideable: false,\n          visible: true,\n          sortable: true,\n        },\n        {\n          id: 'delete-button',\n          title: '',\n          widthWeighting: 1,\n          hideable: false,\n          visible: true,\n          sortable: false,\n        },\n      ],\n      rows: this.#buildRowsFromTokens(tokens),\n      initialSort: {\n        columnId: 'issuer',\n        direction: DataGrid.DataGridUtils.SortDirection.ASC,\n      },\n    };\n\n    return LitHtml.html`\n      <${DataGrid.DataGridController.DataGridController.litTagName} .data=${\n        gridData as DataGrid.DataGridController.DataGridControllerData}></${\n        DataGrid.DataGridController.DataGridController.litTagName}>\n    `;\n  }\n\n  #buildRowsFromTokens(tokens: Protocol.Storage.TrustTokens[]): DataGrid.DataGridUtils.Row[] {\n    return tokens.filter(token => token.count > 0)\n        .map(token => ({\n               cells: [\n                 {\n                   columnId: 'delete-button',\n                   value: removeTrailingSlash(token.issuerOrigin),\n                   renderer: this.#deleteButtonRendererForDataGridCell.bind(this),\n                 },\n                 {columnId: 'issuer', value: removeTrailingSlash(token.issuerOrigin)},\n                 {columnId: 'count', value: token.count},\n               ],\n             }));\n  }\n\n  #deleteButtonRendererForDataGridCell(issuer: DataGrid.DataGridUtils.CellValue): LitHtml.TemplateResult {\n    // clang-format off\n    return LitHtml.html`\n      <${Buttons.Button.Button.litTagName} .iconName=${'bin'}\n                                           .jslogContext=${'delete-all'}\n                                           .size=${Buttons.Button.Size.SMALL}\n                                           .title=${i18nString(UIStrings.deleteTrustTokens, {PH1: issuer as string})}\n                                           .variant=${Buttons.Button.Variant.ICON}\n                                           @click=${this.#deleteClickHandler.bind(this, issuer as string)}></${Buttons.Button.Button.litTagName}>\n    `;\n    // clang-format on\n  }\n}\n\nfunction removeTrailingSlash(s: string): string {\n  return s.replace(/\\/$/, '');\n}\n\ncustomElements.define('devtools-trust-tokens-storage-view', TrustTokensView);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-trust-tokens-storage-view': TrustTokensView;\n  }\n}\n"]}