{"version":3,"file":"ServiceWorkerCacheViews.js","sourceRoot":"","sources":["../../../../../../front_end/panels/application/ServiceWorkerCacheViews.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2014 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport * as TextUtils from '../../models/text_utils/text_utils.js';\nimport * as LegacyWrapper from '../../ui/components/legacy_wrapper/legacy_wrapper.js';\nimport * as DataGrid from '../../ui/legacy/components/data_grid/data_grid.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\nimport * as NetworkComponents from '../network/components/components.js';\nimport * as Network from '../network/network.js';\n\nimport * as ApplicationComponents from './components/components.js';\nimport serviceWorkerCacheViewsStyles from './serviceWorkerCacheViews.css.js';\n\nconst UIStrings = {\n  /**\n   *@description Text in Application Panel Sidebar of the Application panel\n   */\n  cache: 'Cache',\n  /**\n   *@description Text to refresh the page\n   */\n  refresh: 'Refresh',\n  /**\n   *@description Tooltip text that appears when hovering over the largeicon delete button in the Service Worker Cache Views of the Application panel\n   */\n  deleteSelected: 'Delete Selected',\n  /**\n   *@description Text in Service Worker Cache Views of the Application panel\n   */\n  filterByPath: 'Filter by path',\n  /**\n   *@description Text in Service Worker Cache Views of the Application panel\n   */\n  selectACacheEntryAboveToPreview: 'Select a cache entry above to preview',\n  /**\n   *@description Text for the name of something\n   */\n  name: 'Name',\n  /**\n   *@description Text in Service Worker Cache Views of the Application panel\n   */\n  timeCached: 'Time Cached',\n  /**\n   * @description Tooltip text that appears when hovering over the vary header column in the Service Worker Cache Views of the Application panel\n   */\n  varyHeaderWarning: '⚠️ Set ignoreVary to true when matching this entry',\n  /**\n   *@description Text used to show that data was retrieved from ServiceWorker Cache\n   */\n  serviceWorkerCache: '`Service Worker` Cache',\n  /**\n   *@description Span text content in Service Worker Cache Views of the Application panel\n   *@example {2} PH1\n   */\n  matchingEntriesS: 'Matching entries: {PH1}',\n  /**\n   *@description Span text content in Indexed DBViews of the Application panel\n   *@example {2} PH1\n   */\n  totalEntriesS: 'Total entries: {PH1}',\n  /**\n   *@description Text for network request headers\n   */\n  headers: 'Headers',\n  /**\n   *@description Text for previewing items\n   */\n  preview: 'Preview',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/application/ServiceWorkerCacheViews.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class ServiceWorkerCacheView extends UI.View.SimpleView {\n  private model: SDK.ServiceWorkerCacheModel.ServiceWorkerCacheModel;\n  private entriesForTest: Protocol.CacheStorage.DataEntry[]|null;\n  private readonly splitWidget: UI.SplitWidget.SplitWidget;\n  private readonly previewPanel: UI.Widget.VBox;\n  private preview: UI.Widget.Widget|null;\n  private cache: SDK.ServiceWorkerCacheModel.Cache;\n  private dataGrid: DataGrid.DataGrid.DataGridImpl<DataGridNode>|null;\n  private readonly refreshThrottler: Common.Throttler.Throttler;\n  private readonly refreshButton: UI.Toolbar.ToolbarButton;\n  private readonly deleteSelectedButton: UI.Toolbar.ToolbarButton;\n  private entryPathFilter: string;\n  private returnCount: number|null;\n  private summaryBarElement: Element|null;\n  private loadingPromise: Promise<{\n    entries: Array<Protocol.CacheStorage.DataEntry>,\n    returnCount: number,\n  }>|null;\n  private readonly metadataView = new ApplicationComponents.StorageMetadataView.StorageMetadataView();\n\n  constructor(model: SDK.ServiceWorkerCacheModel.ServiceWorkerCacheModel, cache: SDK.ServiceWorkerCacheModel.Cache) {\n    super(i18nString(UIStrings.cache));\n\n    this.model = model;\n    this.entriesForTest = null;\n\n    this.element.classList.add('service-worker-cache-data-view');\n    this.element.classList.add('storage-view');\n    this.element.setAttribute('jslog', `${VisualLogging.pane('cache-storage-data')}`);\n\n    const editorToolbar = new UI.Toolbar.Toolbar('data-view-toolbar', this.element);\n    editorToolbar.element.setAttribute('jslog', `${VisualLogging.toolbar()}`);\n    this.element.appendChild(this.metadataView);\n    this.splitWidget = new UI.SplitWidget.SplitWidget(false, false);\n    this.splitWidget.show(this.element);\n\n    this.previewPanel = new UI.Widget.VBox();\n    const resizer = this.previewPanel.element.createChild('div', 'cache-preview-panel-resizer');\n    this.splitWidget.setMainWidget(this.previewPanel);\n    this.splitWidget.installResizer(resizer);\n\n    this.preview = null;\n\n    this.cache = cache;\n    const bucketInfo = this.model.target()\n                           .model(SDK.StorageBucketsModel.StorageBucketsModel)\n                           ?.getBucketByName(cache.storageBucket.storageKey, cache.storageBucket.name);\n    if (bucketInfo) {\n      this.metadataView.setStorageBucket(bucketInfo);\n    } else if (cache.storageKey) {\n      this.metadataView.setStorageKey(cache.storageKey);\n    }\n    this.dataGrid = null;\n    this.refreshThrottler = new Common.Throttler.Throttler(300);\n    this.refreshButton =\n        new UI.Toolbar.ToolbarButton(i18nString(UIStrings.refresh), 'refresh', undefined, 'cache-storage.refresh');\n    this.refreshButton.addEventListener(UI.Toolbar.ToolbarButton.Events.Click, this.refreshButtonClicked, this);\n    editorToolbar.appendToolbarItem(this.refreshButton);\n\n    this.deleteSelectedButton = new UI.Toolbar.ToolbarButton(\n        i18nString(UIStrings.deleteSelected), 'cross', undefined, 'cache-storage.delete-selected');\n    this.deleteSelectedButton.addEventListener(UI.Toolbar.ToolbarButton.Events.Click, _event => {\n      void this.deleteButtonClicked(null);\n    });\n    editorToolbar.appendToolbarItem(this.deleteSelectedButton);\n\n    const entryPathFilterBox = new UI.Toolbar.ToolbarFilter(i18nString(UIStrings.filterByPath), 1);\n    editorToolbar.appendToolbarItem(entryPathFilterBox);\n    const entryPathFilterThrottler = new Common.Throttler.Throttler(300);\n    this.entryPathFilter = '';\n    entryPathFilterBox.addEventListener(UI.Toolbar.ToolbarInput.Event.TextChanged, () => {\n      void entryPathFilterThrottler.schedule(() => {\n        this.entryPathFilter = entryPathFilterBox.value();\n        return this.updateData(true);\n      });\n    });\n    this.returnCount = (null as number | null);\n    this.summaryBarElement = (null as Element | null);\n    this.loadingPromise = null;\n\n    this.update(cache);\n  }\n\n  private resetDataGrid(): void {\n    if (this.dataGrid) {\n      this.dataGrid.asWidget().detach();\n    }\n    this.dataGrid = this.createDataGrid();\n    const dataGridWidget = this.dataGrid.asWidget();\n    this.splitWidget.setSidebarWidget(dataGridWidget);\n    dataGridWidget.setMinimumSize(0, 250);\n  }\n\n  override wasShown(): void {\n    this.model.addEventListener(\n        SDK.ServiceWorkerCacheModel.Events.CacheStorageContentUpdated, this.cacheContentUpdated, this);\n    this.registerCSSFiles([serviceWorkerCacheViewsStyles]);\n    void this.updateData(true);\n  }\n\n  override willHide(): void {\n    this.model.removeEventListener(\n        SDK.ServiceWorkerCacheModel.Events.CacheStorageContentUpdated, this.cacheContentUpdated, this);\n  }\n\n  private showPreview(preview: UI.Widget.Widget|null): void {\n    if (preview && this.preview === preview) {\n      return;\n    }\n    if (this.preview) {\n      this.preview.detach();\n    }\n    if (!preview) {\n      preview = new UI.EmptyWidget.EmptyWidget(i18nString(UIStrings.selectACacheEntryAboveToPreview));\n    }\n    this.preview = preview;\n    this.preview.show(this.previewPanel.element);\n  }\n\n  private createDataGrid(): DataGrid.DataGrid.DataGridImpl<DataGridNode> {\n    const columns = ([\n      {id: 'number', title: '#', sortable: false, width: '3px'},\n      {id: 'name', title: i18nString(UIStrings.name), weight: 4, sortable: true},\n      {\n        id: 'response-type',\n        title: i18n.i18n.lockedString('Response-Type'),\n        weight: 1,\n        align: DataGrid.DataGrid.Align.Right,\n        sortable: true,\n      },\n      {id: 'content-type', title: i18n.i18n.lockedString('Content-Type'), weight: 1, sortable: true},\n      {\n        id: 'content-length',\n        title: i18n.i18n.lockedString('Content-Length'),\n        weight: 1,\n        align: DataGrid.DataGrid.Align.Right,\n        sortable: true,\n      },\n      {\n        id: 'response-time',\n        title: i18nString(UIStrings.timeCached),\n        width: '12em',\n        weight: 1,\n        align: DataGrid.DataGrid.Align.Right,\n        sortable: true,\n      },\n      {id: 'vary-header', title: i18n.i18n.lockedString('Vary Header'), weight: 1, sortable: true},\n    ] as DataGrid.DataGrid.ColumnDescriptor[]);\n    const dataGrid = new DataGrid.DataGrid.DataGridImpl({\n      displayName: i18nString(UIStrings.serviceWorkerCache),\n      columns,\n      deleteCallback: this.deleteButtonClicked.bind(this),\n      refreshCallback: this.updateData.bind(this, true),\n      editCallback: undefined,\n    });\n\n    dataGrid.addEventListener(DataGrid.DataGrid.Events.SortingChanged, this.sortingChanged, this);\n\n    dataGrid.addEventListener(DataGrid.DataGrid.Events.SelectedNode, event => {\n      void this.previewCachedResponse(event.data.data as SDK.NetworkRequest.NetworkRequest);\n    }, this);\n    dataGrid.setStriped(true);\n    return dataGrid;\n  }\n\n  private sortingChanged(): void {\n    if (!this.dataGrid) {\n      return;\n    }\n\n    const dataGrid = this.dataGrid;\n\n    const accending = dataGrid.isSortOrderAscending();\n    const columnId = dataGrid.sortColumnId();\n    let comparator: (arg0: DataGridNode, arg1: DataGridNode) => number;\n    if (columnId === 'name') {\n      comparator = (a: DataGridNode, b: DataGridNode) => a.name.localeCompare(b.name);\n    } else if (columnId === 'content-type') {\n      comparator = (a: DataGridNode, b: DataGridNode) => a.data.mimeType.localeCompare(b.data.mimeType);\n    } else if (columnId === 'content-length') {\n      comparator = (a: DataGridNode, b: DataGridNode) => a.data.resourceSize - b.data.resourceSize;\n    } else if (columnId === 'response-time') {\n      comparator = (a: DataGridNode, b: DataGridNode) => a.data.endTime - b.data.endTime;\n    } else if (columnId === 'response-type') {\n      comparator = (a: DataGridNode, b: DataGridNode) => a.responseType.localeCompare(b.responseType);\n    } else if (columnId === 'vary-header') {\n      comparator = (a: DataGridNode, b: DataGridNode) => a.varyHeader.localeCompare(b.varyHeader);\n    }\n\n    const children = dataGrid.rootNode().children.slice();\n    dataGrid.rootNode().removeChildren();\n    children.sort((a, b) => {\n      const result = comparator((a as DataGridNode), (b as DataGridNode));\n      return accending ? result : -result;\n    });\n    children.forEach(child => dataGrid.rootNode().appendChild(child));\n  }\n\n  private async deleteButtonClicked(node: DataGrid.DataGrid.DataGridNode<DataGridNode>|null): Promise<void> {\n    if (!node) {\n      node = this.dataGrid && this.dataGrid.selectedNode;\n      if (!node) {\n        return;\n      }\n    }\n    await this.model.deleteCacheEntry(this.cache, (node.data.url() as string));\n    node.remove();\n  }\n\n  update(cache: SDK.ServiceWorkerCacheModel.Cache): void {\n    this.cache = cache;\n    this.resetDataGrid();\n    void this.updateData(true);\n  }\n\n  private updateSummaryBar(): void {\n    if (!this.summaryBarElement) {\n      this.summaryBarElement = this.element.createChild('div', 'cache-storage-summary-bar');\n    }\n    this.summaryBarElement.removeChildren();\n\n    const span = this.summaryBarElement.createChild('span');\n    if (this.entryPathFilter) {\n      span.textContent = i18nString(UIStrings.matchingEntriesS, {PH1: String(this.returnCount)});\n    } else {\n      span.textContent = i18nString(UIStrings.totalEntriesS, {PH1: String(this.returnCount)});\n    }\n  }\n\n  private updateDataCallback(\n      this: ServiceWorkerCacheView, skipCount: number, entries: Protocol.CacheStorage.DataEntry[],\n      returnCount: number): void {\n    if (!this.dataGrid) {\n      return;\n    }\n    const selected = this.dataGrid.selectedNode && this.dataGrid.selectedNode.data.url();\n    this.refreshButton.setEnabled(true);\n    this.entriesForTest = entries;\n    this.returnCount = returnCount;\n    this.updateSummaryBar();\n\n    const oldEntries = new Map<string, DataGridNode>();\n    const rootNode = this.dataGrid.rootNode();\n    for (const node of rootNode.children) {\n      oldEntries.set(node.data.url, (node as DataGridNode));\n    }\n    rootNode.removeChildren();\n    let selectedNode: DataGridNode|null = null;\n    for (let i = 0; i < entries.length; ++i) {\n      const entry = entries[i];\n      let node = oldEntries.get(entry.requestURL);\n      if (!node || node.data.responseTime !== entry.responseTime) {\n        node = new DataGridNode(i, this.createRequest(entry), entry.responseType);\n        node.selectable = true;\n      } else {\n        node.data.number = i;\n      }\n      rootNode.appendChild(node);\n      if (entry.requestURL === selected) {\n        selectedNode = node;\n      }\n    }\n    if (!selectedNode) {\n      this.showPreview(null);\n    } else {\n      selectedNode.revealAndSelect();\n    }\n    this.updatedForTest();\n  }\n\n  private async updateData(force: boolean): Promise<{\n    entries: Protocol.CacheStorage.DataEntry[],\n    returnCount: number,\n  }|undefined> {\n    if (!force && this.loadingPromise) {\n      return this.loadingPromise;\n    }\n    this.refreshButton.setEnabled(false);\n\n    if (this.loadingPromise) {\n      return this.loadingPromise;\n    }\n\n    this.loadingPromise = new Promise(resolve => {\n      this.model.loadAllCacheData(\n          this.cache, this.entryPathFilter, (entries: Protocol.CacheStorage.DataEntry[], returnCount: number) => {\n            resolve({entries, returnCount});\n          });\n    });\n\n    const {entries, returnCount} = await this.loadingPromise;\n    this.updateDataCallback(0, entries, returnCount);\n    this.loadingPromise = null;\n    return;\n  }\n\n  private refreshButtonClicked(): void {\n    void this.updateData(true);\n  }\n\n  private cacheContentUpdated(\n      event: Common.EventTarget.EventTargetEvent<SDK.ServiceWorkerCacheModel.CacheStorageContentUpdatedEvent>): void {\n    const {cacheName, storageBucket} = event.data;\n    if ((!this.cache.inBucket(storageBucket) || this.cache.cacheName !== cacheName)) {\n      return;\n    }\n    void this.refreshThrottler.schedule(\n        () => Promise.resolve(this.updateData(true)), Common.Throttler.Scheduling.AsSoonAsPossible);\n  }\n\n  private async previewCachedResponse(request: SDK.NetworkRequest.NetworkRequest): Promise<void> {\n    let preview = networkRequestToPreview.get(request);\n    if (!preview) {\n      preview = new RequestView(request);\n      networkRequestToPreview.set(request, preview);\n    }\n\n    // It is possible that table selection changes before the preview opens.\n    if (this.dataGrid && this.dataGrid.selectedNode && request === this.dataGrid.selectedNode.data) {\n      this.showPreview(preview);\n    }\n  }\n\n  private createRequest(entry: Protocol.CacheStorage.DataEntry): SDK.NetworkRequest.NetworkRequest {\n    const request = SDK.NetworkRequest.NetworkRequest.createWithoutBackendRequest(\n        'cache-storage-' + entry.requestURL, entry.requestURL as Platform.DevToolsPath.UrlString,\n        Platform.DevToolsPath.EmptyUrlString, null);\n    request.requestMethod = entry.requestMethod;\n    request.setRequestHeaders(entry.requestHeaders);\n    request.statusCode = entry.responseStatus;\n    request.statusText = entry.responseStatusText;\n    request.protocol = new Common.ParsedURL.ParsedURL(entry.requestURL).scheme;\n    request.responseHeaders = entry.responseHeaders;\n    request.setRequestHeadersText('');\n    request.endTime = entry.responseTime;\n\n    let header = entry.responseHeaders.find(header => header.name.toLowerCase() === 'content-type');\n    let mimeType: string = Platform.MimeType.MimeType.PLAIN;\n    if (header) {\n      const result = Platform.MimeType.parseContentType(header.value);\n      if (result.mimeType) {\n        mimeType = result.mimeType;\n      }\n    }\n    request.mimeType = mimeType;\n\n    header = entry.responseHeaders.find(header => header.name.toLowerCase() === 'content-length');\n    request.resourceSize = (header && Number(header.value)) || 0;\n\n    let resourceType = Common.ResourceType.ResourceType.fromMimeType(mimeType);\n    if (!resourceType) {\n      resourceType =\n          Common.ResourceType.ResourceType.fromURL(entry.requestURL) || Common.ResourceType.resourceTypes.Other;\n    }\n    request.setResourceType(resourceType);\n    request.setContentDataProvider(this.requestContent.bind(this, request));\n    return request;\n  }\n\n  private async requestContent(request: SDK.NetworkRequest.NetworkRequest):\n      Promise<TextUtils.ContentData.ContentDataOrError> {\n    const response = await this.cache.requestCachedResponse(request.url(), request.requestHeaders());\n    if (!response) {\n      return {error: 'No cached response found'};\n    }\n    return new TextUtils.ContentData.ContentData(\n        response.body, /* isBase64=*/ true, request.mimeType, request.charset() ?? undefined);\n  }\n\n  private updatedForTest(): void {\n  }\n}\n\nconst networkRequestToPreview = new WeakMap<SDK.NetworkRequest.NetworkRequest, RequestView>();\n\nexport class DataGridNode extends DataGrid.DataGrid.DataGridNode<DataGridNode> {\n  private number: number;\n  name: string;\n  private request: SDK.NetworkRequest.NetworkRequest;\n  responseType: Protocol.CacheStorage.CachedResponseType;\n  varyHeader: string;\n\n  constructor(\n      number: number, request: SDK.NetworkRequest.NetworkRequest,\n      responseType: Protocol.CacheStorage.CachedResponseType) {\n    super(request);\n    this.number = number;\n    const parsed = new Common.ParsedURL.ParsedURL(request.url());\n    if (parsed.isValid) {\n      this.name = Platform.StringUtilities.trimURL(request.url(), parsed.domain());\n    } else {\n      this.name = request.url();\n    }\n    this.request = request;\n    this.responseType = responseType;\n    this.varyHeader = request.responseHeaders.find(header => header.name.toLowerCase() === 'vary')?.value || '';\n  }\n\n  override createCell(columnId: string): HTMLElement {\n    const cell = this.createTD(columnId);\n    let value;\n    let tooltip = this.request.url() as string;\n    if (columnId === 'number') {\n      value = String(this.number);\n    } else if (columnId === 'name') {\n      value = this.name;\n    } else if (columnId === 'response-type') {\n      if (this.responseType === 'opaqueResponse') {\n        value = 'opaque';\n      } else if (this.responseType === 'opaqueRedirect') {\n        value = 'opaqueredirect';\n      } else {\n        value = this.responseType;\n      }\n    } else if (columnId === 'content-type') {\n      value = this.request.mimeType;\n    } else if (columnId === 'content-length') {\n      value = (this.request.resourceSize | 0).toLocaleString('en-US');\n    } else if (columnId === 'response-time') {\n      value = new Date(this.request.endTime * 1000).toLocaleString();\n    } else if (columnId === 'vary-header') {\n      value = this.varyHeader;\n      if (this.varyHeader) {\n        tooltip = i18nString(UIStrings.varyHeaderWarning);\n      }\n    }\n    const parentElement = cell.parentElement;\n    let gridNode;\n    if (parentElement && this.dataGrid) {\n      gridNode = this.dataGrid.elementToDataGridNode.get(parentElement);\n    }\n    DataGrid.DataGrid.DataGridImpl.setElementText(cell, value || '', /* longText= */ true, gridNode);\n    UI.Tooltip.Tooltip.install(cell, tooltip);\n    return cell;\n  }\n}\n\nexport class RequestView extends UI.Widget.VBox {\n  private tabbedPane: UI.TabbedPane.TabbedPane;\n  private resourceViewTabSetting: Common.Settings.Setting<string>;\n\n  constructor(request: SDK.NetworkRequest.NetworkRequest) {\n    super();\n\n    this.tabbedPane = new UI.TabbedPane.TabbedPane();\n    this.tabbedPane.element.setAttribute('jslog', `${VisualLogging.section('network-item-preview')}`);\n    this.tabbedPane.addEventListener(UI.TabbedPane.Events.TabSelected, this.tabSelected, this);\n    this.resourceViewTabSetting =\n        Common.Settings.Settings.instance().createSetting('cache-storage-view-tab', 'preview');\n\n    this.tabbedPane.appendTab(\n        'headers', i18nString(UIStrings.headers),\n        LegacyWrapper.LegacyWrapper.legacyWrapper(\n            UI.Widget.VBox, new NetworkComponents.RequestHeadersView.RequestHeadersView(request)));\n    this.tabbedPane.appendTab(\n        'preview', i18nString(UIStrings.preview), new Network.RequestPreviewView.RequestPreviewView(request));\n    this.tabbedPane.show(this.element);\n  }\n\n  override wasShown(): void {\n    super.wasShown();\n    this.selectTab();\n  }\n\n  private selectTab(tabId?: string): void {\n    if (!tabId) {\n      tabId = this.resourceViewTabSetting.get();\n    }\n    if (tabId && !this.tabbedPane.selectTab(tabId)) {\n      this.tabbedPane.selectTab('headers');\n    }\n  }\n\n  private tabSelected(event: Common.EventTarget.EventTargetEvent<UI.TabbedPane.EventData>): void {\n    if (!event.data.isUserGesture) {\n      return;\n    }\n    this.resourceViewTabSetting.set(event.data.tabId);\n  }\n}\n"]}