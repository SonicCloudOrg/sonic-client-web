{"version":3,"file":"PreloadingMismatchedHeadersGrid.js","sourceRoot":"","sources":["../../../../../../../../front_end/panels/application/preloading/components/PreloadingMismatchedHeadersGrid.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport {assertNotNullOrUndefined} from '../../../../core/platform/platform.js';\nimport type * as SDK from '../../../../core/sdk/sdk.js';\nimport * as DataGrid from '../../../../ui/components/data_grid/data_grid.js';\nimport * as LegacyWrapper from '../../../../ui/components/legacy_wrapper/legacy_wrapper.js';\nimport type * as UI from '../../../../ui/legacy/legacy.js';\nimport * as LitHtml from '../../../../ui/lit-html/lit-html.js';\n\nimport preloadingGridStyles from './preloadingGrid.css.js';\n\nconst UIStrings = {\n  /**\n   *@description The name of the HTTP request header.\n   */\n  headerName: 'Header name',\n  /**\n   *@description The value of the HTTP request header in initial navigation.\n   */\n  initialNavigationValue: 'Value in initial navigation',\n  /**\n   *@description The value of the HTTP request header in activation navigation.\n   */\n  activationNavigationValue: 'Value in activation navigation',\n  /**\n   *@description The string to indicate the value of the header is missing.\n   */\n  missing: '(missing)',\n};\nconst str_ = i18n.i18n.registerUIStrings(\n    'panels/application/preloading/components/PreloadingMismatchedHeadersGrid.ts', UIStrings);\nexport const i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nconst {render, html} = LitHtml;\n\nexport class PreloadingMismatchedHeadersGrid extends LegacyWrapper.LegacyWrapper.WrappableComponent<UI.Widget.VBox> {\n  static readonly litTagName = LitHtml.literal`devtools-resources-preloading-mismatched-headers-grid`;\n\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  #data: SDK.PreloadingModel.PrerenderAttempt|null = null;\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [preloadingGridStyles];\n    this.#render();\n  }\n\n  set data(data: SDK.PreloadingModel.PrerenderAttempt) {\n    if (data.mismatchedHeaders === null) {\n      return;\n    }\n    this.#data = data;\n    this.#render();\n  }\n\n  #render(): void {\n    if (this.#data === null) {\n      return;\n    }\n\n    const reportsGridData: DataGrid.DataGridController.DataGridControllerData = {\n      columns: [\n        {\n          id: 'header-name',\n          title: i18nString(UIStrings.headerName),\n          widthWeighting: 30,\n          hideable: false,\n          visible: true,\n          sortable: true,\n        },\n        {\n          id: 'initial-value',\n          title: i18nString(UIStrings.initialNavigationValue),\n          widthWeighting: 30,\n          hideable: false,\n          visible: true,\n          sortable: true,\n        },\n        {\n          id: 'activation-value',\n          title: i18nString(UIStrings.activationNavigationValue),\n          widthWeighting: 30,\n          hideable: false,\n          visible: true,\n          sortable: true,\n        },\n      ],\n      rows: this.#buildReportRows(),\n      striped: true,\n    };\n\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n      render(html`\n        <div class=\"preloading-container\">\n          <${DataGrid.DataGridController.DataGridController.litTagName} .data=${\n              reportsGridData as DataGrid.DataGridController.DataGridControllerData}>\n          </${DataGrid.DataGridController.DataGridController.litTagName}>\n        </div>\n      `, this.#shadow, {host: this});\n    // clang-format on\n  }\n\n  #buildReportRows(): DataGrid.DataGridUtils.Row[] {\n    assertNotNullOrUndefined(this.#data);\n    assertNotNullOrUndefined(this.#data.mismatchedHeaders);\n\n    return this.#data.mismatchedHeaders.map(\n        mismatchedHeaders => ({\n          cells: [\n            {\n              columnId: 'header-name',\n              value: mismatchedHeaders.headerName,\n            },\n            {\n              columnId: 'initial-value',\n              value: mismatchedHeaders.initialValue ?? i18nString(UIStrings.missing),\n            },\n            {\n              columnId: 'activation-value',\n              value: mismatchedHeaders.activationValue ?? i18nString(UIStrings.missing),\n            },\n          ],\n        }));\n  }\n}\n\ncustomElements.define('devtools-resources-preloading-mismatched-headers-grid', PreloadingMismatchedHeadersGrid);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-resources-preloading-mismatched-headers-grid': PreloadingMismatchedHeadersGrid;\n  }\n}\n"]}