{"version":3,"file":"PreloadingGrid.js","sourceRoot":"","sources":["../../../../../../../../front_end/panels/application/preloading/components/PreloadingGrid.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../../../core/common/common.js';\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport type * as Platform from '../../../../core/platform/platform.js';\nimport {assertNotNullOrUndefined} from '../../../../core/platform/platform.js';\nimport * as SDK from '../../../../core/sdk/sdk.js';\nimport type * as Protocol from '../../../../generated/protocol.js';\nimport * as DataGrid from '../../../../ui/components/data_grid/data_grid.js';\nimport * as IconButton from '../../../../ui/components/icon_button/icon_button.js';\nimport * as LegacyWrapper from '../../../../ui/components/legacy_wrapper/legacy_wrapper.js';\nimport type * as UI from '../../../../ui/legacy/legacy.js';\nimport * as LitHtml from '../../../../ui/lit-html/lit-html.js';\n\nimport preloadingGridStyles from './preloadingGrid.css.js';\nimport * as PreloadingString from './PreloadingString.js';\n\nconst UIStrings = {\n  /**\n   *@description Column header: Action of preloading (prefetch/prerender)\n   */\n  action: 'Action',\n  /**\n   *@description Column header: A rule set of preloading\n   */\n  ruleSet: 'Rule set',\n  /**\n   *@description Column header: Status of preloading attempt\n   */\n  status: 'Status',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/application/preloading/components/PreloadingGrid.ts', UIStrings);\nexport const i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nconst {render, html} = LitHtml;\n\nexport interface PreloadingGridData {\n  rows: PreloadingGridRow[];\n  pageURL: Platform.DevToolsPath.UrlString;\n}\n\nexport interface PreloadingGridRow {\n  id: string;\n  attempt: SDK.PreloadingModel.PreloadingAttempt;\n  ruleSets: Protocol.Preload.RuleSet[];\n}\n\n// Grid component to show prerendering attempts.\nexport class PreloadingGrid extends LegacyWrapper.LegacyWrapper.WrappableComponent<UI.Widget.VBox> {\n  static readonly litTagName = LitHtml.literal`devtools-resources-preloading-grid`;\n\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  #data: PreloadingGridData|null = null;\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [preloadingGridStyles];\n    this.#render();\n  }\n\n  update(data: PreloadingGridData): void {\n    this.#data = data;\n    this.#render();\n  }\n\n  #render(): void {\n    if (this.#data === null) {\n      return;\n    }\n\n    const reportsGridData: DataGrid.DataGridController.DataGridControllerData = {\n      columns: [\n        {\n          id: 'url',\n          title: i18n.i18n.lockedString('URL'),\n          widthWeighting: 40,\n          hideable: false,\n          visible: true,\n          sortable: true,\n        },\n        {\n          id: 'action',\n          title: i18nString(UIStrings.action),\n          widthWeighting: 15,\n          hideable: false,\n          visible: true,\n          sortable: true,\n        },\n        {\n          id: 'rule-set',\n          title: i18nString(UIStrings.ruleSet),\n          widthWeighting: 20,\n          hideable: false,\n          visible: true,\n          sortable: true,\n        },\n        {\n          id: 'status',\n          title: i18nString(UIStrings.status),\n          widthWeighting: 40,\n          hideable: false,\n          visible: true,\n          sortable: true,\n        },\n      ],\n      rows: this.#buildReportRows(),\n      striped: true,\n    };\n\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    render(html`\n      <div class=\"preloading-container\">\n        <${DataGrid.DataGridController.DataGridController.litTagName} .data=${\n            reportsGridData as DataGrid.DataGridController.DataGridControllerData}>\n        </${DataGrid.DataGridController.DataGridController.litTagName}>\n      </div>\n    `, this.#shadow, {host: this});\n    // clang-format on\n  }\n\n  #buildReportRows(): DataGrid.DataGridUtils.Row[] {\n    function statusRenderer(statusString: string, status: SDK.PreloadingModel.PreloadingStatus): LitHtml.LitTemplate {\n      if (status !== SDK.PreloadingModel.PreloadingStatus.Failure) {\n        return LitHtml.html`<div>${statusString}</div>`;\n      }\n\n      // Disabled until https://crbug.com/1079231 is fixed.\n      // clang-format off\n      return LitHtml.html`\n        <div\n          style=${LitHtml.Directives.styleMap({\n            color: 'var(--sys-color-error)',\n          })}\n        >\n          <${IconButton.Icon.Icon.litTagName}\n            .data=${{\n              iconName: 'cross-circle-filled',\n              color: 'var(--sys-color-error)',\n              width: '16px',\n              height: '16px',\n            } as IconButton.Icon.IconData}\n            style=${LitHtml.Directives.styleMap({\n              'vertical-align': 'sub',\n            })}\n          >\n          </${IconButton.Icon.Icon.litTagName}>\n          ${statusString}\n        </div>\n      `;\n      // clang-format on\n    }\n\n    assertNotNullOrUndefined(this.#data);\n\n    const pageURL = this.#data.pageURL;\n    const securityOrigin = pageURL === '' ? null : (new Common.ParsedURL.ParsedURL(pageURL)).securityOrigin();\n    return this.#data.rows.map(\n        row => ({\n          cells: [\n            {columnId: 'id', value: row.id},\n            {\n              columnId: 'url',\n              value: this.#urlShort(row, securityOrigin),\n              title: row.attempt.key.url,\n            },\n            {columnId: 'action', value: PreloadingString.capitalizedAction(row.attempt.action)},\n            {\n              columnId: 'rule-set',\n              value: row.ruleSets.length === 0 ? '' : PreloadingString.ruleSetLocationShort(row.ruleSets[0], pageURL),\n            },\n            {\n              columnId: 'status',\n              value: PreloadingString.composedStatus(row.attempt),\n              renderer: status => statusRenderer(status as string, row.attempt.status),\n            },\n          ],\n        }));\n  }\n\n  // Shorten URL if a preloading attempt is same-origin.\n  #urlShort(row: PreloadingGridRow, securityOrigin: string|null): string {\n    const url = row.attempt.key.url;\n    return securityOrigin && url.startsWith(securityOrigin) ? url.slice(securityOrigin.length) : url;\n  }\n}\n\ncustomElements.define('devtools-resources-preloading-grid', PreloadingGrid);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-resources-preloading-grid': PreloadingGrid;\n  }\n}\n"]}