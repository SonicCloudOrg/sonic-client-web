{"version":3,"file":"MismatchedPreloadingGrid.js","sourceRoot":"","sources":["../../../../../../../../front_end/panels/application/preloading/components/MismatchedPreloadingGrid.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport type * as Platform from '../../../../core/platform/platform.js';\nimport {assertNotNullOrUndefined} from '../../../../core/platform/platform.js';\nimport * as SDK from '../../../../core/sdk/sdk.js';\nimport type * as Protocol from '../../../../generated/protocol.js';\nimport * as Diff from '../../../../third_party/diff/diff.js';\nimport * as DataGrid from '../../../../ui/components/data_grid/data_grid.js';\nimport * as LegacyWrapper from '../../../../ui/components/legacy_wrapper/legacy_wrapper.js';\nimport type * as UI from '../../../../ui/legacy/legacy.js';\nimport * as LitHtml from '../../../../ui/lit-html/lit-html.js';\n\nimport * as PreloadingString from './PreloadingString.js';\n\nconst UIStrings = {\n  /**\n   *@description Column header\n   */\n  url: 'URL',\n  /**\n   *@description Column header: Action of preloading (prefetch/prerender)\n   */\n  action: 'Action',\n  /**\n   *@description Column header: Status of preloading attempt\n   */\n  status: 'Status',\n  /**\n   *@description Text in grid and details: Preloading attempt is not yet triggered.\n   */\n  statusNotTriggered: 'Not triggered',\n  /**\n   *@description Text in grid and details: Preloading attempt is eligible but pending.\n   */\n  statusPending: 'Pending',\n  /**\n   *@description Text in grid and details: Preloading is running.\n   */\n  statusRunning: 'Running',\n  /**\n   *@description Text in grid and details: Preloading finished and the result is ready for the next navigation.\n   */\n  statusReady: 'Ready',\n  /**\n   *@description Text in grid and details: Ready, then used.\n   */\n  statusSuccess: 'Success',\n  /**\n   *@description Text in grid and details: Preloading failed.\n   */\n  statusFailure: 'Failure',\n};\nconst str_ =\n    i18n.i18n.registerUIStrings('panels/application/preloading/components/MismatchedPreloadingGrid.ts', UIStrings);\nexport const i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nclass PreloadingUIUtils {\n  static status(status: SDK.PreloadingModel.PreloadingStatus): string {\n    // See content/public/browser/preloading.h PreloadingAttemptOutcome.\n    switch (status) {\n      case SDK.PreloadingModel.PreloadingStatus.NotTriggered:\n        return i18nString(UIStrings.statusNotTriggered);\n      case SDK.PreloadingModel.PreloadingStatus.Pending:\n        return i18nString(UIStrings.statusPending);\n      case SDK.PreloadingModel.PreloadingStatus.Running:\n        return i18nString(UIStrings.statusRunning);\n      case SDK.PreloadingModel.PreloadingStatus.Ready:\n        return i18nString(UIStrings.statusReady);\n      case SDK.PreloadingModel.PreloadingStatus.Success:\n        return i18nString(UIStrings.statusSuccess);\n      case SDK.PreloadingModel.PreloadingStatus.Failure:\n        return i18nString(UIStrings.statusFailure);\n      // NotSupported is used to handle unreachable case. For example,\n      // there is no code path for\n      // PreloadingTriggeringOutcome::kTriggeredButPending in prefetch,\n      // which is mapped to NotSupported. So, we regard it as an\n      // internal error.\n      case SDK.PreloadingModel.PreloadingStatus.NotSupported:\n        return i18n.i18n.lockedString('Internal error');\n    }\n  }\n}\n\nconst {render, html} = LitHtml;\n\nexport interface MismatchedPreloadingGridRow {\n  action: Protocol.Preload.SpeculationAction;\n  url: string;\n  status: SDK.PreloadingModel.PreloadingStatus;\n}\n\nexport interface MismatchedPreloadingGridData {\n  pageURL: Platform.DevToolsPath.UrlString;\n  rows: MismatchedPreloadingGridRow[];\n}\n\n// Grid component to show prerendering attempts.\nexport class MismatchedPreloadingGrid extends LegacyWrapper.LegacyWrapper.WrappableComponent<UI.Widget.VBox> {\n  static readonly litTagName = LitHtml.literal`devtools-resources-mismatched-preloading-grid`;\n\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  #data: MismatchedPreloadingGridData|null = null;\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [];\n    this.#render();\n  }\n\n  set data(data: MismatchedPreloadingGridData) {\n    this.#data = data;\n    this.#render();\n  }\n\n  #render(): void {\n    if (this.#data === null) {\n      return;\n    }\n\n    const reportsGridData: DataGrid.DataGridController.DataGridControllerData = {\n      columns: [\n        {\n          id: 'url',\n          title: i18nString(UIStrings.url),\n          widthWeighting: 40,\n          hideable: false,\n          visible: true,\n          sortable: true,\n        },\n        {\n          id: 'action',\n          title: i18nString(UIStrings.action),\n          widthWeighting: 15,\n          hideable: false,\n          visible: true,\n          sortable: true,\n        },\n        {\n          id: 'status',\n          title: i18nString(UIStrings.status),\n          widthWeighting: 15,\n          hideable: false,\n          visible: true,\n          sortable: true,\n        },\n      ],\n      rows: this.#buildReportRows(),\n      striped: true,\n    };\n\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    render(html`\n      <${DataGrid.DataGridController.DataGridController.litTagName} .data=${\n        reportsGridData as DataGrid.DataGridController.DataGridControllerData}>\n      </${DataGrid.DataGridController.DataGridController.litTagName}>\n    `, this.#shadow, {host: this});\n    // clang-format on\n  }\n\n  #buildReportRows(): DataGrid.DataGridUtils.Row[] {\n    function urlRenderer(url: string, pageURL: string): LitHtml.TemplateResult {\n      function span(\n          additionalProps: {'color'?: string, 'text-decoration'?: string}, s: string): LitHtml.TemplateResult {\n        // Don't insert spaces to prevent spaces for inline blocks.\n        // clang-format off\n        return LitHtml.html`<span style=${LitHtml.Directives.styleMap(additionalProps)}>${s}</span>`;\n        // clang-format on\n      }\n\n      const diffs = Diff.Diff.DiffWrapper.charDiff(url, pageURL);\n      const contents = diffs.map(diffOp => {\n        const s = diffOp[1];\n        switch (diffOp[0]) {\n          case Diff.Diff.Operation.Equal:\n            return span({}, s);\n          case Diff.Diff.Operation.Insert:\n            return span({'color': 'var(--sys-color-green)', 'text-decoration': 'line-through'}, s);\n          case Diff.Diff.Operation.Delete:\n            return span({'color': 'var(--sys-color-error)'}, s);\n          case Diff.Diff.Operation.Edit:\n            return span({'color': 'var(--sys-color-green)', 'text-decoration': 'line-through'}, s);\n          default:\n            throw new Error('unreachable');\n        }\n      }, LitHtml.nothing as unknown as LitHtml.TemplateResult);\n\n      return LitHtml.html`<div>${contents}</div>`;\n    }\n\n    assertNotNullOrUndefined(this.#data);\n    const pageURL = this.#data.pageURL;\n\n    // Sort in descending order by diffScore, i.e. most similar one first.\n    return this.#data.rows\n        .map(row => ({\n               row,\n               diffScore: Diff.Diff.DiffWrapper.characterScore(row.url, pageURL),\n             }))\n        .sort((a, b) => b.diffScore - a.diffScore)\n        .map(({row}) => ({\n               cells: [\n                 {\n                   columnId: 'url',\n                   value: row.url,\n                   renderer: () => urlRenderer(row.url, pageURL),\n                 },\n                 {columnId: 'action', value: PreloadingString.capitalizedAction(row.action)},\n                 {columnId: 'status', value: PreloadingUIUtils.status(row.status)},\n               ],\n             }));\n  }\n}\n\ncustomElements.define('devtools-resources-mismatched-preloading-grid', MismatchedPreloadingGrid);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-resources-mismatched-preloading-grid': MismatchedPreloadingGrid;\n  }\n}\n"]}