{"version":3,"file":"UsedPreloadingView.js","sourceRoot":"","sources":["../../../../../../../../front_end/panels/application/preloading/components/UsedPreloadingView.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../../../core/common/common.js';\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport type * as Platform from '../../../../core/platform/platform.js';\nimport {assertNotNullOrUndefined} from '../../../../core/platform/platform.js';\nimport * as SDK from '../../../../core/sdk/sdk.js';\nimport * as Protocol from '../../../../generated/protocol.js';\nimport * as IconButton from '../../../../ui/components/icon_button/icon_button.js';\nimport * as LegacyWrapper from '../../../../ui/components/legacy_wrapper/legacy_wrapper.js';\nimport * as Coordinator from '../../../../ui/components/render_coordinator/render_coordinator.js';\nimport * as ReportView from '../../../../ui/components/report_view/report_view.js';\nimport * as UI from '../../../../ui/legacy/legacy.js';\nimport * as LitHtml from '../../../../ui/lit-html/lit-html.js';\nimport * as VisualLogging from '../../../../ui/visual_logging/visual_logging.js';\nimport * as PreloadingHelper from '../helper/helper.js';\n\nimport * as MismatchedPreloadingGrid from './MismatchedPreloadingGrid.js';\nimport * as PreloadingMismatchedHeadersGrid from './PreloadingMismatchedHeadersGrid.js';\nimport {prefetchFailureReason, prerenderFailureReason} from './PreloadingString.js';\nimport usedPreloadingStyles from './usedPreloadingView.css.js';\n\nconst UIStrings = {\n  /**\n   *@description Header for preloading status.\n   */\n  speculativeLoadingStatusForThisPage: 'Speculative loading status for this page',\n  /**\n   *@description Label for failure reason of preloeading\n   */\n  detailsFailureReason: 'Failure reason',\n  /**\n   *@description Message that tells this page was prerendered.\n   */\n  downgradedPrefetchUsed:\n      'The initiating page attempted to prerender this page\\'s URL. The prerender failed, but the resulting response body was still used as a prefetch.',\n  /**\n   *@description Message that tells this page was prefetched.\n   */\n  prefetchUsed: 'This page was successfully prefetched.',\n  /**\n   *@description Message that tells this page was prerendered.\n   */\n  prerenderUsed: 'This page was successfully prerendered.',\n  /**\n   *@description Message that tells this page was prefetched.\n   */\n  prefetchFailed:\n      'The initiating page attempted to prefetch this page\\'s URL, but the prefetch failed, so a full navigation was performed instead.',\n  /**\n   *@description Message that tells this page was prerendered.\n   */\n  prerenderFailed:\n      'The initiating page attempted to prerender this page\\'s URL, but the prerender failed, so a full navigation was performed instead.',\n  /**\n   *@description Message that tells this page was not preloaded.\n   */\n  noPreloads: 'The initiating page did not attempt to speculatively load this page\\'s URL.',\n  /**\n   *@description Header for current URL.\n   */\n  currentURL: 'Current URL',\n  /**\n   *@description Header for mismatched preloads.\n   */\n  preloadedURLs: 'URLs being speculatively loaded by the initiating page',\n  /**\n   *@description Header for summary.\n   */\n  speculationsInitiatedByThisPage: 'Speculations initiated by this page',\n  /**\n   *@description Link text to reveal rules.\n   */\n  viewAllRules: 'View all speculation rules',\n  /**\n   *@description Link text to reveal preloads.\n   */\n  viewAllSpeculations: 'View all speculations',\n  /**\n   *@description Link to learn more about Preloading\n   */\n  learnMore: 'Learn more: Speculative loading on developer.chrome.com',\n  /**\n   *@description Header for the table of mismatched network request header.\n   */\n  mismatchedHeadersDetail: 'Mismatched HTTP request headers',\n  /**\n   *@description Label for badge, indicating speculative load successfully used for this page.\n   */\n  badgeSuccess: 'Success',\n  /**\n   *@description Label for badge, indicating speculative load failed for this page.\n   */\n  badgeFailure: 'Failure',\n  /**\n   *@description Label for badge, indicating no speculative loads used for this page.\n   */\n  badgeNoSpeculativeLoads: 'No speculative loads',\n  /**\n   *@description Label for badge, indicating how many not triggered speculations there are.\n   */\n  badgeNotTriggeredWithCount: '{n, plural, =1 {# not triggered} other {# not triggered}}',\n  /**\n   *@description Label for badge, indicating how many in progress speculations there are.\n   */\n  badgeInProgressWithCount: '{n, plural, =1 {# in progress} other {# in progress}}',\n  /**\n   *@description Label for badge, indicating how many succeeded speculations there are.\n   */\n  badgeSuccessWithCount: '{n, plural, =1 {# success} other {# success}}',\n  /**\n   *@description Label for badge, indicating how many failed speculations there are.\n   */\n  badgeFailureWithCount: '{n, plural, =1 {# failure} other {# failures}}',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/application/preloading/components/UsedPreloadingView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nconst coordinator = Coordinator.RenderCoordinator.RenderCoordinator.instance();\n\nexport interface UsedPreloadingViewData {\n  pageURL: Platform.DevToolsPath.UrlString;\n  previousAttempts: SDK.PreloadingModel.PreloadingAttempt[];\n  currentAttempts: SDK.PreloadingModel.PreloadingAttempt[];\n}\n\nexport const enum UsedKind {\n  DowngradedPrerenderToPrefetchAndUsed = 'DowngradedPrerenderToPrefetchAndUsed',\n  PrefetchUsed = 'PrefetchUsed',\n  PrerenderUsed = 'PrerenderUsed',\n  PrefetchFailed = 'PrefetchFailed',\n  PrerenderFailed = 'PrerenderFailed',\n  NoPreloads = 'NoPreloads',\n}\n\n// TODO(kenoss): Rename this class and file once https://crrev.com/c/4933567 landed.\n// This also shows summary of speculations initiated by this page.\nexport class UsedPreloadingView extends LegacyWrapper.LegacyWrapper.WrappableComponent<UI.Widget.VBox> {\n  static readonly litTagName = LitHtml.literal`devtools-resources-used-preloading-view`;\n\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  #data: UsedPreloadingViewData = {\n    pageURL: '' as Platform.DevToolsPath.UrlString,\n    previousAttempts: [],\n    currentAttempts: [],\n  };\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [usedPreloadingStyles];\n  }\n\n  set data(data: UsedPreloadingViewData) {\n    this.#data = data;\n    void this.#render();\n  }\n\n  async #render(): Promise<void> {\n    await coordinator.write('UsedPreloadingView render', () => {\n      LitHtml.render(this.#renderInternal(), this.#shadow, {host: this});\n    });\n  }\n\n  #renderInternal(): LitHtml.LitTemplate {\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    return LitHtml.html`\n      <${ReportView.ReportView.Report.litTagName}>\n        ${this.#speculativeLoadingStatusForThisPageSections()}\n\n        <${ReportView.ReportView.ReportSectionDivider.litTagName}></${\n          ReportView.ReportView.ReportSectionDivider.litTagName}>\n\n        ${this.#speculationsInitiatedByThisPageSummarySections()}\n\n        <${ReportView.ReportView.ReportSectionDivider.litTagName}></${\n          ReportView.ReportView.ReportSectionDivider.litTagName}>\n\n        <${ReportView.ReportView.ReportSection.litTagName}>\n          ${UI.XLink.XLink.create('https://developer.chrome.com/blog/prerender-pages/', i18nString(UIStrings.learnMore), 'link', undefined, 'learn-more')}\n        </${ReportView.ReportView.ReportSection.litTagName}>\n      </${ReportView.ReportView.Report.litTagName}>\n    `;\n    // clang-format on\n  }\n\n  #speculativeLoadingStatusForThisPageSections(): LitHtml.LitTemplate {\n    const pageURL = Common.ParsedURL.ParsedURL.urlWithoutHash(this.#data.pageURL);\n    const forThisPage = this.#data.previousAttempts.filter(\n        attempt => Common.ParsedURL.ParsedURL.urlWithoutHash(attempt.key.url) === pageURL);\n    const prefetch =\n        forThisPage.filter(attempt => attempt.key.action === Protocol.Preload.SpeculationAction.Prefetch)[0];\n    const prerender =\n        forThisPage.filter(attempt => attempt.key.action === Protocol.Preload.SpeculationAction.Prerender)[0];\n\n    let kind = UsedKind.NoPreloads;\n    // Prerender -> prefetch downgrade case\n    //\n    // This code does not handle the case SpecRules designate these preloads rather than prerenderer automatically downgrade prerendering.\n    // TODO(https://crbug.com/1410709): Improve this logic once automatic downgrade implemented.\n    if (prerender?.status === SDK.PreloadingModel.PreloadingStatus.Failure &&\n        prefetch?.status === SDK.PreloadingModel.PreloadingStatus.Success) {\n      kind = UsedKind.DowngradedPrerenderToPrefetchAndUsed;\n    } else if (prefetch?.status === SDK.PreloadingModel.PreloadingStatus.Success) {\n      kind = UsedKind.PrefetchUsed;\n    } else if (prerender?.status === SDK.PreloadingModel.PreloadingStatus.Success) {\n      kind = UsedKind.PrerenderUsed;\n    } else if (prefetch?.status === SDK.PreloadingModel.PreloadingStatus.Failure) {\n      kind = UsedKind.PrefetchFailed;\n    } else if (prerender?.status === SDK.PreloadingModel.PreloadingStatus.Failure) {\n      kind = UsedKind.PrerenderFailed;\n    } else {\n      kind = UsedKind.NoPreloads;\n    }\n\n    let badge;\n    let basicMessage;\n    switch (kind) {\n      case UsedKind.DowngradedPrerenderToPrefetchAndUsed:\n        badge = this.#badgeSuccess();\n        basicMessage = LitHtml.html`${i18nString(UIStrings.downgradedPrefetchUsed)}`;\n        break;\n      case UsedKind.PrefetchUsed:\n        badge = this.#badgeSuccess();\n        basicMessage = LitHtml.html`${i18nString(UIStrings.prefetchUsed)}`;\n        break;\n      case UsedKind.PrerenderUsed:\n        badge = this.#badgeSuccess();\n        basicMessage = LitHtml.html`${i18nString(UIStrings.prerenderUsed)}`;\n        break;\n      case UsedKind.PrefetchFailed:\n        badge = this.#badgeFailure();\n        basicMessage = LitHtml.html`${i18nString(UIStrings.prefetchFailed)}`;\n        break;\n      case UsedKind.PrerenderFailed:\n        badge = this.#badgeFailure();\n        basicMessage = LitHtml.html`${i18nString(UIStrings.prerenderFailed)}`;\n        break;\n      case UsedKind.NoPreloads:\n        badge = this.#badgeNeutral(i18nString(UIStrings.badgeNoSpeculativeLoads));\n        basicMessage = LitHtml.html`${i18nString(UIStrings.noPreloads)}`;\n        break;\n    }\n\n    let maybeFailureReasonMessage;\n    if (kind === UsedKind.PrefetchFailed) {\n      assertNotNullOrUndefined(prefetch);\n      maybeFailureReasonMessage = prefetchFailureReason(prefetch as SDK.PreloadingModel.PrefetchAttempt);\n    } else if (kind === UsedKind.PrerenderFailed || kind === UsedKind.DowngradedPrerenderToPrefetchAndUsed) {\n      assertNotNullOrUndefined(prerender);\n      maybeFailureReasonMessage = prerenderFailureReason(prerender as SDK.PreloadingModel.PrerenderAttempt);\n    }\n\n    let maybeFailureReason: LitHtml.LitTemplate = LitHtml.nothing;\n    if (maybeFailureReasonMessage !== undefined) {\n      // Disabled until https://crbug.com/1079231 is fixed.\n      // clang-format off\n      maybeFailureReason = LitHtml.html`\n      <${ReportView.ReportView.ReportSectionHeader.litTagName}>${i18nString(UIStrings.detailsFailureReason)}</${\n        ReportView.ReportView.ReportSectionHeader.litTagName}>\n      <${ReportView.ReportView.ReportSection.litTagName}>\n        ${maybeFailureReasonMessage}\n      </${ReportView.ReportView.ReportSection.litTagName}>\n      `;\n      // clang-format on\n    }\n\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    return LitHtml.html`\n      <${ReportView.ReportView.ReportSectionHeader.litTagName}>${i18nString(UIStrings.speculativeLoadingStatusForThisPage)}</${\n        ReportView.ReportView.ReportSectionHeader.litTagName}>\n      <${ReportView.ReportView.ReportSection.litTagName}>\n        <div>\n          <div class=\"status-badge-container\">\n            ${badge}\n          </div>\n          <div>\n            ${basicMessage}\n          </div>\n        </div>\n      </${ReportView.ReportView.ReportSection.litTagName}>\n\n      ${maybeFailureReason}\n\n      ${this.#maybeMismatchedSections(kind)}\n      ${this.#maybeMismatchedHTTPHeadersSections()}\n    `;\n    // clang-format on\n  }\n\n  #maybeMismatchedSections(kind: UsedKind): LitHtml.LitTemplate {\n    if (kind !== UsedKind.NoPreloads || this.#data.previousAttempts.length === 0) {\n      return LitHtml.nothing;\n    }\n\n    const rows = this.#data.previousAttempts.map(attempt => {\n      return {\n        url: attempt.key.url,\n        action: attempt.key.action,\n        status: attempt.status,\n      };\n    });\n    const data = {\n      pageURL: this.#data.pageURL,\n      rows,\n    };\n\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    return LitHtml.html`\n      <${ReportView.ReportView.ReportSectionHeader.litTagName}>${i18nString(UIStrings.currentURL)}</${\n        ReportView.ReportView.ReportSectionHeader.litTagName}>\n      <${ReportView.ReportView.ReportSection.litTagName}>\n        ${UI.XLink.XLink.create(this.#data.pageURL, undefined, 'link', undefined, 'current-url')}\n      </${ReportView.ReportView.ReportSection.litTagName}>\n\n      <${ReportView.ReportView.ReportSectionHeader.litTagName}>${i18nString(UIStrings.preloadedURLs)}</${\n        ReportView.ReportView.ReportSectionHeader.litTagName}>\n      <${ReportView.ReportView.ReportSection.litTagName}\n      jslog=${VisualLogging.section('preloaded-urls')}>\n        <${MismatchedPreloadingGrid.MismatchedPreloadingGrid.litTagName}\n          .data=${data as MismatchedPreloadingGrid.MismatchedPreloadingGridData}></${\n          MismatchedPreloadingGrid.MismatchedPreloadingGrid.litTagName}>\n      </${ReportView.ReportView.ReportSection.litTagName}>\n    `;\n    // clang-format on\n  }\n\n  #maybeMismatchedHTTPHeadersSections(): LitHtml.LitTemplate {\n    const attempt = this.#data.previousAttempts.find(\n        attempt =>\n            attempt.action === Protocol.Preload.SpeculationAction.Prerender && attempt.mismatchedHeaders !== null);\n    if (attempt === undefined) {\n      return LitHtml.nothing;\n    }\n\n    if (attempt.key.url !== this.#data.pageURL) {\n      // This place should never be reached since mismatched headers is reported only if the activation is attempted.\n      // TODO(crbug.com/1456673): remove this check once DevTools support embedder-triggered prerender or prerender\n      // supports non-vary-search.\n      throw new Error('unreachable');\n    }\n\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    return LitHtml.html`\n      <${ReportView.ReportView.ReportSectionHeader.litTagName}>${i18nString(UIStrings.mismatchedHeadersDetail)}</${\n        ReportView.ReportView.ReportSectionHeader.litTagName}>\n      <${ReportView.ReportView.ReportSection.litTagName}>\n        <${PreloadingMismatchedHeadersGrid.PreloadingMismatchedHeadersGrid.litTagName}\n          .data=${attempt as SDK.PreloadingModel.PrerenderAttempt}></${\n            PreloadingMismatchedHeadersGrid.PreloadingMismatchedHeadersGrid.litTagName}>\n      </${ReportView.ReportView.ReportSection.litTagName}>\n    `;\n    // clang-format on\n  }\n\n  #speculationsInitiatedByThisPageSummarySections(): LitHtml.LitTemplate {\n    const count = this.#data.currentAttempts.reduce((acc, attempt) => {\n      acc.set(attempt.status, (acc.get(attempt.status) ?? 0) + 1);\n      return acc;\n    }, new Map());\n    const notTriggeredCount = count.get(SDK.PreloadingModel.PreloadingStatus.NotTriggered) ?? 0;\n    const readyCount = count.get(SDK.PreloadingModel.PreloadingStatus.Ready) ?? 0;\n    const failureCount = count.get(SDK.PreloadingModel.PreloadingStatus.Failure) ?? 0;\n    const inProgressCount = (count.get(SDK.PreloadingModel.PreloadingStatus.Pending) ?? 0) +\n        (count.get(SDK.PreloadingModel.PreloadingStatus.Running) ?? 0);\n    const badges = [];\n    if (this.#data.currentAttempts.length === 0) {\n      badges.push(this.#badgeNeutral(i18nString(UIStrings.badgeNoSpeculativeLoads)));\n    }\n    if (notTriggeredCount > 0) {\n      badges.push(this.#badgeNeutral(i18nString(UIStrings.badgeNotTriggeredWithCount, {n: notTriggeredCount})));\n    }\n    if (inProgressCount > 0) {\n      badges.push(this.#badgeNeutral(i18nString(UIStrings.badgeInProgressWithCount, {n: inProgressCount})));\n    }\n    if (readyCount > 0) {\n      badges.push(this.#badgeSuccess(readyCount));\n    }\n    if (failureCount > 0) {\n      badges.push(this.#badgeFailure(failureCount));\n    }\n\n    const revealRuleSetView = (): void => {\n      void Common.Revealer.reveal(new PreloadingHelper.PreloadingForward.RuleSetView(null));\n    };\n    const revealAttemptViewWithFilter = (): void => {\n      void Common.Revealer.reveal(new PreloadingHelper.PreloadingForward.AttemptViewWithFilter(null));\n    };\n\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    return LitHtml.html`\n      <${ReportView.ReportView.ReportSectionHeader.litTagName}>${i18nString(UIStrings.speculationsInitiatedByThisPage)}</${\n        ReportView.ReportView.ReportSectionHeader.litTagName}>\n      <${ReportView.ReportView.ReportSection.litTagName}>\n        <div>\n          <div class=\"status-badge-container\">\n            ${badges}\n          </div>\n\n          <div class=\"reveal-links\">\n            <button class=\"link devtools-link\" @click=${revealRuleSetView}\n            jslog=${VisualLogging.action('view-all-rules').track({click: true})}>\n              ${i18nString(UIStrings.viewAllRules)}\n            </button>\n           ・\n            <button class=\"link devtools-link\" @click=${revealAttemptViewWithFilter}\n            jslog=${VisualLogging.action('view-all-speculations').track({click: true})}>\n             ${i18nString(UIStrings.viewAllSpeculations)}\n            </button>\n          </div>\n        </div>\n      </${ReportView.ReportView.ReportSection.litTagName}>\n    `;\n    // clang-format on\n  }\n\n  #badgeSuccess(count?: number): LitHtml.LitTemplate {\n    let message;\n    if (count === undefined) {\n      message = i18nString(UIStrings.badgeSuccess);\n    } else {\n      message = i18nString(UIStrings.badgeSuccessWithCount, {n: count});\n    }\n    return this.#badge('status-badge status-badge-success', 'check-circle', message);\n  }\n\n  #badgeFailure(count?: number): LitHtml.LitTemplate {\n    let message;\n    if (count === undefined) {\n      message = i18nString(UIStrings.badgeFailure);\n    } else {\n      message = i18nString(UIStrings.badgeFailureWithCount, {n: count});\n    }\n    return this.#badge('status-badge status-badge-failure', 'cross-circle', message);\n  }\n\n  #badgeNeutral(message: string): LitHtml.LitTemplate {\n    return this.#badge('status-badge status-badge-neutral', 'clear', message);\n  }\n\n  #badge(klass: string, iconName: string, message: string): LitHtml.LitTemplate {\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    return LitHtml.html`\n      <span class=${klass}>\n        <${IconButton.Icon.Icon.litTagName} name=${iconName}></${IconButton.Icon.Icon.litTagName}>\n        <span>\n          ${message}\n        </span>\n      </span>\n    `;\n    // clang-format on\n  }\n}\n\ncustomElements.define('devtools-resources-used-preloading-view', UsedPreloadingView);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-resources-used-preloading-view': UsedPreloadingView;\n  }\n}\n"]}