{"version":3,"file":"PreloadingDetailsReportView.test.js","sourceRoot":"","sources":["../../../../../../../../front_end/panels/application/preloading/components/PreloadingDetailsReportView.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Platform from '../../../../core/platform/platform.js';\nimport * as SDK from '../../../../core/sdk/sdk.js';\nimport * as Protocol from '../../../../generated/protocol.js';\nimport type * as Logs from '../../../../models/logs/logs.js';\nimport {\n  getCleanTextContentFromElements,\n  getElementWithinComponent,\n  renderElementIntoDOM,\n} from '../../../../testing/DOMHelpers.js';\nimport {describeWithEnvironment} from '../../../../testing/EnvironmentHelpers.js';\nimport * as Coordinator from '../../../../ui/components/render_coordinator/render_coordinator.js';\nimport * as ReportView from '../../../../ui/components/report_view/report_view.js';\n\nimport * as PreloadingComponents from './components.js';\n\nconst coordinator = Coordinator.RenderCoordinator.RenderCoordinator.instance();\n\nconst zip2 = <T, S>(xs: T[], ys: S[]) => {\n  assert.strictEqual(xs.length, ys.length);\n\n  return Array.from(xs.map((_, i) => [xs[i], ys[i]]));\n};\n\nconst renderPreloadingDetailsReportView =\n    async (data: PreloadingComponents.PreloadingDetailsReportView.PreloadingDetailsReportViewData) => {\n  const component = new PreloadingComponents.PreloadingDetailsReportView.PreloadingDetailsReportView();\n  component.data = data;\n  renderElementIntoDOM(component);\n  assert.isNotNull(component.shadowRoot);\n  await coordinator.done();\n\n  return component;\n};\n\n// Note that testing Inspect/Activate buttons requires setup for targets.\n// These are tested in test/unittests/front_end/panels/application/preloading/PreloadingView.test.ts.\ndescribeWithEnvironment('PreloadingDetailsReportView', () => {\n  it('renders place holder if not selected', async () => {\n    const data = null;\n\n    const component = await renderPreloadingDetailsReportView(data);\n    assert.isNotNull(component.shadowRoot);\n    const placeholder = component.shadowRoot.querySelector('.preloading-noselected');\n\n    assert.include(placeholder?.textContent, 'Select an element for more details');\n  });\n\n  it('renders prerendering details', async () => {\n    const url = 'https://example.com/prerendered.html' as Platform.DevToolsPath.UrlString;\n    const data: PreloadingComponents.PreloadingDetailsReportView.PreloadingDetailsReportViewData = {\n      preloadingAttempt: {\n        action: Protocol.Preload.SpeculationAction.Prerender,\n        key: {\n          loaderId: 'loaderId' as Protocol.Network.LoaderId,\n          action: Protocol.Preload.SpeculationAction.Prerender,\n          url,\n          targetHint: undefined,\n        },\n        status: SDK.PreloadingModel.PreloadingStatus.Running,\n        prerenderStatus: null,\n        disallowedMojoInterface: null,\n        mismatchedHeaders: null,\n        ruleSetIds: ['ruleSetId'] as Protocol.Preload.RuleSetId[],\n        nodeIds: [1] as Protocol.DOM.BackendNodeId[],\n      },\n      ruleSets: [\n        {\n          id: 'ruleSetId' as Protocol.Preload.RuleSetId,\n          loaderId: 'loaderId' as Protocol.Network.LoaderId,\n          sourceText: `\n{\n  \"prefetch\": [\n    {\n      \"source\": \"list\",\n      \"urls\": [\"/subresource.js\"]\n    }\n  ]\n}\n`,\n        },\n      ],\n      pageURL: 'https://example.com/' as Platform.DevToolsPath.UrlString,\n    };\n\n    const component = await renderPreloadingDetailsReportView(data);\n    const report = getElementWithinComponent(component, 'devtools-report', ReportView.ReportView.Report);\n\n    const keys = getCleanTextContentFromElements(report, 'devtools-report-key');\n    const values = getCleanTextContentFromElements(report, 'devtools-report-value');\n    assert.deepEqual(zip2(keys, values), [\n      ['URL', url],\n      ['Action', 'Prerender'],\n      ['Status', 'Speculative load is running.'],\n      ['Rule set', 'example.com/'],\n    ]);\n  });\n\n  // TODO(https://crbug.com/1317959): Add cancelled reason once\n  // finalStatus and disallowedApiMethod added to prerenderStatusUpdated.\n  it('renders prerendering details with cancelled reason', async () => {\n    const url = 'https://example.com/prerendered.html' as Platform.DevToolsPath.UrlString;\n    const data: PreloadingComponents.PreloadingDetailsReportView.PreloadingDetailsReportViewData = {\n      preloadingAttempt: {\n        action: Protocol.Preload.SpeculationAction.Prerender,\n        key: {\n          loaderId: 'loaderId' as Protocol.Network.LoaderId,\n          action: Protocol.Preload.SpeculationAction.Prerender,\n          url,\n          targetHint: undefined,\n        },\n        status: SDK.PreloadingModel.PreloadingStatus.Failure,\n        prerenderStatus: Protocol.Preload.PrerenderFinalStatus.MojoBinderPolicy,\n        disallowedMojoInterface: 'device.mojom.GamepadMonitor',\n        mismatchedHeaders: null,\n        ruleSetIds: ['ruleSetId'] as Protocol.Preload.RuleSetId[],\n        nodeIds: [1] as Protocol.DOM.BackendNodeId[],\n      },\n      ruleSets: [\n        {\n          id: 'ruleSetId' as Protocol.Preload.RuleSetId,\n          loaderId: 'loaderId' as Protocol.Network.LoaderId,\n          sourceText: `\n{\n  \"prefetch\": [\n    {\n      \"source\": \"list\",\n      \"urls\": [\"/subresource.js\"]\n    }\n  ]\n}\n`,\n        },\n      ],\n      pageURL: 'https://example.com/' as Platform.DevToolsPath.UrlString,\n    };\n\n    const component = await renderPreloadingDetailsReportView(data);\n    const report = getElementWithinComponent(component, 'devtools-report', ReportView.ReportView.Report);\n\n    const keys = getCleanTextContentFromElements(report, 'devtools-report-key');\n    const values = getCleanTextContentFromElements(report, 'devtools-report-value');\n    assert.deepEqual(zip2(keys, values), [\n      ['URL', url],\n      ['Action', 'Prerender'],\n      ['Status', 'Speculative load failed.'],\n      [\n        'Failure reason',\n        'The prerendered page used a forbidden JavaScript API that is currently not supported. (Internal Mojo interface: device.mojom.GamepadMonitor)',\n      ],\n      ['Rule set', 'example.com/'],\n    ]);\n  });\n\n  it('renders prefetch details with cancelled reason', async () => {\n    const fakeRequestResolver = {\n      waitFor: (_requestId: Protocol.Network.RequestId) => {\n        return Promise.reject();\n      },\n    } as unknown as Logs.RequestResolver.RequestResolver;\n\n    const url = 'https://example.com/prefetch.html' as Platform.DevToolsPath.UrlString;\n    const data: PreloadingComponents.PreloadingDetailsReportView.PreloadingDetailsReportViewData = {\n      preloadingAttempt: {\n        action: Protocol.Preload.SpeculationAction.Prefetch,\n        key: {\n          loaderId: 'loaderId' as Protocol.Network.LoaderId,\n          action: Protocol.Preload.SpeculationAction.Prefetch,\n          url,\n          targetHint: undefined,\n        },\n        status: SDK.PreloadingModel.PreloadingStatus.Failure,\n        prefetchStatus: Protocol.Preload.PrefetchStatus.PrefetchFailedNon2XX,\n        requestId: 'requestId:1' as Protocol.Network.RequestId,\n        ruleSetIds: ['ruleSetId'] as Protocol.Preload.RuleSetId[],\n        nodeIds: [1] as Protocol.DOM.BackendNodeId[],\n      },\n      ruleSets: [\n        {\n          id: 'ruleSetId' as Protocol.Preload.RuleSetId,\n          loaderId: 'loaderId' as Protocol.Network.LoaderId,\n          sourceText: `\n{\n  \"prefetch\": [\n    {\n      \"source\": \"list\",\n      \"urls\": [\"/subresource.js\"]\n    }\n  ]\n}\n`,\n        },\n      ],\n      pageURL: 'https://example.com/' as Platform.DevToolsPath.UrlString,\n      requestResolver: fakeRequestResolver,\n    };\n\n    const component = await renderPreloadingDetailsReportView(data);\n    const report = getElementWithinComponent(component, 'devtools-report', ReportView.ReportView.Report);\n\n    const keys = getCleanTextContentFromElements(report, 'devtools-report-key');\n    const values = getCleanTextContentFromElements(report, 'devtools-report-value');\n    values[0] = report.querySelector('devtools-report-value:nth-of-type(1) devtools-request-link-icon')\n                    ?.shadowRoot?.textContent?.trim() ||\n        values[0];\n    assert.deepEqual(zip2(keys, values), [\n      ['URL', url],\n      ['Action', 'Prefetch'],\n      ['Status', 'Speculative load failed.'],\n      ['Failure reason', 'The prefetch failed because of a non-2xx HTTP response status code.'],\n      ['Rule set', 'example.com/'],\n    ]);\n  });\n\n  it('renders prefetch details with out-of-document Speculation Rules', async () => {\n    const fakeRequestResolver = {\n      waitFor: (_requestId: Protocol.Network.RequestId) => {\n        return Promise.reject();\n      },\n    } as unknown as Logs.RequestResolver.RequestResolver;\n\n    const url = 'https://example.com/prefetch.html' as Platform.DevToolsPath.UrlString;\n    const data: PreloadingComponents.PreloadingDetailsReportView.PreloadingDetailsReportViewData = {\n      preloadingAttempt: {\n        action: Protocol.Preload.SpeculationAction.Prefetch,\n        key: {\n          loaderId: 'loaderId' as Protocol.Network.LoaderId,\n          action: Protocol.Preload.SpeculationAction.Prefetch,\n          url,\n          targetHint: undefined,\n        },\n        status: SDK.PreloadingModel.PreloadingStatus.Ready,\n        prefetchStatus: null,\n        requestId: 'requestId:1' as Protocol.Network.RequestId,\n        ruleSetIds: ['ruleSetId'] as Protocol.Preload.RuleSetId[],\n        nodeIds: [1] as Protocol.DOM.BackendNodeId[],\n      },\n      ruleSets: [\n        {\n          id: 'ruleSetId' as Protocol.Preload.RuleSetId,\n          loaderId: 'loaderId' as Protocol.Network.LoaderId,\n          sourceText: `\n{\n  \"prefetch\": [\n    {\n      \"source\": \"list\",\n      \"urls\": [\"/subresource.js\"]\n    }\n  ]\n}\n`,\n          url: 'https://example.com/speculation-rules.json',\n        },\n      ],\n      pageURL: 'https://example.com/' as Platform.DevToolsPath.UrlString,\n      requestResolver: fakeRequestResolver,\n    };\n\n    const component = await renderPreloadingDetailsReportView(data);\n    const report = getElementWithinComponent(component, 'devtools-report', ReportView.ReportView.Report);\n\n    const keys = getCleanTextContentFromElements(report, 'devtools-report-key');\n    const values = getCleanTextContentFromElements(report, 'devtools-report-value');\n    values[0] = report.querySelector('devtools-report-value:nth-of-type(1) devtools-request-link-icon')\n                    ?.shadowRoot?.textContent?.trim() ||\n        values[0];\n    assert.deepEqual(zip2(keys, values), [\n      ['URL', url],\n      ['Action', 'Prefetch'],\n      ['Status', 'Speculative load finished and the result is ready for the next navigation.'],\n      ['Rule set', 'example.com/speculation-rules.json'],\n    ]);\n  });\n});\n"]}