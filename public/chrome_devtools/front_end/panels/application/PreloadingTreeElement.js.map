{"version":3,"file":"PreloadingTreeElement.js","sourceRoot":"","sources":["../../../../../../front_end/panels/application/PreloadingTreeElement.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport type * as SDK from '../../core/sdk/sdk.js';\nimport * as IconButton from '../../ui/components/icon_button/icon_button.js';\n\nimport {ApplicationPanelTreeElement, ExpandableApplicationPanelTreeElement} from './ApplicationPanelTreeElement.js';\nimport type * as PreloadingHelper from './preloading/helper/helper.js';\nimport {PreloadingAttemptView, PreloadingRuleSetView, PreloadingSummaryView} from './preloading/PreloadingView.js';\nimport {type ResourcesPanel} from './ResourcesPanel.js';\n\nconst UIStrings = {\n  /**\n   *@description Text in Application Panel Sidebar of the Application panel\n   */\n  speculativeLoads: 'Speculative loads',\n  /**\n   *@description Text in Application Panel Sidebar of the Application panel\n   */\n  rules: 'Rules',\n  /**\n   *@description Text in Application Panel Sidebar of the Application panel\n   */\n  speculations: 'Speculations',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/application/PreloadingTreeElement.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nclass PreloadingTreeElementBase<View extends PreloadingRuleSetView|PreloadingAttemptView> extends\n    ApplicationPanelTreeElement {\n  #model?: SDK.PreloadingModel.PreloadingModel;\n  #viewConstructor: {new(model: SDK.PreloadingModel.PreloadingModel): View};\n  protected view?: View;\n  #path: Platform.DevToolsPath.UrlString;\n  #selectedInternal: boolean;\n\n  constructor(\n      panel: ResourcesPanel, viewConstructor: {new(model: SDK.PreloadingModel.PreloadingModel): View},\n      path: Platform.DevToolsPath.UrlString, title: string) {\n    super(panel, title, false);\n\n    this.#viewConstructor = viewConstructor;\n    this.#path = path;\n\n    const icon = IconButton.Icon.create('arrow-up-down');\n    this.setLeadingIcons([icon]);\n    this.#selectedInternal = false;\n\n    // TODO(https://crbug.com/1384419): Set link\n  }\n\n  override get itemURL(): Platform.DevToolsPath.UrlString {\n    return this.#path;\n  }\n\n  initialize(model: SDK.PreloadingModel.PreloadingModel): void {\n    this.#model = model;\n\n    // Show the view if the model was initialized after selection.\n    if (this.#selectedInternal && !this.view) {\n      this.onselect(false);\n    }\n  }\n\n  override onselect(selectedByUser?: boolean): boolean {\n    super.onselect(selectedByUser);\n    this.#selectedInternal = true;\n\n    if (!this.#model) {\n      return false;\n    }\n\n    if (!this.view) {\n      this.view = new this.#viewConstructor(this.#model);\n    }\n\n    this.showView(this.view);\n\n    return false;\n  }\n}\n\nexport class PreloadingSummaryTreeElement extends ExpandableApplicationPanelTreeElement {\n  #model?: SDK.PreloadingModel.PreloadingModel;\n  #view?: PreloadingSummaryView;\n  #selectedInternal: boolean;\n\n  #ruleSet: PreloadingRuleSetTreeElement|null = null;\n  #attempt: PreloadingAttemptTreeElement|null = null;\n\n  constructor(panel: ResourcesPanel) {\n    super(panel, i18nString(UIStrings.speculativeLoads), 'preloading');\n\n    const icon = IconButton.Icon.create('arrow-up-down');\n    this.setLeadingIcons([icon]);\n    this.#selectedInternal = false;\n\n    // TODO(https://crbug.com/1384419): Set link\n  }\n\n  // Note that\n  //\n  // - TreeElement.ensureSelection assumes TreeElement.treeOutline initalized.\n  // - TreeElement.treeOutline is propagated in TreeElement.appendChild.\n  //\n  // So, `this.constructChildren` should be called just after `parent.appendChild(this)`\n  // to enrich children with TreeElement.selectionElementInternal correctly.\n  constructChildren(panel: ResourcesPanel): void {\n    this.#ruleSet = new PreloadingRuleSetTreeElement(panel);\n    this.#attempt = new PreloadingAttemptTreeElement(panel);\n    this.appendChild(this.#ruleSet);\n    this.appendChild(this.#attempt);\n  }\n\n  initialize(model: SDK.PreloadingModel.PreloadingModel): void {\n    if (this.#ruleSet === null || this.#attempt === null) {\n      throw new Error('unreachable');\n    }\n\n    this.#model = model;\n    this.#ruleSet.initialize(model);\n    this.#attempt.initialize(model);\n\n    // Show the view if the model was initialized after selection.\n    if (this.#selectedInternal && !this.#view) {\n      this.onselect(false);\n    }\n  }\n\n  override onselect(selectedByUser?: boolean): boolean {\n    super.onselect(selectedByUser);\n    this.#selectedInternal = true;\n\n    if (!this.#model) {\n      return false;\n    }\n\n    if (!this.#view) {\n      this.#view = new PreloadingSummaryView(this.#model);\n    }\n\n    this.showView(this.#view);\n\n    return false;\n  }\n\n  expandAndRevealRuleSet(revealInfo: PreloadingHelper.PreloadingForward.RuleSetView): void {\n    if (this.#ruleSet === null) {\n      throw new Error('unreachable');\n    }\n\n    this.expand();\n    this.#ruleSet.revealRuleSet(revealInfo);\n  }\n\n  expandAndRevealAttempts(filter: PreloadingHelper.PreloadingForward.AttemptViewWithFilter): void {\n    if (this.#attempt === null) {\n      throw new Error('unreachable');\n    }\n\n    this.expand();\n    this.#attempt.revealAttempts(filter);\n  }\n}\n\nexport class PreloadingRuleSetTreeElement extends PreloadingTreeElementBase<PreloadingRuleSetView> {\n  constructor(panel: ResourcesPanel) {\n    super(\n        panel, PreloadingRuleSetView, 'preloading://rule-set' as Platform.DevToolsPath.UrlString,\n        i18nString(UIStrings.rules));\n  }\n\n  revealRuleSet(revealInfo: PreloadingHelper.PreloadingForward.RuleSetView): void {\n    this.select();\n\n    if (this.view === undefined) {\n      return;\n    }\n\n    this.view?.revealRuleSet(revealInfo);\n  }\n}\n\nclass PreloadingAttemptTreeElement extends PreloadingTreeElementBase<PreloadingAttemptView> {\n  constructor(panel: ResourcesPanel) {\n    super(\n        panel, PreloadingAttemptView, 'preloading://attempt' as Platform.DevToolsPath.UrlString,\n        i18nString(UIStrings.speculations));\n  }\n\n  revealAttempts(filter: PreloadingHelper.PreloadingForward.AttemptViewWithFilter): void {\n    this.select();\n    this.view?.setFilter(filter);\n  }\n}\n"]}