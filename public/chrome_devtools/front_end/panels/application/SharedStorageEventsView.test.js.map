{"version":3,"file":"SharedStorageEventsView.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/application/SharedStorageEventsView.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Protocol from '../../generated/protocol.js';\nimport {raf} from '../../testing/DOMHelpers.js';\nimport {describeWithMockConnection} from '../../testing/MockConnection.js';\nimport * as DataGrid from '../../ui/components/data_grid/data_grid.js';\n\nimport * as Resources from './application.js';\n\nimport View = Resources.SharedStorageEventsView;\n\ndescribeWithMockConnection('SharedStorageEventsView', () => {\n  const TEST_ORIGIN_A = 'http://a.test';\n  const TEST_ORIGIN_B = 'http://b.test';\n  const TEST_ORIGIN_C = 'http://c.test';\n\n  const ID_A = 'AA' as Protocol.Page.FrameId;\n  const ID_B = 'BB' as Protocol.Page.FrameId;\n  const EMPTY_ID = '' as Protocol.Page.FrameId;\n\n  const EVENTS = [\n    {\n      accessTime: 0,\n      type: Protocol.Storage.SharedStorageAccessType.DocumentAppend,\n      mainFrameId: ID_A,\n      ownerOrigin: TEST_ORIGIN_A,\n      params: {key: 'key0', value: 'value0'} as Protocol.Storage.SharedStorageAccessParams,\n    },\n    {\n      accessTime: 10,\n      type: Protocol.Storage.SharedStorageAccessType.WorkletGet,\n      mainFrameId: ID_A,\n      ownerOrigin: TEST_ORIGIN_A,\n      params: {key: 'key0'} as Protocol.Storage.SharedStorageAccessParams,\n    },\n    {\n      accessTime: 15,\n      type: Protocol.Storage.SharedStorageAccessType.WorkletLength,\n      mainFrameId: ID_A,\n      ownerOrigin: TEST_ORIGIN_B,\n      params: {} as Protocol.Storage.SharedStorageAccessParams,\n    },\n    {\n      accessTime: 20,\n      type: Protocol.Storage.SharedStorageAccessType.DocumentClear,\n      mainFrameId: ID_A,\n      ownerOrigin: TEST_ORIGIN_B,\n      params: {} as Protocol.Storage.SharedStorageAccessParams,\n    },\n    {\n      accessTime: 100,\n      type: Protocol.Storage.SharedStorageAccessType.WorkletSet,\n      mainFrameId: ID_A,\n      ownerOrigin: TEST_ORIGIN_C,\n      params: {key: 'key0', value: 'value1', ignoreIfPresent: true} as Protocol.Storage.SharedStorageAccessParams,\n    },\n    {\n      accessTime: 150,\n      type: Protocol.Storage.SharedStorageAccessType.WorkletRemainingBudget,\n      mainFrameId: ID_A,\n      ownerOrigin: TEST_ORIGIN_C,\n      params: {} as Protocol.Storage.SharedStorageAccessParams,\n    },\n  ];\n\n  const MULTI_PAGE_EVENTS = [\n    {\n      accessTime: 0,\n      type: Protocol.Storage.SharedStorageAccessType.DocumentAppend,\n      mainFrameId: ID_A,\n      ownerOrigin: TEST_ORIGIN_A,\n      params: {key: 'key0', value: 'value0'} as Protocol.Storage.SharedStorageAccessParams,\n    },\n    {\n      accessTime: 10,\n      type: Protocol.Storage.SharedStorageAccessType.WorkletGet,\n      mainFrameId: ID_B,\n      ownerOrigin: TEST_ORIGIN_A,\n      params: {key: 'key0'} as Protocol.Storage.SharedStorageAccessParams,\n    },\n    {\n      accessTime: 15,\n      type: Protocol.Storage.SharedStorageAccessType.WorkletLength,\n      mainFrameId: ID_A,\n      ownerOrigin: TEST_ORIGIN_B,\n      params: {} as Protocol.Storage.SharedStorageAccessParams,\n    },\n    {\n      accessTime: 20,\n      type: Protocol.Storage.SharedStorageAccessType.DocumentClear,\n      mainFrameId: EMPTY_ID,\n      ownerOrigin: TEST_ORIGIN_B,\n      params: {} as Protocol.Storage.SharedStorageAccessParams,\n    },\n    {\n      accessTime: 100,\n      type: Protocol.Storage.SharedStorageAccessType.WorkletSet,\n      mainFrameId: EMPTY_ID,\n      ownerOrigin: TEST_ORIGIN_C,\n      params: {key: 'key0', value: 'value1', ignoreIfPresent: true} as Protocol.Storage.SharedStorageAccessParams,\n    },\n    {\n      accessTime: 150,\n      type: Protocol.Storage.SharedStorageAccessType.WorkletRemainingBudget,\n      mainFrameId: ID_B,\n      ownerOrigin: TEST_ORIGIN_C,\n      params: {} as Protocol.Storage.SharedStorageAccessParams,\n    },\n  ];\n\n  const PAGE_A_EVENTS = [\n    {\n      accessTime: 0,\n      type: Protocol.Storage.SharedStorageAccessType.DocumentAppend,\n      mainFrameId: ID_A,\n      ownerOrigin: TEST_ORIGIN_A,\n      params: {key: 'key0', value: 'value0'} as Protocol.Storage.SharedStorageAccessParams,\n    },\n    {\n      accessTime: 15,\n      type: Protocol.Storage.SharedStorageAccessType.WorkletLength,\n      mainFrameId: ID_A,\n      ownerOrigin: TEST_ORIGIN_B,\n      params: {} as Protocol.Storage.SharedStorageAccessParams,\n    },\n  ];\n\n  it('records events', () => {\n    const view = new View.SharedStorageEventsView();\n    view.setDefaultIdForTesting(ID_A);\n    for (const event of EVENTS) {\n      view.addEvent(event);\n    }\n    assert.deepEqual(view.getEventsForTesting(), EVENTS);\n  });\n\n  it('ignores duplicates', () => {\n    const view = new View.SharedStorageEventsView();\n    view.setDefaultIdForTesting(ID_A);\n    for (const event of EVENTS) {\n      view.addEvent(event);\n    }\n    view.addEvent(EVENTS[0]);\n    assert.deepEqual(view.getEventsForTesting(), EVENTS);\n  });\n\n  it('initially has placeholder sidebar', () => {\n    const view = new View.SharedStorageEventsView();\n    assert.notDeepEqual(view.sidebarWidget()?.constructor.name, 'SearchableView');\n    assert.isTrue(view.sidebarWidget()?.contentElement.firstChild?.textContent?.includes('Click'));\n  });\n\n  it('updates sidebarWidget upon receiving cellFocusedEvent', async () => {\n    const view = new View.SharedStorageEventsView();\n    view.setDefaultIdForTesting(ID_A);\n    for (const event of EVENTS) {\n      view.addEvent(event);\n    }\n    const grid = view.getSharedStorageAccessGridForTesting();\n    const cells = [\n      {columnId: 'event-main-frame-id', value: ''},\n      {columnId: 'event-time', value: 0},\n      {columnId: 'event-type', value: Protocol.Storage.SharedStorageAccessType.DocumentAppend},\n      {columnId: 'event-owner-origin', value: TEST_ORIGIN_A},\n      {columnId: 'event-params', value: JSON.stringify({key: 'key0', value: 'value0'})},\n    ];\n\n    // Use a spy to assert that the sidebar preview pane gets updated when expected.\n    const spy = sinon.spy(view, 'setSidebarWidget');\n    assert.isTrue(spy.notCalled);\n    grid.dispatchEvent(new DataGrid.DataGridEvents.BodyCellFocusedEvent({columnId: 'event-time', value: '0'}, {cells}));\n    await raf();\n    assert.isTrue(spy.calledOnce);\n    assert.deepEqual(view.sidebarWidget()?.constructor.name, 'SearchableView');\n  });\n\n  it('clears sidebarWidget upon clearEvents', async () => {\n    const view = new View.SharedStorageEventsView();\n    view.setDefaultIdForTesting(ID_A);\n    for (const event of EVENTS) {\n      view.addEvent(event);\n    }\n    const grid = view.getSharedStorageAccessGridForTesting();\n    const cells = [\n      {columnId: 'event-main-frame-id', value: ''},\n      {columnId: 'event-time', value: 0},\n      {columnId: 'event-type', value: Protocol.Storage.SharedStorageAccessType.DocumentAppend},\n      {columnId: 'event-owner-origin', value: TEST_ORIGIN_A},\n      {columnId: 'event-params', value: JSON.stringify({key: 'key0', value: 'value0'})},\n    ];\n\n    // Use a spy to assert that the sidebar preview pane gets updated when expected.\n    const spy = sinon.spy(view, 'setSidebarWidget');\n    assert.isTrue(spy.notCalled);\n    grid.dispatchEvent(new DataGrid.DataGridEvents.BodyCellFocusedEvent({columnId: 'event-time', value: '0'}, {cells}));\n    await raf();\n    assert.isTrue(spy.calledOnce);\n    assert.deepEqual(view.sidebarWidget()?.constructor.name, 'SearchableView');\n    view.clearEvents();\n    assert.isTrue(spy.calledTwice);\n    assert.notDeepEqual(view.sidebarWidget()?.constructor.name, 'SearchableView');\n    assert.isTrue(view.sidebarWidget()?.contentElement.firstChild?.textContent?.includes('Click'));\n  });\n\n  it('records events only from the target page', () => {\n    const view = new View.SharedStorageEventsView();\n    view.setDefaultIdForTesting(ID_A);\n    for (const event of MULTI_PAGE_EVENTS) {\n      view.addEvent(event);\n    }\n    assert.deepEqual(view.getEventsForTesting(), PAGE_A_EVENTS);\n  });\n});\n"]}