{"version":3,"file":"IndexedDBViews.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/application/IndexedDBViews.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {\n  getCleanTextContentFromElements,\n  getElementWithinComponent,\n  renderElementIntoDOM,\n} from '../../testing/DOMHelpers.js';\nimport {describeWithLocale} from '../../testing/EnvironmentHelpers.js';\nimport * as Coordinator from '../../ui/components/render_coordinator/render_coordinator.js';\nimport * as ReportView from '../../ui/components/report_view/report_view.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport * as Application from './application.js';\n\nconst coordinator = Coordinator.RenderCoordinator.RenderCoordinator.instance();\n\n// Disabled due to flakiness\ndescribeWithLocale.skip('[crbug.com/1473557]: IDBDatabaseView', () => {\n  it('renders with a title and top-level site', async function() {\n    if (this.timeout() > 0) {\n      this.timeout(10000);\n    }\n\n    const databaseId = new Application.IndexedDBModel.DatabaseId(\n        {storageKey: 'https://example.com/^0https://example.org'}, 'My Database');\n    const database = new Application.IndexedDBModel.Database(databaseId, 1);\n    const model = {\n      target: () => ({\n        model: () => ({\n          getBucketByName: () => null,\n        }),\n      }),\n    } as unknown as Application.IndexedDBModel.IndexedDBModel;\n    const component = new Application.IndexedDBViews.IDBDatabaseView(model, database);\n    renderElementIntoDOM(component);\n\n    assert.isNotNull(component.shadowRoot);\n    await coordinator.done();\n    const report = getElementWithinComponent(component, 'devtools-report', ReportView.ReportView.Report);\n    assert.isNotNull(report.shadowRoot);\n\n    const titleElement = report.shadowRoot.querySelector('.report-title');\n    assert.strictEqual(titleElement?.textContent, 'My Database');\n    const keys = getCleanTextContentFromElements(component.shadowRoot, 'devtools-report-key');\n    assert.deepEqual(keys, ['Origin', 'Top-level site', 'Is third-party', 'Version', 'Object stores']);\n\n    const values = getCleanTextContentFromElements(component.shadowRoot, 'devtools-report-value');\n    assert.deepEqual(values, [\n      'https://example.com',\n      'https://example.org',\n      'Yes, because the origin is outside of the top-level site',\n      '1',\n      '0',\n    ]);\n  });\n\n  it('renders with an opaque storage key', async function() {\n    if (this.timeout() > 0) {\n      this.timeout(10000);\n    }\n\n    const databaseId =\n        new Application.IndexedDBModel.DatabaseId({storageKey: 'https://example.com/^112345^267890'}, '');\n    const database = new Application.IndexedDBModel.Database(databaseId, 1);\n    const model = {\n      target: () => ({\n        model: () => ({\n          getBucketByName: () => null,\n        }),\n      }),\n    } as unknown as Application.IndexedDBModel.IndexedDBModel;\n    const component = new Application.IndexedDBViews.IDBDatabaseView(model, database);\n    renderElementIntoDOM(component);\n\n    assert.isNotNull(component.shadowRoot);\n    await coordinator.done();\n    const report = getElementWithinComponent(component, 'devtools-report', ReportView.ReportView.Report);\n    assert.isNotNull(report.shadowRoot);\n\n    const keys = getCleanTextContentFromElements(component.shadowRoot, 'devtools-report-key');\n    assert.deepEqual(keys, ['Origin', 'Is third-party', 'Is opaque', 'Version', 'Object stores']);\n\n    const values = getCleanTextContentFromElements(component.shadowRoot, 'devtools-report-value');\n    assert.deepEqual(values, ['https://example.com', 'Yes, because the storage key is opaque', 'Yes', '1', '0']);\n  });\n\n  it('renders with a storage bucket', async function() {\n    if (this.timeout() > 0) {\n      this.timeout(10000);\n    }\n\n    const databaseId =\n        new Application.IndexedDBModel.DatabaseId({storageKey: 'https://example.com/^112345^267890'}, '');\n    const database = new Application.IndexedDBModel.Database(databaseId, 1);\n    const model = {\n      target: () => ({\n        model: () => ({\n          getBucketByName: () => ({\n            bucket: {storageKey: 'https://example.com/^112345^267890', name: 'My bucket'},\n            quota: 1024,\n            expiration: 42,\n            durability: 'strict',\n          }),\n        }),\n      }),\n    } as unknown as Application.IndexedDBModel.IndexedDBModel;\n    const component = new Application.IndexedDBViews.IDBDatabaseView(model, database);\n    renderElementIntoDOM(component);\n\n    assert.isNotNull(component.shadowRoot);\n    await coordinator.done();\n    const report = getElementWithinComponent(component, 'devtools-report', ReportView.ReportView.Report);\n    assert.isNotNull(report.shadowRoot);\n\n    const keys = getCleanTextContentFromElements(component.shadowRoot, 'devtools-report-key');\n    assert.deepEqual(keys, [\n      'Origin',\n      'Is third-party',\n      'Is opaque',\n      'Bucket name',\n      'Is persistent',\n      'Durability',\n      'Quota',\n      'Expiration',\n      'Version',\n      'Object stores',\n    ]);\n\n    const values = getCleanTextContentFromElements(component.shadowRoot, 'devtools-report-value');\n    assert.deepEqual(values, [\n      'https://example.com',\n      'Yes, because the storage key is opaque',\n      'Yes',\n      'My bucket',\n      'No',\n      'strict',\n      '1.0 kB',\n      (new Date(42000)).toLocaleString(),\n      '1',\n      '0',\n    ]);\n  });\n\n  it('renders buttons', async function() {\n    if (this.timeout() > 0) {\n      this.timeout(10000);\n    }\n\n    const databaseId = new Application.IndexedDBModel.DatabaseId({storageKey: ''}, '');\n    const database = new Application.IndexedDBModel.Database(databaseId, 1);\n    const model = {\n      refreshDatabase: sinon.spy(),\n      deleteDatabase: sinon.spy(),\n      target: () => ({\n        model: () => ({\n          getBucketByName: () => null,\n        }),\n      }),\n    };\n    const component = new Application.IndexedDBViews.IDBDatabaseView(\n        model as unknown as Application.IndexedDBModel.IndexedDBModel, database);\n    renderElementIntoDOM(component);\n\n    assert.isNotNull(component.shadowRoot);\n    await coordinator.done({waitForWork: true});\n\n    const buttons = component.shadowRoot.querySelectorAll('devtools-button');\n    assert.strictEqual(buttons.length, 2);\n    assert.instanceOf(buttons[0], HTMLElement);\n    assert.strictEqual(buttons[0].textContent?.trim(), 'Delete database');\n    const showDialog = sinon.stub(UI.UIUtils.ConfirmDialog, 'show').resolves(true);\n    buttons[0].click();\n    assert.isTrue(showDialog.calledOnce);\n    await new Promise(resolve => setTimeout(resolve, 0));\n    assert.isTrue(model.deleteDatabase.calledOnceWithExactly(databaseId));\n\n    assert.instanceOf(buttons[1], HTMLElement);\n    assert.strictEqual(buttons[1].textContent?.trim(), 'Refresh database');\n    buttons[1].click();\n    assert.isTrue(model.refreshDatabase.calledOnceWithExactly(databaseId));\n  });\n});\n"]}