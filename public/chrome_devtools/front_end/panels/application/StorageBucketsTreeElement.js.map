{"version":3,"file":"StorageBucketsTreeElement.js","sourceRoot":"","sources":["../../../../../../front_end/panels/application/StorageBucketsTreeElement.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAG7B,OAAO,KAAK,IAAI,MAAM,yBAAyB,CAAC;AAEhD,OAAO,KAAK,GAAG,MAAM,uBAAuB,CAAC;AAE7C,OAAO,KAAK,UAAU,MAAM,gDAAgD,CAAC;AAC7E,OAAO,KAAK,aAAa,MAAM,sDAAsD,CAAC;AACtF,OAAO,KAAK,EAAE,MAAM,2BAA2B,CAAC;AAEhD,OAAO,EAAC,oBAAoB,EAAC,MAAM,8BAA8B,CAAC;AAClE,OAAO,EAAC,qCAAqC,EAAC,MAAM,kCAAkC,CAAC;AACvF,OAAO,EAAC,mBAAmB,EAAC,MAAM,4BAA4B,CAAC;AAE/D,OAAO,EAAC,6BAA6B,EAAC,MAAM,oCAAoC,CAAC;AAEjF,MAAM,SAAS,GAAG;IAChB;;;;OAIG;IACH,cAAc,EAAE,iBAAiB;CAClC,CAAC;AACF,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,iDAAiD,EAAE,SAAS,CAAC,CAAC;AACvG,MAAM,CAAC,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AAE7E,MAAM,OAAO,+BAAgC,SAAQ,qCAAqC;IAChF,kBAAkB,GAAmC,IAAI,GAAG,EAAE,CAAC;IAEvE,YAAY,YAA4B;QACtC,KAAK,CAAC,YAAY,EAAE,UAAU,CAAC,SAAS,CAAC,cAAc,CAAC,EAAE,iBAAiB,CAAC,CAAC;QAC7E,MAAM,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;QAChD,IAAI,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;QAC7B,IAAI,CAAC,OAAO,CACR,oEAAuG,CAAC,CAAC;IAC/G,CAAC;IAED,UAAU;QACR,GAAG,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC,gBAAgB,CACvD,GAAG,CAAC,mBAAmB,CAAC,mBAAmB,kEAA8C,IAAI,CAAC,WAAW,EACzG,IAAI,CAAC,CAAC;QACV,GAAG,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC,gBAAgB,CACvD,GAAG,CAAC,mBAAmB,CAAC,mBAAmB,sEAAgD,IAAI,CAAC,aAAa,EAC7G,IAAI,CAAC,CAAC;QACV,GAAG,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC,gBAAgB,CACvD,GAAG,CAAC,mBAAmB,CAAC,mBAAmB,sEAAgD,IAAI,CAAC,aAAa,EAC7G,IAAI,CAAC,CAAC;QAEV,KAAK,MAAM,YAAY,IAAI,GAAG,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC,MAAM,CACnE,GAAG,CAAC,mBAAmB,CAAC,mBAAmB,CAAC,EAAE,CAAC;YACtD,MAAM,OAAO,GAAG,YAAY,CAAC,UAAU,EAAE,CAAC;YAC1C,KAAK,MAAM,MAAM,IAAI,OAAO,EAAE,CAAC;gBAC7B,IAAI,CAAC,oBAAoB,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;YAClD,CAAC;QACH,CAAC;IACH,CAAC;IAED,qBAAqB,CAAC,KAAkD;QACtE,KAAK,MAAM,iBAAiB,IAAI,IAAI,CAAC,kBAAkB,EAAE,CAAC;YACxD,IAAI,iBAAiB,CAAC,KAAK,KAAK,KAAK,EAAE,CAAC;gBACtC,IAAI,CAAC,uBAAuB,CAAC,iBAAiB,CAAC,CAAC;YAClD,CAAC;QACH,CAAC;IACH,CAAC;IAEO,WAAW,CAAC,EAAC,IAAI,EAAE,EAAC,KAAK,EAAE,UAAU,EAAC,EACkD;QAC9F,IAAI,CAAC,oBAAoB,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC;IAC/C,CAAC;IAEO,aAAa,CAAC,EAAC,IAAI,EAAE,EAAC,KAAK,EAAE,UAAU,EAAC,EACkD;QAChG,MAAM,sBAAsB,GAAG,IAAI,CAAC,oBAAoB,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC;QAC5E,IAAI,CAAC,sBAAsB,EAAE,CAAC;YAC5B,OAAO;QACT,CAAC;QACD,IAAI,CAAC,uBAAuB,CAAC,sBAAsB,CAAC,CAAC;IACvD,CAAC;IAEO,aAAa,CAAC,EAAC,IAAI,EAAE,EAAC,KAAK,EAAE,UAAU,EAAC,EACkD;QAChG,MAAM,sBAAsB,GAAG,IAAI,CAAC,oBAAoB,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC;QAC5E,IAAI,CAAC,sBAAsB,EAAE,CAAC;YAC5B,OAAO;QACT,CAAC;QACD,sBAAsB,CAAC,UAAU,GAAG,UAAU,CAAC;IACjD,CAAC;IAEO,oBAAoB,CACxB,KAAkD,EAAE,UAA8C;QACpG,IAAI,UAAU,CAAC,MAAM,CAAC,IAAI,KAAK,SAAS,EAAE,CAAC;YACzC,OAAO;QACT,CAAC;QACD,MAAM,uBAAuB,GAAG,IAAI,yBAAyB,CAAC,IAAI,CAAC,cAAc,EAAE,KAAK,EAAE,UAAU,CAAC,CAAC;QACtG,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;QACrD,IAAI,CAAC,WAAW,CAAC,uBAAuB,CAAC,CAAC;QAC1C,uBAAuB,CAAC,UAAU,EAAE,CAAC;IACvC,CAAC;IAEO,uBAAuB,CAAC,iBAA4C;QAC1E,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,CAAC;QACpC,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;QAClD,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC;IACvD,CAAC;IAED,IAAa,OAAO;QAClB,OAAO,0BAA6D,CAAC;IACvE,CAAC;IAED,oBAAoB,CAAC,KAAkD,EAAE,EACvE,MAAM,EAAE,EAAC,UAAU,EAAE,IAAI,EAAC,GACS;QACnC,KAAK,MAAM,iBAAiB,IAAI,IAAI,CAAC,kBAAkB,EAAE,CAAC;YACxD,IAAI,iBAAiB,CAAC,KAAK,KAAK,KAAK,IAAI,iBAAiB,CAAC,UAAU,CAAC,MAAM,CAAC,UAAU,KAAK,UAAU;gBAClG,iBAAiB,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,KAAK,IAAI,EAAE,CAAC;gBACtD,OAAO,iBAAiB,CAAC;YAC3B,CAAC;QACH,CAAC;QACD,OAAO,IAAI,CAAC;IACd,CAAC;CACF;AAED,MAAM,OAAO,yBAA0B,SAAQ,qCAAqC;IAC1E,iBAAiB,CAAqC;IACtD,WAAW,CAA8C;IACzD,IAAI,CAAwG;IAEpH,YACI,cAA8B,EAAE,KAAkD,EAClF,UAA8C;QAChD,MAAM,EAAC,MAAM,EAAC,GAAG,UAAU,CAAC;QAC5B,MAAM,EAAC,MAAM,EAAC,GAAG,GAAG,CAAC,iBAAiB,CAAC,eAAe,CAAC,UAAU,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;QACrF,KAAK,CAAC,cAAc,EAAE,GAAG,MAAM,CAAC,IAAI,MAAM,MAAM,EAAE,EAAE,gBAAgB,CAAC,CAAC;QACtE,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,iBAAiB,GAAG,UAAU,CAAC;QACpC,MAAM,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;QAChD,IAAI,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;IAC/B,CAAC;IAED,UAAU;QACR,MAAM,EAAC,MAAM,EAAC,GAAG,IAAI,CAAC,UAAU,CAAC;QACjC,MAAM,oBAAoB,GAAG,IAAI,oBAAoB,CAAC,IAAI,CAAC,cAAc,EAAE,MAAM,CAAC,CAAC;QACnF,IAAI,CAAC,WAAW,CAAC,oBAAoB,CAAC,CAAC;QACvC,MAAM,6BAA6B,GAAG,IAAI,6BAA6B,CAAC,IAAI,CAAC,cAAc,EAAE,MAAM,CAAC,CAAC;QACrG,IAAI,CAAC,WAAW,CAAC,6BAA6B,CAAC,CAAC;QAChD,6BAA6B,CAAC,UAAU,EAAE,CAAC;IAC7C,CAAC;IAED,IAAa,OAAO;QAClB,MAAM,EAAC,MAAM,EAAC,GAAG,IAAI,CAAC,UAAU,CAAC;QACjC,OAAO,2BAA2B,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,UAAU,EAAqC,CAAC;IAC1G,CAAC;IAED,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,WAAW,CAAC;IAC1B,CAAC;IAED,IAAI,UAAU;QACZ,OAAO,IAAI,CAAC,iBAAiB,CAAC;IAChC,CAAC;IAED,IAAI,UAAU,CAAC,UAA8C;QAC3D,IAAI,CAAC,iBAAiB,GAAG,UAAU,CAAC;QACpC,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC;YACd,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,gBAAgB,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QACpE,CAAC;IACH,CAAC;IAEQ,QAAQ,CAAC,cAAwB;QACxC,KAAK,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;QAC/B,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;YACf,IAAI,CAAC,IAAI;gBACL,aAAa,CAAC,aAAa,CAAC,aAAa,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,mBAAmB,CAAC,mBAAmB,EAAE,CAAC,CAAC;YAC/G,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,2BAA2B,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACjE,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,gBAAgB,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QACpE,CAAC;QACD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACzB,OAAO,KAAK,CAAC;IACf,CAAC;CACF","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport * as IconButton from '../../ui/components/icon_button/icon_button.js';\nimport * as LegacyWrapper from '../../ui/components/legacy_wrapper/legacy_wrapper.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport {IndexedDBTreeElement} from './ApplicationPanelSidebar.js';\nimport {ExpandableApplicationPanelTreeElement} from './ApplicationPanelTreeElement.js';\nimport {StorageMetadataView} from './components/components.js';\nimport {type ResourcesPanel} from './ResourcesPanel.js';\nimport {ServiceWorkerCacheTreeElement} from './ServiceWorkerCacheTreeElement.js';\n\nconst UIStrings = {\n  /**\n   *@description Label for an item in the Application Panel Sidebar of the Application panel\n   * Storage Buckets allow developers to seperate site data into buckets so that they can be\n   * deleted independently.\n   */\n  storageBuckets: 'Storage buckets',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/application/StorageBucketsTreeElement.ts', UIStrings);\nexport const i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class StorageBucketsTreeParentElement extends ExpandableApplicationPanelTreeElement {\n  private bucketTreeElements: Set<StorageBucketsTreeElement> = new Set();\n\n  constructor(storagePanel: ResourcesPanel) {\n    super(storagePanel, i18nString(UIStrings.storageBuckets), 'storage-buckets');\n    const icon = IconButton.Icon.create('database');\n    this.setLeadingIcons([icon]);\n    this.setLink(\n        'https://github.com/WICG/storage-buckets/blob/gh-pages/explainer.md' as Platform.DevToolsPath.UrlString);\n  }\n\n  initialize(): void {\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.StorageBucketsModel.StorageBucketsModel, SDK.StorageBucketsModel.Events.BucketAdded, this.bucketAdded,\n        this);\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.StorageBucketsModel.StorageBucketsModel, SDK.StorageBucketsModel.Events.BucketRemoved, this.bucketRemoved,\n        this);\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.StorageBucketsModel.StorageBucketsModel, SDK.StorageBucketsModel.Events.BucketChanged, this.bucketChanged,\n        this);\n\n    for (const bucketsModel of SDK.TargetManager.TargetManager.instance().models(\n             SDK.StorageBucketsModel.StorageBucketsModel)) {\n      const buckets = bucketsModel.getBuckets();\n      for (const bucket of buckets) {\n        this.addBucketTreeElement(bucketsModel, bucket);\n      }\n    }\n  }\n\n  removeBucketsForModel(model: SDK.StorageBucketsModel.StorageBucketsModel): void {\n    for (const bucketTreeElement of this.bucketTreeElements) {\n      if (bucketTreeElement.model === model) {\n        this.removeBucketTreeElement(bucketTreeElement);\n      }\n    }\n  }\n\n  private bucketAdded({data: {model, bucketInfo}}:\n                          Common.EventTarget.EventTargetEvent<SDK.StorageBucketsModel.BucketEvent>): void {\n    this.addBucketTreeElement(model, bucketInfo);\n  }\n\n  private bucketRemoved({data: {model, bucketInfo}}:\n                            Common.EventTarget.EventTargetEvent<SDK.StorageBucketsModel.BucketEvent>): void {\n    const idbDatabaseTreeElement = this.getBucketTreeElement(model, bucketInfo);\n    if (!idbDatabaseTreeElement) {\n      return;\n    }\n    this.removeBucketTreeElement(idbDatabaseTreeElement);\n  }\n\n  private bucketChanged({data: {model, bucketInfo}}:\n                            Common.EventTarget.EventTargetEvent<SDK.StorageBucketsModel.BucketEvent>): void {\n    const idbDatabaseTreeElement = this.getBucketTreeElement(model, bucketInfo);\n    if (!idbDatabaseTreeElement) {\n      return;\n    }\n    idbDatabaseTreeElement.bucketInfo = bucketInfo;\n  }\n\n  private addBucketTreeElement(\n      model: SDK.StorageBucketsModel.StorageBucketsModel, bucketInfo: Protocol.Storage.StorageBucketInfo): void {\n    if (bucketInfo.bucket.name === undefined) {\n      return;\n    }\n    const singleBucketTreeElement = new StorageBucketsTreeElement(this.resourcesPanel, model, bucketInfo);\n    this.bucketTreeElements.add(singleBucketTreeElement);\n    this.appendChild(singleBucketTreeElement);\n    singleBucketTreeElement.initialize();\n  }\n\n  private removeBucketTreeElement(bucketTreeElement: StorageBucketsTreeElement): void {\n    this.removeChild(bucketTreeElement);\n    this.bucketTreeElements.delete(bucketTreeElement);\n    this.setExpandable(this.bucketTreeElements.size > 0);\n  }\n\n  override get itemURL(): Platform.DevToolsPath.UrlString {\n    return 'storage-buckets-group://' as Platform.DevToolsPath.UrlString;\n  }\n\n  getBucketTreeElement(model: SDK.StorageBucketsModel.StorageBucketsModel, {\n    bucket: {storageKey, name},\n  }: Protocol.Storage.StorageBucketInfo): StorageBucketsTreeElement|null {\n    for (const bucketTreeElement of this.bucketTreeElements) {\n      if (bucketTreeElement.model === model && bucketTreeElement.bucketInfo.bucket.storageKey === storageKey &&\n          bucketTreeElement.bucketInfo.bucket.name === name) {\n        return bucketTreeElement;\n      }\n    }\n    return null;\n  }\n}\n\nexport class StorageBucketsTreeElement extends ExpandableApplicationPanelTreeElement {\n  private storageBucketInfo: Protocol.Storage.StorageBucketInfo;\n  private bucketModel: SDK.StorageBucketsModel.StorageBucketsModel;\n  private view?: LegacyWrapper.LegacyWrapper.LegacyWrapper<UI.Widget.Widget, StorageMetadataView.StorageMetadataView>;\n\n  constructor(\n      resourcesPanel: ResourcesPanel, model: SDK.StorageBucketsModel.StorageBucketsModel,\n      bucketInfo: Protocol.Storage.StorageBucketInfo) {\n    const {bucket} = bucketInfo;\n    const {origin} = SDK.StorageKeyManager.parseStorageKey(bucketInfo.bucket.storageKey);\n    super(resourcesPanel, `${bucket.name} - ${origin}`, 'storage-bucket');\n    this.bucketModel = model;\n    this.storageBucketInfo = bucketInfo;\n    const icon = IconButton.Icon.create('database');\n    this.setLeadingIcons([icon]);\n  }\n\n  initialize(): void {\n    const {bucket} = this.bucketInfo;\n    const indexedDBTreeElement = new IndexedDBTreeElement(this.resourcesPanel, bucket);\n    this.appendChild(indexedDBTreeElement);\n    const serviceWorkerCacheTreeElement = new ServiceWorkerCacheTreeElement(this.resourcesPanel, bucket);\n    this.appendChild(serviceWorkerCacheTreeElement);\n    serviceWorkerCacheTreeElement.initialize();\n  }\n\n  override get itemURL(): Platform.DevToolsPath.UrlString {\n    const {bucket} = this.bucketInfo;\n    return `storage-buckets-group://${bucket.name}/${bucket.storageKey}` as Platform.DevToolsPath.UrlString;\n  }\n\n  get model(): SDK.StorageBucketsModel.StorageBucketsModel {\n    return this.bucketModel;\n  }\n\n  get bucketInfo(): Protocol.Storage.StorageBucketInfo {\n    return this.storageBucketInfo;\n  }\n\n  set bucketInfo(bucketInfo: Protocol.Storage.StorageBucketInfo) {\n    this.storageBucketInfo = bucketInfo;\n    if (this.view) {\n      this.view.getComponent().setStorageBucket(this.storageBucketInfo);\n    }\n  }\n\n  override onselect(selectedByUser?: boolean): boolean {\n    super.onselect(selectedByUser);\n    if (!this.view) {\n      this.view =\n          LegacyWrapper.LegacyWrapper.legacyWrapper(UI.Widget.Widget, new StorageMetadataView.StorageMetadataView());\n      this.view.getComponent().enableStorageBucketControls(this.model);\n      this.view.getComponent().setStorageBucket(this.storageBucketInfo);\n    }\n    this.showView(this.view);\n    return false;\n  }\n}\n"]}