{"version":3,"file":"ServiceWorkerCacheTreeElement.js","sourceRoot":"","sources":["../../../../../../front_end/panels/application/ServiceWorkerCacheTreeElement.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport * as IconButton from '../../ui/components/icon_button/icon_button.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport {ApplicationPanelTreeElement, ExpandableApplicationPanelTreeElement} from './ApplicationPanelTreeElement.js';\nimport {type ResourcesPanel} from './ResourcesPanel.js';\nimport {ServiceWorkerCacheView} from './ServiceWorkerCacheViews.js';\n\nconst UIStrings = {\n  /**\n   *@description Text in Application Panel Sidebar of the Application panel\n   */\n  cacheStorage: 'Cache storage',\n  /**\n   *@description A context menu item in the Application Panel Sidebar of the Application panel\n   */\n  refreshCaches: 'Refresh Caches',\n  /**\n   *@description Text to delete something\n   */\n  delete: 'Delete',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/application/ServiceWorkerCacheTreeElement.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class ServiceWorkerCacheTreeElement extends ExpandableApplicationPanelTreeElement {\n  private swCacheModels: Set<SDK.ServiceWorkerCacheModel.ServiceWorkerCacheModel>;\n  private swCacheTreeElements: Set<SWCacheTreeElement>;\n  private storageBucket?: Protocol.Storage.StorageBucket;\n\n  constructor(resourcesPanel: ResourcesPanel, storageBucket?: Protocol.Storage.StorageBucket) {\n    super(resourcesPanel, i18nString(UIStrings.cacheStorage), 'cache-storage');\n    const icon = IconButton.Icon.create('database');\n    this.setLink(\n        'https://developer.chrome.com/docs/devtools/storage/cache/?utm_source=devtools' as\n        Platform.DevToolsPath.UrlString);\n    this.setLeadingIcons([icon]);\n    this.swCacheModels = new Set();\n    this.swCacheTreeElements = new Set();\n    this.storageBucket = storageBucket;\n  }\n\n  initialize(): void {\n    this.swCacheModels.clear();\n    this.swCacheTreeElements.clear();\n    SDK.TargetManager.TargetManager.instance().observeModels(SDK.ServiceWorkerCacheModel.ServiceWorkerCacheModel, {\n      modelAdded: (model: SDK.ServiceWorkerCacheModel.ServiceWorkerCacheModel) =>\n          this.serviceWorkerCacheModelAdded(model),\n      modelRemoved: (model: SDK.ServiceWorkerCacheModel.ServiceWorkerCacheModel) =>\n          this.serviceWorkerCacheModelRemoved(model),\n    });\n  }\n\n  override onattach(): void {\n    super.onattach();\n    this.listItemElement.addEventListener('contextmenu', this.handleContextMenuEvent.bind(this), true);\n  }\n\n  private handleContextMenuEvent(event: MouseEvent): void {\n    const contextMenu = new UI.ContextMenu.ContextMenu(event);\n    contextMenu.defaultSection().appendItem(\n        i18nString(UIStrings.refreshCaches), this.refreshCaches.bind(this), {jslogContext: 'refresh-caches'});\n    void contextMenu.show();\n  }\n\n  private refreshCaches(): void {\n    for (const swCacheModel of this.swCacheModels) {\n      swCacheModel.refreshCacheNames();\n    }\n  }\n\n  private serviceWorkerCacheModelAdded(model: SDK.ServiceWorkerCacheModel.ServiceWorkerCacheModel): void {\n    model.enable();\n    this.swCacheModels.add(model);\n    for (const cache of model.caches()) {\n      this.addCache(model, cache);\n    }\n    model.addEventListener(SDK.ServiceWorkerCacheModel.Events.CacheAdded, this.cacheAdded, this);\n    model.addEventListener(SDK.ServiceWorkerCacheModel.Events.CacheRemoved, this.cacheRemoved, this);\n  }\n\n  private serviceWorkerCacheModelRemoved(model: SDK.ServiceWorkerCacheModel.ServiceWorkerCacheModel): void {\n    for (const cache of model.caches()) {\n      this.removeCache(model, cache);\n    }\n    model.removeEventListener(SDK.ServiceWorkerCacheModel.Events.CacheAdded, this.cacheAdded, this);\n    model.removeEventListener(SDK.ServiceWorkerCacheModel.Events.CacheRemoved, this.cacheRemoved, this);\n    this.swCacheModels.delete(model);\n  }\n\n  private cacheAdded(event: Common.EventTarget.EventTargetEvent<SDK.ServiceWorkerCacheModel.CacheEvent>): void {\n    const {model, cache} = event.data;\n    this.addCache(model, cache);\n  }\n\n  private cacheInTree(cache: SDK.ServiceWorkerCacheModel.Cache): boolean {\n    if (this.storageBucket) {\n      return cache.inBucket(this.storageBucket);\n    }\n    return true;\n  }\n\n  private addCache(\n      model: SDK.ServiceWorkerCacheModel.ServiceWorkerCacheModel, cache: SDK.ServiceWorkerCacheModel.Cache): void {\n    if (this.cacheInTree(cache)) {\n      const swCacheTreeElement =\n          new SWCacheTreeElement(this.resourcesPanel, model, cache, this.storageBucket === undefined);\n      this.swCacheTreeElements.add(swCacheTreeElement);\n      this.appendChild(swCacheTreeElement);\n    }\n  }\n\n  private cacheRemoved(event: Common.EventTarget.EventTargetEvent<SDK.ServiceWorkerCacheModel.CacheEvent>): void {\n    const {model, cache} = event.data;\n    if (this.cacheInTree(cache)) {\n      this.removeCache(model, cache);\n    }\n  }\n\n  private removeCache(\n      model: SDK.ServiceWorkerCacheModel.ServiceWorkerCacheModel, cache: SDK.ServiceWorkerCacheModel.Cache): void {\n    const swCacheTreeElement = this.cacheTreeElement(model, cache);\n    if (!swCacheTreeElement) {\n      return;\n    }\n\n    this.removeChild(swCacheTreeElement);\n    this.swCacheTreeElements.delete(swCacheTreeElement);\n    this.setExpandable(this.childCount() > 0);\n  }\n\n  private cacheTreeElement(\n      model: SDK.ServiceWorkerCacheModel.ServiceWorkerCacheModel,\n      cache: SDK.ServiceWorkerCacheModel.Cache): SWCacheTreeElement|null {\n    for (const cacheTreeElement of this.swCacheTreeElements) {\n      if (cacheTreeElement.hasModelAndCache(model, cache)) {\n        return cacheTreeElement;\n      }\n    }\n    return null;\n  }\n}\n\nexport class SWCacheTreeElement extends ApplicationPanelTreeElement {\n  private readonly model: SDK.ServiceWorkerCacheModel.ServiceWorkerCacheModel;\n  private cache: SDK.ServiceWorkerCacheModel.Cache;\n  private view: ServiceWorkerCacheView|null;\n\n  constructor(\n      resourcesPanel: ResourcesPanel, model: SDK.ServiceWorkerCacheModel.ServiceWorkerCacheModel,\n      cache: SDK.ServiceWorkerCacheModel.Cache, appendStorageKey: boolean) {\n    let cacheName;\n    if (appendStorageKey) {\n      cacheName = cache.cacheName + ' - ' + cache.storageKey;\n    } else {\n      cacheName = cache.cacheName;\n    }\n    super(resourcesPanel, cacheName, false);\n    this.model = model;\n    this.cache = cache;\n    this.view = null;\n    const icon = IconButton.Icon.create('table');\n    this.setLeadingIcons([icon]);\n  }\n\n  override get itemURL(): Platform.DevToolsPath.UrlString {\n    // I don't think this will work at all.\n    return 'cache://' + this.cache.cacheId as Platform.DevToolsPath.UrlString;\n  }\n\n  override onattach(): void {\n    super.onattach();\n    this.listItemElement.addEventListener('contextmenu', this.handleContextMenuEvent.bind(this), true);\n  }\n\n  private handleContextMenuEvent(event: MouseEvent): void {\n    const contextMenu = new UI.ContextMenu.ContextMenu(event);\n    contextMenu.defaultSection().appendItem(\n        i18nString(UIStrings.delete), this.clearCache.bind(this), {jslogContext: 'delete'});\n    void contextMenu.show();\n  }\n\n  private clearCache(): void {\n    void this.model.deleteCache(this.cache);\n  }\n\n  update(cache: SDK.ServiceWorkerCacheModel.Cache): void {\n    this.cache = cache;\n    if (this.view) {\n      this.view.update(cache);\n    }\n  }\n\n  override onselect(selectedByUser: boolean|undefined): boolean {\n    super.onselect(selectedByUser);\n    if (!this.view) {\n      this.view = new ServiceWorkerCacheView(this.model, this.cache);\n    }\n\n    this.showView(this.view);\n    Host.userMetrics.panelShown('service-worker-cache');\n    return false;\n  }\n\n  hasModelAndCache(\n      model: SDK.ServiceWorkerCacheModel.ServiceWorkerCacheModel, cache: SDK.ServiceWorkerCacheModel.Cache): boolean {\n    return this.cache.equals(cache) && this.model === model;\n  }\n}\n"]}