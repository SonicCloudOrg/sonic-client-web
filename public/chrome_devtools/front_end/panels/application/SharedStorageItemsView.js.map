{"version":3,"file":"SharedStorageItemsView.js","sourceRoot":"","sources":["../../../../../../front_end/panels/application/SharedStorageItemsView.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,MAAM,MAAM,6BAA6B,CAAC;AACtD,OAAO,KAAK,IAAI,MAAM,yBAAyB,CAAC;AAEhD,OAAO,KAAK,aAAa,MAAM,sDAAsD,CAAC;AACtF,OAAO,KAAK,QAAQ,MAAM,mDAAmD,CAAC;AAC9E,OAAO,KAAK,WAAW,MAAM,yDAAyD,CAAC;AACvF,OAAO,KAAK,EAAE,MAAM,2BAA2B,CAAC;AAChD,OAAO,KAAK,aAAa,MAAM,2CAA2C,CAAC;AAE3E,OAAO,KAAK,qBAAqB,MAAM,4BAA4B,CAAC;AAEpE,OAAO,EAAC,gBAAgB,EAAC,MAAM,uBAAuB,CAAC;AAEvD,MAAM,SAAS,GAAG;IAChB;;OAEG;IACH,aAAa,EAAE,gBAAgB;IAC/B;;OAEG;IACH,GAAG,EAAE,KAAK;IACV;;OAEG;IACH,KAAK,EAAE,OAAO;IACd;;OAEG;IACH,kBAAkB,EAAE,sBAAsB;IAC1C;;;OAGG;IACH,yBAAyB,EAAE,8BAA8B;IACzD;;;OAGG;IACH,iCAAiC,EAAE,uCAAuC;IAC1E;;OAEG;IACH,qBAAqB,EAAE,2BAA2B;IAClD;;OAEG;IACH,wBAAwB,EAAE,+BAA+B;IACzD;;OAEG;IACH,uBAAuB,EAAE,8BAA8B;IACvD;;OAEG;IACH,6BAA6B,EAAE,qCAAqC;IACpE;;;OAGG;IACH,0BAA0B,EAAE,yCAAyC;CACtE,CAAC;AACF,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,8CAA8C,EAAE,SAAS,CAAC,CAAC;AACpG,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AAmCtE,MAAM,OAAO,sBAAuB,SAAQ,gBAAgB;IAC1D,cAAc,CAAyB;IAC9B,gBAAgB,CAA6B;IAC7C,gBAAgB,CAA6B;IACtD,aAAa,CACiG;IACrG,QAAQ,CAAsE;IACvF,cAAc,CAAiB;IAC/B,eAAe,CAAuC;IAC7C,4BAA4B,CAA8E;IAEnH,YAAY,aAAqC;QAC/C,KAAK,CAAC,UAAU,CAAC,SAAS,CAAC,aAAa,CAAC,EAAE,oBAAoB,CAAC,CAAC;QAEjE,IAAI,CAAC,cAAc,GAAG,aAAa,CAAC;QAEpC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,cAAc,EAAE,OAAO,CAAC,CAAC;QAEpD,MAAM,OAAO,GAAI;YACf,EAAC,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE,EAAC;YAC1G,EAAC,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE,EAAC;SACtE,CAAC;QAC3C,IAAI,CAAC,QAAQ,GAAG,IAAI,QAAQ,CAAC,QAAQ,CAAC,YAAY,CAAC;YACjD,WAAW,EAAE,UAAU,CAAC,SAAS,CAAC,kBAAkB,CAAC;YACrD,OAAO;YACP,YAAY,EAAE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC;YAC9C,cAAc,EAAE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC;YAC/C,eAAe,EAAE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC;SAC9C,CAAC,CAAC;QACH,IAAI,CAAC,QAAQ,CAAC,gBAAgB,6DAAwC,KAAK,CAAC,EAAE;YAC5E,KAAK,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,QAAQ,CAAC,gBAAgB,iEAA0C,GAAG,EAAE;YAC3E,KAAK,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QAChC,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QAC/B,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,2BAA2B,CAAC,CAAC;QAEnD,MAAM,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;QAChD,cAAc,CAAC,cAAc,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;QAEtC,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC,aAAa,CAAC,aAAa,CAC1D,EAAE,CAAC,MAAM,CAAC,IAAI,EACd,IAAI,qBAAqB,CAAC,yBAAyB,CAAC,yBAAyB,CACzE,aAAa,EAAE,aAAa,CAAC,cAAc,CAAC,CAAC,CAAC;QACtD,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;QAC1C,MAAM,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,WAAW,CAAC,KAAK,EAAE,uBAAuB,CAAC,CAAC;QAE5F,IAAI,CAAC,gBAAgB,GAAG,IAAI,EAAE,CAAC,WAAW,CAAC,WAAW;QAClD,iBAAiB,CAAC,KAAK,EAAE,sBAAsB,CAAC,KAAK,EAAE,uCAAuC,CAAC,CAAC;QACpG,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAC3D,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;QACpD,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;QAEnD,IAAI,CAAC,cAAc,GAAG,IAAI,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;QAC3C,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;QAC1C,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,YAAY,CAAC,OAAO,EAAE,GAAG,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC,EAAC,MAAM,EAAE,IAAI,EAAC,CAAC,EAAE,CAAC,CAAC;QAC5G,MAAM,YAAY,GAAG,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,WAAW,CAAC,KAAK,EAAE,uBAAuB,CAAC,CAAC;QAE7F,IAAI,CAAC,gBAAgB,GAAG,IAAI,EAAE,CAAC,WAAW,CAAC,WAAW;QAClD,iBAAiB,CAAC,KAAK,EAAE,sBAAsB,CAAC,IAAI,EAAE,uCAAuC,CAAC,CAAC;QACnG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACzC,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAC3D,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QAC5D,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;QAEnD,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,SAAS,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;QAChE,MAAM,YAAY,GAAG,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QAC3E,YAAY,CAAC,WAAW,GAAG,UAAU,CAAC,SAAS,CAAC,qBAAqB,CAAC,CAAC;QAEvE,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;QAC1B,MAAM,CAAC,WAAW,CAAC,oBAAoB,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QAC9D,IAAI,CAAC,cAAc,GAAG,aAAa,CAAC;QACpC,IAAI,CAAC,eAAe,GAAG;YACrB,IAAI,CAAC,cAAc,CAAC,gBAAgB,kFACoB,IAAI,CAAC,qBAAqB,EAAE,IAAI,CAAC;SAC1F,CAAC;QAEF,IAAI,CAAC,4BAA4B;YAC7B,IAAI,MAAM,CAAC,aAAa,CAAC,aAAa,EAA2C,CAAC;IACxF,CAAC;IAED,iHAAiH;IACjH,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,aAAqC;QAC3D,MAAM,IAAI,GAAG,IAAI,sBAAsB,CAAC,aAAa,CAAC,CAAC;QACvD,MAAM,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAC/B,OAAO,IAAI,CAAC;IACd,CAAC;IAED,KAAK,CAAC,iBAAiB;QACrB,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE,CAAC;YACtB,OAAO;QACT,CAAC;QACD,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,CAAC;QACvD,IAAI,OAAO,EAAE,CAAC;YACZ,IAAI,CAAC,uBAAuB,CAAC,OAAO,CAAC,CAAC;QACxC,CAAC;IACH,CAAC;IAED,KAAK,CAAC,qBAAqB;QACzB,MAAM,IAAI,CAAC,YAAY,EAAE,CAAC;IAC5B,CAAC;IAEQ,KAAK,CAAC,YAAY;QACzB,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE,CAAC;YACtB,OAAO;QACT,CAAC;QACD,MAAM,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC,MAAM,EAAE,CAAC;QACjD,MAAM,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAC/B,IAAI,CAAC,4BAA4B,CAAC,wBAAwB,2EAAoD,CAAC;IACjH,CAAC;IAEQ,KAAK,CAAC,kBAAkB;QAC/B,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC;YAChC,OAAO;QACT,CAAC;QAED,MAAM,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;IACzD,CAAC;IAEQ,KAAK,CAAC,cAAc;QAC3B,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE,CAAC;YACtB,MAAM,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;YAClC,MAAM,IAAI,CAAC,YAAY,EAAE,CAAC;YAC1B,IAAI,CAAC,4BAA4B,CAAC,wBAAwB,uEAAkD,CAAC;YAC7G,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,CAAC,SAAS,CAAC,yBAAyB,CAAC,CAAC,CAAC;YACpE,OAAO;QACT,CAAC;QAED,MAAM,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE;aACnB,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;aACtC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QAEpF,MAAM,IAAI,CAAC,YAAY,EAAE,CAAC;QAC1B,IAAI,CAAC,4BAA4B,CAAC,wBAAwB,uFACG,CAAC;QAC9D,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,CAAC,SAAS,CAAC,iCAAiC,CAAC,CAAC,CAAC;IAC9E,CAAC;IAED,KAAK,CAAC,gBAAgB,CAClB,WAAgF,EAAE,gBAAwB,EAC1G,OAAe,EAAE,OAAe;QAClC,IAAI,gBAAgB,KAAK,KAAK,IAAI,OAAO,KAAK,EAAE,EAAE,CAAC;YACjD,yIAAyI;YACzI,MAAM,IAAI,CAAC,YAAY,EAAE,CAAC;YAC1B,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,CAAC,SAAS,CAAC,6BAA6B,CAAC,CAAC,CAAC;YACxE,OAAO;QACT,CAAC;QACD,IAAI,gBAAgB,KAAK,KAAK,EAAE,CAAC;YAC/B,MAAM,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;YAC/C,MAAM,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,OAAO,EAAE,WAAW,CAAC,IAAI,CAAC,KAAK,IAAI,EAAE,EAAE,KAAK,CAAC,CAAC;QACnF,CAAC;aAAM,CAAC;YACN,6GAA6G;YAC7G,MAAM,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,IAAI,GAAG,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;QAClF,CAAC;QAED,MAAM,IAAI,CAAC,YAAY,EAAE,CAAC;QAC1B,IAAI,CAAC,4BAA4B,CAAC,wBAAwB,oEAEtD,EAAC,gBAAgB,EAAE,OAAO,EAAE,OAAO,EAAiD,CAAC,CAAC;QAC1F,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,CAAC,SAAS,CAAC,uBAAuB,CAAC,CAAC,CAAC;IACpE,CAAC;IAED,uBAAuB,CAAC,KAA4C;QAClE,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;QAC1C,MAAM,CAAC,WAAW,CAAC,GAAG,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACjG,QAAQ,CAAC,cAAc,EAAE,CAAC;QAC1B,IAAI,YAAY,GAA6E,IAAI,CAAC;QAClG,MAAM,aAAa,GAAG,CAAC,IAAyC,EAAU,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,KAAK,EAAE,CAAC;QACzG,MAAM,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,aAAa,CAAC,CAAC;QACvD,KAAK,MAAM,IAAI,IAAI,YAAY,EAAE,CAAC;YAChC,MAAM,IAAI,GAAG,IAAI,QAAQ,CAAC,QAAQ,CAAC,YAAY,CAAC,EAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAC,EAAE,KAAK,CAAC,CAAC;YAC3F,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;YAC3B,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,GAAG,KAAK,WAAW,EAAE,CAAC;gBAC9C,YAAY,GAAG,IAAI,CAAC;YACtB,CAAC;QACH,CAAC;QACD,IAAI,YAAY,EAAE,CAAC;YACjB,YAAY,CAAC,QAAQ,GAAG,IAAI,CAAC;QAC/B,CAAC;QACD,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;QACrC,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC;QACjD,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,CAAC,SAAS,CAAC,0BAA0B,EAAE,EAAC,GAAG,EAAE,YAAY,CAAC,MAAM,EAAC,CAAC,CAAC,CAAC;IACnG,CAAC;IAED,KAAK,CAAC,eAAe,CAAC,IAAyE;QAC7F,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,cAAc,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC;YACzD,OAAO;QACT,CAAC;QAED,MAAM,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;QAC1B,MAAM,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;QAC3C,MAAM,IAAI,CAAC,YAAY,EAAE,CAAC;QAC1B,IAAI,CAAC,4BAA4B,CAAC,wBAAwB,sEACL,EAAC,GAAG,EAAkD,CAAC,CAAC;QAC7G,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,CAAC,SAAS,CAAC,wBAAwB,CAAC,CAAC,CAAC;IACrE,CAAC;IAED,KAAK,CAAC,aAAa,CAAC,KAA+E;QACjG,MAAM,GAAG,GAAG,KAAK,EAAE,IAAI,EAAE,GAAG,CAAC;QAC7B,MAAM,KAAK,GAAG,KAAK,EAAE,IAAI,EAAE,KAAK,CAAC;QACjC,MAAM,YAAY,GAAG,GAAG,IAAI,EAAC,GAAG,EAAE,GAAa,EAAE,KAAK,EAAE,KAAe,IAAI,EAAE,EAAiB,CAAC;QAC/F,IAAI,YAAY,EAAE,CAAC;YACjB,MAAM,OAAO,GAAG,WAAW,CAAC,QAAQ,CAAC,QAAQ,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;YAE3E,0DAA0D;YAC1D,IAAI,KAAK,CAAC,QAAQ,EAAE,CAAC;gBACnB,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;gBAChD,OAAO,CAAC,OAAO,CAAC,YAAY,CAAC,OAAO,EAAE,GAAG,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC,EAAC,MAAM,EAAE,IAAI,EAAC,CAAC,EAAE,CAAC,CAAC;YAClG,CAAC;QACH,CAAC;aAAM,CAAC;YACN,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QAC9D,CAAC;IACH,CAAC;IAED,oBAAoB;QAClB,OAAO,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE;aAC1B,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;aACtC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAE,IAAI,CAAC,IAA4C,CAAC,CAAC;IACvE,CAAC;CACF","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport * as LegacyWrapper from '../../ui/components/legacy_wrapper/legacy_wrapper.js';\nimport * as DataGrid from '../../ui/legacy/components/data_grid/data_grid.js';\nimport * as SourceFrame from '../../ui/legacy/components/source_frame/source_frame.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport * as ApplicationComponents from './components/components.js';\nimport {SharedStorageForOrigin} from './SharedStorageModel.js';\nimport {StorageItemsView} from './StorageItemsView.js';\n\nconst UIStrings = {\n  /**\n   *@description Text in SharedStorage Items View of the Application panel\n   */\n  sharedStorage: 'Shared storage',\n  /**\n   *@description Text representing the name of a value stored in the \"Shared Storage Items\" table\n   */\n  key: 'Key',\n  /**\n   *@description Text for the value of something\n   */\n  value: 'Value',\n  /**\n   *@description Name for the \"Shared Storage Items\" table that shows the content of the Shared Storage.\n   */\n  sharedStorageItems: 'Shared Storage Items',\n  /**\n   *@description Text for announcing that the \"Shared Storage Items\" table was cleared, that is, all\n   * entries were deleted.\n   */\n  sharedStorageItemsCleared: 'Shared Storage items cleared',\n  /**\n   *@description Text for announcing that the filtered \"Shared Storage Items\" table was cleared, that is,\n   * all filtered entries were deleted.\n   */\n  sharedStorageFilteredItemsCleared: 'Shared Storage filtered items cleared',\n  /**\n   *@description Text in SharedStorage Items View of the Application panel\n   */\n  selectAValueToPreview: 'Select a value to preview',\n  /**\n   *@description Text for announcing a Shared Storage key/value item has been deleted\n   */\n  sharedStorageItemDeleted: 'The storage item was deleted.',\n  /**\n   *@description Text for announcing a Shared Storage key/value item has been edited\n   */\n  sharedStorageItemEdited: 'The storage item was edited.',\n  /**\n   *@description Text for announcing a Shared Storage key/value item edit request has been canceled\n   */\n  sharedStorageItemEditCanceled: 'The storage item edit was canceled.',\n  /**\n   *@description Text for announcing number of entries after filtering\n   *@example {5} PH1\n   */\n  sharedStorageNumberEntries: 'Number of entries shown in table: {PH1}',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/application/SharedStorageItemsView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\ninterface WrappedEntry {\n  key: string;\n  value: string;\n}\n\nexport namespace SharedStorageItemsDispatcher {\n  export const enum Events {\n    FilteredItemsCleared = 'FilteredItemsCleared',\n    ItemDeleted = 'ItemDeleted',\n    ItemEdited = 'ItemEdited',\n    ItemsCleared = 'ItemsCleared',\n    ItemsRefreshed = 'ItemsRefreshed',\n  }\n\n  export interface ItemDeletedEvent {\n    key: string;\n  }\n\n  export interface ItemEditedEvent {\n    columnIdentifier: string;\n    oldText: string;\n    newText: string;\n  }\n\n  export type EventTypes = {\n    [Events.FilteredItemsCleared]: void,\n    [Events.ItemDeleted]: ItemDeletedEvent,\n    [Events.ItemEdited]: ItemEditedEvent,\n    [Events.ItemsCleared]: void,\n    [Events.ItemsRefreshed]: void,\n  };\n}\n\nexport class SharedStorageItemsView extends StorageItemsView {\n  #sharedStorage: SharedStorageForOrigin;\n  readonly outerSplitWidget: UI.SplitWidget.SplitWidget;\n  readonly innerSplitWidget: UI.SplitWidget.SplitWidget;\n  #metadataView: LegacyWrapper.LegacyWrapper\n      .LegacyWrapper<UI.Widget.VBox, ApplicationComponents.SharedStorageMetadataView.SharedStorageMetadataView>;\n  readonly dataGrid: DataGrid.DataGrid.DataGridImpl<Protocol.Storage.SharedStorageEntry>;\n  #noDisplayView: UI.Widget.VBox;\n  #eventListeners: Common.EventTarget.EventDescriptor[];\n  readonly sharedStorageItemsDispatcher: Common.ObjectWrapper.ObjectWrapper<SharedStorageItemsDispatcher.EventTypes>;\n\n  constructor(sharedStorage: SharedStorageForOrigin) {\n    super(i18nString(UIStrings.sharedStorage), 'sharedStoragePanel');\n\n    this.#sharedStorage = sharedStorage;\n\n    this.element.classList.add('storage-view', 'table');\n\n    const columns = ([\n      {id: 'key', title: i18nString(UIStrings.key), sortable: false, editable: true, longText: true, weight: 50},\n      {id: 'value', title: i18nString(UIStrings.value), sortable: false, editable: true, longText: true, weight: 50},\n    ] as DataGrid.DataGrid.ColumnDescriptor[]);\n    this.dataGrid = new DataGrid.DataGrid.DataGridImpl({\n      displayName: i18nString(UIStrings.sharedStorageItems),\n      columns,\n      editCallback: this.#editingCallback.bind(this),\n      deleteCallback: this.#deleteCallback.bind(this),\n      refreshCallback: this.refreshItems.bind(this),\n    });\n    this.dataGrid.addEventListener(DataGrid.DataGrid.Events.SelectedNode, event => {\n      void this.#previewEntry(event.data);\n    });\n    this.dataGrid.addEventListener(DataGrid.DataGrid.Events.DeselectedNode, () => {\n      void this.#previewEntry(null);\n    });\n    this.dataGrid.setStriped(true);\n    this.dataGrid.setName('shared-storage-items-view');\n\n    const dataGridWidget = this.dataGrid.asWidget();\n    dataGridWidget.setMinimumSize(0, 100);\n\n    this.#metadataView = LegacyWrapper.LegacyWrapper.legacyWrapper(\n        UI.Widget.VBox,\n        new ApplicationComponents.SharedStorageMetadataView.SharedStorageMetadataView(\n            sharedStorage, sharedStorage.securityOrigin));\n    this.#metadataView.setMinimumSize(0, 275);\n    const innerResizer = this.#metadataView.element.createChild('div', 'metadata-view-resizer');\n\n    this.innerSplitWidget = new UI.SplitWidget.SplitWidget(\n        /* isVertical: */ false, /* secondIsSidebar: */ false, 'shared-storage-inner-split-view-state');\n    this.innerSplitWidget.setSidebarWidget(this.#metadataView);\n    this.innerSplitWidget.setMainWidget(dataGridWidget);\n    this.innerSplitWidget.installResizer(innerResizer);\n\n    this.#noDisplayView = new UI.Widget.VBox();\n    this.#noDisplayView.setMinimumSize(0, 25);\n    this.#noDisplayView.element.setAttribute('jslog', `${VisualLogging.pane('preview').track({resize: true})}`);\n    const outerResizer = this.#noDisplayView.element.createChild('div', 'preview-panel-resizer');\n\n    this.outerSplitWidget = new UI.SplitWidget.SplitWidget(\n        /* isVertical: */ false, /* secondIsSidebar: */ true, 'shared-storage-outer-split-view-state');\n    this.outerSplitWidget.show(this.element);\n    this.outerSplitWidget.setMainWidget(this.innerSplitWidget);\n    this.outerSplitWidget.setSidebarWidget(this.#noDisplayView);\n    this.outerSplitWidget.installResizer(outerResizer);\n\n    this.#noDisplayView.contentElement.classList.add('placeholder');\n    const noDisplayDiv = this.#noDisplayView.contentElement.createChild('div');\n    noDisplayDiv.textContent = i18nString(UIStrings.selectAValueToPreview);\n\n    this.#eventListeners = [];\n    Common.EventTarget.removeEventListeners(this.#eventListeners);\n    this.#sharedStorage = sharedStorage;\n    this.#eventListeners = [\n      this.#sharedStorage.addEventListener(\n          SharedStorageForOrigin.Events.SharedStorageChanged, this.#sharedStorageChanged, this),\n    ];\n\n    this.sharedStorageItemsDispatcher =\n        new Common.ObjectWrapper.ObjectWrapper<SharedStorageItemsDispatcher.EventTypes>();\n  }\n\n  // Use `createView()` instead of the constructor to create a view, so that entries can be awaited asynchronously.\n  static async createView(sharedStorage: SharedStorageForOrigin): Promise<SharedStorageItemsView> {\n    const view = new SharedStorageItemsView(sharedStorage);\n    await view.updateEntriesOnly();\n    return view;\n  }\n\n  async updateEntriesOnly(): Promise<void> {\n    if (!this.isShowing()) {\n      return;\n    }\n    const entries = await this.#sharedStorage.getEntries();\n    if (entries) {\n      this.#showSharedStorageItems(entries);\n    }\n  }\n\n  async #sharedStorageChanged(): Promise<void> {\n    await this.refreshItems();\n  }\n\n  override async refreshItems(): Promise<void> {\n    if (!this.isShowing()) {\n      return;\n    }\n    await this.#metadataView.getComponent().render();\n    await this.updateEntriesOnly();\n    this.sharedStorageItemsDispatcher.dispatchEventToListeners(SharedStorageItemsDispatcher.Events.ItemsRefreshed);\n  }\n\n  override async deleteSelectedItem(): Promise<void> {\n    if (!this.dataGrid.selectedNode) {\n      return;\n    }\n\n    await this.#deleteCallback(this.dataGrid.selectedNode);\n  }\n\n  override async deleteAllItems(): Promise<void> {\n    if (!this.hasFilter()) {\n      await this.#sharedStorage.clear();\n      await this.refreshItems();\n      this.sharedStorageItemsDispatcher.dispatchEventToListeners(SharedStorageItemsDispatcher.Events.ItemsCleared);\n      UI.ARIAUtils.alert(i18nString(UIStrings.sharedStorageItemsCleared));\n      return;\n    }\n\n    await Promise.all(this.dataGrid.rootNode()\n                          .children.filter(node => node.data.key)\n                          .map(node => this.#sharedStorage.deleteEntry(node.data.key)));\n\n    await this.refreshItems();\n    this.sharedStorageItemsDispatcher.dispatchEventToListeners(\n        SharedStorageItemsDispatcher.Events.FilteredItemsCleared);\n    UI.ARIAUtils.alert(i18nString(UIStrings.sharedStorageFilteredItemsCleared));\n  }\n\n  async #editingCallback(\n      editingNode: DataGrid.DataGrid.DataGridNode<Protocol.Storage.SharedStorageEntry>, columnIdentifier: string,\n      oldText: string, newText: string): Promise<void> {\n    if (columnIdentifier === 'key' && newText === '') {\n      // The Shared Storage backend does not currently allow '' as a key, so we only set a new entry with a new key if its new key is nonempty.\n      await this.refreshItems();\n      UI.ARIAUtils.alert(i18nString(UIStrings.sharedStorageItemEditCanceled));\n      return;\n    }\n    if (columnIdentifier === 'key') {\n      await this.#sharedStorage.deleteEntry(oldText);\n      await this.#sharedStorage.setEntry(newText, editingNode.data.value || '', false);\n    } else {\n      // The Shared Storage backend does not currently allow '' as a key, so we use ' ' as the default key instead.\n      await this.#sharedStorage.setEntry(editingNode.data.key || ' ', newText, false);\n    }\n\n    await this.refreshItems();\n    this.sharedStorageItemsDispatcher.dispatchEventToListeners(\n        SharedStorageItemsDispatcher.Events.ItemEdited,\n        {columnIdentifier, oldText, newText} as SharedStorageItemsDispatcher.ItemEditedEvent);\n    UI.ARIAUtils.alert(i18nString(UIStrings.sharedStorageItemEdited));\n  }\n\n  #showSharedStorageItems(items: Protocol.Storage.SharedStorageEntry[]): void {\n    const rootNode = this.dataGrid.rootNode();\n    const [selectedKey] = rootNode.children.filter(node => node.selected).map(node => node.data.key);\n    rootNode.removeChildren();\n    let selectedNode: DataGrid.DataGrid.DataGridNode<Protocol.Storage.SharedStorageEntry>|null = null;\n    const filteredItems = (item: Protocol.Storage.SharedStorageEntry): string => `${item.key} ${item.value}`;\n    const filteredList = this.filter(items, filteredItems);\n    for (const item of filteredList) {\n      const node = new DataGrid.DataGrid.DataGridNode({key: item.key, value: item.value}, false);\n      node.selectable = true;\n      rootNode.appendChild(node);\n      if (!selectedNode || item.key === selectedKey) {\n        selectedNode = node;\n      }\n    }\n    if (selectedNode) {\n      selectedNode.selected = true;\n    }\n    this.dataGrid.addCreationNode(false);\n    this.setCanDeleteSelected(Boolean(selectedNode));\n    UI.ARIAUtils.alert(i18nString(UIStrings.sharedStorageNumberEntries, {PH1: filteredList.length}));\n  }\n\n  async #deleteCallback(node: DataGrid.DataGrid.DataGridNode<Protocol.Storage.SharedStorageEntry>): Promise<void> {\n    if (!node || node.isCreationNode || !this.#sharedStorage) {\n      return;\n    }\n\n    const key = node.data.key;\n    await this.#sharedStorage.deleteEntry(key);\n    await this.refreshItems();\n    this.sharedStorageItemsDispatcher.dispatchEventToListeners(\n        SharedStorageItemsDispatcher.Events.ItemDeleted, {key} as SharedStorageItemsDispatcher.ItemDeletedEvent);\n    UI.ARIAUtils.alert(i18nString(UIStrings.sharedStorageItemDeleted));\n  }\n\n  async #previewEntry(entry: DataGrid.DataGrid.DataGridNode<Protocol.Storage.SharedStorageEntry>|null): Promise<void> {\n    const key = entry?.data?.key;\n    const value = entry?.data?.value;\n    const wrappedEntry = key && {key: key as string, value: value as string || ''} as WrappedEntry;\n    if (wrappedEntry) {\n      const preview = SourceFrame.JSONView.JSONView.createViewSync(wrappedEntry);\n\n      // Selection could've changed while the preview was loaded\n      if (entry.selected) {\n        this.outerSplitWidget.setSidebarWidget(preview);\n        preview.element.setAttribute('jslog', `${VisualLogging.pane('preview').track({resize: true})}`);\n      }\n    } else {\n      this.outerSplitWidget.setSidebarWidget(this.#noDisplayView);\n    }\n  }\n\n  getEntriesForTesting(): Array<Protocol.Storage.SharedStorageEntry> {\n    return this.dataGrid.rootNode()\n        .children.filter(node => node.data.key)\n        .map(node => (node.data as Protocol.Storage.SharedStorageEntry));\n  }\n}\n"]}