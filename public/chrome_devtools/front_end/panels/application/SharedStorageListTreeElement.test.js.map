{"version":3,"file":"SharedStorageListTreeElement.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/application/SharedStorageListTreeElement.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Root from '../../core/root/root.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport {\n  createTarget,\n  stubNoopSettings,\n} from '../../testing/EnvironmentHelpers.js';\nimport {describeWithMockConnection} from '../../testing/MockConnection.js';\nimport {getMainFrame, MAIN_FRAME_ID, navigate} from '../../testing/ResourceTreeHelpers.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport * as Application from './application.js';\n\ndescribeWithMockConnection('SharedStorageListTreeElement', function() {\n  let target: SDK.Target.Target;\n  let sharedStorageModel: Application.SharedStorageModel.SharedStorageModel|null;\n  let treeElement: Application.SharedStorageListTreeElement.SharedStorageListTreeElement;\n\n  const TEST_ORIGIN_A = 'http://a.test';\n  const TEST_ORIGIN_B = 'http://b.test';\n  const TEST_ORIGIN_C = 'http://c.test';\n\n  const EVENTS = [\n    {\n      accessTime: 0,\n      type: Protocol.Storage.SharedStorageAccessType.DocumentAppend,\n      mainFrameId: MAIN_FRAME_ID,\n      ownerOrigin: TEST_ORIGIN_A,\n      params: {key: 'key0', value: 'value0'} as Protocol.Storage.SharedStorageAccessParams,\n    },\n    {\n      accessTime: 10,\n      type: Protocol.Storage.SharedStorageAccessType.WorkletGet,\n      mainFrameId: MAIN_FRAME_ID,\n      ownerOrigin: TEST_ORIGIN_A,\n      params: {key: 'key0'} as Protocol.Storage.SharedStorageAccessParams,\n    },\n    {\n      accessTime: 15,\n      type: Protocol.Storage.SharedStorageAccessType.WorkletLength,\n      mainFrameId: MAIN_FRAME_ID,\n      ownerOrigin: TEST_ORIGIN_B,\n      params: {} as Protocol.Storage.SharedStorageAccessParams,\n    },\n    {\n      accessTime: 20,\n      type: Protocol.Storage.SharedStorageAccessType.DocumentClear,\n      mainFrameId: MAIN_FRAME_ID,\n      ownerOrigin: TEST_ORIGIN_B,\n      params: {} as Protocol.Storage.SharedStorageAccessParams,\n    },\n    {\n      accessTime: 100,\n      type: Protocol.Storage.SharedStorageAccessType.WorkletSet,\n      mainFrameId: MAIN_FRAME_ID,\n      ownerOrigin: TEST_ORIGIN_C,\n      params: {key: 'key0', value: 'value1', ignoreIfPresent: true} as Protocol.Storage.SharedStorageAccessParams,\n    },\n    {\n      accessTime: 150,\n      type: Protocol.Storage.SharedStorageAccessType.WorkletRemainingBudget,\n      mainFrameId: MAIN_FRAME_ID,\n      ownerOrigin: TEST_ORIGIN_C,\n      params: {} as Protocol.Storage.SharedStorageAccessParams,\n    },\n  ];\n\n  beforeEach(async () => {\n    stubNoopSettings();\n    SDK.ChildTargetManager.ChildTargetManager.install();\n    const tabTarget = createTarget({type: SDK.Target.Type.Tab});\n    createTarget({parentTarget: tabTarget, subtype: 'prerender'});\n    target = createTarget({parentTarget: tabTarget});\n    Root.Runtime.experiments.register(Root.Runtime.ExperimentName.PRELOADING_STATUS_PANEL, '', false);\n\n    sharedStorageModel = target.model(Application.SharedStorageModel.SharedStorageModel);\n  });\n\n  it('shows view on select', async () => {\n    assert.exists(sharedStorageModel);\n    sinon.stub(sharedStorageModel, 'enable').resolves();\n\n    const panel = Application.ResourcesPanel.ResourcesPanel.instance({forceNew: true});\n    panel.markAsRoot();\n    panel.show(document.body);\n\n    treeElement = new Application.SharedStorageListTreeElement.SharedStorageListTreeElement(panel);\n\n    const view = treeElement.view;\n    const wasShownSpy = sinon.spy(view, 'wasShown');\n\n    document.body.appendChild(treeElement.listItemNode);\n    treeElement.treeOutline = new UI.TreeOutline.TreeOutlineInShadow();\n    treeElement.selectable = true;\n    treeElement.select();\n\n    assert.isTrue(wasShownSpy.calledOnce);\n\n    panel.detach();\n  });\n\n  it('adds events', async () => {\n    assert.exists(sharedStorageModel);\n    sinon.stub(sharedStorageModel, 'enable').resolves();\n\n    const panel = Application.ResourcesPanel.ResourcesPanel.instance({forceNew: true});\n    treeElement = new Application.SharedStorageListTreeElement.SharedStorageListTreeElement(panel);\n    const view = treeElement.view;\n\n    view.setDefaultIdForTesting(MAIN_FRAME_ID);\n    for (const event of EVENTS) {\n      treeElement.addEvent(event);\n    }\n\n    assert.deepEqual(view.getEventsForTesting(), EVENTS);\n\n    panel.detach();\n  });\n\n  it('clears events upon main frame navigation', async () => {\n    assert.exists(sharedStorageModel);\n    sinon.stub(sharedStorageModel, 'enable').resolves();\n\n    const panel = Application.ResourcesPanel.ResourcesPanel.instance({forceNew: true});\n    treeElement = new Application.SharedStorageListTreeElement.SharedStorageListTreeElement(panel);\n    const view = treeElement.view;\n\n    view.setDefaultIdForTesting(MAIN_FRAME_ID);\n    for (const event of EVENTS) {\n      treeElement.addEvent(event);\n    }\n\n    assert.deepEqual(view.getEventsForTesting(), EVENTS);\n\n    // Events are cleared on main frame navigation.\n    navigate(getMainFrame(target));\n    assert.deepEqual(view.getEventsForTesting(), []);\n\n    panel.detach();\n  });\n});\n"]}