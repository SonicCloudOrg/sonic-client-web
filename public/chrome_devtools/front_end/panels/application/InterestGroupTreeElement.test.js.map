{"version":3,"file":"InterestGroupTreeElement.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/application/InterestGroupTreeElement.test.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,GAAG,MAAM,uBAAuB,CAAC;AAE7C,OAAO,EAAC,YAAY,EAAC,MAAM,qCAAqC,CAAC;AACjE,OAAO,EAAC,0BAA0B,EAAC,MAAM,iCAAiC,CAAC;AAE3E,OAAO,KAAK,SAAS,MAAM,kBAAkB,CAAC;AAE9C,0BAA0B,CAAC,0BAA0B,EAAE,GAAG,EAAE;IAC1D,MAAM,KAAK,GAAG,OAAO,CAAC;IACtB,MAAM,IAAI,GAAG,MAAM,CAAC;IACpB,MAAM,OAAO,GAAG;QACd,WAAW,EAAE,KAAK;QAClB,IAAI,EAAE,IAAI;QACV,cAAc,EAAE,EAAE;QAClB,aAAa,EAAE,gBAAgB;QAC/B,yBAAyB,EAAE,EAAE;QAC7B,GAAG,EAAE,EAAE;QACP,YAAY,EAAE,EAAE;KACjB,CAAC;IAEF,EAAE,CAAC,eAAe,EAAE,KAAK,IAAI,EAAE;QAC7B,MAAM,SAAS,GAAG,YAAY,CAAC,EAAC,IAAI,EAAE,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAC,CAAC,CAAC;QAC5D,MAAM,WAAW,GAAG,YAAY,CAAC,EAAC,YAAY,EAAE,SAAS,EAAC,CAAC,CAAC;QAC5D,YAAY,CAAC,EAAC,YAAY,EAAE,SAAS,EAAE,OAAO,EAAE,WAAW,EAAC,CAAC,CAAC;QAC9D,MAAM,IAAI,GACN,IAAI,SAAS,CAAC,wBAAwB,CAAC,wBAAwB,CAAC,EAA6C,CAAC,CAAC;QACnH,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,EAAE,gCAAgC,CAAC;aACnE,QAAQ,CAAC,EAAC,WAAW,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAC,CAAC;aAC1C,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,EAAC,OAAO,EAAE,OAAO,EAAqD,CAAC,CAAC,CAAC;QACtG,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,uBAAuB,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;QAChE,MAAM,CAAC,eAAe,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;IAC3C,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport {createTarget} from '../../testing/EnvironmentHelpers.js';\nimport {describeWithMockConnection} from '../../testing/MockConnection.js';\n\nimport * as Resources from './application.js';\n\ndescribeWithMockConnection('InterestGroupTreeElement', () => {\n  const OWNER = 'OWNER';\n  const NAME = 'NAME';\n  const DETAILS = {\n    ownerOrigin: OWNER,\n    name: NAME,\n    expirationTime: 42,\n    joiningOrigin: 'JOINING_ORIGIN',\n    trustedBiddingSignalsKeys: [],\n    ads: [],\n    adComponents: [],\n  };\n\n  it('reads details', async () => {\n    const tabTarget = createTarget({type: SDK.Target.Type.Tab});\n    const frameTarget = createTarget({parentTarget: tabTarget});\n    createTarget({parentTarget: tabTarget, subtype: 'prerender'});\n    const view =\n        new Resources.InterestGroupTreeElement.InterestGroupTreeElement({} as Resources.ResourcesPanel.ResourcesPanel);\n    sinon.stub(frameTarget.storageAgent(), 'invoke_getInterestGroupDetails')\n        .withArgs({ownerOrigin: OWNER, name: NAME})\n        .returns(Promise.resolve({details: DETAILS} as Protocol.Storage.GetInterestGroupDetailsResponse));\n    const details = await view.getInterestGroupDetails(OWNER, NAME);\n    assert.deepStrictEqual(details, DETAILS);\n  });\n});\n"]}