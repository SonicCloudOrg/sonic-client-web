{"version":3,"file":"StorageItemsView.js","sourceRoot":"","sources":["../../../../../../front_end/panels/application/StorageItemsView.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport * as ApplicationComponents from './components/components.js';\n\nconst UIStrings = {\n  /**\n   *@description Text to refresh the page\n   */\n  refresh: 'Refresh',\n  /**\n   *@description Text to clear everything\n   */\n  clearAll: 'Clear All',\n  /**\n   *@description Tooltip text that appears when hovering over the largeicon delete button in the Service Worker Cache Views of the Application panel\n   */\n  deleteSelected: 'Delete Selected',\n  /**\n   *@description Text that informs screen reader users that the storage table has been refreshed\n   */\n  refreshedStatus: 'Table refreshed',\n};\n\nconst str_ = i18n.i18n.registerUIStrings('panels/application/StorageItemsView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class StorageItemsView extends UI.Widget.VBox {\n  private filterRegex: RegExp|null;\n  readonly refreshButton: UI.Toolbar.ToolbarButton;\n  private readonly mainToolbar: UI.Toolbar.Toolbar;\n  readonly filterItem: UI.Toolbar.ToolbarInput;\n  readonly deleteAllButton: UI.Toolbar.ToolbarButton;\n  readonly deleteSelectedButton: UI.Toolbar.ToolbarButton;\n  readonly metadataView = new ApplicationComponents.StorageMetadataView.StorageMetadataView();\n\n  constructor(_title: string, _filterName: string) {\n    super(false);\n    this.filterRegex = null;\n\n    this.refreshButton = this.addButton(i18nString(UIStrings.refresh), 'refresh', () => {\n      this.refreshItems();\n      UI.ARIAUtils.alert(i18nString(UIStrings.refreshedStatus));\n    });\n    this.refreshButton.element.setAttribute(\n        'jslog', `${VisualLogging.action('storage-items-view.refresh').track({click: true})}`);\n\n    this.mainToolbar = new UI.Toolbar.Toolbar('top-resources-toolbar', this.element);\n    this.mainToolbar.element.setAttribute('jslog', `${VisualLogging.toolbar()}`);\n\n    this.filterItem = new UI.Toolbar.ToolbarFilter(undefined, 0.4);\n    this.filterItem.addEventListener(UI.Toolbar.ToolbarInput.Event.TextChanged, this.filterChanged, this);\n\n    const toolbarSeparator = new UI.Toolbar.ToolbarSeparator();\n    this.deleteAllButton = this.addButton(i18nString(UIStrings.clearAll), 'clear', this.deleteAllItems);\n    this.deleteSelectedButton = this.addButton(i18nString(UIStrings.deleteSelected), 'cross', this.deleteSelectedItem);\n    this.deleteSelectedButton.element.setAttribute(\n        'jslog', `${VisualLogging.action('storage-items-view.delete-selected').track({click: true})}`);\n    this.deleteAllButton.element.id = 'storage-items-delete-all';\n    this.deleteAllButton.element.setAttribute(\n        'jslog', `${VisualLogging.action('storage-items-view.clear-all').track({click: true})}`);\n\n    const toolbarItems =\n        [this.refreshButton, this.filterItem, toolbarSeparator, this.deleteAllButton, this.deleteSelectedButton];\n    for (const item of toolbarItems) {\n      this.mainToolbar.appendToolbarItem(item);\n    }\n    this.contentElement.appendChild(this.metadataView);\n  }\n\n  setDeleteAllTitle(title: string): void {\n    this.deleteAllButton.setTitle(title);\n  }\n\n  setDeleteAllGlyph(glyph: string): void {\n    this.deleteAllButton.setGlyph(glyph);\n  }\n\n  appendToolbarItem(item: UI.Toolbar.ToolbarItem): void {\n    this.mainToolbar.appendToolbarItem(item);\n  }\n\n  setStorageKey(storageKey: string): void {\n    this.metadataView.setStorageKey(storageKey);\n  }\n\n  private addButton(label: string, glyph: string, callback: (arg0: Common.EventTarget.EventTargetEvent<Event>) => void):\n      UI.Toolbar.ToolbarButton {\n    const button = new UI.Toolbar.ToolbarButton(label, glyph);\n    button.addEventListener(UI.Toolbar.ToolbarButton.Events.Click, callback, this);\n    return button;\n  }\n\n  private filterChanged({data: text}: Common.EventTarget.EventTargetEvent<string|null>): void {\n    this.filterRegex = text ? new RegExp(Platform.StringUtilities.escapeForRegExp(text), 'i') : null;\n    this.refreshItems();\n  }\n\n  filter<T>(items: T[], keyFunction: (arg0: T) => string): T[] {\n    if (this.filterRegex) {\n      const regExp = this.filterRegex;\n      return items.filter(item => regExp.test(keyFunction(item)));\n    }\n    return items;\n  }\n\n  hasFilter(): boolean {\n    return Boolean(this.filterRegex);\n  }\n\n  override wasShown(): void {\n    this.refreshItems();\n  }\n\n  setCanDeleteAll(enabled: boolean): void {\n    this.deleteAllButton.setEnabled(enabled);\n  }\n\n  setCanDeleteSelected(enabled: boolean): void {\n    this.deleteSelectedButton.setEnabled(enabled);\n  }\n\n  setCanRefresh(enabled: boolean): void {\n    this.refreshButton.setEnabled(enabled);\n  }\n\n  setCanFilter(enabled: boolean): void {\n    this.filterItem.setEnabled(enabled);\n  }\n\n  deleteAllItems(): void {\n  }\n\n  deleteSelectedItem(): void {\n  }\n\n  refreshItems(): void {\n  }\n}\n"]}