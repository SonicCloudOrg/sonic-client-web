{"version":3,"file":"SharedStorageModel.js","sourceRoot":"","sources":["../../../../../../front_end/panels/application/SharedStorageModel.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport type * as ProtocolProxyApi from '../../generated/protocol-proxy-api.js';\n\nexport class SharedStorageForOrigin extends Common.ObjectWrapper.ObjectWrapper<SharedStorageForOrigin.EventTypes> {\n  readonly #model: SharedStorageModel;\n  readonly #securityOrigin: string;\n\n  constructor(model: SharedStorageModel, securityOrigin: string) {\n    super();\n    this.#model = model;\n    this.#securityOrigin = securityOrigin;\n  }\n\n  get securityOrigin(): string {\n    return this.#securityOrigin;\n  }\n\n  async getMetadata(): Promise<Protocol.Storage.SharedStorageMetadata|null> {\n    return this.#model.storageAgent.invoke_getSharedStorageMetadata({ownerOrigin: this.securityOrigin})\n        .then(({metadata}) => metadata);\n  }\n\n  async getEntries(): Promise<Protocol.Storage.SharedStorageEntry[]|null> {\n    return this.#model.storageAgent.invoke_getSharedStorageEntries({ownerOrigin: this.securityOrigin})\n        .then(({entries}) => entries);\n  }\n\n  async setEntry(key: string, value: string, ignoreIfPresent: boolean): Promise<void> {\n    await this.#model.storageAgent.invoke_setSharedStorageEntry(\n        {ownerOrigin: this.securityOrigin, key, value, ignoreIfPresent});\n  }\n\n  async deleteEntry(key: string): Promise<void> {\n    await this.#model.storageAgent.invoke_deleteSharedStorageEntry({ownerOrigin: this.securityOrigin, key});\n  }\n\n  async clear(): Promise<void> {\n    await this.#model.storageAgent.invoke_clearSharedStorageEntries({ownerOrigin: this.securityOrigin});\n  }\n\n  async resetBudget(): Promise<void> {\n    await this.#model.storageAgent.invoke_resetSharedStorageBudget({ownerOrigin: this.securityOrigin});\n  }\n}\n\nexport namespace SharedStorageForOrigin {\n  export const enum Events {\n    SharedStorageChanged = 'SharedStorageChanged',\n  }\n\n  export interface SharedStorageChangedEvent {\n    accessTime: Protocol.Network.TimeSinceEpoch;\n    type: Protocol.Storage.SharedStorageAccessType;\n    mainFrameId: Protocol.Page.FrameId;\n    params: Protocol.Storage.SharedStorageAccessParams;\n  }\n\n  export type EventTypes = {\n    [Events.SharedStorageChanged]: SharedStorageChangedEvent,\n  };\n}\n\nexport class SharedStorageModel extends SDK.SDKModel.SDKModel<EventTypes> implements\n    ProtocolProxyApi.StorageDispatcher {\n  readonly #securityOriginManager: SDK.SecurityOriginManager.SecurityOriginManager;\n  #storages: Map<string, SharedStorageForOrigin>;\n  readonly storageAgent: ProtocolProxyApi.StorageApi;\n  #enabled: boolean;\n\n  constructor(target: SDK.Target.Target) {\n    super(target);\n    target.registerStorageDispatcher(this);\n    this.#securityOriginManager = target.model(SDK.SecurityOriginManager.SecurityOriginManager) as\n        SDK.SecurityOriginManager.SecurityOriginManager;\n    this.#storages = new Map();\n    this.storageAgent = target.storageAgent();\n    this.#enabled = false;\n  }\n\n  async enable(): Promise<void> {\n    if (this.#enabled) {\n      return;\n    }\n\n    this.#securityOriginManager.addEventListener(\n        SDK.SecurityOriginManager.Events.SecurityOriginAdded, this.#securityOriginAdded, this);\n    this.#securityOriginManager.addEventListener(\n        SDK.SecurityOriginManager.Events.SecurityOriginRemoved, this.#securityOriginRemoved, this);\n\n    await this.storageAgent.invoke_setSharedStorageTracking({enable: true});\n    this.#addAllOrigins();\n    this.#enabled = true;\n  }\n\n  disable(): void {\n    if (!this.#enabled) {\n      return;\n    }\n\n    this.#securityOriginManager.removeEventListener(\n        SDK.SecurityOriginManager.Events.SecurityOriginAdded, this.#securityOriginAdded, this);\n    this.#securityOriginManager.removeEventListener(\n        SDK.SecurityOriginManager.Events.SecurityOriginRemoved, this.#securityOriginRemoved, this);\n\n    void this.storageAgent.invoke_setSharedStorageTracking({enable: false});\n    this.#removeAllOrigins();\n    this.#enabled = false;\n  }\n\n  override dispose(): void {\n    this.disable();\n  }\n\n  #addAllOrigins(): void {\n    for (const securityOrigin of this.#securityOriginManager.securityOrigins()) {\n      void this.#maybeAddOrigin(securityOrigin);\n    }\n  }\n\n  #removeAllOrigins(): void {\n    for (const securityOrigin of this.#storages.keys()) {\n      this.#removeOrigin(securityOrigin);\n    }\n  }\n\n  #securityOriginAdded(event: Common.EventTarget.EventTargetEvent<string>): void {\n    this.#maybeAddOrigin(event.data);\n  }\n\n  #maybeAddOrigin(securityOrigin: string): void {\n    const parsedSecurityOrigin = new Common.ParsedURL.ParsedURL(securityOrigin);\n    // These are \"opaque\" origins which are not supposed to support shared storage.\n    if (!parsedSecurityOrigin.isValid || parsedSecurityOrigin.scheme === 'data' ||\n        parsedSecurityOrigin.scheme === 'about' || parsedSecurityOrigin.scheme === 'javascript') {\n      return;\n    }\n\n    // Only add origin if it's not already added.\n    if (this.#storages.has(securityOrigin)) {\n      return;\n    }\n\n    const storage = new SharedStorageForOrigin(this, securityOrigin);\n    this.#storages.set(securityOrigin, storage);\n    this.dispatchEventToListeners(Events.SharedStorageAdded, storage);\n  }\n\n  #securityOriginRemoved(event: Common.EventTarget.EventTargetEvent<string>): void {\n    this.#removeOrigin(event.data);\n  }\n\n  #removeOrigin(securityOrigin: string): void {\n    const storage = this.storageForOrigin(securityOrigin);\n    if (!storage) {\n      return;\n    }\n    this.#storages.delete(securityOrigin);\n    this.dispatchEventToListeners(Events.SharedStorageRemoved, storage);\n  }\n\n  storages(): IterableIterator<SharedStorageForOrigin> {\n    return this.#storages.values();\n  }\n\n  storageForOrigin(origin: string): SharedStorageForOrigin|null {\n    return this.#storages.get(origin) || null;\n  }\n\n  numStoragesForTesting(): number {\n    return this.#storages.size;\n  }\n\n  isChangeEvent(event: Protocol.Storage.SharedStorageAccessedEvent): boolean {\n    return [\n      Protocol.Storage.SharedStorageAccessType.DocumentSet,\n      Protocol.Storage.SharedStorageAccessType.DocumentAppend,\n      Protocol.Storage.SharedStorageAccessType.DocumentDelete,\n      Protocol.Storage.SharedStorageAccessType.DocumentClear,\n      Protocol.Storage.SharedStorageAccessType.WorkletSet,\n      Protocol.Storage.SharedStorageAccessType.WorkletAppend,\n      Protocol.Storage.SharedStorageAccessType.WorkletDelete,\n      Protocol.Storage.SharedStorageAccessType.WorkletClear,\n    ].includes(event.type);\n  }\n\n  sharedStorageAccessed(event: Protocol.Storage.SharedStorageAccessedEvent): void {\n    if (this.isChangeEvent(event)) {\n      const sharedStorage = this.storageForOrigin(event.ownerOrigin);\n\n      if (sharedStorage) {\n        const eventData =\n            {accessTime: event.accessTime, type: event.type, mainFrameId: event.mainFrameId, params: event.params};\n\n        // Forward events that may have changed `sharedStorage` to listeners for `sharedStorage`.\n        sharedStorage.dispatchEventToListeners(SharedStorageForOrigin.Events.SharedStorageChanged, eventData);\n      } else {\n        void this.#maybeAddOrigin(event.ownerOrigin);\n      }\n    }\n\n    this.dispatchEventToListeners(Events.SharedStorageAccess, event);\n  }\n\n  attributionReportingTriggerRegistered(_event: Protocol.Storage.AttributionReportingTriggerRegisteredEvent): void {\n  }\n\n  indexedDBListUpdated(_event: Protocol.Storage.IndexedDBListUpdatedEvent): void {\n  }\n\n  indexedDBContentUpdated(_event: Protocol.Storage.IndexedDBContentUpdatedEvent): void {\n  }\n\n  cacheStorageListUpdated(_event: Protocol.Storage.CacheStorageListUpdatedEvent): void {\n  }\n\n  cacheStorageContentUpdated(_event: Protocol.Storage.CacheStorageContentUpdatedEvent): void {\n  }\n\n  interestGroupAccessed(_event: Protocol.Storage.InterestGroupAccessedEvent): void {\n  }\n\n  interestGroupAuctionEventOccurred(_event: Protocol.Storage.InterestGroupAuctionEventOccurredEvent): void {\n  }\n\n  interestGroupAuctionNetworkRequestCreated(_event: Protocol.Storage.InterestGroupAuctionNetworkRequestCreatedEvent):\n      void {\n  }\n\n  storageBucketCreatedOrUpdated(_event: Protocol.Storage.StorageBucketCreatedOrUpdatedEvent): void {\n  }\n\n  storageBucketDeleted(_event: Protocol.Storage.StorageBucketDeletedEvent): void {\n  }\n\n  attributionReportingSourceRegistered(_event: Protocol.Storage.AttributionReportingSourceRegisteredEvent): void {\n  }\n}\n\nSDK.SDKModel.SDKModel.register(SharedStorageModel, {capabilities: SDK.Target.Capability.Storage, autostart: false});\n\nexport const enum Events {\n  SharedStorageAccess = 'SharedStorageAccess',\n  SharedStorageAdded = 'SharedStorageAdded',\n  SharedStorageRemoved = 'SharedStorageRemoved',\n}\n\nexport type EventTypes = {\n  [Events.SharedStorageAccess]: Protocol.Storage.SharedStorageAccessedEvent,\n  [Events.SharedStorageAdded]: SharedStorageForOrigin,\n  [Events.SharedStorageRemoved]: SharedStorageForOrigin,\n};\n"]}