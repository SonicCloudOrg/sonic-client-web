{"version":3,"file":"DOMStorageModel.js","sourceRoot":"","sources":["../../../../../../front_end/panels/application/DOMStorageModel.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/*\n * Copyright (C) 2008 Nokia Inc.  All rights reserved.\n * Copyright (C) 2013 Samsung Electronics. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../core/common/common.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport type * as ProtocolProxyApi from '../../generated/protocol-proxy-api.js';\n\nexport class DOMStorage extends Common.ObjectWrapper.ObjectWrapper<DOMStorage.EventTypes> {\n  private readonly model: DOMStorageModel;\n  private readonly storageKeyInternal: string;\n  private readonly isLocalStorageInternal: boolean;\n\n  constructor(model: DOMStorageModel, storageKey: string, isLocalStorage: boolean) {\n    super();\n    this.model = model;\n    this.storageKeyInternal = storageKey;\n    this.isLocalStorageInternal = isLocalStorage;\n  }\n\n  static storageId(storageKey: string, isLocalStorage: boolean): Protocol.DOMStorage.StorageId {\n    return {storageKey: storageKey, isLocalStorage: isLocalStorage};\n  }\n\n  get id(): Protocol.DOMStorage.StorageId {\n    return DOMStorage.storageId(this.storageKeyInternal, this.isLocalStorageInternal);\n  }\n\n  get storageKey(): string|null {\n    return this.storageKeyInternal;\n  }\n\n  get isLocalStorage(): boolean {\n    return this.isLocalStorageInternal;\n  }\n\n  getItems(): Promise<Protocol.DOMStorage.Item[]|null> {\n    return this.model.agent.invoke_getDOMStorageItems({storageId: this.id}).then(({entries}) => entries);\n  }\n\n  setItem(key: string, value: string): void {\n    void this.model.agent.invoke_setDOMStorageItem({storageId: this.id, key, value});\n  }\n\n  removeItem(key: string): void {\n    void this.model.agent.invoke_removeDOMStorageItem({storageId: this.id, key});\n  }\n\n  clear(): void {\n    void this.model.agent.invoke_clear({storageId: this.id});\n  }\n}\n\nexport namespace DOMStorage {\n  export const enum Events {\n    DOMStorageItemsCleared = 'DOMStorageItemsCleared',\n    DOMStorageItemRemoved = 'DOMStorageItemRemoved',\n    DOMStorageItemAdded = 'DOMStorageItemAdded',\n    DOMStorageItemUpdated = 'DOMStorageItemUpdated',\n  }\n\n  export interface DOMStorageItemRemovedEvent {\n    key: string;\n  }\n\n  export interface DOMStorageItemAddedEvent {\n    key: string;\n    value: string;\n  }\n\n  export interface DOMStorageItemUpdatedEvent {\n    key: string;\n    oldValue: string;\n    value: string;\n  }\n\n  export type EventTypes = {\n    [Events.DOMStorageItemsCleared]: void,\n    [Events.DOMStorageItemRemoved]: DOMStorageItemRemovedEvent,\n    [Events.DOMStorageItemAdded]: DOMStorageItemAddedEvent,\n    [Events.DOMStorageItemUpdated]: DOMStorageItemUpdatedEvent,\n  };\n}\n\nexport class DOMStorageModel extends SDK.SDKModel.SDKModel<EventTypes> {\n  private readonly storageKeyManagerInternal: SDK.StorageKeyManager.StorageKeyManager|null;\n  private storagesInternal: {\n    [x: string]: DOMStorage,\n  };\n  readonly agent: ProtocolProxyApi.DOMStorageApi;\n  private enabled?: boolean;\n\n  constructor(target: SDK.Target.Target) {\n    super(target);\n\n    this.storageKeyManagerInternal = target.model(SDK.StorageKeyManager.StorageKeyManager);\n    this.storagesInternal = {};\n    this.agent = target.domstorageAgent();\n  }\n\n  get storageKeyManagerForTest(): SDK.StorageKeyManager.StorageKeyManager|null {\n    return this.storageKeyManagerInternal;\n  }\n\n  enable(): void {\n    if (this.enabled) {\n      return;\n    }\n\n    this.target().registerDOMStorageDispatcher(new DOMStorageDispatcher(this));\n    if (this.storageKeyManagerInternal) {\n      this.storageKeyManagerInternal.addEventListener(\n          SDK.StorageKeyManager.Events.StorageKeyAdded, this.storageKeyAdded, this);\n      this.storageKeyManagerInternal.addEventListener(\n          SDK.StorageKeyManager.Events.StorageKeyRemoved, this.storageKeyRemoved, this);\n\n      for (const storageKey of this.storageKeyManagerInternal.storageKeys()) {\n        this.addStorageKey(storageKey);\n      }\n    }\n    void this.agent.invoke_enable();\n\n    this.enabled = true;\n  }\n\n  clearForStorageKey(storageKey: string): void {\n    if (!this.enabled) {\n      return;\n    }\n    for (const isLocal of [true, false]) {\n      const key = this.storageKey(storageKey, isLocal);\n      const storage = this.storagesInternal[key];\n      if (!storage) {\n        return;\n      }\n      storage.clear();\n    }\n    this.removeStorageKey(storageKey);\n    this.addStorageKey(storageKey);\n  }\n\n  private storageKeyAdded(event: Common.EventTarget.EventTargetEvent<string>): void {\n    this.addStorageKey(event.data);\n  }\n\n  private addStorageKey(storageKey: string): void {\n    for (const isLocal of [true, false]) {\n      const key = this.storageKey(storageKey, isLocal);\n      console.assert(!this.storagesInternal[key]);\n      const storage = new DOMStorage(this, storageKey, isLocal);\n      this.storagesInternal[key] = storage;\n      this.dispatchEventToListeners(Events.DOMStorageAdded, storage);\n    }\n  }\n\n  private storageKeyRemoved(event: Common.EventTarget.EventTargetEvent<string>): void {\n    this.removeStorageKey(event.data);\n  }\n\n  private removeStorageKey(storageKey: string): void {\n    for (const isLocal of [true, false]) {\n      const key = this.storageKey(storageKey, isLocal);\n      const storage = this.storagesInternal[key];\n      if (!storage) {\n        continue;\n      }\n      delete this.storagesInternal[key];\n      this.dispatchEventToListeners(Events.DOMStorageRemoved, storage);\n    }\n  }\n\n  private storageKey(storageKey: string, isLocalStorage: boolean): string {\n    return JSON.stringify(DOMStorage.storageId(storageKey, isLocalStorage));\n  }\n\n  domStorageItemsCleared(storageId: Protocol.DOMStorage.StorageId): void {\n    const domStorage = this.storageForId(storageId);\n    if (!domStorage) {\n      return;\n    }\n\n    domStorage.dispatchEventToListeners(DOMStorage.Events.DOMStorageItemsCleared);\n  }\n\n  domStorageItemRemoved(storageId: Protocol.DOMStorage.StorageId, key: string): void {\n    const domStorage = this.storageForId(storageId);\n    if (!domStorage) {\n      return;\n    }\n\n    const eventData = {key: key};\n    domStorage.dispatchEventToListeners(DOMStorage.Events.DOMStorageItemRemoved, eventData);\n  }\n\n  domStorageItemAdded(storageId: Protocol.DOMStorage.StorageId, key: string, value: string): void {\n    const domStorage = this.storageForId(storageId);\n    if (!domStorage) {\n      return;\n    }\n\n    const eventData = {key: key, value: value};\n    domStorage.dispatchEventToListeners(DOMStorage.Events.DOMStorageItemAdded, eventData);\n  }\n\n  domStorageItemUpdated(storageId: Protocol.DOMStorage.StorageId, key: string, oldValue: string, value: string): void {\n    const domStorage = this.storageForId(storageId);\n    if (!domStorage) {\n      return;\n    }\n\n    const eventData = {key: key, oldValue: oldValue, value: value};\n    domStorage.dispatchEventToListeners(DOMStorage.Events.DOMStorageItemUpdated, eventData);\n  }\n\n  storageForId(storageId: Protocol.DOMStorage.StorageId): DOMStorage {\n    console.assert(Boolean(storageId.storageKey));\n    return this.storagesInternal[this.storageKey(storageId.storageKey || '', storageId.isLocalStorage)];\n  }\n\n  storages(): DOMStorage[] {\n    const result = [];\n    for (const id in this.storagesInternal) {\n      result.push(this.storagesInternal[id]);\n    }\n    return result;\n  }\n}\n\nSDK.SDKModel.SDKModel.register(DOMStorageModel, {capabilities: SDK.Target.Capability.DOM, autostart: false});\n\nexport const enum Events {\n  DOMStorageAdded = 'DOMStorageAdded',\n  DOMStorageRemoved = 'DOMStorageRemoved',\n}\n\nexport type EventTypes = {\n  [Events.DOMStorageAdded]: DOMStorage,\n  [Events.DOMStorageRemoved]: DOMStorage,\n};\n\nexport class DOMStorageDispatcher implements ProtocolProxyApi.DOMStorageDispatcher {\n  private readonly model: DOMStorageModel;\n  constructor(model: DOMStorageModel) {\n    this.model = model;\n  }\n\n  domStorageItemsCleared({storageId}: Protocol.DOMStorage.DomStorageItemsClearedEvent): void {\n    this.model.domStorageItemsCleared(storageId);\n  }\n\n  domStorageItemRemoved({storageId, key}: Protocol.DOMStorage.DomStorageItemRemovedEvent): void {\n    this.model.domStorageItemRemoved(storageId, key);\n  }\n\n  domStorageItemAdded({storageId, key, newValue}: Protocol.DOMStorage.DomStorageItemAddedEvent): void {\n    this.model.domStorageItemAdded(storageId, key, newValue);\n  }\n\n  domStorageItemUpdated({storageId, key, oldValue, newValue}: Protocol.DOMStorage.DomStorageItemUpdatedEvent): void {\n    this.model.domStorageItemUpdated(storageId, key, oldValue, newValue);\n  }\n}\n"]}