{"version":3,"file":"ApplicationPanelSidebar.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/application/ApplicationPanelSidebar.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Common from '../../core/common/common.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as Root from '../../core/root/root.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport {createTarget, stubNoopSettings} from '../../testing/EnvironmentHelpers.js';\nimport {\n  describeWithMockConnection,\n  setMockConnectionResponseHandler,\n} from '../../testing/MockConnection.js';\nimport {createResource, getMainFrame} from '../../testing/ResourceTreeHelpers.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport * as Application from './application.js';\n\nclass SharedStorageTreeElementListener {\n  #sidebar: Application.ApplicationPanelSidebar.ApplicationPanelSidebar;\n  #originsAdded: Array<String> = new Array<String>();\n\n  constructor(sidebar: Application.ApplicationPanelSidebar.ApplicationPanelSidebar) {\n    this.#sidebar = sidebar;\n\n    this.#sidebar.sharedStorageTreeElementDispatcher.addEventListener(\n        Application.ApplicationPanelSidebar.SharedStorageTreeElementDispatcher.Events.SharedStorageTreeElementAdded,\n        this.#treeElementAdded, this);\n  }\n\n  dispose(): void {\n    this.#sidebar.sharedStorageTreeElementDispatcher.removeEventListener(\n        Application.ApplicationPanelSidebar.SharedStorageTreeElementDispatcher.Events.SharedStorageTreeElementAdded,\n        this.#treeElementAdded, this);\n  }\n\n  #treeElementAdded(\n      event: Common.EventTarget.EventTargetEvent<Application.ApplicationPanelSidebar.SharedStorageTreeElementDispatcher\n                                                     .SharedStorageTreeElementAddedEvent>): void {\n    this.#originsAdded.push(event.data.origin);\n  }\n\n  async waitForElementsAdded(expectedCount: number): Promise<void> {\n    while (this.#originsAdded.length < expectedCount) {\n      await this.#sidebar.sharedStorageTreeElementDispatcher.once(\n          Application.ApplicationPanelSidebar.SharedStorageTreeElementDispatcher.Events.SharedStorageTreeElementAdded);\n    }\n  }\n}\n\ndescribeWithMockConnection('ApplicationPanelSidebar', () => {\n  let target: SDK.Target.Target;\n\n  const TEST_ORIGIN_A = 'http://www.example.com/';\n  const TEST_ORIGIN_B = 'http://www.example.org/';\n  const TEST_ORIGIN_C = 'http://www.example.net/';\n\n  const ID = 'AA' as Protocol.Page.FrameId;\n\n  const EVENTS = [\n    {\n      accessTime: 0,\n      type: Protocol.Storage.SharedStorageAccessType.DocumentAppend,\n      mainFrameId: ID,\n      ownerOrigin: TEST_ORIGIN_A,\n      params: {key: 'key0', value: 'value0'} as Protocol.Storage.SharedStorageAccessParams,\n    },\n    {\n      accessTime: 10,\n      type: Protocol.Storage.SharedStorageAccessType.WorkletGet,\n      mainFrameId: ID,\n      ownerOrigin: TEST_ORIGIN_A,\n      params: {key: 'key0'} as Protocol.Storage.SharedStorageAccessParams,\n    },\n    {\n      accessTime: 15,\n      type: Protocol.Storage.SharedStorageAccessType.WorkletLength,\n      mainFrameId: ID,\n      ownerOrigin: TEST_ORIGIN_A,\n      params: {} as Protocol.Storage.SharedStorageAccessParams,\n    },\n    {\n      accessTime: 20,\n      type: Protocol.Storage.SharedStorageAccessType.DocumentClear,\n      mainFrameId: ID,\n      ownerOrigin: TEST_ORIGIN_C,\n      params: {} as Protocol.Storage.SharedStorageAccessParams,\n    },\n    {\n      accessTime: 100,\n      type: Protocol.Storage.SharedStorageAccessType.WorkletSet,\n      mainFrameId: ID,\n      ownerOrigin: TEST_ORIGIN_C,\n      params: {key: 'key0', value: 'value1', ignoreIfPresent: true} as Protocol.Storage.SharedStorageAccessParams,\n    },\n    {\n      accessTime: 150,\n      type: Protocol.Storage.SharedStorageAccessType.WorkletRemainingBudget,\n      mainFrameId: ID,\n      ownerOrigin: TEST_ORIGIN_C,\n      params: {} as Protocol.Storage.SharedStorageAccessParams,\n    },\n  ];\n\n  beforeEach(() => {\n    stubNoopSettings();\n    SDK.ChildTargetManager.ChildTargetManager.install();\n    const tabTarget = createTarget({type: SDK.Target.Type.Tab});\n    createTarget({parentTarget: tabTarget, subtype: 'prerender'});\n    target = createTarget({parentTarget: tabTarget});\n    Root.Runtime.experiments.register(Root.Runtime.ExperimentName.PRELOADING_STATUS_PANEL, '', false);\n    sinon.stub(UI.ViewManager.ViewManager.instance(), 'showView').resolves();  // Silence console error\n    setMockConnectionResponseHandler('Storage.getSharedStorageEntries', () => ({}));\n    setMockConnectionResponseHandler('Storage.setSharedStorageTracking', () => ({}));\n  });\n\n  // Flaking on multiple bots on CQ.\n  it.skip('[crbug.com/1472237] shows cookies for all frames', async () => {\n    Application.ResourcesPanel.ResourcesPanel.instance({forceNew: true});\n    const sidebar = await Application.ResourcesPanel.ResourcesPanel.showAndGetSidebar();\n    const resourceTreeModel = target.model(SDK.ResourceTreeModel.ResourceTreeModel);\n    assert.exists(resourceTreeModel);\n    sinon.stub(resourceTreeModel, 'frames').returns([\n      {\n        url: 'http://www.example.com/',\n        unreachableUrl: () => null,\n        resourceTreeModel: () => resourceTreeModel,\n      } as unknown as SDK.ResourceTreeModel.ResourceTreeFrame,\n      {\n        url: 'http://www.example.com/admin/',\n        unreachableUrl: () => null,\n        resourceTreeModel: () => resourceTreeModel,\n      } as unknown as SDK.ResourceTreeModel.ResourceTreeFrame,\n      {\n        url: 'http://www.example.org/',\n        unreachableUrl: () => null,\n        resourceTreeModel: () => resourceTreeModel,\n      } as unknown as SDK.ResourceTreeModel.ResourceTreeFrame,\n    ]);\n    resourceTreeModel.dispatchEventToListeners(SDK.ResourceTreeModel.Events.CachedResourcesLoaded, resourceTreeModel);\n\n    assert.strictEqual(sidebar.cookieListTreeElement.childCount(), 2);\n    assert.deepStrictEqual(\n        sidebar.cookieListTreeElement.children().map(e => e.title),\n        ['http://www.example.com', 'http://www.example.org']);\n  });\n\n  // Flaking on windows + subsequence test failing\n  it.skip('[crbug.com/1472651] shows shared storages and events for origins using shared storage', async () => {\n    const securityOriginManager = target.model(SDK.SecurityOriginManager.SecurityOriginManager);\n    assert.exists(securityOriginManager);\n    sinon.stub(securityOriginManager, 'securityOrigins').returns([\n      TEST_ORIGIN_A,\n      TEST_ORIGIN_B,\n      TEST_ORIGIN_C,\n    ]);\n\n    const sharedStorageModel = target.model(Application.SharedStorageModel.SharedStorageModel);\n    assert.exists(sharedStorageModel);\n    const setTrackingSpy = sinon.stub(sharedStorageModel.storageAgent, 'invoke_setSharedStorageTracking').resolves({\n      getError: () => undefined,\n    });\n\n    Application.ResourcesPanel.ResourcesPanel.instance({forceNew: true});\n    const sidebar = await Application.ResourcesPanel.ResourcesPanel.showAndGetSidebar();\n\n    const listener = new SharedStorageTreeElementListener(sidebar);\n    const addedPromise = listener.waitForElementsAdded(3);\n\n    const resourceTreeModel = target.model(SDK.ResourceTreeModel.ResourceTreeModel);\n    assert.exists(resourceTreeModel);\n    resourceTreeModel.dispatchEventToListeners(SDK.ResourceTreeModel.Events.CachedResourcesLoaded, resourceTreeModel);\n    await addedPromise;\n\n    assert.isTrue(setTrackingSpy.calledOnceWithExactly({enable: true}));\n\n    assert.strictEqual(sidebar.sharedStorageListTreeElement.childCount(), 3);\n    assert.deepStrictEqual(sidebar.sharedStorageListTreeElement.children().map(e => e.title), [\n      TEST_ORIGIN_A,\n      TEST_ORIGIN_B,\n      TEST_ORIGIN_C,\n    ]);\n\n    sidebar.sharedStorageListTreeElement.view.setDefaultIdForTesting(ID);\n    for (const event of EVENTS) {\n      sharedStorageModel.dispatchEventToListeners(Application.SharedStorageModel.Events.SharedStorageAccess, event);\n    }\n\n    assert.deepEqual(sidebar.sharedStorageListTreeElement.view.getEventsForTesting(), EVENTS);\n  });\n\n  async function getExpectedCall(expectedCall: string): Promise<sinon.SinonSpy> {\n    Application.ResourcesPanel.ResourcesPanel.instance({forceNew: true});\n    const sidebar = await Application.ResourcesPanel.ResourcesPanel.showAndGetSidebar();\n    const components = expectedCall.split('.');\n    assert.strictEqual(components.length, 2);\n    // @ts-ignore\n    const object = sidebar[components[0]];\n    assert.exists(object);\n    return sinon.spy(object, components[1]);\n  }\n\n  const MOCK_EVENT_ITEM = {\n    addEventListener: () => {},\n    securityOrigin: 'https://example.com',\n    databaseId: new Application.IndexedDBModel.DatabaseId({storageKey: ''}, ''),\n  };\n\n  const testUiUpdate = <Events, T extends keyof Events>(\n      event: T, modelClass: new (arg1: SDK.Target.Target) => SDK.SDKModel.SDKModel<Events>, expectedCallString: string,\n      inScope: boolean) => async () => {\n    SDK.TargetManager.TargetManager.instance().setScopeTarget(inScope ? target : null);\n    const expectedCall = await getExpectedCall(expectedCallString);\n    const model = target.model(modelClass);\n    assert.exists(model);\n    const data = [{...MOCK_EVENT_ITEM, model}] as Common.EventTarget.EventPayloadToRestParameters<Events, T>;\n    model.dispatchEventToListeners(event as Platform.TypeScriptUtilities.NoUnion<T>, ...data);\n    await new Promise(resolve => setTimeout(resolve, 0));\n    assert.strictEqual(expectedCall.called, inScope);\n  };\n\n  it('adds interest group event on in scope event',\n     testUiUpdate(\n         Application.InterestGroupStorageModel.Events.InterestGroupAccess,\n         Application.InterestGroupStorageModel.InterestGroupStorageModel, 'interestGroupTreeElement.addEvent', true));\n  it('does not add interest group event on out of scope event',\n     testUiUpdate(\n         Application.InterestGroupStorageModel.Events.InterestGroupAccess,\n         Application.InterestGroupStorageModel.InterestGroupStorageModel, 'interestGroupTreeElement.addEvent', false));\n  it('adds DOM storage on in scope event',\n     testUiUpdate(\n         Application.DOMStorageModel.Events.DOMStorageAdded, Application.DOMStorageModel.DOMStorageModel,\n         'sessionStorageListTreeElement.appendChild', true));\n  it('does not add DOM storage on out of scope event',\n     testUiUpdate(\n         Application.DOMStorageModel.Events.DOMStorageAdded, Application.DOMStorageModel.DOMStorageModel,\n         'sessionStorageListTreeElement.appendChild', false));\n\n  it('adds indexed DB on in scope event',\n     testUiUpdate(\n         Application.IndexedDBModel.Events.DatabaseAdded, Application.IndexedDBModel.IndexedDBModel,\n         'indexedDBListTreeElement.appendChild', true));\n  it('does not add indexed DB on out of scope event',\n     testUiUpdate(\n         Application.IndexedDBModel.Events.DatabaseAdded, Application.IndexedDBModel.IndexedDBModel,\n         'indexedDBListTreeElement.appendChild', false));\n\n  it('adds shared storage on in scope event',\n     testUiUpdate(\n         Application.SharedStorageModel.Events.SharedStorageAdded, Application.SharedStorageModel.SharedStorageModel,\n         'sharedStorageListTreeElement.appendChild', true));\n  it('does not add shared storage on out of scope event',\n     testUiUpdate(\n         Application.SharedStorageModel.Events.SharedStorageAdded, Application.SharedStorageModel.SharedStorageModel,\n         'sharedStorageListTreeElement.appendChild', false));\n\n  const MOCK_GETTER_ITEM = {\n    ...MOCK_EVENT_ITEM,\n    ...MOCK_EVENT_ITEM.databaseId,\n  };\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const testUiUpdateOnScopeChange = <T extends SDK.SDKModel.SDKModel<any>>(\n      modelClass: new (arg1: SDK.Target.Target) => T, getter: keyof T, expectedCallString: string) => async () => {\n    SDK.TargetManager.TargetManager.instance().setScopeTarget(null);\n    const expectedCall = await getExpectedCall(expectedCallString);\n    const model = target.model(modelClass);\n    assert.exists(model);\n    sinon.stub(model, getter).returns([MOCK_GETTER_ITEM]);\n    SDK.TargetManager.TargetManager.instance().setScopeTarget(target);\n    await new Promise(resolve => setTimeout(resolve, 0));\n    assert.strictEqual(expectedCall.called, true);\n  };\n\n  it('adds DOM storage element after scope change',\n     testUiUpdateOnScopeChange(\n         Application.DOMStorageModel.DOMStorageModel, 'storages', 'sessionStorageListTreeElement.appendChild'));\n\n  it('adds shared storage after scope change',\n     testUiUpdateOnScopeChange(\n         Application.SharedStorageModel.SharedStorageModel, 'storages', 'sharedStorageListTreeElement.appendChild'));\n\n  it('adds indexed db after scope change',\n     testUiUpdateOnScopeChange(\n         Application.IndexedDBModel.IndexedDBModel, 'databases', 'indexedDBListTreeElement.appendChild'));\n});\n\ndescribeWithMockConnection('IDBDatabaseTreeElement', () => {\n  beforeEach(() => {\n    stubNoopSettings();\n    Root.Runtime.experiments.register(Root.Runtime.ExperimentName.PRELOADING_STATUS_PANEL, '', false);\n  });\n\n  it('only becomes selectable after database is updated', () => {\n    const target = createTarget();\n    const model = target.model(Application.IndexedDBModel.IndexedDBModel);\n    assert.exists(model);\n    const panel = Application.ResourcesPanel.ResourcesPanel.instance({forceNew: true});\n    const databaseId = new Application.IndexedDBModel.DatabaseId({storageKey: ''}, '');\n    const treeElement = new Application.ApplicationPanelSidebar.IDBDatabaseTreeElement(panel, model, databaseId);\n\n    assert.isFalse(treeElement.selectable);\n    treeElement.update(new Application.IndexedDBModel.Database(databaseId, 1), false);\n    assert.isTrue(treeElement.selectable);\n  });\n});\n\ndescribeWithMockConnection('ResourcesSection', () => {\n  const tests = (inScope: boolean) => () => {\n    let target: SDK.Target.Target;\n    beforeEach(() => {\n      stubNoopSettings();\n      Root.Runtime.experiments.register(Root.Runtime.ExperimentName.PRELOADING_STATUS_PANEL, '', false);\n      SDK.FrameManager.FrameManager.instance({forceNew: true});\n      target = createTarget();\n    });\n\n    it('adds tree elements for a frame and resource', () => {\n      SDK.TargetManager.TargetManager.instance().setScopeTarget(inScope ? target : null);\n      const panel = Application.ResourcesPanel.ResourcesPanel.instance({forceNew: true});\n      const treeElement = new UI.TreeOutline.TreeElement();\n      new Application.ApplicationPanelSidebar.ResourcesSection(panel, treeElement);\n\n      const model = target.model(SDK.ResourceTreeModel.ResourceTreeModel);\n      assert.exists(model);\n\n      assert.strictEqual(treeElement.childCount(), 0);\n      const frame = getMainFrame(target);\n\n      const url = 'http://example.com' as Platform.DevToolsPath.UrlString;\n      assert.strictEqual(treeElement.firstChild()?.childCount() ?? 0, 0);\n      createResource(frame, url, 'text/html', '');\n      assert.strictEqual(treeElement.firstChild()?.childCount() ?? 0, inScope ? 1 : 0);\n    });\n\n    it('picks up existing frames and resource', () => {\n      SDK.TargetManager.TargetManager.instance().setScopeTarget(null);\n      const panel = Application.ResourcesPanel.ResourcesPanel.instance({forceNew: true});\n      const treeElement = new UI.TreeOutline.TreeElement();\n      new Application.ApplicationPanelSidebar.ResourcesSection(panel, treeElement);\n\n      const url = 'http://example.com' as Platform.DevToolsPath.UrlString;\n      createResource(getMainFrame(target), url, 'text/html', '');\n      assert.strictEqual(treeElement.firstChild()?.childCount() ?? 0, 0);\n\n      assert.strictEqual(treeElement.childCount(), 0);\n      SDK.TargetManager.TargetManager.instance().setScopeTarget(inScope ? target : null);\n      assert.strictEqual(treeElement.childCount(), inScope ? 1 : 0);\n      assert.strictEqual(treeElement.firstChild()?.childCount() ?? 0, inScope ? 1 : 0);\n    });\n  };\n\n  describe('in scope', tests(true));\n  describe('out of scope', tests(false));\n});\n"]}