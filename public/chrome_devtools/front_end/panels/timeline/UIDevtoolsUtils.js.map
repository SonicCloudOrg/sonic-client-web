{"version":3,"file":"UIDevtoolsUtils.js","sourceRoot":"","sources":["../../../../../../front_end/panels/timeline/UIDevtoolsUtils.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA4BG;AAEH,OAAO,KAAK,IAAI,MAAM,yBAAyB,CAAC;AAChD,OAAO,KAAK,IAAI,MAAM,yBAAyB,CAAC;AAEhD,OAAO,EAAuB,aAAa,EAAE,gBAAgB,EAAE,mBAAmB,EAAC,MAAM,sBAAsB,CAAC;AAEhH,MAAM,SAAS,GAAG;IAChB;;OAEG;IACH,UAAU,EAAE,aAAa;IACzB;;OAEG;IACH,SAAS,EAAE,YAAY;IACvB;;OAEG;IACH,MAAM,EAAE,QAAQ;IAChB;;OAEG;IACH,WAAW,EAAE,aAAa;IAC1B;;OAEG;IACH,OAAO,EAAE,SAAS;IAClB;;OAEG;IACH,QAAQ,EAAE,UAAU;IACpB;;OAEG;IACH,MAAM,EAAE,QAAQ;IAChB;;OAEG;IACH,IAAI,EAAE,MAAM;IACZ;;OAEG;IACH,OAAO,EAAE,SAAS;IAClB;;OAEG;IACH,UAAU,EAAE,YAAY;IACxB;;OAEG;IACH,SAAS,EAAE,WAAW;IACtB;;OAEG;IACH,SAAS,EAAE,WAAW;IACtB;;OAEG;IACH,GAAG,EAAE,KAAK;IACV;;OAEG;IACH,KAAK,EAAE,OAAO;IACd;;OAEG;IACH,SAAS,EAAE,WAAW;CACvB,CAAC;AACF,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,oCAAoC,EAAE,SAAS,CAAC,CAAC;AAC1F,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AAEtE,IAAI,cAAc,GAET,IAAI,CAAC;AACd,IAAI,UAAU,GAAyB,IAAI,CAAC;AAE5C,MAAM,OAAO,eAAe;IAC1B,MAAM,CAAC,YAAY;QACjB,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,UAAU,CAAC,YAAY,CAAC,KAAK,MAAM,CAAC;IAClE,CAAC;IAED,MAAM,CAAC,gBAAgB;QAGrB,IAAI,cAAc,EAAE,CAAC;YACnB,OAAO,cAAc,CAAC;QACxB,CAAC;QAED,MAAM,IAAI,GAAG,UAAU,CAAC;QACxB,MAAM,UAAU,GAAG,eAAe,CAAC,UAAU,EAAE,CAAC;QAChD,MAAM,OAAO,GAAG,UAAU,CAAC,SAAS,CAAC,CAAC;QACtC,MAAM,WAAW,GAAG,UAAU,CAAC,aAAa,CAAC,CAAC;QAC9C,MAAM,MAAM,GAAG,UAAU,CAAC,QAAQ,CAAC,CAAC;QACpC,MAAM,QAAQ,GAAG,UAAU,CAAC,UAAU,CAAC,CAAC;QACxC,MAAM,KAAK,GAAG,UAAU,CAAC,OAAO,CAAC,CAAC;QAElC,MAAM,WAAW,GAEb,EAAE,CAAC;QAEP,mBAAmB;QACnB,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,mBAAmB,CAAC,aAAa,EAAE,QAAQ,CAAC,CAAC;QAC/E,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,IAAI,mBAAmB,CAAC,eAAe,EAAE,QAAQ,CAAC,CAAC;QACnF,WAAW,CAAC,IAAI,CAAC,iBAAiB,CAAC,GAAG,IAAI,mBAAmB,CAAC,qBAAqB,EAAE,QAAQ,CAAC,CAAC;QAC/F,WAAW,CAAC,IAAI,CAAC,qBAAqB,CAAC,GAAG,IAAI,mBAAmB,CAAC,yBAAyB,EAAE,QAAQ,CAAC,CAAC;QACvG,WAAW,CAAC,IAAI,CAAC,iBAAiB,CAAC,GAAG,IAAI,mBAAmB,CAAC,qBAAqB,EAAE,QAAQ,CAAC,CAAC;QAC/F,WAAW,CAAC,IAAI,CAAC,+BAA+B,CAAC;YAC7C,IAAI,mBAAmB,CAAC,mCAAmC,EAAE,QAAQ,CAAC,CAAC;QAE3E,oBAAoB;QACpB,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,mBAAmB,CAAC,cAAc,EAAE,MAAM,CAAC,CAAC;QAC/E,WAAW,CAAC,IAAI,CAAC,uBAAuB,CAAC,GAAG,IAAI,mBAAmB,CAAC,8BAA8B,EAAE,MAAM,CAAC,CAAC;QAE5G,oBAAoB;QACpB,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,mBAAmB,CAAC,YAAY,EAAE,WAAW,CAAC,CAAC;QAClF,WAAW,CAAC,IAAI,CAAC,mCAAmC,CAAC;YACjD,IAAI,mBAAmB,CAAC,uCAAuC,EAAE,WAAW,CAAC,CAAC;QAElF,kBAAkB;QAClB,WAAW,CAAC,IAAI,CAAC,uBAAuB,CAAC,GAAG,IAAI,mBAAmB,CAAC,2BAA2B,EAAE,OAAO,CAAC,CAAC;QAC1G,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,mBAAmB,CAAC,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;QACxG,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,mBAAmB,CAAC,UAAU,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;QACtG,WAAW,CAAC,IAAI,CAAC,sBAAsB,CAAC,GAAG,IAAI,mBAAmB,CAAC,wBAAwB,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;QAE5G,mBAAmB;QACnB,WAAW,CAAC,IAAI,CAAC,2BAA2B,CAAC,GAAG,IAAI,mBAAmB,CAAC,+BAA+B,EAAE,KAAK,CAAC,CAAC;QAEhH,cAAc,GAAG,WAAW,CAAC;QAC7B,OAAO,WAAW,CAAC;IACrB,CAAC;IAED,MAAM,CAAC,UAAU;QACf,IAAI,UAAU,EAAE,CAAC;YACf,OAAO,UAAU,CAAC;QACpB,CAAC;QACD,UAAU,GAAG;YACX,MAAM,EAAE,IAAI,gBAAgB,CACxB,aAAa,CAAC,MAAM,EAAE,UAAU,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,8BAA8B,EACxF,qBAAqB,CAAC;YAC1B,WAAW,EAAE,IAAI,gBAAgB,CAC7B,aAAa,CAAC,WAAW,EAAE,UAAU,CAAC,SAAS,CAAC,WAAW,CAAC,EAAE,IAAI,EAAE,sBAAsB,EAC1F,uBAAuB,CAAC;YAC5B,OAAO,EAAE,IAAI,gBAAgB,CACzB,aAAa,CAAC,OAAO,EAAE,UAAU,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,IAAI,EAAE,gCAAgC,EAC5F,uBAAuB,CAAC;YAC5B,QAAQ,EAAE,IAAI,gBAAgB,CAC1B,aAAa,CAAC,QAAQ,EAAE,UAAU,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE,IAAI,EAAE,+BAA+B,EAC7F,sBAAsB,CAAC;YAC3B,KAAK,EAAE,IAAI,gBAAgB,CACvB,aAAa,CAAC,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,KAAK,EAAE,6BAA6B,EACvF,oBAAoB,CAAC;YACzB,IAAI,EAAE,IAAI,gBAAgB,CACtB,aAAa,CAAC,IAAI,EAAE,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,2BAA2B,EAAE,kBAAkB,CAAC;YAC3G,OAAO,EAAE,IAAI,gBAAgB,CACzB,aAAa,CAAC,OAAO,EAAE,UAAU,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,8BAA8B,EAC3F,qBAAqB,CAAC;YAC1B,UAAU,EAAE,IAAI,gBAAgB,CAC5B,aAAa,CAAC,UAAU,EAAE,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC,EAAE,KAAK,EAAE,gCAAgC,EACnG,sBAAsB,CAAC;YAC3B,SAAS,EAAE,IAAI,gBAAgB,CAC3B,aAAa,CAAC,SAAS,EAAE,UAAU,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE,KAAK,EAAE,gCAAgC,EACjG,sBAAsB,CAAC;YAC3B,SAAS,EAAE,IAAI,gBAAgB,CAC3B,aAAa,CAAC,SAAS,EAAE,UAAU,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE,KAAK,EAAE,gCAAgC,EACjG,sBAAsB,CAAC;YAC3B,SAAS,EAAE,IAAI,gBAAgB,CAC3B,aAAa,CAAC,SAAS,EAAE,UAAU,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE,KAAK,EAAE,gCAAgC,EACjG,sBAAsB,CAAC;YAC3B,GAAG,EAAE,IAAI,gBAAgB,CACrB,aAAa,CAAC,GAAG,EAAE,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,KAAK,EAAE,+BAA+B,EAAE,sBAAsB,CAAC;YACjH,KAAK,EAAE,IAAI,gBAAgB,CACvB,aAAa,CAAC,KAAK,EAAE,UAAU,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,KAAK,EAAE,4BAA4B,EAAE,mBAAmB,CAAC;SAChH,CAAC;QACF,OAAO,UAAU,CAAC;IACpB,CAAC;IAED,MAAM,CAAC,qBAAqB;QAC1B,OAAO,CAAC,MAAM,EAAE,SAAS,EAAE,UAAU,EAAE,aAAa,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC;IAC3E,CAAC;CACF;AAED,MAAM,CAAN,IAAY,UAgBX;AAhBD,WAAY,UAAU;IACpB,uCAAyB,CAAA;IACzB,2CAA6B,CAAA;IAC7B,uDAAyC,CAAA;IACzC,+DAAiD,CAAA;IACjD,uDAAyC,CAAA;IACzC,yCAA2B,CAAA;IAC3B,sEAAwD,CAAA;IACxD,mFAAqE,CAAA;IACrE,mEAAqD,CAAA;IACrD,uCAAyB,CAAA;IACzB,2FAA6E,CAAA;IAC7E,uCAAyB,CAAA;IACzB,qCAAuB,CAAA;IACvB,+DAAiD,CAAA;IACjD,2EAA6D,CAAA;AAC/D,CAAC,EAhBW,UAAU,KAAV,UAAU,QAgBrB","sourcesContent":["/*\n * Copyright (C) 2019 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Root from '../../core/root/root.js';\n\nimport {type CategoryPalette, EventCategory, TimelineCategory, TimelineRecordStyle} from './EventUICategory.js';\n\nconst UIStrings = {\n  /**\n   *@description Text in Timeline UIUtils of the Performance panel\n   */\n  frameStart: 'Frame Start',\n  /**\n   *@description Text in Timeline UIUtils of the Performance panel\n   */\n  drawFrame: 'Draw Frame',\n  /**\n   *@description Text in Timeline UIUtils of the Performance panel\n   */\n  layout: 'Layout',\n  /**\n   *@description Text in UIDevtools Utils of the Performance panel\n   */\n  rasterizing: 'Rasterizing',\n  /**\n   *@description Text in UIDevtools Utils of the Performance panel\n   */\n  drawing: 'Drawing',\n  /**\n   *@description Text in Timeline UIUtils of the Performance panel\n   */\n  painting: 'Painting',\n  /**\n   *@description Text in Timeline UIUtils of the Performance panel\n   */\n  system: 'System',\n  /**\n   *@description Text in Timeline UIUtils of the Performance panel\n   */\n  idle: 'Idle',\n  /**\n   *@description Category in the Summary view of the Performance panel to indicate time spent to load resources\n   */\n  loading: 'Loading',\n  /**\n   *@description Text in Timeline for the Experience title\n   */\n  experience: 'Experience',\n  /**\n   *@description Category in the Summary view of the Performance panel to indicate time spent in script execution\n   */\n  scripting: 'Scripting',\n  /**\n   *@description Category in the Summary view of the Performance panel to indicate time spent in rendering the web page\n   */\n  rendering: 'Rendering',\n  /**\n   *@description Event category in the Performance panel for time spent in the GPU\n   */\n  gpu: 'GPU',\n  /**\n   *@description Text in Timeline UIUtils of the Performance panel\n   */\n  async: 'Async',\n  /**\n   *@description Text in Timeline UIUtils of the Performance panel\n   */\n  messaging: 'Messaging',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/UIDevtoolsUtils.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nlet eventStylesMap: {\n  [x: string]: TimelineRecordStyle,\n}|null = null;\nlet categories: CategoryPalette|null = null;\n\nexport class UIDevtoolsUtils {\n  static isUiDevTools(): boolean {\n    return Root.Runtime.Runtime.queryParam('uiDevTools') === 'true';\n  }\n\n  static categorizeEvents(): {\n    [x: string]: TimelineRecordStyle,\n  } {\n    if (eventStylesMap) {\n      return eventStylesMap;\n    }\n\n    const type = RecordType;\n    const categories = UIDevtoolsUtils.categories();\n    const drawing = categories['drawing'];\n    const rasterizing = categories['rasterizing'];\n    const layout = categories['layout'];\n    const painting = categories['painting'];\n    const other = categories['other'];\n\n    const eventStyles: {\n      [x: string]: TimelineRecordStyle,\n    } = {};\n\n    // Paint Categories\n    eventStyles[type.ViewPaint] = new TimelineRecordStyle('View::Paint', painting);\n    eventStyles[type.ViewOnPaint] = new TimelineRecordStyle('View::OnPaint', painting);\n    eventStyles[type.ViewPaintChildren] = new TimelineRecordStyle('View::PaintChildren', painting);\n    eventStyles[type.ViewOnPaintBackground] = new TimelineRecordStyle('View::OnPaintBackground', painting);\n    eventStyles[type.ViewOnPaintBorder] = new TimelineRecordStyle('View::OnPaintBorder', painting);\n    eventStyles[type.LayerPaintContentsToDisplayList] =\n        new TimelineRecordStyle('Layer::PaintContentsToDisplayList', painting);\n\n    // Layout Categories\n    eventStyles[type.ViewLayout] = new TimelineRecordStyle('View::Layout', layout);\n    eventStyles[type.ViewLayoutBoundsChanged] = new TimelineRecordStyle('View::Layout(bounds_changed)', layout);\n\n    // Raster Categories\n    eventStyles[type.RasterTask] = new TimelineRecordStyle('RasterTask', rasterizing);\n    eventStyles[type.RasterizerTaskImplRunOnWorkerThread] =\n        new TimelineRecordStyle('RasterizerTaskImpl::RunOnWorkerThread', rasterizing);\n\n    // Draw Categories\n    eventStyles[type.DirectRendererDrawFrame] = new TimelineRecordStyle('DirectRenderer::DrawFrame', drawing);\n    eventStyles[type.BeginFrame] = new TimelineRecordStyle(i18nString(UIStrings.frameStart), drawing, true);\n    eventStyles[type.DrawFrame] = new TimelineRecordStyle(i18nString(UIStrings.drawFrame), drawing, true);\n    eventStyles[type.NeedsBeginFrameChanged] = new TimelineRecordStyle('NeedsBeginFrameChanged', drawing, true);\n\n    // Other Categories\n    eventStyles[type.ThreadControllerImplRunTask] = new TimelineRecordStyle('ThreadControllerImpl::RunTask', other);\n\n    eventStylesMap = eventStyles;\n    return eventStyles;\n  }\n\n  static categories(): CategoryPalette {\n    if (categories) {\n      return categories;\n    }\n    categories = {\n      layout: new TimelineCategory(\n          EventCategory.LAYOUT, i18nString(UIStrings.layout), true, '--app-color-loading-children',\n          '--app-color-loading'),\n      rasterizing: new TimelineCategory(\n          EventCategory.RASTERIZING, i18nString(UIStrings.rasterizing), true, '--app-color-children',\n          '--app-color-scripting'),\n      drawing: new TimelineCategory(\n          EventCategory.DRAWING, i18nString(UIStrings.drawing), true, '--app-color-rendering-children',\n          '--app-color-rendering'),\n      painting: new TimelineCategory(\n          EventCategory.PAINTING, i18nString(UIStrings.painting), true, '--app-color-painting-children',\n          '--app-color-painting'),\n      other: new TimelineCategory(\n          EventCategory.OTHER, i18nString(UIStrings.system), false, '--app-color-system-children',\n          '--app-color-system'),\n      idle: new TimelineCategory(\n          EventCategory.IDLE, i18nString(UIStrings.idle), false, '--app-color-idle-children', '--app-color-idle'),\n      loading: new TimelineCategory(\n          EventCategory.LOADING, i18nString(UIStrings.loading), false, '--app-color-loading-children',\n          '--app-color-loading'),\n      experience: new TimelineCategory(\n          EventCategory.EXPERIENCE, i18nString(UIStrings.experience), false, '--app-color-rendering-children',\n          '--pp-color-rendering'),\n      messaging: new TimelineCategory(\n          EventCategory.MESSAGING, i18nString(UIStrings.messaging), false, '--app-color-messaging-children',\n          '--pp-color-messaging'),\n      scripting: new TimelineCategory(\n          EventCategory.SCRIPTING, i18nString(UIStrings.scripting), false, '--app-color-scripting-children',\n          '--pp-color-scripting'),\n      rendering: new TimelineCategory(\n          EventCategory.RENDERING, i18nString(UIStrings.rendering), false, '--app-color-rendering-children',\n          '--pp-color-rendering'),\n      gpu: new TimelineCategory(\n          EventCategory.GPU, i18nString(UIStrings.gpu), false, '--app-color-painting-children', '--app-color-painting'),\n      async: new TimelineCategory(\n          EventCategory.ASYNC, i18nString(UIStrings.async), false, '--app-color-async-children', '--app-color-async'),\n    };\n    return categories;\n  }\n\n  static getMainCategoriesList(): string[] {\n    return ['idle', 'drawing', 'painting', 'rasterizing', 'layout', 'other'];\n  }\n}\n\nexport enum RecordType {\n  ViewPaint = 'View::Paint',\n  ViewOnPaint = 'View::OnPaint',\n  ViewPaintChildren = 'View::PaintChildren',\n  ViewOnPaintBackground = 'View::OnPaintBackground',\n  ViewOnPaintBorder = 'View::OnPaintBorder',\n  ViewLayout = 'View::Layout',\n  ViewLayoutBoundsChanged = 'View::Layout(bounds_changed)',\n  LayerPaintContentsToDisplayList = 'Layer::PaintContentsToDisplayList',\n  DirectRendererDrawFrame = 'DirectRenderer::DrawFrame',\n  RasterTask = 'RasterTask',\n  RasterizerTaskImplRunOnWorkerThread = 'RasterizerTaskImpl::RunOnWorkerThread',\n  BeginFrame = 'BeginFrame',\n  DrawFrame = 'DrawFrame',\n  NeedsBeginFrameChanged = 'NeedsBeginFrameChanged',\n  ThreadControllerImplRunTask = 'ThreadControllerImpl::RunTask',\n}\n"]}