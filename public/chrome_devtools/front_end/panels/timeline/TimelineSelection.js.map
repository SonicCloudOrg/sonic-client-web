{"version":3,"file":"TimelineSelection.js","sourceRoot":"","sources":["../../../../../../front_end/panels/timeline/TimelineSelection.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,WAAW,MAAM,6BAA6B,CAAC;AAK3D,MAAM,oBAAoB,GAAG,MAAM,CAAC,gBAAgB,CAAC,CAAC;AAGtD,MAAM,OAAO,iBAAiB;IACnB,SAAS,CAAwC;IACjD,OAAO,CAAwC;IAC/C,MAAM,CAAuB;IAEtC,YACI,SAAgD,EAAE,OAA8C,EAChG,MAA4B;QAC9B,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACvB,CAAC;IAED,MAAM,CAAC,aAAa,CAAC,MAA4B;QAE/C,OAAO,MAAM,YAAY,WAAW,CAAC,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,aAAa,CAAC;IACnF,CAAC;IAED,MAAM,CAAC,SAAS,CAAC,KAA8D;QAC7E,OAAO,IAAI,iBAAiB,CACxB,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC,0BAA0B,CAAC,KAAK,CAAC,SAAS,CAAC,EACtE,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC,0BAA0B,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,KAAK,CAAC,CAAC;IACnF,CAAC;IAED,MAAM,CAAC,8CAA8C,CAAC,MAA4B;QAEhF,IAAI,iBAAiB,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,iBAAiB,CAAC,gBAAgB,CAAC,MAAM,CAAC,EAAE,CAAC;YAC1F,OAAO,KAAK,CAAC;QACf,CAAC;QACD,uEAAuE;QACvE,kDAAkD;QAClD,OAAO,WAAW,CAAC,KAAK,CAAC,WAAW,CAAC,qCAAqC,CAAC,MAAM,CAAC,CAAC;IACrF,CAAC;IAED,MAAM,CAAC,qBAAqB,CAAC,MAA4B;QACvD,kHAAkH;QAClH,IAAI,iBAAiB,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,iBAAiB,CAAC,gBAAgB,CAAC,MAAM,CAAC,EAAE,CAAC;YAC1F,OAAO,KAAK,CAAC;QACf,CAAC;QAED,sEAAsE;QACtE,oCAAoC;QACpC,IAAI,WAAW,CAAC,KAAK,CAAC,WAAW,CAAC,qCAAqC,CAAC,MAAM,CAAC,EAAE,CAAC;YAChF,OAAO,KAAK,CAAC;QACf,CAAC;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAED,MAAM,CAAC,cAAc,CAAC,KAAmD;QACvE,MAAM,EAAC,SAAS,EAAE,OAAO,EAAC,GAAG,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC,wBAAwB,CAAC,KAAK,CAAC,CAAC;QACxF,OAAO,IAAI,iBAAiB,CAAC,SAAS,EAAE,WAAW,CAAC,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,OAAO,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IACpH,CAAC;IAED,MAAM,CAAC,gBAAgB,CAAC,MAA4B;QAClD,OAAO,MAAM,KAAK,oBAAoB,CAAC;IACzC,CAAC;IAED,MAAM,CAAC,SAAS,CAAC,SAAiB,EAAE,OAAe;QACjD,OAAO,IAAI,iBAAiB,CACxB,WAAW,CAAC,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,SAAS,CAAC,EAAE,WAAW,CAAC,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,EAChG,oBAAoB,CAAC,CAAC;IAC5B,CAAC;CACF","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as TraceEngine from '../../models/trace/trace.js';\n\ntype PermittedObjectTypes =\n    TraceEngine.Handlers.ModelHandlers.Frames.TimelineFrame|TraceEngine.Types.TraceEvents.TraceEventData|SelectionRange;\n\nconst SelectionRangeSymbol = Symbol('SelectionRange');\nexport type SelectionRange = typeof SelectionRangeSymbol;\n\nexport class TimelineSelection {\n  readonly startTime: TraceEngine.Types.Timing.MilliSeconds;\n  readonly endTime: TraceEngine.Types.Timing.MilliSeconds;\n  readonly object: PermittedObjectTypes;\n\n  constructor(\n      startTime: TraceEngine.Types.Timing.MilliSeconds, endTime: TraceEngine.Types.Timing.MilliSeconds,\n      object: PermittedObjectTypes) {\n    this.startTime = startTime;\n    this.endTime = endTime;\n    this.object = object;\n  }\n\n  static isFrameObject(object: PermittedObjectTypes):\n      object is TraceEngine.Handlers.ModelHandlers.Frames.TimelineFrame {\n    return object instanceof TraceEngine.Handlers.ModelHandlers.Frames.TimelineFrame;\n  }\n\n  static fromFrame(frame: TraceEngine.Handlers.ModelHandlers.Frames.TimelineFrame): TimelineSelection {\n    return new TimelineSelection(\n        TraceEngine.Helpers.Timing.microSecondsToMilliseconds(frame.startTime),\n        TraceEngine.Helpers.Timing.microSecondsToMilliseconds(frame.endTime), frame);\n  }\n\n  static isSyntheticNetworkRequestDetailsEventSelection(object: PermittedObjectTypes):\n      object is TraceEngine.Types.TraceEvents.SyntheticNetworkRequest {\n    if (TimelineSelection.isFrameObject(object) || TimelineSelection.isRangeSelection(object)) {\n      return false;\n    }\n    // At this point we know the selection is a raw trace event, so we just\n    // need to check it's the right type of raw event.\n    return TraceEngine.Types.TraceEvents.isSyntheticNetworkRequestDetailsEvent(object);\n  }\n\n  static isTraceEventSelection(object: PermittedObjectTypes): object is TraceEngine.Types.TraceEvents.TraceEventData {\n    // Trace events are just raw objects, so now we have to confirm it is a trace event by ruling everything else out.\n    if (TimelineSelection.isFrameObject(object) || TimelineSelection.isRangeSelection(object)) {\n      return false;\n    }\n\n    // Although Network Requests are trace events, in TimelineSelection we\n    // treat Network requests distinctly\n    if (TraceEngine.Types.TraceEvents.isSyntheticNetworkRequestDetailsEvent(object)) {\n      return false;\n    }\n    return true;\n  }\n\n  static fromTraceEvent(event: TraceEngine.Types.TraceEvents.TraceEventData): TimelineSelection {\n    const {startTime, endTime} = TraceEngine.Helpers.Timing.eventTimingsMilliSeconds(event);\n    return new TimelineSelection(startTime, TraceEngine.Types.Timing.MilliSeconds(endTime || (startTime + 1)), event);\n  }\n\n  static isRangeSelection(object: PermittedObjectTypes): object is SelectionRange {\n    return object === SelectionRangeSymbol;\n  }\n\n  static fromRange(startTime: number, endTime: number): TimelineSelection {\n    return new TimelineSelection(\n        TraceEngine.Types.Timing.MilliSeconds(startTime), TraceEngine.Types.Timing.MilliSeconds(endTime),\n        SelectionRangeSymbol);\n  }\n}\n"]}