{"version":3,"file":"LayoutShiftsTrackAppender.test.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/timeline/track_appenders/LayoutShiftsTrackAppender.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as TraceModel from '../../../models/trace/trace.js';\nimport {describeWithEnvironment} from '../../../testing/EnvironmentHelpers.js';\nimport {TraceLoader} from '../../../testing/TraceLoader.js';\nimport * as PerfUI from '../../../ui/legacy/components/perf_ui/perf_ui.js';\nimport * as Timeline from '../timeline.js';\n\nfunction initTrackAppender(\n    flameChartData: PerfUI.FlameChart.FlameChartTimelineData, traceParsedData: TraceModel.Handlers.Types.TraceParseData,\n    entryData: Timeline.TimelineFlameChartDataProvider.TimelineFlameChartEntry[],\n    entryTypeByLevel: Timeline.TimelineFlameChartDataProvider.EntryType[]):\n    Timeline.LayoutShiftsTrackAppender.LayoutShiftsTrackAppender {\n  const compatibilityTracksAppender = new Timeline.CompatibilityTracksAppender.CompatibilityTracksAppender(\n      flameChartData, traceParsedData, entryData, entryTypeByLevel);\n  return compatibilityTracksAppender.layoutShiftsTrackAppender();\n}\n\ndescribeWithEnvironment('LayoutShiftsTrackAppender', function() {\n  async function renderTrackAppender(context: Mocha.Context|Mocha.Suite, trace: string): Promise<{\n    entryTypeByLevel: Timeline.TimelineFlameChartDataProvider.EntryType[],\n    flameChartData: PerfUI.FlameChart.FlameChartTimelineData,\n    layoutShiftsTrackAppender: Timeline.LayoutShiftsTrackAppender.LayoutShiftsTrackAppender,\n    entryData: Timeline.TimelineFlameChartDataProvider.TimelineFlameChartEntry[],\n    traceParsedData: Readonly<TraceModel.Handlers.Types.TraceParseData>,\n  }> {\n    const entryTypeByLevel: Timeline.TimelineFlameChartDataProvider.EntryType[] = [];\n    const entryData: Timeline.TimelineFlameChartDataProvider.TimelineFlameChartEntry[] = [];\n    const flameChartData = PerfUI.FlameChart.FlameChartTimelineData.createEmpty();\n    const traceParsedData = await TraceLoader.traceEngine(context, trace);\n    const layoutShiftsTrackAppender = initTrackAppender(flameChartData, traceParsedData, entryData, entryTypeByLevel);\n    layoutShiftsTrackAppender.appendTrackAtLevel(0);\n\n    return {\n      entryTypeByLevel,\n      traceParsedData,\n      flameChartData,\n      layoutShiftsTrackAppender,\n      entryData,\n    };\n  }\n\n  it('marks all levels used by the track with the TrackAppender type', async function() {\n    const {entryTypeByLevel} = await renderTrackAppender(this, 'cls-single-frame.json.gz');\n    // Only one row of layout shifts.\n    assert.strictEqual(entryTypeByLevel.length, 1);\n    assert.deepEqual(entryTypeByLevel, [\n      Timeline.TimelineFlameChartDataProvider.EntryType.TrackAppender,\n    ]);\n  });\n\n  it('does not append anything if there are no layout shifts', async function() {\n    // No layout shifts.\n    const {entryTypeByLevel} = await renderTrackAppender(this, 'animation.json.gz');\n    assert.lengthOf(entryTypeByLevel, 0);\n  });\n\n  it('creates a flamechart group', async function() {\n    const {flameChartData} = await renderTrackAppender(this, 'cls-single-frame.json.gz');\n    assert.strictEqual(flameChartData.groups.length, 1);\n    assert.strictEqual(flameChartData.groups[0].name, 'Layout Shifts');\n  });\n\n  it('adds all layout shifts with the correct start times', async function() {\n    const {flameChartData, traceParsedData, entryData} = await renderTrackAppender(this, 'cls-single-frame.json.gz');\n    const events = traceParsedData.LayoutShifts.clusters.flatMap(c => c.events);\n    for (const event of events) {\n      const markerIndex = entryData.indexOf(event);\n      assert.exists(markerIndex);\n      assert.strictEqual(\n          flameChartData.entryStartTimes[markerIndex], TraceModel.Helpers.Timing.microSecondsToMilliseconds(event.ts));\n    }\n  });\n\n  it('sets all layout shifts to be 5ms in duration', async function() {\n    const {flameChartData, traceParsedData, entryData} = await renderTrackAppender(this, 'cls-single-frame.json.gz');\n    const events = traceParsedData.LayoutShifts.clusters.flatMap(c => c.events);\n    for (const event of events) {\n      const markerIndex = entryData.indexOf(event);\n      assert.exists(markerIndex);\n      assert.strictEqual(flameChartData.entryTotalTimes[markerIndex], 5);\n    }\n  });\n\n  it('returns the correct title for a layout shift', async function() {\n    const {layoutShiftsTrackAppender, traceParsedData} = await renderTrackAppender(this, 'cls-single-frame.json.gz');\n    const shifts = traceParsedData.LayoutShifts.clusters.flatMap(c => c.events);\n    const title = layoutShiftsTrackAppender.titleForEvent(shifts[0]);\n    assert.strictEqual(title, 'Layout shift');\n  });\n\n  it('shows \"Layout shift\" text on hover', async function() {\n    const {layoutShiftsTrackAppender, traceParsedData} = await renderTrackAppender(this, 'cls-single-frame.json.gz');\n    const shifts = traceParsedData.LayoutShifts.clusters.flatMap(c => c.events);\n    const info = layoutShiftsTrackAppender.highlightedEntryInfo(shifts[0]);\n    assert.deepEqual(info, {\n      title: 'Layout shift',\n      formattedTime: '',\n    });\n  });\n});\n"]}