{"version":3,"file":"ThreadAppender.test.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/timeline/track_appenders/ThreadAppender.test.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAG7B,OAAO,KAAK,IAAI,MAAM,4BAA4B,CAAC;AACnD,OAAO,KAAK,GAAG,MAAM,0BAA0B,CAAC;AAChD,OAAO,KAAK,QAAQ,MAAM,sCAAsC,CAAC;AACjE,OAAO,KAAK,UAAU,MAAM,gCAAgC,CAAC;AAC7D,OAAO,KAAK,SAAS,MAAM,wCAAwC,CAAC;AACpE,OAAO,EAAC,uBAAuB,EAAC,MAAM,wCAAwC,CAAC;AAC/E,OAAO,EACL,2BAA2B,IAAI,uBAAuB,EACtD,eAAe,EACf,iCAAiC,GAClC,MAAM,kCAAkC,CAAC;AAC1C,OAAO,EAAC,WAAW,EAAC,MAAM,iCAAiC,CAAC;AAC5D,OAAO,KAAK,MAAM,MAAM,kDAAkD,CAAC;AAC3E,OAAO,KAAK,QAAQ,MAAM,gBAAgB,CAAC;AAE3C,SAAS,iBAAiB,CACtB,cAAwD,EACxD,eAAyD,EACzD,SAA4E,EAC5E,gBAAqE;IAEvE,iCAAiC,EAAE,CAAC;IACpC,MAAM,2BAA2B,GAAG,IAAI,QAAQ,CAAC,2BAA2B,CAAC,2BAA2B,CACpG,cAAc,EAAE,eAAe,EAAE,SAAS,EAAE,gBAAgB,CAAC,CAAC;IAClE,OAAO,2BAA2B,CAAC,eAAe,EAAE,CAAC;AACvD,CAAC;AACD,KAAK,UAAU,8BAA8B,CAAC,OAAkC,EAAE,KAAa;IAO7F,MAAM,gBAAgB,GAAwD,EAAE,CAAC;IACjF,MAAM,SAAS,GAAsE,EAAE,CAAC;IACxF,MAAM,cAAc,GAAG,MAAM,CAAC,UAAU,CAAC,sBAAsB,CAAC,WAAW,EAAE,CAAC;IAC9E,MAAM,eAAe,GAAG,MAAM,WAAW,CAAC,WAAW,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IACtE,MAAM,eAAe,GAAG,iBAAiB,CAAC,cAAc,EAAE,eAAe,EAAE,SAAS,EAAE,gBAAgB,CAAC,CAAC;IACxG,IAAI,KAAK,GAAG,CAAC,CAAC;IACd,KAAK,MAAM,QAAQ,IAAI,eAAe,EAAE,CAAC;QACvC,KAAK,GAAG,QAAQ,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;IAC7C,CAAC;IACD,OAAO;QACL,gBAAgB;QAChB,eAAe;QACf,cAAc;QACd,eAAe;QACf,SAAS;KACV,CAAC;AACJ,CAAC;AAED,SAAS,mCAAmC,CAAC,cAAwD;IAMnG,MAAM,gBAAgB,GAAwD,EAAE,CAAC;IACjF,MAAM,SAAS,GAAsE,EAAE,CAAC;IACxF,MAAM,cAAc,GAAG,MAAM,CAAC,UAAU,CAAC,sBAAsB,CAAC,WAAW,EAAE,CAAC;IAE9E,MAAM,eAAe,GAAG,iBAAiB,CAAC,cAAc,EAAE,cAAc,EAAE,SAAS,EAAE,gBAAgB,CAAC,CAAC;IACvG,IAAI,KAAK,GAAG,CAAC,CAAC;IACd,KAAK,MAAM,QAAQ,IAAI,eAAe,EAAE,CAAC;QACvC,KAAK,GAAG,QAAQ,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;IAC7C,CAAC;IAED,OAAO;QACL,gBAAgB;QAChB,cAAc;QACd,eAAe;QACf,SAAS;KACV,CAAC;AACJ,CAAC;AAED,uBAAuB,CAAC,gBAAgB,EAAE;IACxC,EAAE,CAAC,sDAAsD,EAAE,KAAK;QAC9D,MAAM,EAAC,eAAe,EAAC,GAAG,MAAM,8BAA8B,CAAC,IAAI,EAAE,2BAA2B,CAAC,CAAC;QAClG,MAAM,qBAAqB,GAAG;YAC5B,QAAQ;YACR,QAAQ;YACR,QAAQ;SACT,CAAC;QACF,MAAM,CAAC,eAAe,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,YAAY,CAAC,EAAE,qBAAqB,CAAC,CAAC;IAC1F,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,6CAA6C,EAAE,KAAK;QACrD,MAAM,EAAC,cAAc,EAAC,GAAG,MAAM,8BAA8B,CAAC,IAAI,EAAE,2CAA2C,CAAC,CAAC;QACjH,MAAM,CAAC,WAAW,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,+BAA+B,CAAC,CAAC;QACnF,MAAM,CAAC,WAAW,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,kCAAkC,CAAC,CAAC;IACxF,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,+EAA+E,EAAE,KAAK;QACvF,MAAM,EAAC,cAAc,EAAC,GAAG,MAAM,8BAA8B,CAAC,IAAI,EAAE,2BAA2B,CAAC,CAAC;QACjG,MAAM,CAAC,WAAW,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,+BAA+B,CAAC,CAAC;QACnF,MAAM,CAAC,MAAM,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,0CAA0C,CAAC,CAAC,CAAC;QACpG,MAAM,CAAC,WAAW,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,oBAAoB,CAAC,CAAC;IAC1E,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,gEAAgE,EAAE,KAAK;QACxE,MAAM,EAAC,gBAAgB,EAAC,GAAG,MAAM,8BAA8B,CAAC,IAAI,EAAE,2BAA2B,CAAC,CAAC;QACnG,2DAA2D;QAC3D,MAAM,kBAAkB,GAAG;;;;;;;;;;;SAW1B,CAAC;QACF,MAAM,CAAC,eAAe,CAAC,gBAAgB,EAAE,kBAAkB,CAAC,CAAC;IAC/D,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,0DAA0D,EAAE,KAAK;QAClE,MAAM,EAAC,cAAc,EAAC,GAAG,MAAM,8BAA8B,CAAC,IAAI,EAAE,0BAA0B,CAAC,CAAC;QAChG,MAAM,kBAAkB,GAAG;YACzB,+CAA+C;YAC/C,QAAQ;YACR,qBAAqB;YACrB,qBAAqB;YACrB,aAAa;YACb,sBAAsB;SACvB,CAAC;QACF,MAAM,CAAC,eAAe,CAAC,cAAc,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,kBAAkB,CAAC,CAAC;IACrF,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,sDAAsD,EAAE,KAAK;QAC9D,MAAM,EAAC,cAAc,EAAC,GAAG,MAAM,8BAA8B,CAAC,IAAI,EAAE,0BAA0B,CAAC,CAAC;QAChG,oEAAoE;QACpE,iDAAiD;QACjD,MAAM,CAAC,WAAW,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;QAC5D,MAAM,CAAC,WAAW,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;QAC/D,MAAM,CAAC,WAAW,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;QAEnE,8DAA8D;QAC9D,+DAA+D;QAC/D,SAAS;QACT,MAAM,CAAC,WAAW,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,qBAAqB,CAAC,CAAC;QACzE,MAAM,CAAC,WAAW,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;QAC9D,MAAM,CAAC,WAAW,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;QAEnE,MAAM,CAAC,WAAW,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,qBAAqB,CAAC,CAAC;QACzE,MAAM,CAAC,WAAW,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;QAC9D,MAAM,CAAC,WAAW,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;IACrE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,oDAAoD,EAAE,KAAK;QAC5D,MAAM,EAAC,cAAc,EAAC,GAAG,MAAM,8BAA8B,CAAC,IAAI,EAAE,2BAA2B,CAAC,CAAC;QACjG,MAAM,kBAAkB,GAAG;YACzB,+BAA+B;YAC/B,aAAa;YACb,sBAAsB;YACtB,sBAAsB;SACvB,CAAC;QACF,MAAM,CAAC,eAAe,CAAC,cAAc,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,kBAAkB,CAAC,CAAC;IACrF,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,uDAAuD,EAAE,KAAK,IAAI,EAAE;QACrE,MAAM,EAAC,cAAc,EAAC,GAAG,MAAM,8BAA8B,CAAC,IAAI,EAAE,+BAA+B,CAAC,CAAC;QACrG,oDAAoD;QACpD,MAAM,CAAC,MAAM,CAAC,cAAc,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;aACjC,QAAQ,CAAC,yBAA8D,CAAC,CAAC,CAAC;IAC/F,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,8DAA8D,EAAE,KAAK,IAAI,EAAE;QAC5E,MAAM,EAAC,eAAe,EAAE,eAAe,EAAC,GACpC,MAAM,8BAA8B,CAAC,IAAI,EAAE,+BAA+B,CAAC,CAAC;QAChF,MAAM,KAAK,GAAG,eAAe,CAAC,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;YAClE,OAAO,KAAK,CAAC,IAAI,KAAK,+BAA+B,CAAC;QACxD,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,KAAK,EAAE,CAAC;YACX,MAAM,IAAI,KAAK,CAAC,uBAAuB,CAAC,CAAC;QAC3C,CAAC;QACD,MAAM,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE,oBAAoB,CAAC,CAAC;IACpF,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,yCAAyC,EAAE,KAAK;QACjD,MAAM,EAAC,cAAc,EAAC,GAAG,MAAM,8BAA8B,CAAC,IAAI,EAAE,qBAAqB,CAAC,CAAC;QAC3F,MAAM,kBAAkB,GAAG;YACzB,oFAAoF;YACpF,yFAAyF;YACzF,yFAAyF;YACzF,aAAa;YACb,sBAAsB;YACtB,sBAAsB;SACvB,CAAC;QACF,MAAM,CAAC,eAAe,CAAC,cAAc,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,kBAAkB,CAAC,CAAC;IACrF,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,gDAAgD,EAAE,KAAK;QACxD,MAAM,EAAC,eAAe,EAAE,eAAe,EAAC,GAAG,MAAM,8BAA8B,CAAC,IAAI,EAAE,2BAA2B,CAAC,CAAC;QACnH,MAAM,MAAM,GAAG,eAAe,CAAC,QAAQ,EAAE,eAAe,CAAC;QACzD,IAAI,CAAC,MAAM,EAAE,CAAC;YACZ,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC;QACpD,CAAC;QACD,MAAM,KAAK,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1D,MAAM,CAAC,WAAW,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;IACpC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,qDAAqD,EAAE,KAAK;QAC7D,MAAM,EAAC,eAAe,EAAE,eAAe,EAAC,GACpC,MAAM,8BAA8B,CAAC,IAAI,EAAE,gCAAgC,CAAC,CAAC;QACjF,MAAM,MAAM,GAAG,eAAe,CAAC,QAAQ,EAAE,eAAe,CAAC;QACzD,IAAI,CAAC,MAAM,EAAE,CAAC;YACZ,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC;QACpD,CAAC;QACD,MAAM,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;YACrC,OAAO,UAAU,CAAC,KAAK,CAAC,WAAW,CAAC,oBAAoB,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,KAAK,OAAO,CAAC;QACtG,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,UAAU,EAAE,CAAC;YAChB,MAAM,IAAI,KAAK,CAAC,qCAAqC,CAAC,CAAC;QACzD,CAAC;QACD,MAAM,KAAK,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;QAC3D,MAAM,CAAC,WAAW,CAAC,KAAK,EAAE,cAAc,CAAC,CAAC;IAC5C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,8CAA8C,EAAE,KAAK;QACtD,MAAM,EAAC,eAAe,EAAE,eAAe,EAAC,GAAG,MAAM,8BAA8B,CAAC,IAAI,EAAE,2BAA2B,CAAC,CAAC;QACnH,MAAM,eAAe,GAAG,eAAe,CAAC,QAAQ,CAAC;QACjD,IAAI,CAAC,eAAe,EAAE,CAAC;YACrB,MAAM,IAAI,KAAK,CAAC,8BAA8B,CAAC,CAAC;QAClD,CAAC;QACD,MAAM,CAAC,OAAO,CAAC,GAAG,eAAe,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC;QACrD,MAAM,CAAC,MAAM,CAAC,GAAG,OAAO,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;QAC1C,MAAM,YAAY,GAAG,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC,WAAW,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;QAEvG,IAAI,CAAC,YAAY,EAAE,CAAC;YAClB,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC;QACpD,CAAC;QACD,MAAM,aAAa,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;QACxE,MAAM,CAAC,WAAW,CAAC,aAAa,EAAE,aAAa,CAAC,CAAC;QACjD,MAAM,CAAC,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;QAC5D,MAAM,CAAC,WAAW,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;IAC7B,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mEAAmE,EAAE,KAAK;QAC3E,MAAM,EAAC,eAAe,EAAE,eAAe,EAAC,GAAG,MAAM,8BAA8B,CAAC,IAAI,EAAE,2BAA2B,CAAC,CAAC;QACnH,MAAM,EAAC,QAAQ,EAAE,OAAO,EAAC,GAAG,eAAe,CAAC;QAC5C,MAAM,CAAC,OAAO,CAAC,GAAG,QAAQ,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC;QAC9C,MAAM,CAAC,MAAM,CAAC,GAAG,OAAO,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;QAC1C,MAAM,YAAY,GAAG,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;QAEvF,IAAI,CAAC,YAAY,IAAI,YAAY,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;YAC/C,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC;QACpD,CAAC;QACD,MAAM,KAAK,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;QAC9B,MAAM,cAAc,GAChB,OAAO,CAAC,iBAAiB,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,aAAa,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QACnG,IAAI,CAAC,cAAc,EAAE,CAAC;YACpB,MAAM,IAAI,KAAK,CAAC,iCAAiC,CAAC,CAAC;QACrD,CAAC;QACD,MAAM,aAAa,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC9D,MAAM,CAAC,WAAW,CAAC,aAAa,EAAE,aAAa,CAAC,CAAC;QACjD,MAAM,YAAY,GAAG,cAAc,CAAC,YAAY,CAAC;QACjD,cAAc,CAAC,eAAe,CAAC,4BAA4B,CAAC,CAAC;QAC7D,MAAM,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE,4BAA4B,CAAC,CAAC;QAC1F,oCAAoC;QACpC,cAAc,CAAC,eAAe,CAAC,YAAY,CAAC,CAAC;IAC/C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,wDAAwD,EAAE,KAAK;QAChE,MAAM,EAAC,eAAe,EAAE,eAAe,EAAC,GAAG,MAAM,8BAA8B,CAAC,IAAI,EAAE,2BAA2B,CAAC,CAAC;QACnH,MAAM,MAAM,GAAG,eAAe,CAAC,QAAQ,EAAE,eAAe,CAAC;QACzD,IAAI,CAAC,MAAM,EAAE,CAAC;YACZ,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC;QACpD,CAAC;QACD,MAAM,IAAI,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;QAChE,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;QACvC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,EAAE,cAAc,CAAC,CAAC;IACzD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,iFAAiF,EAAE,KAAK;QACzF,MAAM,EAAC,eAAe,EAAE,eAAe,EAAC,GAAG,MAAM,8BAA8B,CAAC,IAAI,EAAE,2BAA2B,CAAC,CAAC;QACnH,MAAM,MAAM,GAAG,eAAe,CAAC,QAAQ,EAAE,eAAe,CAAC;QACzD,IAAI,CAAC,MAAM,EAAE,CAAC;YACZ,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC;QACpD,CAAC;QACD,MAAM,iBAAiB,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7E,MAAM,CAAC,WAAW,CAAC,iBAAiB,CAAC,aAAa,EAAE,cAAc,CAAC,CAAC;QAEpE,MAAM,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC;QAC5D,IAAI,CAAC,QAAQ,EAAE,CAAC;YACd,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC;QAC9C,CAAC;QACD,MAAM,gBAAgB,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC;QAC3E,MAAM,CAAC,WAAW,CAAC,gBAAgB,CAAC,aAAa,EAAE,+BAA+B,CAAC,CAAC;IACtF,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,+CAA+C,EAAE,KAAK;QACvD,MAAM,EAAC,eAAe,EAAE,eAAe,EAAC,GAAG,MAAM,8BAA8B,CAAC,IAAI,EAAE,2BAA2B,CAAC,CAAC;QACnH,MAAM,MAAM,GAAG,eAAe,CAAC,QAAQ,EAAE,eAAe,CAAC;QACzD,IAAI,CAAC,MAAM,EAAE,CAAC;YACZ,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC;QACpD,CAAC;QACD,MAAM,iBAAiB,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7E,MAAM,CAAC,WAAW,CAAC,iBAAiB,CAAC,aAAa,EAAE,cAAc,CAAC,CAAC;QAEpE,MAAM,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC;QAC5D,IAAI,CAAC,QAAQ,EAAE,CAAC;YACd,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC;QAC9C,CAAC;QACD,MAAM,gBAAgB,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC;QAC3E,MAAM,CAAC,WAAW,CAAC,gBAAgB,CAAC,aAAa,EAAE,+BAA+B,CAAC,CAAC;IACtF,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,yDAAyD,EAAE,KAAK;QACjE,MAAM,EAAC,eAAe,EAAE,eAAe,EAAC,GAAG,MAAM,8BAA8B,CAAC,IAAI,EAAE,2BAA2B,CAAC,CAAC;QACnH,MAAM,eAAe,GAAG,eAAe,CAAC,QAAQ,CAAC;QACjD,IAAI,CAAC,eAAe,EAAE,CAAC;YACrB,MAAM,IAAI,KAAK,CAAC,8BAA8B,CAAC,CAAC;QAClD,CAAC;QACD,MAAM,CAAC,OAAO,CAAC,GAAG,eAAe,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC;QACrD,MAAM,CAAC,MAAM,CAAC,GAAG,OAAO,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;QAC1C,MAAM,YAAY,GAAG,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC,WAAW,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;QAEvG,IAAI,CAAC,YAAY,EAAE,CAAC;YAClB,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC;QACpD,CAAC;QAED,MAAM,IAAI,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC,oBAAoB,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;QACtE,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE,aAAa,CAAC,CAAC;QAC9C,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,EAAE,YAAY,CAAC,CAAC;IACvD,CAAC,CAAC,CAAC;IACH,EAAE,CAAC,0BAA0B,EAAE,KAAK;QAClC,MAAM,EAAC,eAAe,EAAE,cAAc,EAAE,SAAS,EAAC,GAC9C,MAAM,8BAA8B,CAAC,IAAI,EAAE,2BAA2B,CAAC,CAAC;QAC5E,MAAM,MAAM,GAAG,eAAe,CAAC,QAAQ,EAAE,eAAe,CAAC;QACzD,IAAI,CAAC,MAAM,EAAE,CAAC;YACZ,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC;QACpD,CAAC;QACD,MAAM,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC;QAC5D,IAAI,CAAC,QAAQ,EAAE,CAAC;YACd,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC;QAC9C,CAAC;QACD,MAAM,UAAU,GAAG,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QAC/C,MAAM,mBAAmB,GAAG,cAAc,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC;QACxE,MAAM,CAAC,SAAS,CAAC,mBAAmB,EAAE;YACpC,EAAC,IAAI,sFAA6D,EAAC;YACnE;gBACE,IAAI,gEAAkD;gBACtD,aAAa,EAAE,UAAU,CAAC,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,MAAM,CAAC;aAC5D;SACF,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,2DAA2D,EAAE,KAAK;QACnE,MAAM,EAAC,eAAe,EAAE,cAAc,EAAE,SAAS,EAAC,GAC9C,MAAM,8BAA8B,CAAC,IAAI,EAAE,2BAA2B,CAAC,CAAC;QAC5E,MAAM,MAAM,GAAG,eAAe,CAAC,QAAQ,EAAE,eAAe,CAAC;QACzD,IAAI,CAAC,MAAM,EAAE,CAAC;YACZ,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC;QACpD,CAAC;QACD,MAAM,UAAU,GAAG,SAAS,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;QAChD,MAAM,mBAAmB,GAAG,cAAc,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC;QACxE,MAAM,CAAC,WAAW,CAAC,mBAAmB,CAAC,CAAC;IAC1C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,8DAA8D,EAAE,KAAK;QACtE,MAAM,EAAC,cAAc,EAAC,GAAG,MAAM,8BAA8B,CAAC,IAAI,EAAE,gCAAgC,CAAC,CAAC;QACtG,MAAM,kBAAkB,GAAG;YACzB,8FAA8F;YAC9F,aAAa;YACb,mEAAmE;YACnE,+DAA+D;YAC/D,aAAa;YACb,sBAAsB;YACtB,8GAA8G;YAC9G,sBAAsB;SACvB,CAAC;QACF,MAAM,CAAC,eAAe,CAAC,cAAc,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,kBAAkB,CAAC,CAAC;IACrF,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,gBAAgB,EAAE,GAAG,EAAE;QAC9B,IAAI,iBAA+D,CAAC;QACpE,UAAU,CAAC,GAAG,EAAE;YACd,MAAM,aAAa,GAAG,GAAG,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAC,QAAQ,EAAE,IAAI,EAAC,CAAC,CAAC;YACjF,MAAM,SAAS,GAAG,SAAS,CAAC,SAAS,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAC,QAAQ,EAAE,IAAI,EAAC,CAAC,CAAC;YAC/E,MAAM,eAAe,GAAG,IAAI,QAAQ,CAAC,eAAe,CAAC,eAAe,CAAC,aAAa,EAAE,SAAS,CAAC,CAAC;YAC/F,MAAM,wBAAwB,GAAG,QAAQ,CAAC,wBAAwB,CAAC,wBAAwB,CAAC,QAAQ,CAAC;gBACnG,QAAQ,EAAE,IAAI;gBACd,eAAe;gBACf,aAAa;aACd,CAAC,CAAC;YACH,iBAAiB,GAAG,QAAQ,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,QAAQ,CAAC;gBACxE,QAAQ,EAAE,IAAI;gBACd,wBAAwB;aACzB,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QACH,SAAS,CAAC,GAAG,EAAE;YACb,GAAG,CAAC,aAAa,CAAC,aAAa,CAAC,cAAc,EAAE,CAAC;YACjD,SAAS,CAAC,SAAS,CAAC,aAAa,CAAC,cAAc,EAAE,CAAC;YACnD,QAAQ,CAAC,wBAAwB,CAAC,wBAAwB,CAAC,cAAc,EAAE,CAAC;YAC5E,QAAQ,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,cAAc,EAAE,CAAC;QAChE,CAAC,CAAC,CAAC;QACH,EAAE,CAAC,0DAA0D,EAAE,KAAK;YAClE,MAAM,mBAAmB,GAAG,MAAM,8BAA8B,CAAC,IAAI,EAAE,2BAA2B,CAAC,CAAC;YACpG,MAAM,qBAAqB,GAAG,mBAAmB,CAAC,cAAc,CAAC;YACjE,MAAM,0BAA0B,GAAG,qBAAqB,CAAC,eAAe,CAAC,MAAM,CAAC;YAChF,MAAM,gBAAgB,GAClB,yDAA4F,CAAC;YACjG,6EAA6E;YAC7E,iBAAiB,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC;YAClD,MAAM,iBAAiB,GAAG,MAAM,8BAA8B,CAAC,IAAI,EAAE,2BAA2B,CAAC,CAAC;YAClG,MAAM,mBAAmB,GAAG,iBAAiB,CAAC,cAAc,CAAC;YAC7D,MAAM,yBAAyB,GAAG,mBAAmB,CAAC,eAAe,CAAC,MAAM,CAAC;YAC7E,sEAAsE;YACtE,mEAAmE;YACnE,MAAM,CAAC,OAAO,CAAC,yBAAyB,EAAE,0BAA0B,CAAC,CAAC;YAEtE,iEAAiE;YACjE,iBAAiB,CAAC,eAAe,CAAC,gBAAgB,CAAC,CAAC;YACpD,MAAM,kBAAkB,GAAG,MAAM,8BAA8B,CAAC,IAAI,EAAE,2BAA2B,CAAC,CAAC;YACnG,MAAM,oBAAoB,GAAG,kBAAkB,CAAC,cAAc,CAAC;YAC/D,MAAM,0BAA0B,GAAG,oBAAoB,CAAC,eAAe,CAAC,MAAM,CAAC;YAC/E,0FAA0F;YAC1F,MAAM,CAAC,WAAW,CAAC,0BAA0B,EAAE,0BAA0B,CAAC,CAAC;QAC7E,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,8DAA8D,EAAE,KAAK;YACtE,MAAM,gBAAgB,GAAG,mCAAsE,CAAC;YAEhG,mEAAmE;YACnE,6CAA6C;YAC7C,2BAA2B;YAC3B,2BAA2B;YAC3B,eAAe;YACf,UAAU;YACV,EAAE;YACF,4DAA4D;YAC5D,yBAAyB;YACzB,2BAA2B;YAC3B,0BAA0B;YAC1B,UAAU;YACV,MAAM,UAAU,GAAG,eAAe,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;YAClD,MAAM,UAAU,GAAG,eAAe,CAAC,eAAe,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;YAC9D,UAAU,CAAC,SAAS,CAAC,GAAG,GAAG,gBAAgB,CAAC;YAC5C,MAAM,UAAU,GAAG,eAAe,CAAC,eAAe,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;YAC7D,UAAU,CAAC,SAAS,CAAC,GAAG,GAAG,gBAAgB,CAAC;YAC5C,MAAM,UAAU,GAAG,eAAe,CAAC,eAAe,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;YAC7D,UAAU,CAAC,SAAS,CAAC,GAAG,GAAG,gBAAgB,CAAC;YAC5C,MAAM,UAAU,GAAG,eAAe,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;YACjD,MAAM,UAAU,GAAG,eAAe,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;YAElD,MAAM,UAAU,GAAG,CAAC,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;YAC5F,MAAM,YAAY,GAAG,uBAAuB,CAAC,UAAU,CAAC,CAAC;YACzD,MAAM,WAAW,GAA0D;gBACzE,qBAAqB,EAAE,EAAE;gBACzB,gBAAgB,EAAE,IAAI,GAAG,EAAE;gBAC3B,aAAa,EAAE,IAAI,GAAG,EAAE;aACzB,CAAC;YACF,MAAM,YAAY,GAA4D;gBAC5E,UAAU,EAAE,IAAI,GAAG,EAAE;gBACrB,QAAQ,EAAE,IAAI,GAAG,EAAE;aACpB,CAAC;YACF,sDAAsD;YACtD,MAAM,kBAAkB,GAAG;gBACzB,QAAQ,EAAE,YAAY;gBACtB,OAAO,EAAE,WAAW;gBACpB,QAAQ,EAAE,YAAY;gBACtB,eAAe,EAAE,EAAC,QAAQ,EAAE,IAAI,GAAG,EAAE,EAAC;gBACtC,IAAI,EAAE;oBACJ,cAAc,EAAE,KAAK;iBACtB;aAC0C,CAAC;YAE9C,oEAAoE;YACpE,iBAAiB,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC;YAClD,MAAM,EAAC,SAAS,EAAE,cAAc,EAAE,eAAe,EAAC,GAAG,mCAAmC,CAAC,kBAAkB,CAAC,CAAC;YAC7G,MAAM,cAAc,GAAG,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;gBAC3C,MAAM,YAAY,GACd,QAAQ,CAAC,8BAA8B,CAAC,8BAA8B,CAAC,yBAAyB,CAAC,KAAK,CAAC,CAAC;gBAC5G,IAAI,CAAC,YAAY,EAAE,CAAC;oBAClB,OAAO,cAAc,CAAC;gBACxB,CAAC;gBACD,IAAI,UAAU,CAAC,KAAK,CAAC,WAAW,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE,CAAC;oBACtD,OAAO,KAAK,CAAC,SAAS,CAAC,YAAY,CAAC;gBACtC,CAAC;gBACD,OAAO,KAAK,CAAC,IAAI,CAAC;YACpB,CAAC,CAAC,CAAC;YAEH,MAAM,CAAC,SAAS,CAAC,cAAc,EAAE,CAAC,GAAG,EAAE,eAAe,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;YACnE,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YAC3D,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,eAAe,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;YACvE,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,eAAe,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC,CAAC;YACzE,MAAM,CAAC,WAAW,CAAC,eAAe,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YAC9C,MAAM,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,UAAU,CAAC,EAAE,gBAAgB,CAAC,CAAC;QACrF,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IACH,QAAQ,CAAC,eAAe,EAAE,GAAG,EAAE;QAC7B,UAAU,CAAC,GAAG,EAAE;YACd,MAAM,aAAa,GAAG,GAAG,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAC,QAAQ,EAAE,IAAI,EAAC,CAAC,CAAC;YACjF,MAAM,SAAS,GAAG,SAAS,CAAC,SAAS,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAC,QAAQ,EAAE,IAAI,EAAC,CAAC,CAAC;YAC/E,MAAM,eAAe,GAAG,IAAI,QAAQ,CAAC,eAAe,CAAC,eAAe,CAAC,aAAa,EAAE,SAAS,CAAC,CAAC;YAC/F,MAAM,wBAAwB,GAAG,QAAQ,CAAC,wBAAwB,CAAC,wBAAwB,CAAC,QAAQ,CAAC;gBACnG,QAAQ,EAAE,IAAI;gBACd,eAAe;gBACf,aAAa;aACd,CAAC,CAAC;YACH,QAAQ,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,QAAQ,CAAC;gBACpD,QAAQ,EAAE,IAAI;gBACd,wBAAwB;aACzB,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QACH,SAAS,CAAC,GAAG,EAAE;YACb,GAAG,CAAC,aAAa,CAAC,aAAa,CAAC,cAAc,EAAE,CAAC;YACjD,SAAS,CAAC,SAAS,CAAC,aAAa,CAAC,cAAc,EAAE,CAAC;YACnD,QAAQ,CAAC,wBAAwB,CAAC,wBAAwB,CAAC,cAAc,EAAE,CAAC;YAC5E,QAAQ,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,cAAc,EAAE,CAAC;QAChE,CAAC,CAAC,CAAC;QACH,EAAE,CAAC,oFAAoF,EAAE,KAAK;YAC5F,MAAM,QAAQ,GAAG,2BAA2B,CAAC;YAC7C,MAAM,WAAW,GAAG,gFAAgF,CAAC;YACrG,yFAAyF;YACzF,iCAAiC;YACjC,MAAM,mBAAmB,GAAG,MAAM,8BAA8B,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;YACjF,IAAI,iBAAiB,GAAG,mBAAmB,CAAC,SAAS,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;gBACtE,MAAM,KAAK,GAAG,KAAoD,CAAC;gBACnE,OAAO,KAAK,CAAC,IAAI,KAAK,WAAW,CAAC;YACpC,CAAC,CAAC,CAAC;YACH,MAAM,CAAC,WAAW,CAAC,iBAAiB,EAAE,CAAC,CAAC,CAAC,CAAC;YAE1C,+FAA+F;YAC/F,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,aAAa,CAAC,0BAA0B,CAAC,CAAC;YACnE,MAAM,iBAAiB,GAAG,MAAM,8BAA8B,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;YAC/E,MAAM,mBAAmB,GAAG,iBAAiB,CAAC,cAAc,CAAC;YAC7D,iBAAiB,GAAG,iBAAiB,CAAC,SAAS,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;gBAChE,MAAM,KAAK,GAAG,KAAoD,CAAC;gBACnE,OAAO,KAAK,CAAC,IAAI,KAAK,WAAW,CAAC;YACpC,CAAC,CAAC,CAAC;YACH,MAAM,CAAC,OAAO,CAAC,iBAAiB,EAAE,CAAC,CAAC,CAAC,CAAC;YACtC,MAAM,CAAC,MAAM,CAAC,mBAAmB,CAAC,eAAe,CAAC,CAAC;YACnD,MAAM,CAAC,MAAM,CAAC,mBAAmB,CAAC,eAAe,CAAC,CAAC;YACnD,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,cAAc,CAAC,0BAA0B,CAAC,CAAC;QACtE,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IACH,QAAQ,CAAC,wBAAwB,EAAE,GAAG,EAAE;QACtC,wEAAwE;QACxE,wDAAwD;QACxD,UAAU,CAAC,GAAG,EAAE;YACd,MAAM,aAAa,GAAG,GAAG,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAC,QAAQ,EAAE,IAAI,EAAC,CAAC,CAAC;YACjF,MAAM,SAAS,GAAG,SAAS,CAAC,SAAS,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAC,QAAQ,EAAE,IAAI,EAAC,CAAC,CAAC;YAC/E,MAAM,eAAe,GAAG,IAAI,QAAQ,CAAC,eAAe,CAAC,eAAe,CAAC,aAAa,EAAE,SAAS,CAAC,CAAC;YAC/F,MAAM,wBAAwB,GAAG,QAAQ,CAAC,wBAAwB,CAAC,wBAAwB,CAAC,QAAQ,CAAC;gBACnG,QAAQ,EAAE,IAAI;gBACd,eAAe;gBACf,aAAa;aACd,CAAC,CAAC;YACH,QAAQ,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,QAAQ,CAAC;gBACpD,QAAQ,EAAE,IAAI;gBACd,wBAAwB;aACzB,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,SAAS,CAAC,GAAG,EAAE;YACb,GAAG,CAAC,aAAa,CAAC,aAAa,CAAC,cAAc,EAAE,CAAC;YACjD,SAAS,CAAC,SAAS,CAAC,aAAa,CAAC,cAAc,EAAE,CAAC;YACnD,QAAQ,CAAC,wBAAwB,CAAC,wBAAwB,CAAC,cAAc,EAAE,CAAC;YAC5E,QAAQ,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,cAAc,EAAE,CAAC;QAChE,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,+BAA+B,EAAE,KAAK;YACvC,MAAM,EAAC,eAAe,EAAC,GAAG,MAAM,8BAA8B,CAAC,IAAI,EAAE,6BAA6B,CAAC,CAAC;YACpG,MAAM,gBAAgB,GAAG,eAAe,CAAC,MAAM,CAAC,cAAc,CAAC,EAAE;gBAC/D,OAAO,cAAc,CAAC,SAAS,EAAE,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;YACxD,CAAC,CAAC,CAAC;YACH,MAAM,CAAC,QAAQ,CAAC,gBAAgB,EAAE,CAAC,CAAC,CAAC;QACvC,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,yDAAyD,EAAE,KAAK;YACjE,MAAM,kBAAkB,GAAG,MAAgD,CAAC;YAC5E,MAAM,kBAAkB,GAAG,CAA0C,CAAC;YACtE,MAAM,EAAC,eAAe,EAAC,GAAG,MAAM,8BAA8B,CAAC,IAAI,EAAE,6BAA6B,CAAC,CAAC;YACpG,MAAM,QAAQ,GAAG,eAAe,CAAC,IAAI,CAAC,cAAc,CAAC,EAAE;gBACrD,OAAO,cAAc,CAAC,SAAS,EAAE,KAAK,kBAAkB,IAAI,cAAc,CAAC,QAAQ,EAAE,KAAK,kBAAkB,CAAC;YAC/G,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,QAAQ,EAAE,CAAC;gBACd,MAAM,IAAI,KAAK,CAAC,yCAAyC,CAAC,CAAC;YAC7D,CAAC;YACD,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,SAAS,EAAE,EAAE,6DAA6D,CAAC,CAAC;QAC1G,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,gEAAgE,EAAE,KAAK;YACxE,MAAM,iBAAiB,GAAG,MAAgD,CAAC;YAC3E,MAAM,iBAAiB,GAAG,CAA0C,CAAC;YACrE,MAAM,EAAC,eAAe,EAAC,GAAG,MAAM,8BAA8B,CAAC,IAAI,EAAE,6BAA6B,CAAC,CAAC;YACpG,MAAM,QAAQ,GAAG,eAAe,CAAC,IAAI,CAAC,cAAc,CAAC,EAAE;gBACrD,OAAO,cAAc,CAAC,SAAS,EAAE,KAAK,iBAAiB,IAAI,cAAc,CAAC,QAAQ,EAAE,KAAK,iBAAiB,CAAC;YAC7G,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,QAAQ,EAAE,CAAC;gBACd,MAAM,IAAI,KAAK,CAAC,yCAAyC,CAAC,CAAC;YAC7D,CAAC;YACD,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,SAAS,EAAE,EAAE,oDAAoD,CAAC,CAAC;QACjG,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,gEAAgE,EAAE,KAAK;YACxE,MAAM,iBAAiB,GAAG,MAAgD,CAAC;YAC3E,MAAM,iBAAiB,GAAG,CAA0C,CAAC;YACrE,MAAM,EAAC,eAAe,EAAC,GAAG,MAAM,8BAA8B,CAAC,IAAI,EAAE,6BAA6B,CAAC,CAAC;YACpG,MAAM,QAAQ,GAAG,eAAe,CAAC,IAAI,CAAC,cAAc,CAAC,EAAE;gBACrD,OAAO,cAAc,CAAC,SAAS,EAAE,KAAK,iBAAiB,IAAI,cAAc,CAAC,QAAQ,EAAE,KAAK,iBAAiB,CAAC;YAC7G,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,QAAQ,EAAE,CAAC;gBACd,MAAM,IAAI,KAAK,CAAC,yCAAyC,CAAC,CAAC;YAC7D,CAAC;YACD,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,SAAS,EAAE,EAAE,oDAAoD,CAAC,CAAC;QACjG,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Platform from '../../../core/platform/platform.js';\nimport * as Root from '../../../core/root/root.js';\nimport * as SDK from '../../../core/sdk/sdk.js';\nimport * as Bindings from '../../../models/bindings/bindings.js';\nimport * as TraceModel from '../../../models/trace/trace.js';\nimport * as Workspace from '../../../models/workspace/workspace.js';\nimport {describeWithEnvironment} from '../../../testing/EnvironmentHelpers.js';\nimport {\n  makeMockRendererHandlerData as makeRendererHandlerData,\n  makeProfileCall,\n  setupIgnoreListManagerEnvironment,\n} from '../../../testing/TraceHelpers.js';\nimport {TraceLoader} from '../../../testing/TraceLoader.js';\nimport * as PerfUI from '../../../ui/legacy/components/perf_ui/perf_ui.js';\nimport * as Timeline from '../timeline.js';\n\nfunction initTrackAppender(\n    flameChartData: PerfUI.FlameChart.FlameChartTimelineData,\n    traceParsedData: TraceModel.Handlers.Types.TraceParseData,\n    entryData: Timeline.TimelineFlameChartDataProvider.TimelineFlameChartEntry[],\n    entryTypeByLevel: Timeline.TimelineFlameChartDataProvider.EntryType[],\n    ): Timeline.ThreadAppender.ThreadAppender[] {\n  setupIgnoreListManagerEnvironment();\n  const compatibilityTracksAppender = new Timeline.CompatibilityTracksAppender.CompatibilityTracksAppender(\n      flameChartData, traceParsedData, entryData, entryTypeByLevel);\n  return compatibilityTracksAppender.threadAppenders();\n}\nasync function renderThreadAppendersFromTrace(context: Mocha.Context|Mocha.Suite, trace: string): Promise<{\n  entryTypeByLevel: Timeline.TimelineFlameChartDataProvider.EntryType[],\n  flameChartData: PerfUI.FlameChart.FlameChartTimelineData,\n  threadAppenders: Timeline.ThreadAppender.ThreadAppender[],\n  entryData: Timeline.TimelineFlameChartDataProvider.TimelineFlameChartEntry[],\n  traceParsedData: Readonly<TraceModel.Handlers.Types.TraceParseData>,\n}> {\n  const entryTypeByLevel: Timeline.TimelineFlameChartDataProvider.EntryType[] = [];\n  const entryData: Timeline.TimelineFlameChartDataProvider.TimelineFlameChartEntry[] = [];\n  const flameChartData = PerfUI.FlameChart.FlameChartTimelineData.createEmpty();\n  const traceParsedData = await TraceLoader.traceEngine(context, trace);\n  const threadAppenders = initTrackAppender(flameChartData, traceParsedData, entryData, entryTypeByLevel);\n  let level = 0;\n  for (const appender of threadAppenders) {\n    level = appender.appendTrackAtLevel(level);\n  }\n  return {\n    entryTypeByLevel,\n    traceParsedData,\n    flameChartData,\n    threadAppenders,\n    entryData,\n  };\n}\n\nfunction renderThreadAppendersFromParsedData(traceParseData: TraceModel.Handlers.Types.TraceParseData): {\n  entryTypeByLevel: Timeline.TimelineFlameChartDataProvider.EntryType[],\n  flameChartData: PerfUI.FlameChart.FlameChartTimelineData,\n  threadAppenders: Timeline.ThreadAppender.ThreadAppender[],\n  entryData: Timeline.TimelineFlameChartDataProvider.TimelineFlameChartEntry[],\n} {\n  const entryTypeByLevel: Timeline.TimelineFlameChartDataProvider.EntryType[] = [];\n  const entryData: Timeline.TimelineFlameChartDataProvider.TimelineFlameChartEntry[] = [];\n  const flameChartData = PerfUI.FlameChart.FlameChartTimelineData.createEmpty();\n\n  const threadAppenders = initTrackAppender(flameChartData, traceParseData, entryData, entryTypeByLevel);\n  let level = 0;\n  for (const appender of threadAppenders) {\n    level = appender.appendTrackAtLevel(level);\n  }\n\n  return {\n    entryTypeByLevel,\n    flameChartData,\n    threadAppenders,\n    entryData,\n  };\n}\n\ndescribeWithEnvironment('ThreadAppender', function() {\n  it('creates a thread appender for each thread in a trace', async function() {\n    const {threadAppenders} = await renderThreadAppendersFromTrace(this, 'simple-js-program.json.gz');\n    const expectedAppenderNames = [\n      'Thread',\n      'Thread',\n      'Thread',\n    ];\n    assert.deepStrictEqual(threadAppenders.map(g => g.appenderName), expectedAppenderNames);\n  });\n\n  it('renders tracks for threads in correct order', async function() {\n    const {flameChartData} = await renderThreadAppendersFromTrace(this, 'multiple-navigations-with-iframes.json.gz');\n    assert.strictEqual(flameChartData.groups[0].name, 'Main — http://localhost:5000/');\n    assert.strictEqual(flameChartData.groups[1].name, 'Frame — https://www.example.com/');\n  });\n\n  it('renders tracks for threads in correct order when a process url is about:blank', async function() {\n    const {flameChartData} = await renderThreadAppendersFromTrace(this, 'about-blank-first.json.gz');\n    assert.strictEqual(flameChartData.groups[0].name, 'Main — chrome://new-tab-page/');\n    assert.isTrue(flameChartData.groups[1].name.startsWith('Frame — chrome-untrusted://new-tab-page/'));\n    assert.strictEqual(flameChartData.groups[2].name, 'Main — about:blank');\n  });\n\n  it('marks all levels used by the track with the TrackAppender type', async function() {\n    const {entryTypeByLevel} = await renderThreadAppendersFromTrace(this, 'simple-js-program.json.gz');\n    // This includes all tracks rendered by the ThreadAppender.\n    const execptedLevelTypes = [\n      Timeline.TimelineFlameChartDataProvider.EntryType.TrackAppender,\n      Timeline.TimelineFlameChartDataProvider.EntryType.TrackAppender,\n      Timeline.TimelineFlameChartDataProvider.EntryType.TrackAppender,\n      Timeline.TimelineFlameChartDataProvider.EntryType.TrackAppender,\n      Timeline.TimelineFlameChartDataProvider.EntryType.TrackAppender,\n      Timeline.TimelineFlameChartDataProvider.EntryType.TrackAppender,\n      Timeline.TimelineFlameChartDataProvider.EntryType.TrackAppender,\n      Timeline.TimelineFlameChartDataProvider.EntryType.TrackAppender,\n      Timeline.TimelineFlameChartDataProvider.EntryType.TrackAppender,\n      Timeline.TimelineFlameChartDataProvider.EntryType.TrackAppender,\n    ];\n    assert.deepStrictEqual(entryTypeByLevel, execptedLevelTypes);\n  });\n\n  it('creates a flamechart groups for track headers and titles', async function() {\n    const {flameChartData} = await renderThreadAppendersFromTrace(this, 'cls-single-frame.json.gz');\n    const expectedTrackNames = [\n      'Main — https://output.jsbin.com/zajamil/quiet',\n      'Raster',\n      'Rasterizer Thread 1',\n      'Rasterizer Thread 2',\n      'Thread Pool',\n      'Thread Pool Worker 1',\n    ];\n    assert.deepStrictEqual(flameChartData.groups.map(g => g.name), expectedTrackNames);\n  });\n\n  it('builds flamechart groups for nested tracks correctly', async function() {\n    const {flameChartData} = await renderThreadAppendersFromTrace(this, 'cls-single-frame.json.gz');\n    // This group corresponds to the header that wraps the raster tracks\n    // together. It isn't selectable and isn't nested\n    assert.strictEqual(flameChartData.groups[1].name, 'Raster');\n    assert.strictEqual(flameChartData.groups[1].selectable, false);\n    assert.strictEqual(flameChartData.groups[1].style.nestingLevel, 0);\n\n    // These groups correspond to the raster tracks titles, or the\n    // individual raster tracks themselves. They are selectable and\n    // nested\n    assert.strictEqual(flameChartData.groups[2].name, 'Rasterizer Thread 1');\n    assert.strictEqual(flameChartData.groups[2].selectable, true);\n    assert.strictEqual(flameChartData.groups[2].style.nestingLevel, 1);\n\n    assert.strictEqual(flameChartData.groups[3].name, 'Rasterizer Thread 2');\n    assert.strictEqual(flameChartData.groups[3].selectable, true);\n    assert.strictEqual(flameChartData.groups[3].style.nestingLevel, 1);\n  });\n\n  it('assigns correct names to multiple types of threads', async function() {\n    const {flameChartData} = await renderThreadAppendersFromTrace(this, 'simple-js-program.json.gz');\n    const expectedTrackNames = [\n      'Main — https://www.google.com',\n      'Thread Pool',\n      'Thread Pool Worker 1',\n      'Thread Pool Worker 2',\n    ];\n    assert.deepStrictEqual(flameChartData.groups.map(g => g.name), expectedTrackNames);\n  });\n\n  it('adds thread IDs onto tracks when the trace is generic', async () => {\n    const {flameChartData} = await renderThreadAppendersFromTrace(this, 'generic-about-tracing.json.gz');\n    // This trace has a lot of tracks, so just test one.\n    assert.isTrue(flameChartData.groups.map(g => g.name)\n                      .includes('CrBrowserMain (1213787)' as Platform.UIString.LocalizedString));\n  });\n\n  it('assigns the right color for events when the trace is generic', async () => {\n    const {threadAppenders, traceParsedData} =\n        await renderThreadAppendersFromTrace(this, 'generic-about-tracing.json.gz');\n    const event = traceParsedData.Renderer.allTraceEntries.find(entry => {\n      return entry.name === 'ThreadControllerImpl::RunTask';\n    });\n    if (!event) {\n      throw new Error('Could not find event.');\n    }\n    assert.strictEqual(threadAppenders[0].colorForEvent(event), 'hsl(278, 40%, 70%)');\n  });\n\n  it('assigns correct names to worker threads', async function() {\n    const {flameChartData} = await renderThreadAppendersFromTrace(this, 'two-workers.json.gz');\n    const expectedTrackNames = [\n      'Main — https://chromedevtools.github.io/performance-stories/two-workers/index.html',\n      'Worker — https://chromedevtools.github.io/performance-stories/two-workers/fib-worker.js',\n      'Worker — https://chromedevtools.github.io/performance-stories/two-workers/fib-worker.js',\n      'Thread Pool',\n      'Thread Pool Worker 1',\n      'Thread Pool Worker 2',\n    ];\n    assert.deepStrictEqual(flameChartData.groups.map(g => g.name), expectedTrackNames);\n  });\n\n  it('returns the correct title for a renderer event', async function() {\n    const {threadAppenders, traceParsedData} = await renderThreadAppendersFromTrace(this, 'simple-js-program.json.gz');\n    const events = traceParsedData.Renderer?.allTraceEntries;\n    if (!events) {\n      throw new Error('Could not find renderer events');\n    }\n    const title = threadAppenders[0].titleForEvent(events[0]);\n    assert.strictEqual(title, 'Task');\n  });\n\n  it('adds the type for EventDispatch events to the title', async function() {\n    const {threadAppenders, traceParsedData} =\n        await renderThreadAppendersFromTrace(this, 'one-second-interaction.json.gz');\n    const events = traceParsedData.Renderer?.allTraceEntries;\n    if (!events) {\n      throw new Error('Could not find renderer events');\n    }\n    const clickEvent = events.find(event => {\n      return TraceModel.Types.TraceEvents.isTraceEventDispatch(event) && event.args.data.type === 'click';\n    });\n    if (!clickEvent) {\n      throw new Error('Could not find expected click event');\n    }\n    const title = threadAppenders[0].titleForEvent(clickEvent);\n    assert.strictEqual(title, 'Event: click');\n  });\n\n  it('returns the correct title for a profile call', async function() {\n    const {threadAppenders, traceParsedData} = await renderThreadAppendersFromTrace(this, 'simple-js-program.json.gz');\n    const rendererHandler = traceParsedData.Renderer;\n    if (!rendererHandler) {\n      throw new Error('RendererHandler is undefined');\n    }\n    const [process] = rendererHandler.processes.values();\n    const [thread] = process.threads.values();\n    const profileCalls = thread.entries.filter(entry => TraceModel.Types.TraceEvents.isProfileCall(entry));\n\n    if (!profileCalls) {\n      throw new Error('Could not find renderer events');\n    }\n    const anonymousCall = threadAppenders[0].titleForEvent(profileCalls[0]);\n    assert.strictEqual(anonymousCall, '(anonymous)');\n    const n = threadAppenders[0].titleForEvent(profileCalls[7]);\n    assert.strictEqual(n, 'n');\n  });\n\n  it('will use the function name from the CPUProfile if it has been set', async function() {\n    const {threadAppenders, traceParsedData} = await renderThreadAppendersFromTrace(this, 'simple-js-program.json.gz');\n    const {Renderer, Samples} = traceParsedData;\n    const [process] = Renderer.processes.values();\n    const [thread] = process.threads.values();\n    const profileCalls = thread.entries.filter(TraceModel.Types.TraceEvents.isProfileCall);\n\n    if (!profileCalls || profileCalls.length === 0) {\n      throw new Error('Could not find renderer events');\n    }\n    const entry = profileCalls[0];\n    const cpuProfileNode =\n        Samples.profilesInProcess.get(entry.pid)?.get(entry.tid)?.parsedProfile.nodeById(entry.nodeId);\n    if (!cpuProfileNode) {\n      throw new Error('Could not find CPU Profile Node');\n    }\n    const anonymousCall = threadAppenders[0].titleForEvent(entry);\n    assert.strictEqual(anonymousCall, '(anonymous)');\n    const originalName = cpuProfileNode.functionName;\n    cpuProfileNode.setFunctionName('new-resolved-function-name');\n    assert.strictEqual(threadAppenders[0].titleForEvent(entry), 'new-resolved-function-name');\n    // Reset the value for future tests.\n    cpuProfileNode.setFunctionName(originalName);\n  });\n\n  it('shows the correct title for a trace event when hovered', async function() {\n    const {threadAppenders, traceParsedData} = await renderThreadAppendersFromTrace(this, 'simple-js-program.json.gz');\n    const events = traceParsedData.Renderer?.allTraceEntries;\n    if (!events) {\n      throw new Error('Could not find renderer events');\n    }\n    const info = threadAppenders[0].highlightedEntryInfo(events[0]);\n    assert.strictEqual(info.title, 'Task');\n    assert.strictEqual(info.formattedTime, '0.27\\u00A0ms');\n  });\n\n  it('shows self time only for events with self time above the threshold when hovered', async function() {\n    const {threadAppenders, traceParsedData} = await renderThreadAppendersFromTrace(this, 'simple-js-program.json.gz');\n    const events = traceParsedData.Renderer?.allTraceEntries;\n    if (!events) {\n      throw new Error('Could not find renderer events');\n    }\n    const infoForShortEvent = threadAppenders[0].highlightedEntryInfo(events[0]);\n    assert.strictEqual(infoForShortEvent.formattedTime, '0.27\\u00A0ms');\n\n    const longTask = events.find(e => (e.dur || 0) > 1_000_000);\n    if (!longTask) {\n      throw new Error('Could not find long task');\n    }\n    const infoForLongEvent = threadAppenders[0].highlightedEntryInfo(longTask);\n    assert.strictEqual(infoForLongEvent.formattedTime, '1.30\\u00A0s (self 47\\u00A0μs)');\n  });\n\n  it('shows the correct title for a ParseHTML event', async function() {\n    const {threadAppenders, traceParsedData} = await renderThreadAppendersFromTrace(this, 'simple-js-program.json.gz');\n    const events = traceParsedData.Renderer?.allTraceEntries;\n    if (!events) {\n      throw new Error('Could not find renderer events');\n    }\n    const infoForShortEvent = threadAppenders[0].highlightedEntryInfo(events[0]);\n    assert.strictEqual(infoForShortEvent.formattedTime, '0.27\\u00A0ms');\n\n    const longTask = events.find(e => (e.dur || 0) > 1_000_000);\n    if (!longTask) {\n      throw new Error('Could not find long task');\n    }\n    const infoForLongEvent = threadAppenders[0].highlightedEntryInfo(longTask);\n    assert.strictEqual(infoForLongEvent.formattedTime, '1.30\\u00A0s (self 47\\u00A0μs)');\n  });\n\n  it('shows the correct title for a profile call when hovered', async function() {\n    const {threadAppenders, traceParsedData} = await renderThreadAppendersFromTrace(this, 'simple-js-program.json.gz');\n    const rendererHandler = traceParsedData.Renderer;\n    if (!rendererHandler) {\n      throw new Error('RendererHandler is undefined');\n    }\n    const [process] = rendererHandler.processes.values();\n    const [thread] = process.threads.values();\n    const profileCalls = thread.entries.filter(entry => TraceModel.Types.TraceEvents.isProfileCall(entry));\n\n    if (!profileCalls) {\n      throw new Error('Could not find renderer events');\n    }\n\n    const info = threadAppenders[0].highlightedEntryInfo(profileCalls[0]);\n    assert.strictEqual(info.title, '(anonymous)');\n    assert.strictEqual(info.formattedTime, '15\\u00A0μs');\n  });\n  it('candy-stripes long tasks', async function() {\n    const {traceParsedData, flameChartData, entryData} =\n        await renderThreadAppendersFromTrace(this, 'simple-js-program.json.gz');\n    const events = traceParsedData.Renderer?.allTraceEntries;\n    if (!events) {\n      throw new Error('Could not find renderer events');\n    }\n    const longTask = events.find(e => (e.dur || 0) > 1_000_000);\n    if (!longTask) {\n      throw new Error('Could not find long task');\n    }\n    const entryIndex = entryData.indexOf(longTask);\n    const decorationsForEntry = flameChartData.entryDecorations[entryIndex];\n    assert.deepEqual(decorationsForEntry, [\n      {type: PerfUI.FlameChart.FlameChartDecorationType.WARNING_TRIANGLE},\n      {\n        type: PerfUI.FlameChart.FlameChartDecorationType.CANDY,\n        'startAtTime': TraceModel.Types.Timing.MicroSeconds(50_000),\n      },\n    ]);\n  });\n\n  it('does not candy-stripe tasks below the long task threshold', async function() {\n    const {traceParsedData, flameChartData, entryData} =\n        await renderThreadAppendersFromTrace(this, 'simple-js-program.json.gz');\n    const events = traceParsedData.Renderer?.allTraceEntries;\n    if (!events) {\n      throw new Error('Could not find renderer events');\n    }\n    const entryIndex = entryData.indexOf(events[0]);\n    const decorationsForEntry = flameChartData.entryDecorations[entryIndex];\n    assert.isUndefined(decorationsForEntry);\n  });\n\n  it('does not append a track if there are no visible events on it', async function() {\n    const {flameChartData} = await renderThreadAppendersFromTrace(this, 'one-second-interaction.json.gz');\n    const expectedTrackNames = [\n      'Main — https://chromedevtools.github.io/performance-stories/long-interaction/index.html?x=40',\n      'Thread Pool',\n      // There are multiple ThreadPoolForegroundWorker threads present in\n      // the trace, but only one of these has trace events we deem as\n      // \"visible\".\n      'Thread Pool Worker 1',\n      // This second \"worker\" is the ThreadPoolServiceThread. TODO: perhaps hide ThreadPoolServiceThread completely?\n      'Thread Pool Worker 2',\n    ];\n    assert.deepStrictEqual(flameChartData.groups.map(g => g.name), expectedTrackNames);\n  });\n\n  describe('ignore listing', () => {\n    let ignoreListManager: Bindings.IgnoreListManager.IgnoreListManager;\n    beforeEach(() => {\n      const targetManager = SDK.TargetManager.TargetManager.instance({forceNew: true});\n      const workspace = Workspace.Workspace.WorkspaceImpl.instance({forceNew: true});\n      const resourceMapping = new Bindings.ResourceMapping.ResourceMapping(targetManager, workspace);\n      const debuggerWorkspaceBinding = Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.instance({\n        forceNew: true,\n        resourceMapping,\n        targetManager,\n      });\n      ignoreListManager = Bindings.IgnoreListManager.IgnoreListManager.instance({\n        forceNew: true,\n        debuggerWorkspaceBinding,\n      });\n    });\n    afterEach(() => {\n      SDK.TargetManager.TargetManager.removeInstance();\n      Workspace.Workspace.WorkspaceImpl.removeInstance();\n      Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.removeInstance();\n      Bindings.IgnoreListManager.IgnoreListManager.removeInstance();\n    });\n    it('removes entries from the data that match the ignored URL', async function() {\n      const initialTimelineData = await renderThreadAppendersFromTrace(this, 'react-hello-world.json.gz');\n      const initialFlamechartData = initialTimelineData.flameChartData;\n      const eventCountBeforeIgnoreList = initialFlamechartData.entryStartTimes.length;\n      const SCRIPT_TO_IGNORE =\n          'https://unpkg.com/react@18.2.0/umd/react.development.js' as Platform.DevToolsPath.UrlString;\n      // Clear the data provider cache and add the React script to the ignore list.\n      ignoreListManager.ignoreListURL(SCRIPT_TO_IGNORE);\n      const finalTimelineData = await renderThreadAppendersFromTrace(this, 'react-hello-world.json.gz');\n      const finalFlamechartData = finalTimelineData.flameChartData;\n      const eventCountAfterIgnoreList = finalFlamechartData.entryStartTimes.length;\n      // Ensure that the amount of events we show on the flame chart is less\n      // than before, now we have added the React URL to the ignore list.\n      assert.isBelow(eventCountAfterIgnoreList, eventCountBeforeIgnoreList);\n\n      // // Clear the data provider cache and unignore the script again\n      ignoreListManager.unIgnoreListURL(SCRIPT_TO_IGNORE);\n      const finalTimelineData2 = await renderThreadAppendersFromTrace(this, 'react-hello-world.json.gz');\n      const finalFlamechartData2 = finalTimelineData2.flameChartData;\n      const eventCountAfterIgnoreList2 = finalFlamechartData2.entryStartTimes.length;\n      // // Ensure that now we have un-ignored the URL that we get the full set of events again.\n      assert.strictEqual(eventCountAfterIgnoreList2, eventCountBeforeIgnoreList);\n    });\n\n    it('appends a tree that contains ignore listed entries correctly', async function() {\n      const SCRIPT_TO_IGNORE = 'https://some-framework/bundled.js' as Platform.DevToolsPath.UrlString;\n\n      // Create the following hierarchy with profile calls. Events marked\n      // with \\\\\\\\ represent ignored listed events.\n      // |----------A-----------|\n      // |\\\\\\\\\\B\\\\\\\\\\||----F----|\n      // |\\\\C\\\\||\\D\\|\n      // |--E--|\n      //\n      // Applying ignore listing in the appender, should yield the\n      // following flame chart:\n      // |----------A-----------|\n      // |\\\\\\\\\\B\\\\\\\\||----F----|\n      // |--E--|\n      const callFrameA = makeProfileCall('A', 100, 200);\n      const callFrameB = makeProfileCall('IgnoreListedB', 100, 100);\n      callFrameB.callFrame.url = SCRIPT_TO_IGNORE;\n      const callFrameC = makeProfileCall('IgnoreListedC', 100, 50);\n      callFrameC.callFrame.url = SCRIPT_TO_IGNORE;\n      const callFrameD = makeProfileCall('IgnoreListedD', 151, 49);\n      callFrameD.callFrame.url = SCRIPT_TO_IGNORE;\n      const callFrameE = makeProfileCall('E', 100, 25);\n      const callFrameF = makeProfileCall('F', 200, 100);\n\n      const allEntries = [callFrameA, callFrameB, callFrameC, callFrameE, callFrameD, callFrameF];\n      const rendererData = makeRendererHandlerData(allEntries);\n      const workersData: TraceModel.Handlers.ModelHandlers.Workers.WorkersData = {\n        workerSessionIdEvents: [],\n        workerIdByThread: new Map(),\n        workerURLById: new Map(),\n      };\n      const warningsData: TraceModel.Handlers.ModelHandlers.Warnings.WarningsData = {\n        perWarning: new Map(),\n        perEvent: new Map(),\n      };\n      // This only includes data used in the thread appender\n      const mockTraceParseData = {\n        Renderer: rendererData,\n        Workers: workersData,\n        Warnings: warningsData,\n        AuctionWorklets: {worklets: new Map()},\n        Meta: {\n          traceIsGeneric: false,\n        },\n      } as TraceModel.Handlers.Types.TraceParseData;\n\n      // Add the script to ignore list and then append the flamechart data\n      ignoreListManager.ignoreListURL(SCRIPT_TO_IGNORE);\n      const {entryData, flameChartData, threadAppenders} = renderThreadAppendersFromParsedData(mockTraceParseData);\n      const entryDataNames = entryData.map(entry => {\n        const regularEvent =\n            Timeline.TimelineFlameChartDataProvider.TimelineFlameChartDataProvider.timelineEntryIsTraceEvent(entry);\n        if (!regularEvent) {\n          return 'Unknown type';\n        }\n        if (TraceModel.Types.TraceEvents.isProfileCall(entry)) {\n          return entry.callFrame.functionName;\n        }\n        return entry.name;\n      });\n\n      assert.deepEqual(entryDataNames, ['A', 'IgnoreListedB', 'E', 'F']);\n      assert.deepEqual(flameChartData.entryLevels, [0, 1, 2, 1]);\n      assert.deepEqual(flameChartData.entryStartTimes, [0.1, 0.1, 0.1, 0.2]);\n      assert.deepEqual(flameChartData.entryTotalTimes, [0.2, 0.1, 0.025, 0.1]);\n      assert.strictEqual(threadAppenders.length, 1);\n      assert.strictEqual(threadAppenders[0].titleForEvent(callFrameB), 'On ignore list');\n    });\n  });\n  describe('showAllEvents', () => {\n    beforeEach(() => {\n      const targetManager = SDK.TargetManager.TargetManager.instance({forceNew: true});\n      const workspace = Workspace.Workspace.WorkspaceImpl.instance({forceNew: true});\n      const resourceMapping = new Bindings.ResourceMapping.ResourceMapping(targetManager, workspace);\n      const debuggerWorkspaceBinding = Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.instance({\n        forceNew: true,\n        resourceMapping,\n        targetManager,\n      });\n      Bindings.IgnoreListManager.IgnoreListManager.instance({\n        forceNew: true,\n        debuggerWorkspaceBinding,\n      });\n    });\n    afterEach(() => {\n      SDK.TargetManager.TargetManager.removeInstance();\n      Workspace.Workspace.WorkspaceImpl.removeInstance();\n      Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.removeInstance();\n      Bindings.IgnoreListManager.IgnoreListManager.removeInstance();\n    });\n    it('appends unknown events to the flame chart data only when the experiment is enabled', async function() {\n      const fileName = 'react-hello-world.json.gz';\n      const bizarreName = 'BackForwardCacheBufferLimitTracker::DidRemoveFrameOrWorkerFromBackForwardCache';\n      // Look up a trace event with an name we are not tracking anywhere and make sure it's not\n      // appended to the timeline data.\n      const initialTimelineData = await renderThreadAppendersFromTrace(this, fileName);\n      let unknownEventIndex = initialTimelineData.entryData.findIndex(entry => {\n        const event = entry as TraceModel.Types.TraceEvents.TraceEventData;\n        return event.name === bizarreName;\n      });\n      assert.strictEqual(unknownEventIndex, -1);\n\n      // Now enable the experiment and make sure the event is appended to the timeline data this time\n      Root.Runtime.experiments.enableForTest('timeline-show-all-events');\n      const finalTimelineData = await renderThreadAppendersFromTrace(this, fileName);\n      const finalFlamechartData = finalTimelineData.flameChartData;\n      unknownEventIndex = finalTimelineData.entryData.findIndex(entry => {\n        const event = entry as TraceModel.Types.TraceEvents.TraceEventData;\n        return event.name === bizarreName;\n      });\n      assert.isAbove(unknownEventIndex, -1);\n      assert.exists(finalFlamechartData.entryStartTimes);\n      assert.exists(finalFlamechartData.entryTotalTimes);\n      Root.Runtime.experiments.disableForTest('timeline-show-all-events');\n    });\n  });\n  describe('AuctionWorklet threads', () => {\n    // We have to set these up because the ThreadAppender includes logic for\n    // ignoring events that relies on the IgnoreListManager.\n    beforeEach(() => {\n      const targetManager = SDK.TargetManager.TargetManager.instance({forceNew: true});\n      const workspace = Workspace.Workspace.WorkspaceImpl.instance({forceNew: true});\n      const resourceMapping = new Bindings.ResourceMapping.ResourceMapping(targetManager, workspace);\n      const debuggerWorkspaceBinding = Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.instance({\n        forceNew: true,\n        resourceMapping,\n        targetManager,\n      });\n      Bindings.IgnoreListManager.IgnoreListManager.instance({\n        forceNew: true,\n        debuggerWorkspaceBinding,\n      });\n    });\n\n    afterEach(() => {\n      SDK.TargetManager.TargetManager.removeInstance();\n      Workspace.Workspace.WorkspaceImpl.removeInstance();\n      Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.removeInstance();\n      Bindings.IgnoreListManager.IgnoreListManager.removeInstance();\n    });\n\n    it('finds all the worklet threads', async function() {\n      const {threadAppenders} = await renderThreadAppendersFromTrace(this, 'fenced-frame-fledge.json.gz');\n      const workletAppenders = threadAppenders.filter(threadAppender => {\n        return threadAppender.trackName().includes('Worklet');\n      });\n      assert.lengthOf(workletAppenders, 6);\n    });\n\n    it('sets the title correctly for an Auction Worklet service', async function() {\n      const UTILITY_THREAD_PID = 776435 as TraceModel.Types.TraceEvents.ProcessID;\n      const UTILITY_THREAD_TID = 1 as TraceModel.Types.TraceEvents.ThreadID;\n      const {threadAppenders} = await renderThreadAppendersFromTrace(this, 'fenced-frame-fledge.json.gz');\n      const appender = threadAppenders.find(threadAppender => {\n        return threadAppender.processId() === UTILITY_THREAD_PID && threadAppender.threadId() === UTILITY_THREAD_TID;\n      });\n      if (!appender) {\n        throw new Error('Could not find expected thread appender');\n      }\n      assert.strictEqual(appender.trackName(), 'Auction Worklet Service — https://ssp-fledge-demo.glitch.me');\n    });\n\n    it('sets the title correctly for an Auction Worklet seller service', async function() {\n      const SELLER_THREAD_PID = 776435 as TraceModel.Types.TraceEvents.ProcessID;\n      const SELLER_THREAD_TID = 6 as TraceModel.Types.TraceEvents.ThreadID;\n      const {threadAppenders} = await renderThreadAppendersFromTrace(this, 'fenced-frame-fledge.json.gz');\n      const appender = threadAppenders.find(threadAppender => {\n        return threadAppender.processId() === SELLER_THREAD_PID && threadAppender.threadId() === SELLER_THREAD_TID;\n      });\n      if (!appender) {\n        throw new Error('Could not find expected thread appender');\n      }\n      assert.strictEqual(appender.trackName(), 'Seller Worklet — https://ssp-fledge-demo.glitch.me');\n    });\n\n    it('sets the title correctly for an Auction Worklet bidder service', async function() {\n      const BIDDER_THREAD_PID = 776436 as TraceModel.Types.TraceEvents.ProcessID;\n      const BIDDER_THREAD_TID = 6 as TraceModel.Types.TraceEvents.ThreadID;\n      const {threadAppenders} = await renderThreadAppendersFromTrace(this, 'fenced-frame-fledge.json.gz');\n      const appender = threadAppenders.find(threadAppender => {\n        return threadAppender.processId() === BIDDER_THREAD_PID && threadAppender.threadId() === BIDDER_THREAD_TID;\n      });\n      if (!appender) {\n        throw new Error('Could not find expected thread appender');\n      }\n      assert.strictEqual(appender.trackName(), 'Bidder Worklet — https://dsp-fledge-demo.glitch.me');\n    });\n  });\n});\n"]}