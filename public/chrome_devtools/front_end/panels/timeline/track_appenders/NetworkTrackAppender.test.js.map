{"version":3,"file":"NetworkTrackAppender.test.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/timeline/track_appenders/NetworkTrackAppender.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as TraceEngine from '../../../models/trace/trace.js';\nimport {describeWithEnvironment} from '../../../testing/EnvironmentHelpers.js';\nimport {TraceLoader} from '../../../testing/TraceLoader.js';\nimport * as PerfUI from '../../../ui/legacy/components/perf_ui/perf_ui.js';\nimport * as Timeline from '../timeline.js';\n\ndescribeWithEnvironment('NetworkTrackAppender', function() {\n  let traceParsedData: TraceEngine.Handlers.Types.TraceParseData;\n  let networkTrackAppender: Timeline.NetworkTrackAppender.NetworkTrackAppender;\n  let flameChartData = PerfUI.FlameChart.FlameChartTimelineData.createEmpty();\n\n  beforeEach(async function() {\n    traceParsedData = await TraceLoader.traceEngine(this, 'cls-cluster-max-timeout.json.gz');\n    networkTrackAppender = new Timeline.NetworkTrackAppender.NetworkTrackAppender(traceParsedData, flameChartData);\n    networkTrackAppender.appendTrackAtLevel(0);\n  });\n\n  afterEach(() => {\n    flameChartData = PerfUI.FlameChart.FlameChartTimelineData.createEmpty();\n  });\n\n  describe('appendTrackAtLevel', function() {\n    it('creates a flamechart group for the Network track', function() {\n      assert.strictEqual(flameChartData.groups.length, 1);\n      assert.strictEqual(flameChartData.groups[0].name, 'Network');\n    });\n\n    it('adds start times correctly', function() {\n      const networkRequests = traceParsedData.NetworkRequests.byTime;\n      for (let i = 0; i < networkRequests.length; ++i) {\n        const event = networkRequests[i];\n        assert.strictEqual(\n            flameChartData.entryStartTimes[i], TraceEngine.Helpers.Timing.microSecondsToMilliseconds(event.ts));\n      }\n    });\n\n    it('adds total times correctly', function() {\n      const networkRequests = traceParsedData.NetworkRequests.byTime;\n      for (let i = 0; i < networkRequests.length; i++) {\n        const event = networkRequests[i];\n        if (TraceEngine.Types.TraceEvents.isTraceEventMarkerEvent(event)) {\n          assert.isNaN(flameChartData.entryTotalTimes[i]);\n          continue;\n        }\n        const expectedTotalTimeForEvent = event.dur ?\n            TraceEngine.Helpers.Timing.microSecondsToMilliseconds(event.dur as TraceEngine.Types.Timing.MicroSeconds) :\n            Timeline.TimelineFlameChartDataProvider.InstantEventVisibleDurationMs;\n        assert.strictEqual(flameChartData.entryTotalTimes[i], expectedTotalTimeForEvent);\n      }\n    });\n  });\n\n  describe('colorForEvent and titleForEvent', function() {\n    it('returns the correct color and title for GPU tasks', function() {\n      const networkRequests = traceParsedData.NetworkRequests.byTime;\n      for (const event of networkRequests) {\n        assert.strictEqual(networkTrackAppender.titleForEvent(event), event.name);\n        const category = Timeline.TimelineUIUtils.TimelineUIUtils.syntheticNetworkRequestCategory(event);\n        assert.strictEqual(\n            networkTrackAppender.colorForEvent(event),\n            Timeline.TimelineUIUtils.TimelineUIUtils.networkCategoryColor(category));\n      }\n    });\n  });\n\n  describe('highlightedEntryInfo', function() {\n    it('returns the info for a entry correctly', function() {\n      const networkRequests = traceParsedData.NetworkRequests.byTime;\n      const highlightedEntryInfo = networkTrackAppender.highlightedEntryInfo(networkRequests[0]);\n      // The i18n encodes spaces using the u00A0 unicode character.\n      assert.strictEqual(highlightedEntryInfo.formattedTime, '286.21\\u00A0ms');\n    });\n  });\n});\n"]}