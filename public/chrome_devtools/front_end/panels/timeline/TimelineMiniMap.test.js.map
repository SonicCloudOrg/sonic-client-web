{"version":3,"file":"TimelineMiniMap.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/timeline/TimelineMiniMap.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as TraceEngine from '../../models/trace/trace.js';\nimport * as ModificationsManager from '../../services/modifications_manager/modifications_manager.js';\nimport {raf, renderElementIntoDOM} from '../../testing/DOMHelpers.js';\nimport {describeWithEnvironment} from '../../testing/EnvironmentHelpers.js';\nimport {TraceLoader} from '../../testing/TraceLoader.js';\n\nimport * as TimelineComponents from './components/components.js';\nimport * as Timeline from './timeline.js';\n\ndescribeWithEnvironment('TimelineMiniMap', function() {\n  it('always shows the responsiveness, CPU activity and network panel', async function() {\n    const traceParsedData = await TraceLoader.traceEngine(this, 'web-dev.json.gz');\n\n    const container = document.createElement('div');\n    renderElementIntoDOM(container);\n\n    const minimap = new Timeline.TimelineMiniMap.TimelineMiniMap();\n    minimap.markAsRoot();\n    minimap.show(container);\n\n    minimap.setData({\n      traceParsedData,\n      settings: {\n        showMemory: false,\n        showScreenshots: false,\n      },\n    });\n\n    await raf();\n    assert.exists(container.querySelector('#timeline-overview-responsiveness'));\n    assert.exists(container.querySelector('#timeline-overview-cpu-activity'));\n    assert.exists(container.querySelector('#timeline-overview-network'));\n    assert.isNull(container.querySelector('#timeline-overview-filmstrip'));\n    assert.isNull(container.querySelector('#timeline-overview-memory'));\n    minimap.detach();\n  });\n\n  it('will show the other panels if they are set to visible', async function() {\n    const traceParsedData = await TraceLoader.traceEngine(this, 'web-dev.json.gz');\n\n    const container = document.createElement('div');\n    renderElementIntoDOM(container);\n\n    const minimap = new Timeline.TimelineMiniMap.TimelineMiniMap();\n    minimap.markAsRoot();\n    minimap.show(container);\n\n    minimap.setData({\n      traceParsedData,\n      settings: {\n        showMemory: true,\n        showScreenshots: true,\n      },\n    });\n\n    await raf();\n    assert.exists(container.querySelector('#timeline-overview-responsiveness'));\n    assert.exists(container.querySelector('#timeline-overview-cpu-activity'));\n    assert.exists(container.querySelector('#timeline-overview-network'));\n    assert.exists(container.querySelector('#timeline-overview-filmstrip'));\n    assert.exists(container.querySelector('#timeline-overview-memory'));\n    minimap.detach();\n  });\n\n  it('creates the first breadcrumb', async function() {\n    const traceParsedData = await TraceLoader.traceEngine(this, 'web-dev.json.gz');\n\n    const container = document.createElement('div');\n    renderElementIntoDOM(container);\n\n    const minimap = new Timeline.TimelineMiniMap.TimelineMiniMap();\n    minimap.markAsRoot();\n    minimap.show(container);\n\n    minimap.setData({\n      traceParsedData,\n      settings: {\n        showMemory: true,\n        showScreenshots: true,\n      },\n    });\n    minimap.addInitialBreadcrumb();\n\n    await raf();\n\n    if (!minimap.breadcrumbs) {\n      throw new Error('The MiniMap unexpectedly did not create any breadcrumbs');\n    }\n\n    assert.strictEqual(\n        TimelineComponents.Breadcrumbs.flattenBreadcrumbs(minimap.breadcrumbs.initialBreadcrumb).length, 1);\n    assert.deepEqual(minimap.breadcrumbs.initialBreadcrumb, {window: traceParsedData.Meta.traceBounds, child: null});\n  });\n  it('stores breadcrumbs to be serialized', async function() {\n    const traceParsedData = await TraceLoader.traceEngine(this, 'web-dev.json.gz');\n    const minimap = new Timeline.TimelineMiniMap.TimelineMiniMap();\n    minimap.setData({\n      traceParsedData,\n      settings: {\n        showMemory: true,\n        showScreenshots: true,\n      },\n    });\n    minimap.addInitialBreadcrumb();\n    const entireTraceBounds = traceParsedData.Meta.traceBounds;\n    const newBounds = {\n      ...entireTraceBounds,\n      min: TraceEngine.Types.Timing.MicroSeconds((entireTraceBounds.max + entireTraceBounds.min) / 2),\n    };\n    minimap.breadcrumbs?.add(newBounds);\n    const serializableModifications =\n        ModificationsManager.ModificationsManager.ModificationsManager.activeManager()?.toJSON();\n    assert.deepEqual(\n        serializableModifications?.initialBreadcrumb.child,\n        {window: {min: 1020035455504, max: 1020036087961, range: 1264914}, child: null} as\n            TraceEngine.Types.File.Breadcrumb);\n  });\n});\n"]}