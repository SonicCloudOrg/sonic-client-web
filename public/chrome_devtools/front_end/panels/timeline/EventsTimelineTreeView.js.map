{"version":3,"file":"EventsTimelineTreeView.js","sourceRoot":"","sources":["../../../../../../front_end/panels/timeline/EventsTimelineTreeView.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as TimelineModel from '../../models/timeline_model/timeline_model.js';\nimport * as TraceEngine from '../../models/trace/trace.js';\nimport * as DataGrid from '../../ui/legacy/components/data_grid/data_grid.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport {type EventCategory, getCategoryStyles} from './EventUICategory.js';\nimport {Category, IsLong} from './TimelineFilters.js';\nimport {type TimelineModeViewDelegate} from './TimelinePanel.js';\nimport {TimelineSelection} from './TimelineSelection.js';\nimport {TimelineTreeView} from './TimelineTreeView.js';\nimport {TimelineUIUtils} from './TimelineUIUtils.js';\n\nconst UIStrings = {\n  /**\n   *@description Text for the start time of an activity\n   */\n  startTime: 'Start Time',\n  /**\n   *@description Screen reader label for a select box that filters the Performance panel Event Log by duration.\n   */\n  durationFilter: 'Duration filter',\n  /**\n   *@description Text in Events Timeline Tree View of the Performance panel\n   *@example {2} PH1\n   */\n  Dms: '{PH1}Â ms',\n  /**\n   *@description Text for everything\n   */\n  all: 'All',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/EventsTimelineTreeView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class EventsTimelineTreeView extends TimelineTreeView {\n  private readonly filtersControl: Filters;\n  private readonly delegate: TimelineModeViewDelegate;\n  private currentTree!: TimelineModel.TimelineProfileTree.Node;\n  constructor(delegate: TimelineModeViewDelegate) {\n    super();\n    this.filtersControl = new Filters();\n    this.filtersControl.addEventListener(Events.FilterChanged, this.onFilterChanged, this);\n    this.init();\n    this.delegate = delegate;\n    this.dataGrid.markColumnAsSortedBy('start-time', DataGrid.DataGrid.Order.Ascending);\n    this.splitWidget.showBoth();\n  }\n\n  override filters(): TimelineModel.TimelineModelFilter.TimelineModelFilter[] {\n    return [...super.filters(), ...this.filtersControl.filters()];\n  }\n\n  override updateContents(selection: TimelineSelection): void {\n    super.updateContents(selection);\n    if (TimelineSelection.isTraceEventSelection(selection.object)) {\n      this.selectEvent(selection.object, true);\n    }\n  }\n\n  override buildTree(): TimelineModel.TimelineProfileTree.Node {\n    this.currentTree = this.buildTopDownTree(true, null);\n    return this.currentTree;\n  }\n\n  private onFilterChanged(): void {\n    const lastSelectedNode = this.lastSelectedNode();\n    const selectedEvent = lastSelectedNode && lastSelectedNode.event;\n    this.refreshTree();\n    if (selectedEvent) {\n      this.selectEvent(selectedEvent, false);\n    }\n  }\n\n  private findNodeWithEvent(event: TraceEngine.Types.TraceEvents.TraceEventData): TimelineModel.TimelineProfileTree.Node\n      |null {\n    if (event.name === TraceEngine.Types.TraceEvents.KnownEventName.RunTask) {\n      // No node is ever created for the top level RunTask event, so\n      // bail out preemptively\n      return null;\n    }\n    const iterators = [this.currentTree.children().values()];\n    while (iterators.length) {\n      const {done, value: child} = iterators[iterators.length - 1].next();\n      if (done) {\n        iterators.pop();\n        continue;\n      }\n      if (child.event === event) {\n        return child;\n      }\n      iterators.push(child.children().values());\n    }\n    return null;\n  }\n\n  private selectEvent(event: TraceEngine.Types.TraceEvents.TraceEventData, expand?: boolean): void {\n    const node = this.findNodeWithEvent(event);\n    if (!node) {\n      return;\n    }\n    this.selectProfileNode(node, false);\n    if (expand) {\n      const dataGridNode = this.dataGridNodeForTreeNode(node);\n      if (dataGridNode) {\n        dataGridNode.expand();\n      }\n    }\n  }\n\n  override populateColumns(columns: DataGrid.DataGrid.ColumnDescriptor[]): void {\n    columns.push(({\n      id: 'start-time',\n      title: i18nString(UIStrings.startTime),\n      width: '80px',\n      fixedWidth: true,\n      sortable: true,\n    } as DataGrid.DataGrid.ColumnDescriptor));\n    super.populateColumns(columns);\n    columns.filter(c => c.fixedWidth).forEach(c => {\n      c.width = '80px';\n    });\n  }\n\n  override populateToolbar(toolbar: UI.Toolbar.Toolbar): void {\n    super.populateToolbar(toolbar);\n    this.filtersControl.populateToolbar(toolbar);\n  }\n\n  override showDetailsForNode(node: TimelineModel.TimelineProfileTree.Node): boolean {\n    const traceParseData = this.traceParseData();\n    if (!traceParseData) {\n      return false;\n    }\n    const traceEvent = node.event;\n    if (!traceEvent) {\n      return false;\n    }\n    void TimelineUIUtils.buildTraceEventDetails(traceParseData, traceEvent, this.linkifier, false)\n        .then(fragment => this.detailsView.element.appendChild(fragment));\n    return true;\n  }\n\n  override onHover(node: TimelineModel.TimelineProfileTree.Node|null): void {\n    this.delegate.highlightEvent(node && node.event);\n  }\n}\n\nexport class Filters extends Common.ObjectWrapper.ObjectWrapper<EventTypes> {\n  private readonly categoryFilter: Category;\n  private readonly durationFilter: IsLong;\n  private readonly filtersInternal: (IsLong|Category)[];\n  constructor() {\n    super();\n    this.categoryFilter = new Category();\n    this.durationFilter = new IsLong();\n    this.filtersInternal = [this.categoryFilter, this.durationFilter];\n  }\n\n  filters(): TimelineModel.TimelineModelFilter.TimelineModelFilter[] {\n    return this.filtersInternal;\n  }\n\n  populateToolbar(toolbar: UI.Toolbar.Toolbar): void {\n    const durationFilterUI =\n        new UI.Toolbar.ToolbarComboBox(durationFilterChanged.bind(this), i18nString(UIStrings.durationFilter));\n    for (const durationMs of Filters.durationFilterPresetsMs) {\n      durationFilterUI.addOption(durationFilterUI.createOption(\n          durationMs ? `â¥ ${i18nString(UIStrings.Dms, {PH1: durationMs})}` : i18nString(UIStrings.all),\n          String(durationMs)));\n    }\n    toolbar.appendToolbarItem(durationFilterUI);\n\n    const categoryFiltersUI = new Map<string, UI.Toolbar.ToolbarCheckbox>();\n    const categories = getCategoryStyles();\n    for (const categoryName in categories) {\n      const category = categories[categoryName as EventCategory];\n      if (!category.visible) {\n        continue;\n      }\n      const checkbox = new UI.Toolbar.ToolbarCheckbox(\n          category.title, undefined, categoriesFilterChanged.bind(this, categoryName as EventCategory));\n      checkbox.setChecked(true);\n      checkbox.inputElement.style.backgroundColor = category.color;\n      categoryFiltersUI.set(category.name, checkbox);\n      toolbar.appendToolbarItem(checkbox);\n    }\n\n    function durationFilterChanged(this: Filters): void {\n      const duration = (durationFilterUI.selectedOption() as HTMLOptionElement).value;\n      const minimumRecordDuration = parseInt(duration, 10);\n      this.durationFilter.setMinimumRecordDuration(TraceEngine.Types.Timing.MilliSeconds(minimumRecordDuration));\n      this.notifyFiltersChanged();\n    }\n\n    function categoriesFilterChanged(this: Filters, name: EventCategory): void {\n      const categories = getCategoryStyles();\n      const checkBox = categoryFiltersUI.get(name);\n      categories[name].hidden = !checkBox || !checkBox.checked();\n      this.notifyFiltersChanged();\n    }\n  }\n\n  private notifyFiltersChanged(): void {\n    this.dispatchEventToListeners(Events.FilterChanged);\n  }\n\n  private static readonly durationFilterPresetsMs = [0, 1, 15];\n}\n\nconst enum Events {\n  FilterChanged = 'FilterChanged',\n}\n\ntype EventTypes = {\n  [Events.FilterChanged]: void,\n};\n"]}