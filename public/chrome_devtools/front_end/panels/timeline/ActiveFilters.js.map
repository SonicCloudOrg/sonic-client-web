{"version":3,"file":"ActiveFilters.js","sourceRoot":"","sources":["../../../../../../front_end/panels/timeline/ActiveFilters.ts"],"names":[],"mappings":"AAMA,IAAI,QAAQ,GAAuB,IAAI,CAAC;AACxC;;GAEG;AACH,MAAM,OAAO,aAAa;IACxB,MAAM,CAAC,QAAQ,CAAC,OAEZ,EAAC,QAAQ,EAAE,IAAI,EAAC;QAClB,MAAM,QAAQ,GAAG,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACxC,IAAI,CAAC,QAAQ,IAAI,QAAQ,EAAE,CAAC;YAC1B,QAAQ,GAAG,IAAI,aAAa,EAAE,CAAC;QACjC,CAAC;QACD,OAAO,QAAQ,CAAC;IAClB,CAAC;IAED,MAAM,CAAC,cAAc;QACnB,QAAQ,GAAG,IAAI,CAAC;IAClB,CAAC;IAED,cAAc,GAA4D,EAAE,CAAC;IAE7E,aAAa;QACX,OAAO,IAAI,CAAC,cAAc,CAAC;IAC7B,CAAC;IAED,UAAU,CAAC,UAAmE;QAC5E,IAAI,CAAC,cAAc,GAAG,UAAU,CAAC;IACnC,CAAC;IAED,SAAS,CAAC,KAAmD;QAC3D,OAAO,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;IACzD,CAAC;CACF","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport type * as TimelineModel from '../../models/timeline_model/timeline_model.js';\nimport type * as TraceEngine from '../../models/trace/trace.js';\n\nlet instance: ActiveFilters|null = null;\n/** Singleton class that contains the set of active filters for the given trace\n * file.\n */\nexport class ActiveFilters {\n  static instance(opts: {\n    forceNew: boolean|null,\n  } = {forceNew: null}): ActiveFilters {\n    const forceNew = Boolean(opts.forceNew);\n    if (!instance || forceNew) {\n      instance = new ActiveFilters();\n    }\n    return instance;\n  }\n\n  static removeInstance(): void {\n    instance = null;\n  }\n\n  #activeFilters: TimelineModel.TimelineModelFilter.TimelineModelFilter[] = [];\n\n  activeFilters(): readonly TimelineModel.TimelineModelFilter.TimelineModelFilter[] {\n    return this.#activeFilters;\n  }\n\n  setFilters(newFilters: TimelineModel.TimelineModelFilter.TimelineModelFilter[]): void {\n    this.#activeFilters = newFilters;\n  }\n\n  isVisible(event: TraceEngine.Types.TraceEvents.TraceEventData): boolean {\n    return this.#activeFilters.every(f => f.accept(event));\n  }\n}\n"]}