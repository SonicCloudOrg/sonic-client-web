{"version":3,"file":"LiveMetricsView.test.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/timeline/components/LiveMetricsView.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as LiveMetrics from '../../../models/live-metrics/live-metrics.js';\nimport {renderElementIntoDOM} from '../../../testing/DOMHelpers.js';\nimport {\n  describeWithEnvironment,\n} from '../../../testing/EnvironmentHelpers.js';\nimport * as Coordinator from '../../../ui/components/render_coordinator/render_coordinator.js';\n\nimport * as Components from './components.js';\n\nconst coordinator = Coordinator.RenderCoordinator.RenderCoordinator.instance();\n\ndescribeWithEnvironment('LiveMetricsView', () => {\n  beforeEach(async () => {\n    LiveMetrics.LiveMetrics.instance({forceNew: true});\n  });\n\n  it('should show LCP value', async () => {\n    const view = new Components.LiveMetricsView.LiveMetricsView();\n    renderElementIntoDOM(view);\n    LiveMetrics.LiveMetrics.instance().dispatchEventToListeners(LiveMetrics.Events.Status, {\n      lcp: {value: 100, rating: 'good'},\n      interactions: [],\n    });\n    await coordinator.done();\n    const metricEl = view.shadowRoot?.querySelector('#lcp') as HTMLDivElement;\n    const metricValueEl = metricEl.querySelector('.metric-card-value') as HTMLDivElement;\n    assert.strictEqual(metricValueEl.className, 'metric-card-value good');\n    assert.strictEqual(metricValueEl.innerText, '100 ms');\n  });\n\n  it('should show CLS value', async () => {\n    const view = new Components.LiveMetricsView.LiveMetricsView();\n    renderElementIntoDOM(view);\n    LiveMetrics.LiveMetrics.instance().dispatchEventToListeners(LiveMetrics.Events.Status, {\n      cls: {value: 1.34294789234, rating: 'needs-improvement'},\n      interactions: [],\n    });\n    await coordinator.done();\n    const metricEl = view.shadowRoot?.querySelector('#cls') as HTMLDivElement;\n    const metricValueEl = metricEl.querySelector('.metric-card-value') as HTMLDivElement;\n    assert.strictEqual(metricValueEl.className, 'metric-card-value needs-improvement');\n    assert.strictEqual(metricValueEl.innerText, '1.343');\n  });\n\n  it('should show INP value', async () => {\n    const view = new Components.LiveMetricsView.LiveMetricsView();\n    renderElementIntoDOM(view);\n    LiveMetrics.LiveMetrics.instance().dispatchEventToListeners(\n        LiveMetrics.Events.Status, {inp: {value: 2000, rating: 'poor', interactionType: 'pointer'}, interactions: []});\n    await coordinator.done();\n    const metricEl = view.shadowRoot?.querySelector('#inp') as HTMLDivElement;\n    const metricValueEl = metricEl.querySelector('.metric-card-value') as HTMLDivElement;\n    assert.strictEqual(metricValueEl.className, 'metric-card-value poor');\n    assert.strictEqual(metricValueEl.innerText, '2.00 s');\n  });\n\n  it('should show empty metric', async () => {\n    const view = new Components.LiveMetricsView.LiveMetricsView();\n    renderElementIntoDOM(view);\n    await coordinator.done();\n    const metricEl = view.shadowRoot?.querySelector('#inp') as HTMLDivElement;\n    const metricValueEl = metricEl.querySelector('.metric-card-value') as HTMLDivElement;\n    assert.strictEqual(metricValueEl.className.trim(), 'metric-card-value waiting');\n    assert.strictEqual(metricValueEl.innerText, '-');\n  });\n\n  it('should show interactions', async () => {\n    const view = new Components.LiveMetricsView.LiveMetricsView();\n    renderElementIntoDOM(view);\n    LiveMetrics.LiveMetrics.instance().dispatchEventToListeners(LiveMetrics.Events.Status, {\n      interactions: [\n        {duration: 500, rating: 'poor', interactionType: 'pointer'},\n        {duration: 30, rating: 'good', interactionType: 'keyboard'},\n      ],\n    });\n    await coordinator.done();\n    const interactionsListEl = view.shadowRoot?.querySelector('.interactions-list') as HTMLDivElement;\n    const interactionsEls = interactionsListEl.querySelectorAll('.interaction');\n    assert.lengthOf(interactionsEls, 2);\n\n    const typeEl1 = interactionsEls[0].querySelector('.interaction-type') as HTMLDivElement;\n    assert.strictEqual(typeEl1.textContent, 'pointer');\n\n    const durationEl1 = interactionsEls[0].querySelector('.interaction-duration') as HTMLDivElement;\n    assert.strictEqual(durationEl1.textContent, '500 ms');\n    assert.strictEqual(durationEl1.className, 'interaction-duration poor');\n\n    const typeEl2 = interactionsEls[1].querySelector('.interaction-type') as HTMLDivElement;\n    assert.strictEqual(typeEl2.textContent, 'keyboard');\n\n    const durationEl2 = interactionsEls[1].querySelector('.interaction-duration') as HTMLDivElement;\n    assert.strictEqual(durationEl2.textContent, '30 ms');\n    assert.strictEqual(durationEl2.className, 'interaction-duration good');\n  });\n});\n"]}