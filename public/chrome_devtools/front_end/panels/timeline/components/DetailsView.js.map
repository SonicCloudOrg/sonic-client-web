{"version":3,"file":"DetailsView.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/timeline/components/DetailsView.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as Platform from '../../../core/platform/platform.js';\nimport type * as Protocol from '../../../generated/protocol.js';\nimport * as TraceEngine from '../../../models/trace/trace.js';\nimport * as UI from '../../../ui/legacy/legacy.js';\n\n// *********************************************************************\n// At the moment this file consists of helpers to aid in the rendering\n// of events details in the bottom drawer. In the future, we should use\n// LitHtml for this section, and update this helpers accordingly.\n// *********************************************************************\n\nconst UIStrings = {\n  /**\n   *@description Text in the Performance panel for a forced style and layout calculation of elements\n   * in a page. See https://developer.mozilla.org/en-US/docs/Glossary/Reflow\n   */\n  forcedReflow: 'Forced reflow',\n  /**\n   *@description Text in Timeline UIUtils of the Performance panel\n   *@example {Forced reflow} PH1\n   */\n  sIsALikelyPerformanceBottleneck: '{PH1} is a likely performance bottleneck.',\n  /**\n   *@description Text in the Performance panel for a function called during a time the browser was\n   * idle (inactive), which to longer to execute than a predefined deadline.\n   *@example {10ms} PH1\n   */\n  idleCallbackExecutionExtended: 'Idle callback execution extended beyond deadline by {PH1}',\n  /**\n   *@description Text in the Performance panel which describes how long a task took.\n   *@example {task} PH1\n   *@example {10ms} PH2\n   */\n  sTookS: '{PH1} took {PH2}.',\n  /**\n   *@description Text in the Performance panel for a task that took long. See\n   * https://developer.mozilla.org/en-US/docs/Glossary/Long_task\n   */\n  longTask: 'Long task',\n  /**\n   *@description Text used to highlight a long interaction and link to web.dev/inp\n   */\n  longInteractionINP: 'Long interaction',\n  /**\n   *@description Text in Timeline UIUtils of the Performance panel when the\n   *             user clicks on a long interaction.\n   *@example {Long interaction} PH1\n   */\n  sIsLikelyPoorPageResponsiveness: '{PH1} is indicating poor page responsiveness.',\n  /**\n   *@description Text in Timeline UIUtils of the Performance panel\n   */\n  websocketProtocol: 'WebSocket Protocol',\n  /**\n   * @description Details text indicating how many bytes were received in a WebSocket message\n   * @example {1024} PH1\n   */\n  webSocketBytes: '{PH1} byte(s)',\n  /**\n   * @description Details text indicating how many bytes were sent in a WebSocket message\n   */\n  webSocketDataLength: 'Data Length',\n};\n\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/components/DetailsView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport function buildWarningElementsForEvent(\n    event: TraceEngine.Types.TraceEvents.TraceEventData,\n    traceParsedData: TraceEngine.Handlers.Types.TraceParseData): HTMLSpanElement[] {\n  const warnings = traceParsedData.Warnings.perEvent.get(event);\n  const warningElements: HTMLSpanElement[] = [];\n  if (!warnings) {\n    return warningElements;\n  }\n  for (const warning of warnings) {\n    const duration =\n        TraceEngine.Helpers.Timing.microSecondsToMilliseconds(TraceEngine.Types.Timing.MicroSeconds(event.dur || 0));\n    const span = document.createElement('span');\n    switch (warning) {\n      case 'FORCED_REFLOW': {\n        const forcedReflowLink = UI.XLink.XLink.create(\n            'https://developers.google.com/web/fundamentals/performance/rendering/avoid-large-complex-layouts-and-layout-thrashing#avoid-forced-synchronous-layouts',\n            i18nString(UIStrings.forcedReflow), undefined, undefined, 'forced-reflow');\n        span.appendChild(i18n.i18n.getFormatLocalizedString(\n            str_, UIStrings.sIsALikelyPerformanceBottleneck, {PH1: forcedReflowLink}));\n        break;\n      }\n      case 'IDLE_CALLBACK_OVER_TIME': {\n        if (!TraceEngine.Types.TraceEvents.isTraceEventFireIdleCallback(event)) {\n          break;\n        }\n        const exceededMs =\n            i18n.TimeUtilities.millisToString((duration || 0) - event.args.data['allottedMilliseconds'], true);\n        span.textContent = i18nString(UIStrings.idleCallbackExecutionExtended, {PH1: exceededMs});\n        break;\n      }\n\n      case 'LONG_TASK': {\n        const longTaskLink = UI.XLink.XLink.create(\n            'https://web.dev/optimize-long-tasks/', i18nString(UIStrings.longTask), undefined, undefined, 'long-tasks');\n        span.appendChild(i18n.i18n.getFormatLocalizedString(\n            str_, UIStrings.sTookS,\n            {PH1: longTaskLink, PH2: i18n.TimeUtilities.millisToString((duration || 0), true)}));\n        break;\n      }\n      case 'LONG_INTERACTION': {\n        const longInteractionINPLink = UI.XLink.XLink.create(\n            'https://web.dev/inp', i18nString(UIStrings.longInteractionINP), undefined, undefined, 'long-interaction');\n        span.appendChild(i18n.i18n.getFormatLocalizedString(\n            str_, UIStrings.sIsLikelyPoorPageResponsiveness, {PH1: longInteractionINPLink}));\n        break;\n      }\n      default: {\n        Platform.assertNever(warning, `Unhandled warning type ${warning}`);\n      }\n    }\n    warningElements.push(span);\n  }\n  return warningElements;\n}\n\nexport interface DetailRow {\n  key: string;\n  value: string;\n}\nexport function buildRowsForWebSocketEvent(\n    event: TraceEngine.Types.TraceEvents.TraceEventWebSocketCreate|\n    TraceEngine.Types.TraceEvents.TraceEventWebSocketInfo|TraceEngine.Types.TraceEvents.TraceEventWebSocketTransfer,\n    traceParsedData: TraceEngine.Handlers.Types.TraceParseData): readonly DetailRow[] {\n  const rows: DetailRow[] = [];\n\n  const initiator = traceParsedData.Initiators.eventToInitiator.get(event);\n  if (initiator && TraceEngine.Types.TraceEvents.isTraceEventWebSocketCreate(initiator)) {\n    // The initiator will be a WebSocketCreate, but this check helps TypeScript to understand.\n    rows.push({key: i18n.i18n.lockedString('URL'), value: initiator.args.data.url});\n    if (initiator.args.data.websocketProtocol) {\n      rows.push({key: i18nString(UIStrings.websocketProtocol), value: initiator.args.data.websocketProtocol});\n    }\n  } else if (TraceEngine.Types.TraceEvents.isTraceEventWebSocketCreate(event)) {\n    rows.push({key: i18n.i18n.lockedString('URL'), value: event.args.data.url});\n    if (event.args.data.websocketProtocol) {\n      rows.push({key: i18nString(UIStrings.websocketProtocol), value: event.args.data.websocketProtocol});\n    }\n  }\n  if (TraceEngine.Types.TraceEvents.isTraceEventWebSocketTransfer(event)) {\n    if (event.args.data.dataLength) {\n      rows.push({\n        key: i18nString(UIStrings.webSocketDataLength),\n        value: `${i18nString(UIStrings.webSocketBytes, {PH1: event.args.data.dataLength})}`,\n      });\n    }\n  }\n\n  return rows;\n}\n\n/**\n * This method does not output any content but instead takes a list of\n * invalidations and groups them, doing some processing of the data to collect\n * invalidations grouped by the reason/cause.\n * It also returns all BackendNodeIds that are related to these invalidations\n * so that they can be fetched via CDP.\n * It is exported only for testing purposes.\n **/\nexport function generateInvalidationsList(\n    invalidations: TraceEngine.Types.TraceEvents.SyntheticInvalidation[],\n    ): {\n  groupedByReason: Record<string, TraceEngine.Types.TraceEvents.SyntheticInvalidation[]>,\n  backendNodeIds: Set<Protocol.DOM.BackendNodeId>,\n} {\n  const groupedByReason: Record<string, TraceEngine.Types.TraceEvents.SyntheticInvalidation[]> = {};\n\n  const backendNodeIds: Set<Protocol.DOM.BackendNodeId> = new Set();\n  for (const invalidation of invalidations) {\n    backendNodeIds.add(invalidation.nodeId);\n\n    let reason = invalidation.reason || 'unknown';\n\n    // ScheduleStyle events do not always have a reason, but if they tell us\n    // via their data what changed, we can update the reason that we show to\n    // the user.\n    if (reason === 'unknown' &&\n        TraceEngine.Types.TraceEvents.isTraceEventScheduleStyleInvalidationTracking(invalidation.rawEvent) &&\n        invalidation.rawEvent.args.data.invalidatedSelectorId) {\n      switch (invalidation.rawEvent.args.data.invalidatedSelectorId) {\n        case 'attribute':\n          reason = 'Attribute';\n          if (invalidation.rawEvent.args.data.changedAttribute) {\n            reason += ` (${invalidation.rawEvent.args.data.changedAttribute})`;\n          }\n          break;\n        case 'class':\n          reason = 'Class';\n          if (invalidation.rawEvent.args.data.changedClass) {\n            reason += ` (${invalidation.rawEvent.args.data.changedClass})`;\n          }\n          break;\n        case 'id':\n          reason = 'Id';\n          if (invalidation.rawEvent.args.data.changedId) {\n            reason += ` (${invalidation.rawEvent.args.data.changedId})`;\n          }\n          break;\n      }\n    }\n\n    if (reason === 'PseudoClass' &&\n        TraceEngine.Types.TraceEvents.isTraceEventStyleRecalcInvalidationTracking(invalidation.rawEvent) &&\n        invalidation.rawEvent.args.data.extraData) {\n      // This will append the `:focus` onto the reason.\n      reason += invalidation.rawEvent.args.data.extraData;\n    }\n\n    if (reason === 'Attribute' &&\n        TraceEngine.Types.TraceEvents.isTraceEventStyleRecalcInvalidationTracking(invalidation.rawEvent) &&\n        invalidation.rawEvent.args.data.extraData) {\n      // Append the attribute that changed.\n      reason += ` (${invalidation.rawEvent.args.data.extraData})`;\n    }\n\n    if (reason === 'StyleInvalidator') {\n      // These events give us some extra metadata but are not in isolation that\n      // useful and end up duplicating information from other tracking events,\n      // so we do not include these in the UI.\n      continue;\n    }\n\n    const existing = groupedByReason[reason] || [];\n    existing.push(invalidation);\n    groupedByReason[reason] = existing;\n  }\n  return {groupedByReason, backendNodeIds};\n}\n"]}