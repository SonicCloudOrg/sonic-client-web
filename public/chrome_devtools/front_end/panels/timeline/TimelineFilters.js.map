{"version":3,"file":"TimelineFilters.js","sourceRoot":"","sources":["../../../../../../front_end/panels/timeline/TimelineFilters.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,aAAa,MAAM,+CAA+C,CAAC;AAC/E,OAAO,KAAK,WAAW,MAAM,6BAA6B,CAAC;AAE3D,OAAO,EAAC,eAAe,EAAC,MAAM,sBAAsB,CAAC;AAErD,MAAM,OAAO,MAAO,SAAQ,aAAa,CAAC,mBAAmB,CAAC,mBAAmB;IAC/E,2BAA2B,GAAG,WAAW,CAAC,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;IACvE;QACE,KAAK,EAAE,CAAC;IACV,CAAC;IAED,wBAAwB,CAAC,KAA4C;QACnE,IAAI,CAAC,2BAA2B,GAAG,KAAK,CAAC;IAC3C,CAAC;IAED,MAAM,CAAC,KAAmD;QACxD,MAAM,EAAC,QAAQ,EAAC,GAAG,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC,wBAAwB,CAAC,KAAK,CAAC,CAAC;QAC9E,OAAO,QAAQ,IAAI,IAAI,CAAC,2BAA2B,CAAC;IACtD,CAAC;CACF;AAED,MAAM,OAAO,QAAS,SAAQ,aAAa,CAAC,mBAAmB,CAAC,mBAAmB;IACjF;QACE,KAAK,EAAE,CAAC;IACV,CAAC;IAED,MAAM,CAAC,KAAmD;QACxD,OAAO,CAAC,eAAe,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC;IAC5D,CAAC;CACF;AAED,MAAM,OAAO,cAAe,SAAQ,aAAa,CAAC,mBAAmB,CAAC,mBAAmB;IAC/E,cAAc,CAAe;IACrC,YAAY,MAAe;QACzB,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,SAAS,CAAC,MAAM,IAAI,IAAI,CAAC,CAAC;IACjC,CAAC;IAED,SAAS,CAAC,MAAmB;QAC3B,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC;IAC/B,CAAC;IAED,MAAM;QACJ,OAAO,IAAI,CAAC,cAAc,CAAC;IAC7B,CAAC;IAED,MAAM,CACF,KAAmD,EACnD,eAA2D;QAC7D,OAAO,CAAC,IAAI,CAAC,cAAc,IAAI,eAAe,CAAC,mBAAmB,CAAC,KAAK,EAAE,IAAI,CAAC,cAAc,EAAE,eAAe,CAAC,CAAC;IAClH,CAAC;CACF","sourcesContent":["// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as TimelineModel from '../../models/timeline_model/timeline_model.js';\nimport * as TraceEngine from '../../models/trace/trace.js';\n\nimport {TimelineUIUtils} from './TimelineUIUtils.js';\n\nexport class IsLong extends TimelineModel.TimelineModelFilter.TimelineModelFilter {\n  #minimumRecordDurationMilli = TraceEngine.Types.Timing.MilliSeconds(0);\n  constructor() {\n    super();\n  }\n\n  setMinimumRecordDuration(value: TraceEngine.Types.Timing.MilliSeconds): void {\n    this.#minimumRecordDurationMilli = value;\n  }\n\n  accept(event: TraceEngine.Types.TraceEvents.TraceEventData): boolean {\n    const {duration} = TraceEngine.Helpers.Timing.eventTimingsMilliSeconds(event);\n    return duration >= this.#minimumRecordDurationMilli;\n  }\n}\n\nexport class Category extends TimelineModel.TimelineModelFilter.TimelineModelFilter {\n  constructor() {\n    super();\n  }\n\n  accept(event: TraceEngine.Types.TraceEvents.TraceEventData): boolean {\n    return !TimelineUIUtils.eventStyle(event).category.hidden;\n  }\n}\n\nexport class TimelineRegExp extends TimelineModel.TimelineModelFilter.TimelineModelFilter {\n  private regExpInternal!: RegExp|null;\n  constructor(regExp?: RegExp) {\n    super();\n    this.setRegExp(regExp || null);\n  }\n\n  setRegExp(regExp: RegExp|null): void {\n    this.regExpInternal = regExp;\n  }\n\n  regExp(): RegExp|null {\n    return this.regExpInternal;\n  }\n\n  accept(\n      event: TraceEngine.Types.TraceEvents.TraceEventData,\n      traceParsedData?: TraceEngine.Handlers.Types.TraceParseData): boolean {\n    return !this.regExpInternal || TimelineUIUtils.testContentMatching(event, this.regExpInternal, traceParsedData);\n  }\n}\n"]}