{"version":3,"file":"TimelineFlameChartView.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/timeline/TimelineFlameChartView.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as Bindings from '../../models/bindings/bindings.js';\nimport * as TraceEngine from '../../models/trace/trace.js';\nimport * as ModificationsManager from '../../services/modifications_manager/modifications_manager.js';\nimport {describeWithEnvironment} from '../../testing/EnvironmentHelpers.js';\nimport {setupIgnoreListManagerEnvironment} from '../../testing/TraceHelpers.js';\nimport {TraceLoader} from '../../testing/TraceLoader.js';\nimport * as PerfUI from '../../ui/legacy/components/perf_ui/perf_ui.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport * as Timeline from './timeline.js';\n\nclass MockViewDelegate implements Timeline.TimelinePanel.TimelineModeViewDelegate {\n  selection: Timeline.TimelineSelection.TimelineSelection|null = null;\n  select(selection: Timeline.TimelineSelection.TimelineSelection|null): void {\n    this.selection = selection;\n  }\n  selectEntryAtTime(_events: TraceEngine.Types.TraceEvents.TraceEventData[]|null, _time: number): void {\n  }\n  highlightEvent(_event: TraceEngine.Types.TraceEvents.TraceEventData|null): void {\n  }\n}\n\ndescribeWithEnvironment('TimelineFlameChartView', function() {\n  beforeEach(() => {\n    setupIgnoreListManagerEnvironment();\n  });\n\n  it('Can search for events by name in the timeline', async function() {\n    const traceParsedData = await TraceLoader.traceEngine(this, 'lcp-images.json.gz');\n    // The timeline flamechart view will invoke the `select` method\n    // of this delegate every time an event has matched on a search.\n    const mockViewDelegate = new MockViewDelegate();\n\n    const flameChartView = new Timeline.TimelineFlameChartView.TimelineFlameChartView(mockViewDelegate);\n    const searchableView = new UI.SearchableView.SearchableView(flameChartView, null);\n    flameChartView.setSearchableView(searchableView);\n    flameChartView.setModel(traceParsedData);\n\n    const searchQuery = 'Paint';\n    const searchConfig =\n        new UI.SearchableView.SearchConfig(/* query */ searchQuery, /* caseSensitive */ false, /* isRegex */ false);\n    flameChartView.performSearch(searchConfig, true);\n\n    assert.strictEqual(flameChartView.getSearchResults()?.length, 17);\n    assertSelectionName('PrePaint');\n\n    flameChartView.jumpToNextSearchResult();\n    assertSelectionName('Paint');\n\n    flameChartView.jumpToNextSearchResult();\n    assertSelectionName('Paint');\n\n    flameChartView.jumpToPreviousSearchResult();\n    assertSelectionName('Paint');\n    flameChartView.jumpToPreviousSearchResult();\n    assertSelectionName('PrePaint');\n\n    function assertSelectionName(name: string) {\n      const selection = mockViewDelegate.selection;\n      if (!selection || !Timeline.TimelineSelection.TimelineSelection.isTraceEventSelection(selection.object)) {\n        throw new Error('Selection is not present or not a Trace Event');\n      }\n      const object = selection.object;\n      assert.strictEqual(object.name, name);\n    }\n  });\n\n  // This test is still failing after bumping up the timeout to 20 seconds. So\n  // skip it while we work on a fix for the trace load speed.\n  it.skip('[crbug.com/1492405] Shows the network track correctly', async function() {\n    const traceParsedData = await TraceLoader.traceEngine(this, 'load-simple.json.gz');\n    // The timeline flamechart view will invoke the `select` method\n    // of this delegate every time an event has matched on a search.\n    const mockViewDelegate = new MockViewDelegate();\n\n    const flameChartView = new Timeline.TimelineFlameChartView.TimelineFlameChartView(mockViewDelegate);\n    flameChartView.setModel(traceParsedData);\n\n    assert.isTrue(flameChartView.isNetworkTrackShownForTests());\n  });\n\n  it('Does not show the network track when there is no network request', async function() {\n    const traceParsedData = await TraceLoader.traceEngine(this, 'basic.json.gz');\n    // The timeline flamechart view will invoke the `select` method\n    // of this delegate every time an event has matched on a search.\n    const mockViewDelegate = new MockViewDelegate();\n\n    const flameChartView = new Timeline.TimelineFlameChartView.TimelineFlameChartView(mockViewDelegate);\n    flameChartView.setModel(traceParsedData);\n\n    assert.isFalse(flameChartView.isNetworkTrackShownForTests());\n  });\n\n  it('Adds Hidden Descendants Arrow as a decoration when a Context Menu action is applied on a node', async function() {\n    const traceParsedData = await TraceLoader.traceEngine(this, 'load-simple.json.gz');\n    const mockViewDelegate = new MockViewDelegate();\n\n    const flameChartView = new Timeline.TimelineFlameChartView.TimelineFlameChartView(mockViewDelegate);\n    flameChartView.setModel(traceParsedData);\n\n    // Find the main track to later collapse entries of\n    const mainTrack = flameChartView.getMainFlameChart().timelineData()?.groups.find(group => {\n      return group.name === 'Main — http://localhost:8080/';\n    });\n    if (!mainTrack) {\n      throw new Error('Could not find main track');\n    }\n\n    // Find the first node that has children to collapse and is visible in the timeline\n    const nodeOfGroup = flameChartView.getMainDataProvider().groupTreeEvents(mainTrack);\n    const firstNodeWithChildren = nodeOfGroup?.find(node => {\n      const childrenAmount =\n          traceParsedData.Renderer.entryToNode.get(node as TraceEngine.Types.TraceEvents.SyntheticTraceEntry)\n              ?.children.length;\n      if (!childrenAmount) {\n        return false;\n      }\n      return childrenAmount > 0 && node.cat === 'devtools.timeline';\n    });\n    const node = traceParsedData.Renderer.entryToNode.get(\n        firstNodeWithChildren as TraceEngine.Types.TraceEvents.SyntheticTraceEntry);\n    if (!node) {\n      throw new Error('Could not find a visible node with children');\n    }\n\n    // Apply COLLAPSE_FUNCTION action to the node. This action will hide all the children of the passed node and add HIDDEN_DESCENDANTS_ARROW decoration to it.\n    flameChartView.getMainFlameChart().modifyTree(TraceEngine.EntriesFilter.FilterAction.COLLAPSE_FUNCTION, node?.id);\n\n    const decorationsForEntry = flameChartView.getMainFlameChart().timelineData()?.entryDecorations[node?.id];\n    assert.deepEqual(decorationsForEntry, [\n      {\n        type: PerfUI.FlameChart.FlameChartDecorationType.HIDDEN_DESCENDANTS_ARROW,\n      },\n    ]);\n  });\n\n  it('Adds Hidden Descendants Arrow as a decoration when a Context Menu action is applied on a selected node with a key shortcut event',\n     async function() {\n       const traceParsedData = await TraceLoader.traceEngine(this, 'load-simple.json.gz');\n       const mockViewDelegate = new MockViewDelegate();\n\n       const flameChartView = new Timeline.TimelineFlameChartView.TimelineFlameChartView(mockViewDelegate);\n       flameChartView.setModel(traceParsedData);\n\n       // Find the main track to later collapse entries of\n       const mainTrack = flameChartView.getMainFlameChart().timelineData()?.groups.find(group => {\n         return group.name === 'Main — http://localhost:8080/';\n       });\n       if (!mainTrack) {\n         throw new Error('Could not find main track');\n       }\n\n       // Find the first node that has children to collapse and is visible in the timeline\n       const nodeOfGroup = flameChartView.getMainDataProvider().groupTreeEvents(mainTrack);\n       const firstNodeWithChildren = nodeOfGroup?.find(node => {\n         const childrenAmount =\n             traceParsedData.Renderer.entryToNode.get(node as TraceEngine.Types.TraceEvents.SyntheticTraceEntry)\n                 ?.children.length;\n         if (!childrenAmount) {\n           return false;\n         }\n         return childrenAmount > 0 && node.cat === 'devtools.timeline';\n       });\n       const node = traceParsedData.Renderer.entryToNode.get(\n           firstNodeWithChildren as TraceEngine.Types.TraceEvents.SyntheticTraceEntry);\n       if (!node) {\n         throw new Error('Could not find a visible node with children');\n       }\n\n       flameChartView.getMainFlameChart().setSelectedEntry(node?.id);\n\n       // Dispatch a shortcut keydown event that applies 'Hide Children' Context menu action\n       const event = new KeyboardEvent('keydown', {code: 'KeyC'});\n       flameChartView.getMainFlameChart().getCanvas().dispatchEvent(event);\n\n       const decorationsForEntry = flameChartView.getMainFlameChart().timelineData()?.entryDecorations[node?.id];\n       assert.deepEqual(decorationsForEntry, [\n         {\n           type: PerfUI.FlameChart.FlameChartDecorationType.HIDDEN_DESCENDANTS_ARROW,\n         },\n       ]);\n     });\n\n  it('Removes Hidden Descendants Arrow as a decoration when Reset Children action is applied on a node',\n     async function() {\n       const traceParsedData = await TraceLoader.traceEngine(this, 'load-simple.json.gz');\n       const mockViewDelegate = new MockViewDelegate();\n\n       const flameChartView = new Timeline.TimelineFlameChartView.TimelineFlameChartView(mockViewDelegate);\n       flameChartView.setModel(traceParsedData);\n       ModificationsManager.ModificationsManager.ModificationsManager.activeManager();\n\n       // Find the main track to later collapse entries of\n       let mainTrack = flameChartView.getMainFlameChart().timelineData()?.groups.find(group => {\n         return group.name === 'Main — http://localhost:8080/';\n       });\n       if (!mainTrack) {\n         throw new Error('Could not find main track');\n       }\n\n       // Find the first node that has children to collapse and is visible in the timeline\n       const nodeOfGroup = flameChartView.getMainDataProvider().groupTreeEvents(mainTrack);\n       const firstNodeWithChildren = nodeOfGroup?.find(node => {\n         const childrenAmount =\n             traceParsedData.Renderer.entryToNode.get(node as TraceEngine.Types.TraceEvents.SyntheticTraceEntry)\n                 ?.children.length;\n         if (!childrenAmount) {\n           return false;\n         }\n         return childrenAmount > 0 && node.cat === 'devtools.timeline';\n       });\n       const node = traceParsedData.Renderer.entryToNode.get(\n           firstNodeWithChildren as TraceEngine.Types.TraceEvents.SyntheticTraceEntry);\n       if (!node) {\n         throw new Error('Could not find a visible node with children');\n       }\n\n       // Apply COLLAPSE_FUNCTION Context Menu action to the node.\n       // This action will hide all the children of the passed node and add HIDDEN_DESCENDANTS_ARROW decoration to it.\n       flameChartView.getMainFlameChart().modifyTree(\n           TraceEngine.EntriesFilter.FilterAction.COLLAPSE_FUNCTION, node?.id);\n\n       let decorationsForEntry = flameChartView.getMainFlameChart().timelineData()?.entryDecorations[node?.id];\n       assert.deepEqual(decorationsForEntry, [\n         {\n           type: PerfUI.FlameChart.FlameChartDecorationType.HIDDEN_DESCENDANTS_ARROW,\n         },\n       ]);\n\n       mainTrack = flameChartView.getMainFlameChart().timelineData()?.groups.find(group => {\n         return group.name === 'Main — http://localhost:8080/';\n       });\n       if (!mainTrack) {\n         throw new Error('Could not find main track');\n       }\n       // Apply a RESET_CHILDREN action that will reveal all of the hidden children of the passed node and remove HIDDEN_DESCENDANTS_ARROW decoration from it.\n       flameChartView.getMainFlameChart().modifyTree(TraceEngine.EntriesFilter.FilterAction.RESET_CHILDREN, node?.id);\n\n       // No decorations should exist on the node\n       decorationsForEntry = flameChartView.getMainFlameChart().timelineData()?.entryDecorations[node?.id];\n       assert.isUndefined(decorationsForEntry);\n     });\n\n  describe('Context Menu', function() {\n    let flameChartView: Timeline.TimelineFlameChartView.TimelineFlameChartView;\n    let traceParsedData: TraceEngine.Handlers.Types.TraceParseData;\n\n    this.beforeEach(async () => {\n      traceParsedData = await TraceLoader.traceEngine(this, 'recursive-blocking-js.json.gz');\n      const mockViewDelegate = new MockViewDelegate();\n\n      flameChartView = new Timeline.TimelineFlameChartView.TimelineFlameChartView(mockViewDelegate);\n      flameChartView.setModel(traceParsedData);\n      ModificationsManager.ModificationsManager.ModificationsManager.activeManager();\n    });\n\n    it('Does not create customized Context Menu for network track', async function() {\n      // The mouse event passed to the Context Menu is used to indicate where the menu should appear. Since we don't\n      // need it to actually appear for this test, pass an event with coordinates that is not in the track header.\n      flameChartView.getNetworkFlameChart().onContextMenu(new MouseEvent('contextmenu', {clientX: 100, clientY: 100}));\n      assert.isUndefined(flameChartView.getNetworkFlameChart().getContextMenu());\n    });\n\n    it('Does not create Context Menu for Network track header', async function() {\n      // So for the first track header, its x will start from beginning.\n      // And its y will start after the ruler (ruler's height is 17).\n      flameChartView.getNetworkFlameChart().onContextMenu(new MouseEvent('contextmenu', {clientX: 0, clientY: 17}));\n      assert.isUndefined(flameChartView.getNetworkFlameChart().getContextMenu());\n    });\n\n    it('Create correct Context Menu for track headers in main flame chart', async function() {\n      // So for the first track header, its x will start from beginning.\n      // And its y will start after the ruler (ruler's height is 17).\n      flameChartView.getMainFlameChart().onContextMenu(new MouseEvent('contextmenu', {clientX: 0, clientY: 17}));\n\n      assert.strictEqual(flameChartView.getMainFlameChart().getContextMenu()?.defaultSection().items.length, 1);\n      assert.strictEqual(\n          flameChartView.getMainFlameChart().getContextMenu()?.defaultSection().items.at(0)?.buildDescriptor().label,\n          'Configure tracks…');\n    });\n\n    describe('Context Menu Actions For Thread tracks', function() {\n      this.beforeEach(async () => {\n        // Find the Main track to later collapse entries of\n        const mainTrack = flameChartView.getMainFlameChart().timelineData()?.groups.find(group => {\n          return group.name === 'Main — http://127.0.0.1:8080/';\n        });\n        if (!mainTrack) {\n          throw new Error('Could not find main track');\n        }\n      });\n\n      function getMainThread(data: TraceEngine.Handlers.ModelHandlers.Renderer.RendererHandlerData):\n          TraceEngine.Handlers.ModelHandlers.Renderer.RendererThread {\n        let mainThread: TraceEngine.Handlers.ModelHandlers.Renderer.RendererThread|null = null;\n        for (const [, process] of data.processes) {\n          for (const [, thread] of process.threads) {\n            if (thread.name === 'CrRendererMain') {\n              mainThread = thread;\n              break;\n            }\n          }\n        }\n        if (!mainThread) {\n          throw new Error('Could not find main thread.');\n        }\n        return mainThread;\n      }\n\n      function findFirstEntry(\n          allEntries: readonly TraceEngine.Types.TraceEvents.SyntheticTraceEntry[],\n          predicate: (entry: TraceEngine.Types.TraceEvents.SyntheticTraceEntry) =>\n              boolean): TraceEngine.Types.TraceEvents.SyntheticTraceEntry {\n        const entry = allEntries.find(entry => predicate(entry));\n        if (!entry) {\n          throw new Error('Could not find expected entry.');\n        }\n        return entry;\n      }\n\n      function generateContextMenuForNodeId(nodeId: number): void {\n        // Highlight the node to make the Context Menu dispatch on this node\n        flameChartView.getMainFlameChart().highlightEntry(nodeId);\n\n        // The mouse event passed to the Context Menu is used to indicate where the menu should appear. Since we don't\n        // need it to actually appear for this test, pass an empty event.\n        flameChartView.getMainFlameChart().onContextMenu(new MouseEvent(''));\n      }\n\n      function generateContextMenuForNode(node: TraceEngine.Types.TraceEvents.TraceEventData): void {\n        const nodeId = flameChartView.getMainDataProvider().indexForEvent(node);\n        assert.isNotNull(nodeId);\n        generateContextMenuForNodeId(nodeId);\n      }\n\n      it('When an entry has no children, correctly make only Hide Entry enabled in the Context Menu action',\n         async function() {\n           /** Part of this stack looks roughly like so (with some events omitted):\n            * =============== foo ===============\n            * =============== foo ===============\n            * =============== foo ===============\n            * =============== foo ===============\n            * =============== foo ===============\n            * =============== foo ===============\n            * =============== foo ===============\n            * == now ==      == updateCounters ==  <-- ID=245\n            *\n            * In this test we want to test that the Context Menu option available\n            * for an entry with no children and a parent is to hide given entry only.\n            * Since there are no children to hide, we don't want to show 'hide children' option.\n            *\n            * To achieve that, we will dispatch the context menu on the 'updateCounters' function that does not have\n            * children.\n            * The ID of 'updateCounters' is 245.\n            **/\n\n           const nodeIdWithNoChildren = 245;\n           generateContextMenuForNodeId(nodeIdWithNoChildren);\n\n           assert.strictEqual(flameChartView.getMainFlameChart().getContextMenu()?.defaultSection().items.length, 5);\n           // Hide function enabled\n           assert.strictEqual(\n               flameChartView.getMainFlameChart()\n                   .getContextMenu()\n                   ?.defaultSection()\n                   .items.at(0)\n                   ?.buildDescriptor()\n                   .enabled,\n               true);\n           // Rest of the actions disabled\n           assert.strictEqual(\n               flameChartView.getMainFlameChart()\n                   .getContextMenu()\n                   ?.defaultSection()\n                   .items.at(1)\n                   ?.buildDescriptor()\n                   .enabled,\n               false);\n           assert.strictEqual(\n               flameChartView.getMainFlameChart()\n                   .getContextMenu()\n                   ?.defaultSection()\n                   .items.at(2)\n                   ?.buildDescriptor()\n                   .enabled,\n               false);\n           assert.strictEqual(\n               flameChartView.getMainFlameChart()\n                   .getContextMenu()\n                   ?.defaultSection()\n                   .items.at(3)\n                   ?.buildDescriptor()\n                   .enabled,\n               false);\n           assert.strictEqual(\n               flameChartView.getMainFlameChart()\n                   .getContextMenu()\n                   ?.defaultSection()\n                   .items.at(4)\n                   ?.buildDescriptor()\n                   .enabled,\n               false);\n         });\n\n      it('When an entry has children, correctly make only Hide Entry and Hide Children enabled in the Context Menu action',\n         async function() {\n           /** Part of this stack looks roughly like so (with some events omitted):\n            * =============== foo ===============\n            * =============== foo ===============\n            * =============== foo ===============\n            * =============== foo ===============\n            * =============== foo ===============\n            * =============== foo ===============\n            * =============== foo ===============\n            * ===== wait =====   ===== wait =====  <-- ID=204\n            * = now =  = now =   = now =  = now =\n            *\n            * In this test we want to test that the Context Menu option available\n            * for an entry with children and a parent is to hide given entry, and hide children only.\n            * Since there are no repeating children to hide, we don't want to show 'hide repeating children' option.\n            *\n            * To achieve that, we will dispatch the context menu on the 'wait' function that has only non-repeating\n            * children.\n            * The ID of the first 'wait' is 204.\n            **/\n\n           const nodeIdWithNoChildren = 204;\n           generateContextMenuForNodeId(nodeIdWithNoChildren);\n\n           // This entry has URL, so there are 5 always-shown actions, and one to add script to ignore list.\n           assert.strictEqual(flameChartView.getMainFlameChart().getContextMenu()?.defaultSection().items.length, 6);\n           // Hide function enabled\n           assert.strictEqual(\n               flameChartView.getMainFlameChart()\n                   .getContextMenu()\n                   ?.defaultSection()\n                   .items.at(0)\n                   ?.buildDescriptor()\n                   .enabled,\n               true);\n           // Hide children enabled\n           assert.strictEqual(\n               flameChartView.getMainFlameChart()\n                   .getContextMenu()\n                   ?.defaultSection()\n                   .items.at(1)\n                   ?.buildDescriptor()\n                   .enabled,\n               true);\n           // Rest of the actions disabled\n           assert.strictEqual(\n               flameChartView.getMainFlameChart()\n                   .getContextMenu()\n                   ?.defaultSection()\n                   .items.at(2)\n                   ?.buildDescriptor()\n                   .enabled,\n               false);\n           assert.strictEqual(\n               flameChartView.getMainFlameChart()\n                   .getContextMenu()\n                   ?.defaultSection()\n                   .items.at(3)\n                   ?.buildDescriptor()\n                   .enabled,\n               false);\n           assert.strictEqual(\n               flameChartView.getMainFlameChart()\n                   .getContextMenu()\n                   ?.defaultSection()\n                   .items.at(4)\n                   ?.buildDescriptor()\n                   .enabled,\n               false);\n         });\n\n      it('When an entry has repeating children, correctly make only Hide Entry, Hide Children and Hide repeating children enabled in the Context Menu action',\n         async function() {\n           /** Part of this stack looks roughly like so (with some events omitted):\n            * =============== foo ===============\n            * =============== foo ===============\n            * =============== foo ===============\n            * =============== foo ===============\n            * =============== foo =============== <-- ID=200\n            * =============== foo ===============\n            * =============== foo ===============\n            * ===== wait =====   ===== wait =====\n            * = now =  = now =   = now =  = now =\n            *\n            * In this test we want to test that the Context Menu option available\n            * for an entry with children repeating children and a parent is to hide given entry, hide children and hide\n            * repeating children.\n            *\n            * To achieve that, we will dispatch the context menu on the 'foo' function that has child 'foo' calls.\n            * The ID of the a matching 'foo' is 200.\n            **/\n\n           const nodeIdWithNoChildren = 200;\n           generateContextMenuForNodeId(nodeIdWithNoChildren);\n\n           // This entry has URL, so there are 5 always-shown actions, and one to add script to ignore list.\n           assert.strictEqual(flameChartView.getMainFlameChart().getContextMenu()?.defaultSection().items.length, 6);\n           // Hide function enabled\n           assert.strictEqual(\n               flameChartView.getMainFlameChart()\n                   .getContextMenu()\n                   ?.defaultSection()\n                   .items.at(0)\n                   ?.buildDescriptor()\n                   .enabled,\n               true);\n           // Hide children enabled\n           assert.strictEqual(\n               flameChartView.getMainFlameChart()\n                   .getContextMenu()\n                   ?.defaultSection()\n                   .items.at(1)\n                   ?.buildDescriptor()\n                   .enabled,\n               true);\n           // Hide repeating children enabled\n           assert.strictEqual(\n               flameChartView.getMainFlameChart()\n                   .getContextMenu()\n                   ?.defaultSection()\n                   .items.at(2)\n                   ?.buildDescriptor()\n                   .enabled,\n               true);\n           // Rest of the actions disabled\n           assert.strictEqual(\n               flameChartView.getMainFlameChart()\n                   .getContextMenu()\n                   ?.defaultSection()\n                   .items.at(3)\n                   ?.buildDescriptor()\n                   .enabled,\n               false);\n           assert.strictEqual(\n               flameChartView.getMainFlameChart()\n                   .getContextMenu()\n                   ?.defaultSection()\n                   .items.at(4)\n                   ?.buildDescriptor()\n                   .enabled,\n               false);\n         });\n\n      it('When an entry has no parent and has children, correctly make only Hide Children enabled in the Context Menu action',\n         async function() {\n           /** Part of this stack looks roughly like so (with some events omitted):\n            * =============== Task ============== <-- ID=62\n            * =============== foo ===============\n            * =============== foo ===============\n            * =============== foo ===============\n            * =============== foo ===============\n            * =============== foo ===============\n            * =============== foo ===============\n            * ===== wait =====   ===== wait =====\n            * = now =  = now =   = now =  = now =\n            *\n            * In this test we want to test that the Context Menu option available for an entry with no parent is only to\n            * hide children.\n            * If an entry has no parent, we don't want to show an option to hide the entry since when an entry is hidden,\n            * it is indicated by adding a decoration to the parent and if there is no parent, there is no way to show it\n            * is hidden.\n            *\n            * To achieve that, we will dispatch the context menu on the 'Task' function that is on the top of the stack\n            * and has no parent.\n            * The ID of the a matching 'Task' is 62.\n            **/\n\n           const nodeIdWithNoChildren = 62;\n           generateContextMenuForNodeId(nodeIdWithNoChildren);\n\n           // Hide function disabled\n           assert.strictEqual(\n               flameChartView.getMainFlameChart()\n                   .getContextMenu()\n                   ?.defaultSection()\n                   .items.at(0)\n                   ?.buildDescriptor()\n                   .enabled,\n               false);\n           // Hide children enabled\n           assert.strictEqual(\n               flameChartView.getMainFlameChart()\n                   .getContextMenu()\n                   ?.defaultSection()\n                   .items.at(1)\n                   ?.buildDescriptor()\n                   .enabled,\n               true);\n           // Rest of the actions disabled\n           assert.strictEqual(\n               flameChartView.getMainFlameChart()\n                   .getContextMenu()\n                   ?.defaultSection()\n                   .items.at(2)\n                   ?.buildDescriptor()\n                   .enabled,\n               false);\n           assert.strictEqual(\n               flameChartView.getMainFlameChart()\n                   .getContextMenu()\n                   ?.defaultSection()\n                   .items.at(3)\n                   ?.buildDescriptor()\n                   .enabled,\n               false);\n           assert.strictEqual(\n               flameChartView.getMainFlameChart()\n                   .getContextMenu()\n                   ?.defaultSection()\n                   .items.at(4)\n                   ?.buildDescriptor()\n                   .enabled,\n               false);\n         });\n\n      it('Reset Trace Context Menu action is disabled before some action has been applied', async function() {\n        /** Part of this stack looks roughly like so (with some events omitted):\n         * =============== Task ============== <-- ID=62\n         * =============== foo ===============\n         * =============== foo ===============\n         * =============== foo ===============\n         * =============== foo ===============\n         * =============== foo ===============\n         * =============== foo ===============\n         * ===== wait =====   ===== wait =====\n         * = now =  = now =   = now =  = now =\n         *\n         * In this test we want to test that the Reset Trace Context Menu option is disabled by default and enabled after\n         * some action has been applied.\n         *\n         * To achieve that, we will first check if Reset Trace is disabled and then dispatch a Context Menu action on\n         * \"Task\" entry and then check if Reset Trace is enabled.\n         * The ID of the a matching 'Task' is 62.\n         **/\n\n        const nodeId = 62;\n        generateContextMenuForNodeId(nodeId);\n        assert.strictEqual(flameChartView.getMainFlameChart().getContextMenu()?.defaultSection().items.length, 5);\n        assert.strictEqual(\n            flameChartView.getMainFlameChart().getContextMenu()?.defaultSection().items.at(4)?.buildDescriptor().label,\n            'Reset trace');\n        // Check that Reset Trace is disabled\n        assert.strictEqual(\n            flameChartView.getMainFlameChart()\n                .getContextMenu()\n                ?.defaultSection()\n                .items.at(4)\n                ?.buildDescriptor()\n                .enabled,\n            false);\n\n        flameChartView.getMainFlameChart().modifyTree(TraceEngine.EntriesFilter.FilterAction.MERGE_FUNCTION, nodeId);\n        generateContextMenuForNodeId(nodeId);\n\n        // Check that Reset Trace is enabled\n        assert.strictEqual(\n            flameChartView.getMainFlameChart()\n                .getContextMenu()\n                ?.defaultSection()\n                .items.at(4)\n                ?.buildDescriptor()\n                .enabled,\n            true);\n      });\n\n      it('When an entry has URL and is not ignored, correctly show the Add script to ignore list in the Context Menu action',\n         async function() {\n           const mainThread = getMainThread(traceParsedData.Renderer);\n           const entryWithUrl = findFirstEntry(mainThread.entries, entry => {\n             // Let's find the first entry with URL.\n             return TraceEngine.Types.TraceEvents.isProfileCall(entry) && Boolean(entry.callFrame.url);\n           });\n           generateContextMenuForNode(entryWithUrl);\n\n           assert.strictEqual(flameChartView.getMainFlameChart().getContextMenu()?.defaultSection().items.length, 6);\n\n           assert.strictEqual(\n               flameChartView.getMainFlameChart()\n                   .getContextMenu()\n                   ?.defaultSection()\n                   .items.at(5)\n                   ?.buildDescriptor()\n                   .label,\n               'Add script to ignore list');\n         });\n\n      it('When an entry has URL and is ignored, correctly show the Remove script from ignore list in the Context Menu action',\n         async function() {\n           const mainThread = getMainThread(traceParsedData.Renderer);\n           const entryWithIgnoredUrl = findFirstEntry(mainThread.entries, entry => {\n             // Let's find the first entry with URL.\n             return TraceEngine.Types.TraceEvents.isProfileCall(entry) && Boolean(entry.callFrame.url);\n           });\n           Bindings.IgnoreListManager.IgnoreListManager.instance().ignoreListURL(\n               (entryWithIgnoredUrl as TraceEngine.Types.TraceEvents.SyntheticProfileCall).callFrame.url as\n               Platform.DevToolsPath.UrlString);\n\n           generateContextMenuForNode(entryWithIgnoredUrl);\n\n           assert.strictEqual(flameChartView.getMainFlameChart().getContextMenu()?.defaultSection().items.length, 6);\n\n           assert.strictEqual(\n               flameChartView.getMainFlameChart()\n                   .getContextMenu()\n                   ?.defaultSection()\n                   .items.at(5)\n                   ?.buildDescriptor()\n                   .label,\n               'Remove script from ignore list');\n         });\n    });\n  });\n});\n"]}