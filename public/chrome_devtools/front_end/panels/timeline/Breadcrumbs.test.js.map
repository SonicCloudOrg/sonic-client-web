{"version":3,"file":"Breadcrumbs.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/timeline/Breadcrumbs.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as TraceEngine from '../../models/trace/trace.js';\nimport * as TraceBounds from '../../services/trace_bounds/trace_bounds.js';\n\nimport * as TimelineComponents from './components/components.js';\n\ndescribe('Timeline breadcrumbs', () => {\n  it('can create breadcrumbs', () => {\n    const initialTraceWindow: TraceEngine.Types.Timing.TraceWindowMicroSeconds = {\n      min: TraceEngine.Types.Timing.MicroSeconds(1),\n      max: TraceEngine.Types.Timing.MicroSeconds(10),\n      range: TraceEngine.Types.Timing.MicroSeconds(9),\n    };\n    TraceBounds.TraceBounds.BoundsManager.instance({forceNew: true}).resetWithNewBounds(initialTraceWindow);\n\n    const crumbs = new TimelineComponents.Breadcrumbs.Breadcrumbs(initialTraceWindow);\n\n    const traceWindow1: TraceEngine.Types.Timing.TraceWindowMicroSeconds = {\n      min: TraceEngine.Types.Timing.MicroSeconds(3),\n      max: TraceEngine.Types.Timing.MicroSeconds(9),\n      range: TraceEngine.Types.Timing.MicroSeconds(6),\n    };\n\n    const traceWindow2: TraceEngine.Types.Timing.TraceWindowMicroSeconds = {\n      min: TraceEngine.Types.Timing.MicroSeconds(4),\n      max: TraceEngine.Types.Timing.MicroSeconds(6),\n      range: TraceEngine.Types.Timing.MicroSeconds(2),\n    };\n\n    crumbs.add(traceWindow1);\n    crumbs.add(traceWindow2);\n\n    const breadcrumb2: TraceEngine.Types.File.Breadcrumb = {\n      window: traceWindow2,\n      child: null,\n    };\n\n    const breadcrumb1: TraceEngine.Types.File.Breadcrumb = {\n      window: traceWindow1,\n      child: breadcrumb2,\n    };\n\n    const initialBreadcrumb: TraceEngine.Types.File.Breadcrumb = {\n      window: initialTraceWindow,\n      child: breadcrumb1,\n    };\n\n    assert.deepEqual(\n        TimelineComponents.Breadcrumbs.flattenBreadcrumbs(initialBreadcrumb),\n        [initialBreadcrumb, breadcrumb1, breadcrumb2]);\n\n    assert.deepEqual(crumbs.lastBreadcrumb, breadcrumb2);\n  });\n\n  it('can remove breadcrumbs', () => {\n    const initialTraceWindow: TraceEngine.Types.Timing.TraceWindowMicroSeconds = {\n      min: TraceEngine.Types.Timing.MicroSeconds(1),\n      max: TraceEngine.Types.Timing.MicroSeconds(10),\n      range: TraceEngine.Types.Timing.MicroSeconds(9),\n    };\n    TraceBounds.TraceBounds.BoundsManager.instance({forceNew: true}).resetWithNewBounds(initialTraceWindow);\n\n    const crumbs = new TimelineComponents.Breadcrumbs.Breadcrumbs(initialTraceWindow);\n\n    const traceWindow1: TraceEngine.Types.Timing.TraceWindowMicroSeconds = {\n      min: TraceEngine.Types.Timing.MicroSeconds(3),\n      max: TraceEngine.Types.Timing.MicroSeconds(9),\n      range: TraceEngine.Types.Timing.MicroSeconds(6),\n    };\n\n    const traceWindow2: TraceEngine.Types.Timing.TraceWindowMicroSeconds = {\n      min: TraceEngine.Types.Timing.MicroSeconds(4),\n      max: TraceEngine.Types.Timing.MicroSeconds(6),\n      range: TraceEngine.Types.Timing.MicroSeconds(2),\n    };\n\n    crumbs.add(traceWindow1);\n    crumbs.add(traceWindow2);\n\n    const breadcrumb2: TraceEngine.Types.File.Breadcrumb = {\n      window: traceWindow2,\n      child: null,\n    };\n\n    const breadcrumb1: TraceEngine.Types.File.Breadcrumb = {\n      window: traceWindow1,\n      child: breadcrumb2,\n    };\n\n    const initialBreadcrumb: TraceEngine.Types.File.Breadcrumb = {\n      window: initialTraceWindow,\n      child: breadcrumb1,\n    };\n\n    assert.deepEqual(\n        TimelineComponents.Breadcrumbs.flattenBreadcrumbs(initialBreadcrumb),\n        [initialBreadcrumb, breadcrumb1, breadcrumb2]);\n    assert.deepEqual(crumbs.lastBreadcrumb, breadcrumb2);\n    crumbs.setLastBreadcrumb(breadcrumb1);\n\n    breadcrumb1.child = null;\n\n    assert.deepEqual(\n        TimelineComponents.Breadcrumbs.flattenBreadcrumbs(initialBreadcrumb), [initialBreadcrumb, breadcrumb1]);\n    assert.deepEqual(crumbs.lastBreadcrumb, breadcrumb1);\n  });\n\n  it('can not create a breadcrumb equal to the parent breadcrumb', () => {\n    assert.throws(() => {\n      const initialTraceWindow: TraceEngine.Types.Timing.TraceWindowMicroSeconds = {\n        min: TraceEngine.Types.Timing.MicroSeconds(1),\n        max: TraceEngine.Types.Timing.MicroSeconds(10),\n        range: TraceEngine.Types.Timing.MicroSeconds(9),\n      };\n      TraceBounds.TraceBounds.BoundsManager.instance({forceNew: true}).resetWithNewBounds(initialTraceWindow);\n\n      const crumbs = new TimelineComponents.Breadcrumbs.Breadcrumbs(initialTraceWindow);\n\n      const traceWindow1: TraceEngine.Types.Timing.TraceWindowMicroSeconds = {\n        min: TraceEngine.Types.Timing.MicroSeconds(1),\n        max: TraceEngine.Types.Timing.MicroSeconds(10),\n        range: TraceEngine.Types.Timing.MicroSeconds(9),\n      };\n\n      crumbs.add(traceWindow1);\n    }, 'Can not add a breadcrumb that is equal to or is outside of the parent breadcrumb TimeWindow');\n  });\n\n  it('can create breadcrumbs with equal start or end as the parent breadcrumb', () => {\n    const initialTraceWindow: TraceEngine.Types.Timing.TraceWindowMicroSeconds = {\n      min: TraceEngine.Types.Timing.MicroSeconds(1),\n      max: TraceEngine.Types.Timing.MicroSeconds(10),\n      range: TraceEngine.Types.Timing.MicroSeconds(9),\n    };\n    TraceBounds.TraceBounds.BoundsManager.instance({forceNew: true}).resetWithNewBounds(initialTraceWindow);\n\n    const crumbs = new TimelineComponents.Breadcrumbs.Breadcrumbs(initialTraceWindow);\n\n    const traceWindow1: TraceEngine.Types.Timing.TraceWindowMicroSeconds = {\n      min: TraceEngine.Types.Timing.MicroSeconds(1),\n      max: TraceEngine.Types.Timing.MicroSeconds(9),\n      range: TraceEngine.Types.Timing.MicroSeconds(8),\n    };\n\n    const traceWindow2: TraceEngine.Types.Timing.TraceWindowMicroSeconds = {\n      min: TraceEngine.Types.Timing.MicroSeconds(3),\n      max: TraceEngine.Types.Timing.MicroSeconds(9),\n      range: TraceEngine.Types.Timing.MicroSeconds(6),\n    };\n\n    crumbs.add(traceWindow1);\n    crumbs.add(traceWindow2);\n\n    const breadcrumb2: TraceEngine.Types.File.Breadcrumb = {\n      window: traceWindow2,\n      child: null,\n    };\n\n    const breadcrumb1: TraceEngine.Types.File.Breadcrumb = {\n      window: traceWindow1,\n      child: breadcrumb2,\n    };\n\n    const initialBreadcrumb: TraceEngine.Types.File.Breadcrumb = {\n      window: initialTraceWindow,\n      child: breadcrumb1,\n    };\n\n    assert.deepEqual(\n        TimelineComponents.Breadcrumbs.flattenBreadcrumbs(initialBreadcrumb),\n        [initialBreadcrumb, breadcrumb1, breadcrumb2]);\n    assert.deepEqual(crumbs.lastBreadcrumb, breadcrumb2);\n  });\n\n  it('correctly sets the last breadrumb and trace bound window when a new initial breadcrumb is provided', () => {\n    const initialTraceWindow: TraceEngine.Types.Timing.TraceWindowMicroSeconds = {\n      min: TraceEngine.Types.Timing.MicroSeconds(1000),\n      max: TraceEngine.Types.Timing.MicroSeconds(10000),\n      range: TraceEngine.Types.Timing.MicroSeconds(9000),\n    };\n    TraceBounds.TraceBounds.BoundsManager.instance({forceNew: true}).resetWithNewBounds(initialTraceWindow);\n\n    const crumbs = new TimelineComponents.Breadcrumbs.Breadcrumbs(initialTraceWindow);\n\n    const traceWindow1: TraceEngine.Types.Timing.TraceWindowMicroSeconds = {\n      min: TraceEngine.Types.Timing.MicroSeconds(1000),\n      max: TraceEngine.Types.Timing.MicroSeconds(9000),\n      range: TraceEngine.Types.Timing.MicroSeconds(8000),\n    };\n\n    const traceWindow2: TraceEngine.Types.Timing.TraceWindowMicroSeconds = {\n      min: TraceEngine.Types.Timing.MicroSeconds(3000),\n      max: TraceEngine.Types.Timing.MicroSeconds(9000),\n      range: TraceEngine.Types.Timing.MicroSeconds(6000),\n    };\n\n    const breadcrumb2: TraceEngine.Types.File.Breadcrumb = {\n      window: traceWindow2,\n      child: null,\n    };\n\n    const breadcrumb1: TraceEngine.Types.File.Breadcrumb = {\n      window: traceWindow1,\n      child: breadcrumb2,\n    };\n\n    const initialBreadcrumb: TraceEngine.Types.File.Breadcrumb = {\n      window: initialTraceWindow,\n      child: breadcrumb1,\n    };\n\n    crumbs.setInitialBreadcrumbFromLoadedModifications(initialBreadcrumb);\n\n    assert.deepEqual(\n        TimelineComponents.Breadcrumbs.flattenBreadcrumbs(initialBreadcrumb),\n        [initialBreadcrumb, breadcrumb1, breadcrumb2]);\n    assert.deepEqual(crumbs.lastBreadcrumb, breadcrumb2);\n\n    // Make sure the trace bounds were correctly set to the last breadcrumb bounds\n    assert.deepEqual(TraceBounds.TraceBounds.BoundsManager.instance().state()?.micro.minimapTraceBounds.min, 3000);\n    assert.deepEqual(TraceBounds.TraceBounds.BoundsManager.instance().state()?.micro.minimapTraceBounds.max, 9000);\n    assert.deepEqual(TraceBounds.TraceBounds.BoundsManager.instance().state()?.micro.minimapTraceBounds.range, 6000);\n\n    // Make sure the TimelineVisibleWindow was correctly set to the last breadcrumb bounds\n    assert.deepEqual(TraceBounds.TraceBounds.BoundsManager.instance().state()?.micro.timelineTraceWindow.min, 3000);\n    assert.deepEqual(TraceBounds.TraceBounds.BoundsManager.instance().state()?.micro.timelineTraceWindow.max, 9000);\n    assert.deepEqual(TraceBounds.TraceBounds.BoundsManager.instance().state()?.micro.timelineTraceWindow.range, 6000);\n  });\n});\n"]}