{"version":3,"file":"TimelineHistoryManager.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/timeline/TimelineHistoryManager.test.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,EACL,uBAAuB,EACvB,mBAAmB,GACpB,MAAM,qCAAqC,CAAC;AAC7C,OAAO,EAAC,WAAW,EAAC,MAAM,8BAA8B,CAAC;AACzD,OAAO,KAAK,EAAE,MAAM,2BAA2B,CAAC;AAEhD,OAAO,KAAK,QAAQ,MAAM,eAAe,CAAC;AAE1C,uBAAuB,CAAC,wBAAwB,EAAE;IAChD,IAAI,cAAsE,CAAC;IAC3E,UAAU,CAAC,GAAG,EAAE;QACd,mBAAmB,CAAC,CAAC,uBAAuB,CAAC,CAAC,CAAC;QAC/C,cAAc,GAAG,IAAI,QAAQ,CAAC,sBAAsB,CAAC,sBAAsB,EAAE,CAAC;IAChF,CAAC,CAAC,CAAC;IAEH,SAAS,CAAC,GAAG,EAAE;QACb,EAAE,CAAC,cAAc,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;IAC3C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,8CAA8C,EAAE,KAAK;QACtD,sDAAsD;QACtD,MAAM,UAAU,GAAG,MAAM,WAAW,CAAC,WAAW,CAAC,IAAI,EAAE,uCAAuC,CAAC,CAAC;QAChG,cAAc,CAAC,YAAY,CACvB;YACE,IAAI,EAAE;gBACJ,mBAAmB,EAAE,CAAC;aACvB;YACD,mBAAmB,EAAE,IAAI;YACzB,eAAe,EAAE,UAAU;YAC3B,SAAS,EAAE,IAAI;SAChB,CACJ,CAAC;QAEF,MAAM,UAAU,GAAG,MAAM,WAAW,CAAC,WAAW,CAAC,IAAI,EAAE,kCAAkC,CAAC,CAAC;QAC3F,cAAc,CAAC,YAAY,CAAC;YAC1B,IAAI,EAAE;gBACJ,mBAAmB,EAAE,CAAC;aACvB;YACD,mBAAmB,EAAE,IAAI;YACzB,eAAe,EAAE,UAAU;YAC3B,SAAS,EAAE,IAAI;SAChB,CAAC,CAAC;QAEH,+CAA+C;QAC/C,8DAA8D;QAC9D,MAAM,iBAAiB,GAAG,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QACrD,MAAM,CAAC,WAAW,CAAC,iBAAiB,EAAE,mBAAmB,EAAE,CAAC,CAAC,CAAC;QAE9D,MAAM,aAAa,GAAG,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;QAClD,MAAM,CAAC,WAAW,CAAC,aAAa,EAAE,mBAAmB,EAAE,CAAC,CAAC,CAAC;IAC5D,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {\n  describeWithEnvironment,\n  registerNoopActions,\n} from '../../testing/EnvironmentHelpers.js';\nimport {TraceLoader} from '../../testing/TraceLoader.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport * as Timeline from './timeline.js';\n\ndescribeWithEnvironment('TimelineHistoryManager', function() {\n  let historyManager: Timeline.TimelineHistoryManager.TimelineHistoryManager;\n  beforeEach(() => {\n    registerNoopActions(['timeline.show-history']);\n    historyManager = new Timeline.TimelineHistoryManager.TimelineHistoryManager();\n  });\n\n  afterEach(() => {\n    UI.ActionRegistry.ActionRegistry.reset();\n  });\n\n  it('can select from multiple parsed data objects', async function() {\n    // Add two parsed data objects to the history manager.\n    const trace1Data = await TraceLoader.traceEngine(this, 'slow-interaction-button-click.json.gz');\n    historyManager.addRecording(\n        {\n          data: {\n            traceParseDataIndex: 1,\n          },\n          filmStripForPreview: null,\n          traceParsedData: trace1Data,\n          startTime: null,\n        },\n    );\n\n    const trace2Data = await TraceLoader.traceEngine(this, 'slow-interaction-keydown.json.gz');\n    historyManager.addRecording({\n      data: {\n        traceParseDataIndex: 2,\n      },\n      filmStripForPreview: null,\n      traceParsedData: trace2Data,\n      startTime: null,\n    });\n\n    // Make sure the correct model is returned when\n    // using the history manager to navigate between trace files..\n    const previousRecording = historyManager.navigate(1);\n    assert.strictEqual(previousRecording?.traceParseDataIndex, 1);\n\n    const nextRecording = historyManager.navigate(-1);\n    assert.strictEqual(nextRecording?.traceParseDataIndex, 2);\n  });\n});\n"]}