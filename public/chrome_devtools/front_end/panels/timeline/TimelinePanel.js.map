{"version":3,"file":"TimelinePanel.js","sourceRoot":"","sources":["../../../../../../front_end/panels/timeline/TimelinePanel.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/*\n * Copyright (C) 2012 Google Inc. All rights reserved.\n * Copyright (C) 2012 Intel Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as Root from '../../core/root/root.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport type * as TimelineModel from '../../models/timeline_model/timeline_model.js';\nimport * as TraceEngine from '../../models/trace/trace.js';\nimport * as Workspace from '../../models/workspace/workspace.js';\nimport * as ModificationsManager from '../../services/modifications_manager/modifications_manager.js';\nimport * as TraceBounds from '../../services/trace_bounds/trace_bounds.js';\nimport * as Adorners from '../../ui/components/adorners/adorners.js';\nimport type * as Buttons from '../../ui/components/buttons/buttons.js';\nimport * as PerfUI from '../../ui/legacy/components/perf_ui/perf_ui.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\nimport * as MobileThrottling from '../mobile_throttling/mobile_throttling.js';\n\nimport {ActiveFilters} from './ActiveFilters.js';\nimport {TraceLoadEvent} from './BenchmarkEvents.js';\nimport * as TimelineComponents from './components/components.js';\nimport {SHOULD_SHOW_EASTER_EGG} from './EasterEgg.js';\nimport {Tracker} from './FreshRecording.js';\nimport historyToolbarButtonStyles from './historyToolbarButton.css.js';\nimport {IsolateSelector} from './IsolateSelector.js';\nimport {cpuprofileJsonGenerator, traceJsonGenerator} from './SaveFileFormatter.js';\nimport {NodeNamesUpdated, SourceMapsResolver} from './SourceMapsResolver.js';\nimport {type Client, TimelineController} from './TimelineController.js';\nimport {TimelineFlameChartView} from './TimelineFlameChartView.js';\nimport {TimelineHistoryManager} from './TimelineHistoryManager.js';\nimport {TimelineLandingPage} from './TimelineLandingPage.js';\nimport {TimelineLoader} from './TimelineLoader.js';\nimport {TimelineMiniMap} from './TimelineMiniMap.js';\nimport timelinePanelStyles from './timelinePanel.css.js';\nimport {TimelineSelection} from './TimelineSelection.js';\nimport timelineStatusDialogStyles from './timelineStatusDialog.css.js';\nimport {TimelineUIUtils} from './TimelineUIUtils.js';\nimport {UIDevtoolsController} from './UIDevtoolsController.js';\nimport {UIDevtoolsUtils} from './UIDevtoolsUtils.js';\n\nconst UIStrings = {\n  /**\n   *@description Text that appears when user drag and drop something (for example, a file) in Timeline Panel of the Performance panel\n   */\n  dropTimelineFileOrUrlHere: 'Drop timeline file or URL here',\n  /**\n   *@description Title of disable capture jsprofile setting in timeline panel of the performance panel\n   */\n  disableJavascriptSamples: 'Disable JavaScript samples',\n  /**\n   *@description Title of capture layers and pictures setting in timeline panel of the performance panel\n   */\n  enableAdvancedPaint: 'Enable advanced paint instrumentation (slow)',\n  /**\n   *@description Title of CSS selector stats setting in timeline panel of the performance panel\n   */\n  enableSelectorStats: 'Enable CSS selector stats (slow)',\n  /**\n   *@description Title of show screenshots setting in timeline panel of the performance panel\n   */\n  screenshots: 'Screenshots',\n  /**\n   *@description Text for the memory of the page\n   */\n  memory: 'Memory',\n  /**\n   *@description Text to clear content\n   */\n  clear: 'Clear',\n  /**\n   *@description A label for a button that fixes something.\n   */\n  fixMe: 'Fix me',\n  /**\n   *@description Tooltip text that appears when hovering over the largeicon load button\n   */\n  loadProfile: 'Load profile…',\n  /**\n   *@description Tooltip text that appears when hovering over the largeicon download button\n   */\n  saveProfile: 'Save profile…',\n  /**\n   *@description Text to take screenshots\n   */\n  captureScreenshots: 'Capture screenshots',\n  /**\n   *@description Text in Timeline Panel of the Performance panel\n   */\n  showMemoryTimeline: 'Show memory timeline',\n  /**\n   *@description Tooltip text that appears when hovering over the largeicon settings gear in show settings pane setting in timeline panel of the performance panel\n   */\n  captureSettings: 'Capture settings',\n  /**\n   *@description Text in Timeline Panel of the Performance panel\n   */\n  disablesJavascriptSampling: 'Disables JavaScript sampling, reduces overhead when running against mobile devices',\n  /**\n   *@description Text in Timeline Panel of the Performance panel\n   */\n  capturesAdvancedPaint: 'Captures advanced paint instrumentation, introduces significant performance overhead',\n  /**\n   *@description Text in Timeline Panel of the Performance panel\n   */\n  capturesSelectorStats: 'Captures CSS selector statistics',\n  /**\n   *@description Text in Timeline Panel of the Performance panel\n   */\n  network: 'Network:',\n  /**\n   *@description Text in Timeline Panel of the Performance panel\n   */\n  cpu: 'CPU:',\n  /**\n   *@description Title of the 'Network conditions' tool in the bottom drawer\n   */\n  networkConditions: 'Network conditions',\n  /**\n   *@description Text in Timeline Panel of the Performance panel\n   *@example {wrong format} PH1\n   *@example {ERROR_FILE_NOT_FOUND} PH2\n   */\n  failedToSaveTimelineSS: 'Failed to save timeline: {PH1} ({PH2})',\n  /**\n   *@description Text in Timeline Panel of the Performance panel\n   */\n  CpuThrottlingIsEnabled: '- CPU throttling is enabled',\n  /**\n   *@description Text in Timeline Panel of the Performance panel\n   */\n  NetworkThrottlingIsEnabled: '- Network throttling is enabled',\n  /**\n   *@description Text in Timeline Panel of the Performance panel\n   */\n  HardwareConcurrencyIsEnabled: '- Hardware concurrency override is enabled',\n  /**\n   *@description Text in Timeline Panel of the Performance panel\n   */\n  SignificantOverheadDueToPaint: '- Significant overhead due to paint instrumentation',\n  /**\n   *@description Text in Timeline Panel of the Performance panel\n   */\n  SelectorStatsEnabled: '- Selector stats is enabled',\n  /**\n   *@description Text in Timeline Panel of the Performance panel\n   */\n  JavascriptSamplingIsDisabled: '- JavaScript sampling is disabled',\n  /**\n   *@description Text in Timeline Panel of the Performance panel\n   */\n  stoppingTimeline: 'Stopping timeline…',\n  /**\n   *@description Text in Timeline Panel of the Performance panel\n   */\n  received: 'Received',\n  /**\n   *@description Text to close something\n   */\n  close: 'Close',\n  /**\n   *@description Text to download the raw trace files after an error\n   */\n  downloadAfterError: 'Download raw trace events',\n  /**\n   *@description Status text to indicate the recording has failed in the Performance panel\n   */\n  recordingFailed: 'Recording failed',\n  /**\n   * @description Text to indicate the progress of a profile. Informs the user that we are currently\n   * creating a peformance profile.\n   */\n  profiling: 'Profiling…',\n  /**\n   *@description Text in Timeline Panel of the Performance panel\n   */\n  bufferUsage: 'Buffer usage',\n  /**\n   *@description Text in Timeline Panel of the Performance panel\n   */\n  loadingProfile: 'Loading profile…',\n  /**\n   *@description Text in Timeline Panel of the Performance panel\n   */\n  processingProfile: 'Processing profile…',\n  /**\n   *@description Text in Timeline Panel of the Performance panel\n   */\n  initializingProfiler: 'Initializing profiler…',\n  /**\n   *@description Text for the status of something\n   */\n  status: 'Status',\n  /**\n   *@description Text that refers to the time\n   */\n  time: 'Time',\n  /**\n   *@description Text for the description of something\n   */\n  description: 'Description',\n  /**\n   *@description Text of an item that stops the running task\n   */\n  stop: 'Stop',\n  /**\n   *@description Time text content in Timeline Panel of the Performance panel\n   *@example {2.12} PH1\n   */\n  ssec: '{PH1} sec',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/TimelinePanel.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nlet timelinePanelInstance: TimelinePanel;\nlet isNode: boolean;\n\nexport class TimelinePanel extends UI.Panel.Panel implements Client, TimelineModeViewDelegate {\n  private readonly dropTarget: UI.DropTarget.DropTarget;\n  private readonly recordingOptionUIControls: UI.Toolbar.ToolbarItem[];\n  private state: State;\n  private recordingPageReload: boolean;\n  private readonly millisecondsToRecordAfterLoadEvent: number;\n  private readonly toggleRecordAction: UI.ActionRegistration.Action;\n  private readonly recordReloadAction: UI.ActionRegistration.Action;\n  readonly #historyManager: TimelineHistoryManager;\n  private disableCaptureJSProfileSetting: Common.Settings.Setting<boolean>;\n  private readonly captureLayersAndPicturesSetting: Common.Settings.Setting<boolean>;\n  private readonly captureSelectorStatsSetting: Common.Settings.Setting<boolean>;\n  private showScreenshotsSetting: Common.Settings.Setting<boolean>;\n  private showMemorySetting: Common.Settings.Setting<boolean>;\n  private readonly panelToolbar: UI.Toolbar.Toolbar;\n  private readonly panelRightToolbar: UI.Toolbar.Toolbar;\n  private readonly timelinePane: UI.Widget.VBox;\n  readonly #minimapComponent = new TimelineMiniMap();\n  readonly #sideBar = new TimelineComponents.Sidebar.SidebarWidget();\n  private readonly statusPaneContainer: HTMLElement;\n  private readonly flameChart: TimelineFlameChartView;\n  private readonly searchableViewInternal: UI.SearchableView.SearchableView;\n  private showSettingsPaneButton!: UI.Toolbar.ToolbarSettingToggle;\n  private showSettingsPaneSetting!: Common.Settings.Setting<boolean>;\n  private settingsPane!: UI.Widget.Widget;\n  private controller!: TimelineController|null;\n  private cpuProfiler!: SDK.CPUProfilerModel.CPUProfilerModel|null;\n  private clearButton!: UI.Toolbar.ToolbarButton;\n  private fixMeButton: UI.Toolbar.ToolbarButton;\n  private fixMeButtonAdded = false;\n  private loadButton!: UI.Toolbar.ToolbarButton;\n  private saveButton!: UI.Toolbar.ToolbarButton;\n  private statusPane!: StatusPane|null;\n  private landingPage!: UI.Widget.Widget;\n  private loader?: TimelineLoader;\n  private showScreenshotsToolbarCheckbox?: UI.Toolbar.ToolbarItem;\n  private showMemoryToolbarCheckbox?: UI.Toolbar.ToolbarItem;\n  private networkThrottlingSelect?: UI.Toolbar.ToolbarComboBox;\n  private cpuThrottlingSelect?: UI.Toolbar.ToolbarComboBox;\n  private fileSelectorElement?: HTMLInputElement;\n  private selection?: TimelineSelection|null;\n  private traceLoadStart!: TraceEngine.Types.Timing.MilliSeconds|null;\n  private primaryPageTargetPromiseCallback = (_target: SDK.Target.Target): void => {};\n  // Note: this is technically unused, but we need it to define the promiseCallback function above.\n  private primaryPageTargetPromise = new Promise<SDK.Target.Target>(res => {\n    this.primaryPageTargetPromiseCallback = res;\n  });\n\n  #traceEngineModel: TraceEngine.TraceModel.Model<typeof TraceEngine.Handlers.ModelHandlers>;\n  // Tracks the index of the trace that the user is currently viewing.\n  #traceEngineActiveTraceIndex = -1;\n  #sourceMapsResolver: SourceMapsResolver|null = null;\n  #onSourceMapsNodeNamesResolvedBound = this.#onSourceMapsNodeNamesResolved.bind(this);\n  readonly #onChartPlayableStateChangeBound: (event: Common.EventTarget.EventTargetEvent<boolean>) => void;\n\n  constructor() {\n    super('timeline');\n    const adornerContent = document.createElement('span');\n    adornerContent.innerHTML = `<div style=\"\n      font-size: 12px;\n      transform: scale(1.25);\n      color: transparent;\n      background: linear-gradient(90deg, rgb(255 0 0 / 100%) 0%, rgb(255 154 0 / 100%) 10%, rgb(208 222 33 / 100%) 20%, rgb(79 220 74 / 100%) 30%, rgb(63 218 216 / 100%) 40%, rgb(47 201 226 / 100%) 50%, rgb(28 127 238 / 100%) 60%, rgb(95 21 242 / 100%) 70%, rgb(186 12 248 / 100%) 80%, rgb(251 7 217 / 100%) 90%, rgb(255 0 0 / 100%) 100%);\n      -webkit-background-clip: text;\n      \">💫</div>`;\n    const adorner = new Adorners.Adorner.Adorner();\n    adorner.classList.add('fix-perf-icon');\n    adorner.data = {\n      name: i18nString(UIStrings.fixMe),\n      content: adornerContent,\n    };\n    this.fixMeButton = new UI.Toolbar.ToolbarButton(i18nString(UIStrings.fixMe), adorner);\n    this.fixMeButton.addEventListener(UI.Toolbar.ToolbarButton.Events.Click, () => this.onFixMe());\n    const config = TraceEngine.Types.Configuration.defaults();\n    config.showAllEvents = Root.Runtime.experiments.isEnabled('timeline-show-all-events');\n    config.includeRuntimeCallStats = Root.Runtime.experiments.isEnabled('timeline-v8-runtime-call-stats');\n    config.debugMode = Root.Runtime.experiments.isEnabled(Root.Runtime.ExperimentName.TIMELINE_DEBUG_MODE);\n\n    this.#traceEngineModel = TraceEngine.TraceModel.Model.createWithAllHandlers(config);\n\n    this.element.addEventListener('contextmenu', this.contextMenu.bind(this), false);\n    this.dropTarget = new UI.DropTarget.DropTarget(\n        this.element, [UI.DropTarget.Type.File, UI.DropTarget.Type.URI],\n        i18nString(UIStrings.dropTimelineFileOrUrlHere), this.handleDrop.bind(this));\n\n    this.recordingOptionUIControls = [];\n    this.state = State.Idle;\n    this.recordingPageReload = false;\n    this.millisecondsToRecordAfterLoadEvent = 5000;\n    this.toggleRecordAction = UI.ActionRegistry.ActionRegistry.instance().getAction('timeline.toggle-recording');\n    this.recordReloadAction = UI.ActionRegistry.ActionRegistry.instance().getAction('timeline.record-reload');\n\n    this.#historyManager = new TimelineHistoryManager(this.#minimapComponent);\n\n    this.traceLoadStart = null;\n\n    this.disableCaptureJSProfileSetting =\n        Common.Settings.Settings.instance().createSetting('timeline-disable-js-sampling', false);\n    this.disableCaptureJSProfileSetting.setTitle(i18nString(UIStrings.disableJavascriptSamples));\n    this.captureLayersAndPicturesSetting = Common.Settings.Settings.instance().createSetting(\n        'timeline-capture-layers-and-pictures', false, Common.Settings.SettingStorageType.Session);\n    this.captureLayersAndPicturesSetting.setTitle(i18nString(UIStrings.enableAdvancedPaint));\n    this.captureSelectorStatsSetting = Common.Settings.Settings.instance().createSetting(\n        'timeline-capture-selector-stats', false, Common.Settings.SettingStorageType.Session);\n    this.captureSelectorStatsSetting.setTitle(i18nString(UIStrings.enableSelectorStats));\n\n    this.showScreenshotsSetting =\n        Common.Settings.Settings.instance().createSetting('timeline-show-screenshots', isNode ? false : true);\n    this.showScreenshotsSetting.setTitle(i18nString(UIStrings.screenshots));\n    this.showScreenshotsSetting.addChangeListener(this.updateOverviewControls, this);\n\n    this.showMemorySetting = Common.Settings.Settings.instance().createSetting('timeline-show-memory', false);\n    this.showMemorySetting.setTitle(i18nString(UIStrings.memory));\n    this.showMemorySetting.addChangeListener(this.onModeChanged, this);\n\n    const timelineToolbarContainer = this.element.createChild('div', 'timeline-toolbar-container');\n    timelineToolbarContainer.setAttribute('jslog', `${VisualLogging.toolbar()}`);\n    this.panelToolbar = new UI.Toolbar.Toolbar('timeline-main-toolbar', timelineToolbarContainer);\n    this.panelToolbar.makeWrappable(true);\n    this.panelRightToolbar = new UI.Toolbar.Toolbar('', timelineToolbarContainer);\n    if (!isNode) {\n      this.createSettingsPane();\n      this.updateShowSettingsToolbarButton();\n    }\n    this.timelinePane = new UI.Widget.VBox();\n    const topPaneElement = this.timelinePane.element.createChild('div', 'hbox');\n    topPaneElement.id = 'timeline-overview-panel';\n\n    this.#minimapComponent.show(topPaneElement);\n\n    this.statusPaneContainer = this.timelinePane.element.createChild('div', 'status-pane-container fill');\n\n    this.createFileSelector();\n\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.ResourceTreeModel.ResourceTreeModel, SDK.ResourceTreeModel.Events.Load, this.loadEventFired, this);\n\n    this.flameChart = new TimelineFlameChartView(this);\n    this.#onChartPlayableStateChangeBound = this.#onChartPlayableStateChange.bind(this);\n\n    this.flameChart.getMainFlameChart().addEventListener(\n        PerfUI.FlameChart.Events.ChartPlayableStateChange, this.#onChartPlayableStateChangeBound, this);\n\n    this.searchableViewInternal = new UI.SearchableView.SearchableView(this.flameChart, null);\n    this.searchableViewInternal.setMinimumSize(0, 100);\n    this.searchableViewInternal.element.classList.add('searchable-view');\n    this.searchableViewInternal.show(this.timelinePane.element);\n    this.flameChart.show(this.searchableViewInternal.element);\n    this.flameChart.setSearchableView(this.searchableViewInternal);\n    this.searchableViewInternal.hideWidget();\n\n    this.#sideBar.setMainWidget(this.timelinePane);\n    this.#sideBar.show(this.element);\n\n    this.onModeChanged();\n    this.populateToolbar();\n    this.showLandingPage();\n    this.updateTimelineControls();\n\n    SDK.TargetManager.TargetManager.instance().addEventListener(\n        SDK.TargetManager.Events.SuspendStateChanged, this.onSuspendStateChanged, this);\n    const profilerModels = SDK.TargetManager.TargetManager.instance().models(SDK.CPUProfilerModel.CPUProfilerModel);\n    for (const model of profilerModels) {\n      for (const message of model.registeredConsoleProfileMessages) {\n        this.consoleProfileFinished(message);\n      }\n    }\n    SDK.TargetManager.TargetManager.instance().observeModels(\n        SDK.CPUProfilerModel.CPUProfilerModel,\n        {\n          modelAdded: (model: SDK.CPUProfilerModel.CPUProfilerModel) => {\n            model.addEventListener(\n                SDK.CPUProfilerModel.Events.ConsoleProfileFinished, event => this.consoleProfileFinished(event.data));\n          },\n          modelRemoved: (_model: SDK.CPUProfilerModel.CPUProfilerModel) => {\n\n          },\n        },\n    );\n    SDK.TargetManager.TargetManager.instance().observeTargets({\n      targetAdded: (target: SDK.Target.Target) => {\n        if (target !== SDK.TargetManager.TargetManager.instance().primaryPageTarget()) {\n          return;\n        }\n        this.primaryPageTargetPromiseCallback(target);\n      },\n      targetRemoved: (_: SDK.Target.Target) => {},\n    });\n\n    this.#sideBar.setMainWidget(this.timelinePane);\n    this.#sideBar.show(this.element);\n  }\n\n  static instance(opts: {\n    forceNew: boolean|null,\n    isNode: boolean,\n  }|undefined = {forceNew: null, isNode: false}): TimelinePanel {\n    const {forceNew, isNode: isNodeMode} = opts;\n    isNode = isNodeMode;\n\n    if (!timelinePanelInstance || forceNew) {\n      timelinePanelInstance = new TimelinePanel();\n    }\n\n    return timelinePanelInstance;\n  }\n\n  override searchableView(): UI.SearchableView.SearchableView|null {\n    return this.searchableViewInternal;\n  }\n\n  override wasShown(): void {\n    super.wasShown();\n    UI.Context.Context.instance().setFlavor(TimelinePanel, this);\n    this.registerCSSFiles([timelinePanelStyles]);\n    // Record the performance tool load time.\n    Host.userMetrics.panelLoaded('timeline', 'DevTools.Launch.Timeline');\n  }\n\n  override willHide(): void {\n    UI.Context.Context.instance().setFlavor(TimelinePanel, null);\n    this.#historyManager.cancelIfShowing();\n  }\n\n  loadFromEvents(events: TraceEngine.Types.TraceEvents.TraceEventData[]): void {\n    if (this.state !== State.Idle) {\n      return;\n    }\n    this.prepareToLoadTimeline();\n    this.loader = TimelineLoader.loadFromEvents(events, this);\n  }\n\n  getFlameChart(): TimelineFlameChartView {\n    return this.flameChart;\n  }\n\n  getMinimap(): TimelineMiniMap {\n    return this.#minimapComponent;\n  }\n\n  /**\n   * NOTE: this method only exists to enable some layout tests to be migrated to the new engine.\n   * DO NOT use this method within DevTools. It is marked as deprecated so\n   * within DevTools you are warned when using the method.\n   * @deprecated\n   **/\n  getTraceEngineDataForLayoutTests(): TraceEngine.Handlers.Types.TraceParseData {\n    const data = this.#traceEngineModel.traceParsedData(this.#traceEngineActiveTraceIndex);\n    if (data === null) {\n      throw new Error('No trace engine data found.');\n    }\n    return data;\n  }\n\n  /**\n   * NOTE: this method only exists to enable some layout tests to be migrated to the new engine.\n   * DO NOT use this method within DevTools. It is marked as deprecated so\n   * within DevTools you are warned when using the method.\n   * @deprecated\n   **/\n  getTraceEngineRawTraceEventsForLayoutTests(): readonly TraceEngine.Types.TraceEvents.TraceEventData[] {\n    const data = this.#traceEngineModel.rawTraceEvents(this.#traceEngineActiveTraceIndex);\n    if (data === null) {\n      throw new Error('No trace engine data found.');\n    }\n    return data;\n  }\n\n  #onChartPlayableStateChange(event: Common.EventTarget.EventTargetEvent<boolean, unknown>): void {\n    if (event.data) {\n      const dateObj = new Date();\n      const month = dateObj.getUTCMonth() + 1;\n      const day = dateObj.getUTCDate();\n      const isAprilFools = (month === 4 && (day === 1 || day === 2));  // Show only on April fools and the next day\n      if (isAprilFools && !this.fixMeButtonAdded && SHOULD_SHOW_EASTER_EGG) {\n        this.fixMeButtonAdded = true;\n        this.panelToolbar.appendToolbarItem(this.fixMeButton);\n      }\n    } else {\n      this.fixMeButtonAdded = false;\n      this.panelToolbar.removeToolbarItem(this.fixMeButton);\n    }\n  }\n\n  private loadFromCpuProfile(profile: Protocol.Profiler.Profile|null): void {\n    if (this.state !== State.Idle || profile === null) {\n      return;\n    }\n    this.prepareToLoadTimeline();\n    this.loader = TimelineLoader.loadFromCpuProfile(profile, this);\n  }\n\n  private setState(state: State): void {\n    this.state = state;\n    this.updateTimelineControls();\n  }\n\n  private createSettingCheckbox(setting: Common.Settings.Setting<boolean>, tooltip: string): UI.Toolbar.ToolbarItem {\n    const checkboxItem = new UI.Toolbar.ToolbarSettingCheckbox(setting, tooltip);\n    this.recordingOptionUIControls.push(checkboxItem);\n    return checkboxItem;\n  }\n\n  private populateToolbar(): void {\n    // Record\n    this.panelToolbar.appendToolbarItem(UI.Toolbar.Toolbar.createActionButton(this.toggleRecordAction));\n    this.panelToolbar.appendToolbarItem(UI.Toolbar.Toolbar.createActionButton(this.recordReloadAction));\n    this.clearButton = new UI.Toolbar.ToolbarButton(i18nString(UIStrings.clear), 'clear');\n    this.clearButton.addEventListener(UI.Toolbar.ToolbarButton.Events.Click, () => this.onClearButton());\n    this.panelToolbar.appendToolbarItem(this.clearButton);\n\n    // Load / Save\n    this.loadButton =\n        new UI.Toolbar.ToolbarButton(i18nString(UIStrings.loadProfile), 'import', undefined, 'timeline.load-from-file');\n    this.loadButton.addEventListener(UI.Toolbar.ToolbarButton.Events.Click, () => {\n      Host.userMetrics.actionTaken(Host.UserMetrics.Action.PerfPanelTraceImported);\n      this.selectFileToLoad();\n    });\n    this.saveButton =\n        new UI.Toolbar.ToolbarButton(i18nString(UIStrings.saveProfile), 'download', undefined, 'timeline.save-to-file');\n    this.saveButton.addEventListener(UI.Toolbar.ToolbarButton.Events.Click, _event => {\n      Host.userMetrics.actionTaken(Host.UserMetrics.Action.PerfPanelTraceExported);\n      void this.saveToFile();\n    });\n    this.panelToolbar.appendSeparator();\n    this.panelToolbar.appendToolbarItem(this.loadButton);\n    this.panelToolbar.appendToolbarItem(this.saveButton);\n\n    // History\n    this.panelToolbar.appendSeparator();\n    this.panelToolbar.appendToolbarItem(this.#historyManager.button());\n    this.panelToolbar.registerCSSFiles([historyToolbarButtonStyles]);\n    this.panelToolbar.appendSeparator();\n\n    // View\n    this.panelToolbar.appendSeparator();\n    if (!isNode) {\n      this.showScreenshotsToolbarCheckbox =\n          this.createSettingCheckbox(this.showScreenshotsSetting, i18nString(UIStrings.captureScreenshots));\n      this.panelToolbar.appendToolbarItem(this.showScreenshotsToolbarCheckbox);\n    }\n\n    this.showMemoryToolbarCheckbox =\n        this.createSettingCheckbox(this.showMemorySetting, i18nString(UIStrings.showMemoryTimeline));\n    this.panelToolbar.appendToolbarItem(this.showMemoryToolbarCheckbox);\n\n    // GC\n    this.panelToolbar.appendToolbarItem(UI.Toolbar.Toolbar.createActionButtonForId('components.collect-garbage'));\n\n    // Isolate selector\n    const isolateSelector = new IsolateSelector();\n    if (isNode) {\n      this.panelToolbar.appendSeparator();\n      this.panelToolbar.appendToolbarItem(isolateSelector);\n    }\n\n    // Settings\n    if (!isNode) {\n      this.panelRightToolbar.appendSeparator();\n      this.panelRightToolbar.appendToolbarItem(this.showSettingsPaneButton);\n    }\n  }\n\n  private createSettingsPane(): void {\n    this.showSettingsPaneSetting =\n        Common.Settings.Settings.instance().createSetting('timeline-show-settings-toolbar', false);\n    this.showSettingsPaneButton = new UI.Toolbar.ToolbarSettingToggle(\n        this.showSettingsPaneSetting, 'gear', i18nString(UIStrings.captureSettings), 'gear-filled');\n    SDK.NetworkManager.MultitargetNetworkManager.instance().addEventListener(\n        SDK.NetworkManager.MultitargetNetworkManager.Events.ConditionsChanged, this.updateShowSettingsToolbarButton,\n        this);\n    SDK.CPUThrottlingManager.CPUThrottlingManager.instance().addEventListener(\n        SDK.CPUThrottlingManager.Events.RateChanged, this.updateShowSettingsToolbarButton, this);\n    SDK.CPUThrottlingManager.CPUThrottlingManager.instance().addEventListener(\n        SDK.CPUThrottlingManager.Events.HardwareConcurrencyChanged, this.updateShowSettingsToolbarButton, this);\n    this.disableCaptureJSProfileSetting.addChangeListener(this.updateShowSettingsToolbarButton, this);\n    this.captureLayersAndPicturesSetting.addChangeListener(this.updateShowSettingsToolbarButton, this);\n    this.captureSelectorStatsSetting.addChangeListener(this.updateShowSettingsToolbarButton, this);\n\n    this.settingsPane = new UI.Widget.HBox();\n    this.settingsPane.element.classList.add('timeline-settings-pane');\n    this.settingsPane.show(this.element);\n\n    const captureToolbar = new UI.Toolbar.Toolbar('', this.settingsPane.element);\n    captureToolbar.element.classList.add('flex-auto');\n    captureToolbar.makeVertical();\n    captureToolbar.appendToolbarItem(this.createSettingCheckbox(\n        this.disableCaptureJSProfileSetting, i18nString(UIStrings.disablesJavascriptSampling)));\n    captureToolbar.appendToolbarItem(\n        this.createSettingCheckbox(this.captureLayersAndPicturesSetting, i18nString(UIStrings.capturesAdvancedPaint)));\n    captureToolbar.appendToolbarItem(\n        this.createSettingCheckbox(this.captureSelectorStatsSetting, i18nString(UIStrings.capturesSelectorStats)));\n\n    const throttlingPane = new UI.Widget.VBox();\n    throttlingPane.element.classList.add('flex-auto');\n    throttlingPane.show(this.settingsPane.element);\n\n    const cpuThrottlingToolbar = new UI.Toolbar.Toolbar('', throttlingPane.element);\n    cpuThrottlingToolbar.appendText(i18nString(UIStrings.cpu));\n    this.cpuThrottlingSelect = MobileThrottling.ThrottlingManager.throttlingManager().createCPUThrottlingSelector();\n    cpuThrottlingToolbar.appendToolbarItem(this.cpuThrottlingSelect);\n\n    const networkThrottlingToolbar = new UI.Toolbar.Toolbar('', throttlingPane.element);\n    networkThrottlingToolbar.appendText(i18nString(UIStrings.network));\n    this.networkThrottlingSelect = this.createNetworkConditionsSelect();\n    networkThrottlingToolbar.appendToolbarItem(this.networkThrottlingSelect);\n\n    const hardwareConcurrencyPane = new UI.Widget.VBox();\n    hardwareConcurrencyPane.element.classList.add('flex-auto');\n    hardwareConcurrencyPane.show(this.settingsPane.element);\n\n    const {toggle, input, reset, warning} =\n        MobileThrottling.ThrottlingManager.throttlingManager().createHardwareConcurrencySelector();\n    const concurrencyThrottlingToolbar = new UI.Toolbar.Toolbar('', hardwareConcurrencyPane.element);\n    concurrencyThrottlingToolbar.registerCSSFiles([timelinePanelStyles]);\n    input.element.classList.add('timeline-concurrency-input');\n    concurrencyThrottlingToolbar.appendToolbarItem(toggle);\n    concurrencyThrottlingToolbar.appendToolbarItem(input);\n    concurrencyThrottlingToolbar.appendToolbarItem(reset);\n    concurrencyThrottlingToolbar.appendToolbarItem(warning);\n\n    this.showSettingsPaneSetting.addChangeListener(this.updateSettingsPaneVisibility.bind(this));\n    this.updateSettingsPaneVisibility();\n  }\n\n  private createNetworkConditionsSelect(): UI.Toolbar.ToolbarComboBox {\n    const toolbarItem = new UI.Toolbar.ToolbarComboBox(null, i18nString(UIStrings.networkConditions));\n    toolbarItem.setMaxWidth(140);\n    MobileThrottling.ThrottlingManager.throttlingManager().decorateSelectWithNetworkThrottling(\n        toolbarItem.selectElement());\n    return toolbarItem;\n  }\n\n  private prepareToLoadTimeline(): void {\n    console.assert(this.state === State.Idle);\n    this.setState(State.Loading);\n  }\n\n  private createFileSelector(): void {\n    if (this.fileSelectorElement) {\n      this.fileSelectorElement.remove();\n    }\n    this.fileSelectorElement = UI.UIUtils.createFileSelectorElement(this.loadFromFile.bind(this));\n    this.timelinePane.element.appendChild(this.fileSelectorElement);\n  }\n\n  private contextMenu(event: Event): void {\n    // Do not show this Context menu on FlameChart entries because we have a different context menu for FlameChart entries\n    const mouseEvent = (event as MouseEvent);\n    if (this.flameChart.getMainFlameChart().coordinatesToEntryIndex(mouseEvent.offsetX, mouseEvent.offsetY) !== -1) {\n      return;\n    }\n    const contextMenu = new UI.ContextMenu.ContextMenu(event, {useSoftMenu: true});\n    contextMenu.appendItemsAtLocation('timelineMenu');\n    void contextMenu.show();\n  }\n\n  async saveToFile(): Promise<void> {\n    if (this.state !== State.Idle) {\n      return;\n    }\n    const traceEvents = this.#traceEngineModel.rawTraceEvents(this.#traceEngineActiveTraceIndex);\n    const metadata = this.#traceEngineModel.metadata(this.#traceEngineActiveTraceIndex);\n    // Save modifications into the metadata if modifications experiment is on\n    if (Root.Runtime.experiments.isEnabled(Root.Runtime.ExperimentName.TIMELINE_ANNOTATIONS_OVERLAYS) && metadata) {\n      metadata.modifications = ModificationsManager.ModificationsManager.ModificationsManager.activeManager()?.toJSON();\n    }\n    if (!traceEvents) {\n      return;\n    }\n\n    const traceStart = Platform.DateUtilities.toISO8601Compact(new Date());\n    let fileName: Platform.DevToolsPath.RawPathString;\n    if (metadata?.dataOrigin === TraceEngine.Types.File.DataOrigin.CPUProfile) {\n      fileName = `CPU-${traceStart}.cpuprofile` as Platform.DevToolsPath.RawPathString;\n    } else {\n      fileName = `Trace-${traceStart}.json` as Platform.DevToolsPath.RawPathString;\n    }\n\n    try {\n      // TODO(crbug.com/1456818): Extract this logic and add more tests.\n      let traceAsString;\n      if (metadata?.dataOrigin === TraceEngine.Types.File.DataOrigin.CPUProfile) {\n        const profileEvent = traceEvents.find(e => e.name === 'CpuProfile');\n        if (!profileEvent || !profileEvent.args?.data) {\n          return;\n        }\n        const profileEventData = profileEvent.args?.data;\n        if (profileEventData.hasOwnProperty('cpuProfile')) {\n          // TODO(crbug.com/1456799): Currently use a hack way because we can't differentiate\n          // cpuprofile from trace events when loading a file.\n          // The loader will directly add the fake trace created from CpuProfile to the tracingModel.\n          // And there is where the old saving logic saves the cpuprofile.\n          // This will be solved when the CPUProfileHandler is done. Then we can directly get it\n          // from the new traceEngine\n          const profile = (profileEventData as {cpuProfile: Protocol.Profiler.Profile}).cpuProfile;\n          traceAsString = cpuprofileJsonGenerator(profile as Protocol.Profiler.Profile);\n        }\n      } else {\n        const formattedTraceIter = traceJsonGenerator(traceEvents, metadata);\n        traceAsString = Array.from(formattedTraceIter).join('');\n      }\n      if (!traceAsString) {\n        throw new Error('Trace content empty');\n      }\n      await Workspace.FileManager.FileManager.instance().save(\n          fileName, traceAsString, true /* forceSaveAs */, false /* isBase64 */);\n      Workspace.FileManager.FileManager.instance().close(fileName);\n    } catch (error) {\n      console.error(error.stack);\n      if (error.name === 'AbortError') {\n        // The user cancelled the action, so this is not an error we need to report.\n        return;\n      }\n      Common.Console.Console.instance().error(\n          i18nString(UIStrings.failedToSaveTimelineSS, {PH1: error.message, PH2: error.name}));\n    }\n  }\n\n  async showHistory(): Promise<void> {\n    const recordingData = await this.#historyManager.showHistoryDropDown();\n    this.#saveModificationsForActiveTrace();\n    if (recordingData && recordingData.traceParseDataIndex !== this.#traceEngineActiveTraceIndex) {\n      this.setModel(recordingData.traceParseDataIndex);\n    }\n  }\n\n  navigateHistory(direction: number): boolean {\n    this.#saveModificationsForActiveTrace();\n    const recordingData = this.#historyManager.navigate(direction);\n    if (recordingData && recordingData.traceParseDataIndex !== this.#traceEngineActiveTraceIndex) {\n      this.setModel(recordingData.traceParseDataIndex);\n    }\n    return true;\n  }\n\n  #saveModificationsForActiveTrace(): void {\n    const newModifications = ModificationsManager.ModificationsManager.ModificationsManager.activeManager()?.toJSON();\n    if (newModifications) {\n      this.#traceEngineModel.overrideModifications(this.#traceEngineActiveTraceIndex, newModifications);\n    }\n  }\n\n  selectFileToLoad(): void {\n    if (this.fileSelectorElement) {\n      this.fileSelectorElement.click();\n    }\n  }\n\n  async loadFromFile(file: File): Promise<void> {\n    if (this.state !== State.Idle) {\n      return;\n    }\n    this.prepareToLoadTimeline();\n    this.loader = await TimelineLoader.loadFromFile(file, this);\n    this.createFileSelector();\n  }\n\n  async loadFromURL(url: Platform.DevToolsPath.UrlString): Promise<void> {\n    if (this.state !== State.Idle) {\n      return;\n    }\n    this.prepareToLoadTimeline();\n    this.loader = await TimelineLoader.loadFromURL(url, this);\n  }\n\n  private updateOverviewControls(): void {\n    const traceParsedData = this.#traceEngineModel.traceParsedData(this.#traceEngineActiveTraceIndex);\n    const isCpuProfile = this.#traceEngineModel.metadata(this.#traceEngineActiveTraceIndex)?.dataOrigin ===\n        TraceEngine.Types.File.DataOrigin.CPUProfile;\n    if (!traceParsedData) {\n      return;\n    }\n\n    this.#minimapComponent.setData({\n      traceParsedData,\n      isCpuProfile,\n      settings: {\n        showScreenshots: this.showScreenshotsSetting.get(),\n        showMemory: this.showMemorySetting.get(),\n      },\n    });\n  }\n\n  private onModeChanged(): void {\n    this.flameChart.updateCountersGraphToggle(this.showMemorySetting.get());\n    this.updateOverviewControls();\n    this.doResize();\n    this.select(null);\n  }\n\n  private updateSettingsPaneVisibility(): void {\n    if (isNode) {\n      return;\n    }\n    if (this.showSettingsPaneSetting.get()) {\n      this.showSettingsPaneButton.setToggled(true);\n      this.settingsPane.showWidget();\n    } else {\n      this.showSettingsPaneButton.setToggled(false);\n      this.settingsPane.hideWidget();\n    }\n  }\n\n  private updateShowSettingsToolbarButton(): void {\n    const messages: string[] = [];\n    if (SDK.CPUThrottlingManager.CPUThrottlingManager.instance().cpuThrottlingRate() !== 1) {\n      messages.push(i18nString(UIStrings.CpuThrottlingIsEnabled));\n    }\n    if (MobileThrottling.ThrottlingManager.throttlingManager().hardwareConcurrencyOverrideEnabled) {\n      messages.push(i18nString(UIStrings.HardwareConcurrencyIsEnabled));\n    }\n    if (SDK.NetworkManager.MultitargetNetworkManager.instance().isThrottling()) {\n      messages.push(i18nString(UIStrings.NetworkThrottlingIsEnabled));\n    }\n    if (this.captureLayersAndPicturesSetting.get()) {\n      messages.push(i18nString(UIStrings.SignificantOverheadDueToPaint));\n    }\n    if (this.captureSelectorStatsSetting.get()) {\n      messages.push(i18nString(UIStrings.SelectorStatsEnabled));\n    }\n    if (this.disableCaptureJSProfileSetting.get()) {\n      messages.push(i18nString(UIStrings.JavascriptSamplingIsDisabled));\n    }\n\n    this.showSettingsPaneButton.setDefaultWithRedColor(messages.length > 0);\n    this.showSettingsPaneButton.setToggleWithRedColor(messages.length > 0);\n\n    if (messages.length) {\n      const tooltipElement = document.createElement('div');\n      messages.forEach(message => {\n        tooltipElement.createChild('div').textContent = message;\n      });\n      this.showSettingsPaneButton.setTitle(tooltipElement.textContent || '');\n    } else {\n      this.showSettingsPaneButton.setTitle(i18nString(UIStrings.captureSettings));\n    }\n  }\n\n  private setUIControlsEnabled(enabled: boolean): void {\n    this.recordingOptionUIControls.forEach(control => control.setEnabled(enabled));\n  }\n\n  async #evaluateInspectedURL(): Promise<Platform.DevToolsPath.UrlString> {\n    if (!this.controller) {\n      return Platform.DevToolsPath.EmptyUrlString;\n    }\n\n    // target.inspectedURL is reliably populated, however it lacks any url #hash\n    const inspectedURL = this.controller.primaryPageTarget.inspectedURL();\n\n    // We'll use the navigationHistory to acquire the current URL including hash\n    const resourceTreeModel = this.controller.primaryPageTarget.model(SDK.ResourceTreeModel.ResourceTreeModel);\n    const navHistory = resourceTreeModel && await resourceTreeModel.navigationHistory();\n    if (!resourceTreeModel || !navHistory) {\n      return inspectedURL;\n    }\n\n    const {currentIndex, entries} = navHistory;\n    const navigationEntry = entries[currentIndex];\n    return navigationEntry.url as Platform.DevToolsPath.UrlString;\n  }\n\n  async #navigateToAboutBlank(): Promise<void> {\n    const aboutBlankNavigationComplete = new Promise<void>(async (resolve, reject) => {\n      if (!this.controller) {\n        reject('Could not find TimelineController');\n        return;\n      }\n      const target = this.controller.primaryPageTarget;\n      const resourceModel = target.model(SDK.ResourceTreeModel.ResourceTreeModel);\n      if (!resourceModel) {\n        reject('Could not load resourceModel');\n        return;\n      }\n\n      // To clear out the page and any state from prior test runs, we\n      // navigate to about:blank before initiating the trace recording.\n      // Once we have navigated to about:blank, we start recording and\n      // then navigate to the original page URL, to ensure we profile the\n      // page load.\n      function waitForAboutBlank(event: Common.EventTarget.EventTargetEvent<SDK.ResourceTreeModel.ResourceTreeFrame>):\n          void {\n        if (event.data.url === 'about:blank') {\n          resolve();\n        } else {\n          reject(`Unexpected navigation to ${event.data.url}`);\n        }\n        resourceModel?.removeEventListener(SDK.ResourceTreeModel.Events.FrameNavigated, waitForAboutBlank);\n      }\n      resourceModel.addEventListener(SDK.ResourceTreeModel.Events.FrameNavigated, waitForAboutBlank);\n      await resourceModel.navigate('about:blank' as Platform.DevToolsPath.UrlString);\n    });\n    await aboutBlankNavigationComplete;\n  }\n\n  async #startCPUProfilingRecording(): Promise<void> {\n    try {\n      this.cpuProfiler = UI.Context.Context.instance().flavor(SDK.CPUProfilerModel.CPUProfilerModel);\n      if (!this.cpuProfiler) {\n        // If there is no isolate selected, we will profile the first isolate that devtools connects to.\n        // If we profile all target, but this will cause some bugs like time for the function is calculated wrong,\n        // because the profiles will be concated and sorted together, so the total time will be amplified.\n        // Multiple targets problem might happen when you inspect multiple node servers on different port at same time,\n        // or when you let DevTools listen to both locolhost:9229 & 127.0.0.1:9229.\n        const firstNodeTarget =\n            SDK.TargetManager.TargetManager.instance().targets().find(target => target.type() === SDK.Target.Type.Node);\n        if (!firstNodeTarget) {\n          throw new Error('Could not load any Node target.');\n        }\n        if (firstNodeTarget) {\n          this.cpuProfiler = firstNodeTarget.model(SDK.CPUProfilerModel.CPUProfilerModel);\n        }\n      }\n\n      this.setUIControlsEnabled(false);\n      this.hideLandingPage();\n      if (!this.cpuProfiler) {\n        throw new Error('No Node target is found.');\n      }\n      await SDK.TargetManager.TargetManager.instance().suspendAllTargets('performance-timeline');\n      await this.cpuProfiler.startRecording();\n\n      this.recordingStarted();\n    } catch (e) {\n      await this.recordingFailed(e.message);\n    }\n  }\n\n  async #startTraceRecording(): Promise<void> {\n    try {\n      // We record against the root target, but also need to use the\n      // primaryPageTarget to inspect the current URL. For more info, see the\n      // JSDoc comment on the TimelineController constructor.\n      const rootTarget = SDK.TargetManager.TargetManager.instance().rootTarget();\n      const primaryPageTarget = SDK.TargetManager.TargetManager.instance().primaryPageTarget();\n\n      if (!primaryPageTarget) {\n        throw new Error('Could not load primary page target.');\n      }\n      if (!rootTarget) {\n        throw new Error('Could not load root target.');\n      }\n\n      if (UIDevtoolsUtils.isUiDevTools()) {\n        this.controller = new UIDevtoolsController(rootTarget, primaryPageTarget, this);\n      } else {\n        this.controller = new TimelineController(rootTarget, primaryPageTarget, this);\n      }\n      this.setUIControlsEnabled(false);\n      this.hideLandingPage();\n      if (!this.controller) {\n        throw new Error('Could not create Timeline controller');\n      }\n\n      const urlToTrace = await this.#evaluateInspectedURL();\n      // If we are doing \"Reload & record\", we first navigate the page to\n      // about:blank. This is to ensure any data on the timeline from any\n      // previous performance recording is lost, avoiding the problem where a\n      // timeline will show data & screenshots from a previous page load that\n      // was not relevant.\n      if (this.recordingPageReload) {\n        await this.#navigateToAboutBlank();\n      }\n      const recordingOptions = {\n        enableJSSampling: !this.disableCaptureJSProfileSetting.get(),\n        capturePictures: this.captureLayersAndPicturesSetting.get(),\n        captureFilmStrip: this.showScreenshotsSetting.get(),\n        captureSelectorStats: this.captureSelectorStatsSetting.get(),\n      };\n      // Order is important here: we tell the controller to start recording, which enables tracing.\n      const response = await this.controller.startRecording(recordingOptions);\n      if (response.getError()) {\n        throw new Error(response.getError());\n      }\n      // Once we get here, we know tracing is active.\n      // This is when, if the user has hit \"Reload & Record\" that we now need to navigate to the original URL.\n      // If the user has just hit \"record\", we don't do any navigating.\n      const recordingConfig = this.recordingPageReload ? {navigateToUrl: urlToTrace} : undefined;\n      this.recordingStarted(recordingConfig);\n    } catch (e) {\n      await this.recordingFailed(e.message);\n    }\n  }\n\n  private async startRecording(): Promise<void> {\n    this.#saveModificationsForActiveTrace();\n    console.assert(!this.statusPane, 'Status pane is already opened.');\n    this.setState(State.StartPending);\n    this.showRecordingStarted();\n\n    if (isNode) {\n      await this.#startCPUProfilingRecording();\n    } else {\n      await this.#startTraceRecording();\n    }\n  }\n\n  private async stopRecording(): Promise<void> {\n    if (this.statusPane) {\n      this.statusPane.finish();\n      this.statusPane.updateStatus(i18nString(UIStrings.stoppingTimeline));\n      this.statusPane.updateProgressBar(i18nString(UIStrings.received), 0);\n    }\n    this.setState(State.StopPending);\n    if (this.controller) {\n      await this.controller.stopRecording();\n      this.setUIControlsEnabled(true);\n      await this.controller.dispose();\n      this.controller = null;\n      return;\n    }\n    if (this.cpuProfiler) {\n      const profile = await this.cpuProfiler.stopRecording();\n      this.setState(State.Idle);\n      this.loadFromCpuProfile(profile);\n\n      this.setUIControlsEnabled(true);\n      this.cpuProfiler = null;\n\n      await SDK.TargetManager.TargetManager.instance().resumeAllTargets();\n    }\n  }\n\n  private async recordingFailed(error: string, rawEvents?: TraceEngine.Types.TraceEvents.TraceEventData[]):\n      Promise<void> {\n    if (this.statusPane) {\n      this.statusPane.remove();\n    }\n    this.statusPane = new StatusPane(\n        {\n          description: error,\n          buttonText: i18nString(UIStrings.close),\n          buttonDisabled: false,\n          showProgress: undefined,\n          showTimer: undefined,\n        },\n        // When recording failed, we should load null to go back to the landing page.\n        async () => {\n          this.statusPane?.remove();\n          await this.loadingComplete(\n              /* no collectedEvents */[],\n              /* exclusiveFilter= */ null,\n              /* isCpuProfile= */ false,\n              /* recordingStartTime= */ null,\n              /* metadata= */ null);\n        });\n    this.statusPane.showPane(this.statusPaneContainer);\n    this.statusPane.updateStatus(i18nString(UIStrings.recordingFailed));\n\n    if (rawEvents) {\n      this.statusPane.enableDownloadOfEvents(rawEvents);\n    }\n\n    this.setState(State.RecordingFailed);\n    this.traceLoadStart = null;\n    this.setUIControlsEnabled(true);\n    if (this.controller) {\n      await this.controller.dispose();\n      this.controller = null;\n    }\n    // Ensure we resume all targets, otherwise DevTools remains unresponsive in the event of an error.\n    void SDK.TargetManager.TargetManager.instance().resumeAllTargets();\n  }\n\n  private onSuspendStateChanged(): void {\n    this.updateTimelineControls();\n  }\n\n  private consoleProfileFinished(data: SDK.CPUProfilerModel.ProfileFinishedData): void {\n    this.loadFromCpuProfile(data.cpuProfile);\n    void UI.InspectorView.InspectorView.instance().showPanel('timeline');\n  }\n\n  private updateTimelineControls(): void {\n    this.toggleRecordAction.setToggled(this.state === State.Recording);\n    this.toggleRecordAction.setEnabled(this.state === State.Recording || this.state === State.Idle);\n    this.recordReloadAction.setEnabled(isNode ? false : this.state === State.Idle);\n    this.#historyManager.setEnabled(this.state === State.Idle);\n    this.clearButton.setEnabled(this.state === State.Idle);\n    this.panelToolbar.setEnabled(this.state !== State.Loading);\n    this.panelRightToolbar.setEnabled(this.state !== State.Loading);\n    this.dropTarget.setEnabled(this.state === State.Idle);\n    this.loadButton.setEnabled(this.state === State.Idle);\n    this.saveButton.setEnabled(this.state === State.Idle && this.#hasActiveTrace());\n  }\n\n  async toggleRecording(): Promise<void> {\n    if (this.state === State.Idle) {\n      this.recordingPageReload = false;\n      await this.startRecording();\n      Host.userMetrics.actionTaken(Host.UserMetrics.Action.TimelineStarted);\n    } else if (this.state === State.Recording) {\n      await this.stopRecording();\n    }\n  }\n\n  recordReload(): void {\n    if (this.state !== State.Idle) {\n      return;\n    }\n    this.recordingPageReload = true;\n    void this.startRecording();\n    Host.userMetrics.actionTaken(Host.UserMetrics.Action.TimelinePageReloadStarted);\n  }\n\n  private onClearButton(): void {\n    this.#historyManager.clear();\n    this.clear();\n  }\n\n  #hasActiveTrace(): boolean {\n    return this.#traceEngineActiveTraceIndex > -1;\n  }\n\n  private onFixMe(): void {\n    if (!this.#hasActiveTrace()) {\n      return;\n    }\n    this.flameChart.fixMe();\n  }\n\n  private clear(): void {\n    if (this.statusPane) {\n      this.statusPane.remove();\n    }\n    this.showLandingPage();\n    this.reset();\n  }\n\n  private reset(): void {\n    PerfUI.LineLevelProfile.Performance.instance().reset();\n    if (this.#sourceMapsResolver) {\n      this.#sourceMapsResolver.removeEventListener(\n          NodeNamesUpdated.eventName, this.#onSourceMapsNodeNamesResolvedBound);\n      this.#sourceMapsResolver.uninstall();\n      this.#sourceMapsResolver = null;\n    }\n    this.setModel(-1);\n  }\n\n  #applyActiveFilters(\n      traceIsGeneric: boolean,\n      exclusiveFilter: TimelineModel.TimelineModelFilter.TimelineModelFilter|null = null): void {\n    if (traceIsGeneric || Root.Runtime.experiments.isEnabled('timeline-show-all-events')) {\n      return;\n    }\n\n    const newActiveFilters = exclusiveFilter ? [exclusiveFilter] : [\n      TimelineUIUtils.visibleEventsFilter(),\n    ];\n\n    ActiveFilters.instance().setFilters(newActiveFilters);\n  }\n\n  setModel(\n      traceEngineIndex: number,\n      exclusiveFilter: TimelineModel.TimelineModelFilter.TimelineModelFilter|null = null,\n      ): void {\n    this.#traceEngineActiveTraceIndex = traceEngineIndex;\n    const traceParsedData = this.#traceEngineModel.traceParsedData(this.#traceEngineActiveTraceIndex);\n    const isCpuProfile = this.#traceEngineModel.metadata(this.#traceEngineActiveTraceIndex)?.dataOrigin ===\n        TraceEngine.Types.File.DataOrigin.CPUProfile;\n\n    this.#minimapComponent.reset();\n    // Order is important: the bounds must be set before we initiate any UI\n    // rendering.\n    if (traceParsedData) {\n      TraceBounds.TraceBounds.BoundsManager.instance().resetWithNewBounds(\n          traceParsedData.Meta.traceBounds,\n      );\n      // Create an instance of the modifications manager for this trace or activate a manager for previousy loaded trace.\n      ModificationsManager.ModificationsManager.ModificationsManager.initAndActivateModificationsManager(\n          this.#traceEngineModel, this.#traceEngineActiveTraceIndex);\n      this.#applyActiveFilters(traceParsedData.Meta.traceIsGeneric, exclusiveFilter);\n    }\n    if (traceParsedData) {\n      this.searchableViewInternal.showWidget();\n    } else {\n      this.searchableViewInternal.hideWidget();\n      this.fixMeButtonAdded = false;\n      this.panelToolbar.removeToolbarItem(this.fixMeButton);\n    }\n    this.flameChart.setModel(traceParsedData, isCpuProfile);\n    this.flameChart.setSelection(null);\n\n    // Set up line level profiling with CPU profiles, if we found any.\n    PerfUI.LineLevelProfile.Performance.instance().reset();\n    if (traceParsedData && traceParsedData.Samples.profilesInProcess.size) {\n      const primaryPageTarget = SDK.TargetManager.TargetManager.instance().primaryPageTarget();\n      // Gather up all CPU Profiles we found when parsing this trace.\n      const cpuProfiles =\n          Array.from(traceParsedData.Samples.profilesInProcess).flatMap(([_processId, threadsInProcess]) => {\n            const profiles = Array.from(threadsInProcess.values()).map(profileData => profileData.parsedProfile);\n            return profiles;\n          });\n      for (const profile of cpuProfiles) {\n        PerfUI.LineLevelProfile.Performance.instance().appendCPUProfile(profile, primaryPageTarget);\n      }\n    }\n\n    this.updateOverviewControls();\n    if (this.flameChart) {\n      this.flameChart.resizeToPreferredHeights();\n    }\n\n    // Set the initial zoom and if we are using breadcrumbs, create the initial breadcrum.\n    // We expect traceParsedData to always exist, this check is to keep TS happy.\n    if (traceParsedData) {\n      if (this.#minimapComponent.breadcrumbsActivated) {\n        this.#minimapComponent.addInitialBreadcrumb();\n      }\n\n      // To calculate the activity we might want to zoom in, we find the last\n      // main thread. Or we find the CPU Profile thread, for e.g. Node traces.\n      const mainThreadTypes = [\n        TraceEngine.Handlers.Threads.ThreadType.MAIN_THREAD,\n        TraceEngine.Handlers.Threads.ThreadType.CPU_PROFILE,\n      ];\n      const lastMainThread = TraceEngine.Handlers.Threads.threadsInTrace(traceParsedData)\n                                 .filter(data => mainThreadTypes.includes(data.type))\n                                 .at(-1);\n      if (lastMainThread) {\n        const zoomedInBounds = TraceEngine.Extras.MainThreadActivity.calculateWindow(\n            traceParsedData.Meta.traceBounds, lastMainThread.entries);\n\n        TraceBounds.TraceBounds.BoundsManager.instance().setTimelineVisibleWindow(zoomedInBounds);\n      }\n    }\n    this.updateTimelineControls();\n  }\n\n  private recordingStarted(config?: {navigateToUrl: Platform.DevToolsPath.UrlString}): void {\n    if (config && this.recordingPageReload && this.controller) {\n      // If the user hit \"Reload & record\", by this point we have:\n      // 1. Navigated to about:blank\n      // 2. Initiated tracing.\n      // We therefore now should navigate back to the original URL that the user wants to profile.\n      const resourceModel = this.controller?.primaryPageTarget.model(SDK.ResourceTreeModel.ResourceTreeModel);\n      if (!resourceModel) {\n        void this.recordingFailed('Could not navigate to original URL');\n        return;\n      }\n      // We don't need to await this because we are purposefully showing UI\n      // progress as the page loads & tracing is underway.\n      void resourceModel.navigate(config.navigateToUrl);\n    }\n\n    this.reset();\n    this.setState(State.Recording);\n    this.showRecordingStarted();\n    if (this.statusPane) {\n      this.statusPane.enableAndFocusButton();\n      this.statusPane.updateStatus(i18nString(UIStrings.profiling));\n      this.statusPane.updateProgressBar(i18nString(UIStrings.bufferUsage), 0);\n      this.statusPane.startTimer();\n    }\n    this.hideLandingPage();\n  }\n\n  recordingProgress(usage: number): void {\n    if (this.statusPane) {\n      this.statusPane.updateProgressBar(i18nString(UIStrings.bufferUsage), usage * 100);\n    }\n  }\n\n  private showLandingPage(): void {\n    this.updateSettingsPaneVisibility();\n    this.#sideBar.hideSidebar();\n    if (this.landingPage) {\n      this.landingPage.show(this.statusPaneContainer);\n      return;\n    }\n\n    this.landingPage = new TimelineLandingPage(this.toggleRecordAction, {isNode});\n    this.landingPage.show(this.statusPaneContainer);\n  }\n\n  private hideLandingPage(): void {\n    this.landingPage.detach();\n\n    // Hide pane settings in trace view to conserve UI space, but preserve underlying setting.\n    this.showSettingsPaneButton?.setToggled(false);\n    this.settingsPane?.hideWidget();\n  }\n\n  async loadingStarted(): Promise<void> {\n    this.hideLandingPage();\n\n    if (this.statusPane) {\n      this.statusPane.remove();\n    }\n    this.statusPane = new StatusPane(\n        {\n          showProgress: true,\n          showTimer: undefined,\n          buttonDisabled: undefined,\n          buttonText: undefined,\n          description: undefined,\n        },\n        () => this.cancelLoading());\n    this.statusPane.showPane(this.statusPaneContainer);\n    this.statusPane.updateStatus(i18nString(UIStrings.loadingProfile));\n    // FIXME: make loading from backend cancelable as well.\n    if (!this.loader) {\n      this.statusPane.finish();\n    }\n    this.traceLoadStart = TraceEngine.Types.Timing.MilliSeconds(performance.now());\n    await this.loadingProgress(0);\n  }\n\n  async loadingProgress(progress?: number): Promise<void> {\n    if (typeof progress === 'number' && this.statusPane) {\n      this.statusPane.updateProgressBar(i18nString(UIStrings.received), progress * 100);\n    }\n  }\n\n  async processingStarted(): Promise<void> {\n    if (this.statusPane) {\n      this.statusPane.updateStatus(i18nString(UIStrings.processingProfile));\n    }\n  }\n\n  #onSourceMapsNodeNamesResolved(): void {\n    this.flameChart.refreshMainFlameChart();\n  }\n\n  /**\n   * This is called with we are done loading a trace from a file, or after we\n   * have recorded a fresh trace.\n   **/\n  async loadingComplete(\n      collectedEvents: TraceEngine.Types.TraceEvents.TraceEventData[],\n      exclusiveFilter: TimelineModel.TimelineModelFilter.TimelineModelFilter|null = null, isCpuProfile: boolean,\n      recordingStartTime: number|null, metadata: TraceEngine.Types.File.MetaData|null): Promise<void> {\n    // Before loading a new trace, update modifications of the previous one\n    this.#saveModificationsForActiveTrace();\n\n    this.#traceEngineModel.resetProcessor();\n    SourceMapsResolver.clearResolvedNodeNames();\n\n    delete this.loader;\n\n    // If the user just recorded this trace via the record UI, the state will\n    // be StopPending. Whereas if it was an existing trace they loaded via a\n    // file, it will be State.Loading. This means we can tell the recording is\n    // fresh by checking the state value.\n    const recordingIsFresh = this.state === State.StopPending;\n\n    this.setState(State.Idle);\n\n    if (collectedEvents.length === 0) {\n      this.clear();\n      return;\n    }\n\n    metadata = metadata ?\n        metadata :\n        await TraceEngine.Extras.Metadata.forNewRecording(isCpuProfile, recordingStartTime ?? undefined);\n\n    try {\n      await this.#executeNewTraceEngine(collectedEvents, recordingIsFresh, metadata);\n\n      // This code path is only executed when a new trace is recorded/imported,\n      // so we know that the active index will be the size of the model because\n      // the newest trace will be automatically set to active.\n      this.#traceEngineActiveTraceIndex = this.#traceEngineModel.size() - 1;\n\n      this.setModel(this.#traceEngineActiveTraceIndex, exclusiveFilter);\n\n      if (this.statusPane) {\n        this.statusPane.remove();\n      }\n      this.statusPane = null;\n      if (!isNode && Root.Runtime.experiments.isEnabled(Root.Runtime.ExperimentName.TIMELINE_SIDEBAR)) {\n        this.#sideBar.showBoth();\n      }\n      const traceData = this.#traceEngineModel.traceParsedData(this.#traceEngineActiveTraceIndex);\n      if (!traceData) {\n        throw new Error(`Could not get trace data at index ${this.#traceEngineActiveTraceIndex}`);\n      }\n      if (recordingIsFresh) {\n        Tracker.instance().registerFreshRecording(traceData);\n      }\n\n      // Set up SourceMapsResolver to ensure we resolve any function names in\n      // profile calls.\n      this.#sourceMapsResolver = new SourceMapsResolver(traceData);\n      this.#sourceMapsResolver.addEventListener(NodeNamesUpdated.eventName, this.#onSourceMapsNodeNamesResolvedBound);\n      await this.#sourceMapsResolver.install();\n\n      // We store the index of the active trace so we can load it back easily\n      // if the user goes to a different trace then comes back.\n      // However we also pass in the full trace data because we use it to build\n      // the preview overview thumbnail of the trace that gets shown in the UI.\n      this.#historyManager.addRecording({\n        data: {\n          traceParseDataIndex: this.#traceEngineActiveTraceIndex,\n        },\n        filmStripForPreview: TraceEngine.Extras.FilmStrip.fromTraceData(traceData),\n        traceParsedData: traceData,\n        startTime: recordingStartTime ?? null,\n      });\n    } catch (error) {\n      // If we errored during the parsing stage, it\n      // is useful to get access to the raw events to download the trace. This\n      // allows us to debug crashes!\n      void this.recordingFailed(error.message, collectedEvents);\n      console.error(error);\n    } finally {\n      this.recordTraceLoadMetric();\n    }\n  }\n\n  recordTraceLoadMetric(): void {\n    if (!this.traceLoadStart) {\n      return;\n    }\n    const start = this.traceLoadStart;\n    // Right *now* is the end of trace parsing and model building, but the flamechart rendering\n    // isn't complete yet. To capture that we'll do a rAF+setTimeout to give the most accurate timestamp\n    // for the first paint of the flamechart\n    requestAnimationFrame(() => {\n      setTimeout(() => {\n        const end = TraceEngine.Types.Timing.MilliSeconds(performance.now());\n        const measure = performance.measure('TraceLoad', {start, end});\n        const duration = TraceEngine.Types.Timing.MilliSeconds(measure.duration);\n        this.element.dispatchEvent(new TraceLoadEvent(duration));\n        Host.userMetrics.performanceTraceLoad(measure);\n      }, 0);\n    });\n  }\n\n  async #executeNewTraceEngine(\n      collectedEvents: TraceEngine.Types.TraceEvents.TraceEventData[], isFreshRecording: boolean,\n      metadata: TraceEngine.Types.File.MetaData): Promise<void> {\n    return this.#traceEngineModel.parse(\n        collectedEvents,\n        {\n          metadata,\n          isFreshRecording,\n        },\n    );\n  }\n\n  loadingCompleteForTest(): void {\n    // Not implemented, added only for allowing the TimelineTestRunner\n    // to be in sync when a trace load is finished.\n  }\n  private showRecordingStarted(): void {\n    if (this.statusPane) {\n      this.statusPane.remove();\n    }\n    this.statusPane = new StatusPane(\n        {\n          showTimer: true,\n          showProgress: true,\n          buttonDisabled: true,\n          description: undefined,\n          buttonText: undefined,\n        },\n        () => this.stopRecording());\n    this.statusPane.showPane(this.statusPaneContainer);\n    this.statusPane.updateStatus(i18nString(UIStrings.initializingProfiler));\n  }\n\n  private cancelLoading(): void {\n    if (this.loader) {\n      void this.loader.cancel();\n    }\n  }\n\n  private async loadEventFired(\n      event: Common.EventTarget\n          .EventTargetEvent<{resourceTreeModel: SDK.ResourceTreeModel.ResourceTreeModel, loadTime: number}>):\n      Promise<void> {\n    if (this.state !== State.Recording || !this.recordingPageReload || !this.controller ||\n        this.controller.primaryPageTarget !== event.data.resourceTreeModel.target()) {\n      return;\n    }\n    const controller = this.controller;\n    await new Promise(r => window.setTimeout(r, this.millisecondsToRecordAfterLoadEvent));\n\n    // Check if we're still in the same recording session.\n    if (controller !== this.controller || this.state !== State.Recording) {\n      return;\n    }\n    void this.stopRecording();\n  }\n\n  private frameForSelection(selection: TimelineSelection): TraceEngine.Handlers.ModelHandlers.Frames.TimelineFrame\n      |null {\n    if (TimelineSelection.isFrameObject(selection.object)) {\n      return selection.object;\n    }\n    if (TimelineSelection.isRangeSelection(selection.object) ||\n        TimelineSelection.isSyntheticNetworkRequestDetailsEventSelection(selection.object)) {\n      return null;\n    }\n    if (TimelineSelection.isTraceEventSelection(selection.object)) {\n      const traceData = this.#traceEngineModel.traceParsedData(this.#traceEngineActiveTraceIndex);\n      if (!traceData) {\n        return null;\n      }\n      // If the user has selected a time range, the frame we want is the last\n      // frame in that time window, hence why the window we look for is the\n      // endTime to the endTime.\n      const endTimeMicro = TraceEngine.Helpers.Timing.millisecondsToMicroseconds(selection.endTime);\n      const lastFrameInSelection = TraceEngine.Handlers.ModelHandlers.Frames\n                                       .framesWithinWindow(\n                                           traceData.Frames.frames,\n                                           endTimeMicro,\n                                           endTimeMicro,\n                                           )\n                                       .at(0);\n      return lastFrameInSelection || null;\n    }\n    console.assert(false, 'Should never be reached');\n    return null;\n  }\n\n  jumpToFrame(offset: number): true|undefined {\n    const currentFrame = this.selection && this.frameForSelection(this.selection);\n    if (!currentFrame) {\n      return;\n    }\n    const traceData = this.#traceEngineModel.traceParsedData(this.#traceEngineActiveTraceIndex);\n    if (!traceData) {\n      return;\n    }\n    let index = traceData.Frames.frames.indexOf(currentFrame);\n    console.assert(index >= 0, 'Can\\'t find current frame in the frame list');\n    index = Platform.NumberUtilities.clamp(index + offset, 0, traceData.Frames.frames.length - 1);\n    const frame = traceData.Frames.frames[index];\n    this.#revealTimeRange(\n        TraceEngine.Helpers.Timing.microSecondsToMilliseconds(frame.startTime),\n        TraceEngine.Helpers.Timing.microSecondsToMilliseconds(frame.endTime));\n    this.select(TimelineSelection.fromFrame(frame));\n    return true;\n  }\n\n  select(selection: TimelineSelection|null): void {\n    this.selection = selection;\n    this.flameChart.setSelection(selection);\n  }\n\n  selectEntryAtTime(events: TraceEngine.Types.TraceEvents.TraceEventData[]|null, time: number): void {\n    if (!events) {\n      return;\n    }\n\n    if (events.length === 0) {\n      this.select(null);\n      return;\n    }\n\n    // Find best match, then backtrack to the first visible entry.\n    for (let index = Platform.ArrayUtilities.upperBound(events, time, (time, event) => time - event.ts) - 1; index >= 0;\n         --index) {\n      const event = events[index];\n      const {endTime} = TraceEngine.Helpers.Timing.eventTimingsMilliSeconds(event);\n      if (TraceEngine.Helpers.Trace.isTopLevelEvent(event) && endTime < time) {\n        break;\n      }\n      if (ActiveFilters.instance().isVisible(event) && endTime >= time) {\n        this.select(TimelineSelection.fromTraceEvent(event));\n        return;\n      }\n    }\n    this.select(null);\n  }\n\n  highlightEvent(event: TraceEngine.Types.TraceEvents.TraceEventData|null): void {\n    this.flameChart.highlightEvent(event);\n  }\n\n  #revealTimeRange(startTime: TraceEngine.Types.Timing.MilliSeconds, endTime: TraceEngine.Types.Timing.MilliSeconds):\n      void {\n    const traceBoundsState = TraceBounds.TraceBounds.BoundsManager.instance().state();\n    if (!traceBoundsState) {\n      return;\n    }\n    const traceWindow = traceBoundsState.milli.timelineTraceWindow;\n\n    let offset = 0;\n    if (traceWindow.max < endTime) {\n      offset = endTime - traceWindow.max;\n    } else if (traceWindow.min > startTime) {\n      offset = startTime - traceWindow.min;\n    }\n    TraceBounds.TraceBounds.BoundsManager.instance().setTimelineVisibleWindow(\n        TraceEngine.Helpers.Timing.traceWindowFromMilliSeconds(\n            TraceEngine.Types.Timing.MilliSeconds(traceWindow.min + offset),\n            TraceEngine.Types.Timing.MilliSeconds(traceWindow.max + offset),\n            ),\n        {\n          shouldAnimate: true,\n        },\n    );\n  }\n\n  private handleDrop(dataTransfer: DataTransfer): void {\n    const items = dataTransfer.items;\n    if (!items.length) {\n      return;\n    }\n    const item = items[0];\n    Host.userMetrics.actionTaken(Host.UserMetrics.Action.PerfPanelTraceImported);\n    if (item.kind === 'string') {\n      const url = dataTransfer.getData('text/uri-list') as Platform.DevToolsPath.UrlString;\n      if (new Common.ParsedURL.ParsedURL(url).isValid) {\n        void this.loadFromURL(url);\n      }\n    } else if (item.kind === 'file') {\n      const file = items[0].getAsFile();\n      if (!file) {\n        return;\n      }\n      void this.loadFromFile(file);\n    }\n  }\n}\n\nexport const enum State {\n  Idle = 'Idle',\n  StartPending = 'StartPending',\n  Recording = 'Recording',\n  StopPending = 'StopPending',\n  Loading = 'Loading',\n  RecordingFailed = 'RecordingFailed',\n}\n\n// Define row and header height, should be in sync with styles for timeline graphs.\nexport const rowHeight = 18;\n\nexport const headerHeight = 20;\nexport interface TimelineModeViewDelegate {\n  select(selection: TimelineSelection|null): void;\n  selectEntryAtTime(events: TraceEngine.Types.TraceEvents.TraceEventData[]|null, time: number): void;\n  highlightEvent(event: TraceEngine.Types.TraceEvents.TraceEventData|null): void;\n}\n\nexport class StatusPane extends UI.Widget.VBox {\n  private status: HTMLElement;\n  private time: Element|undefined;\n  private progressLabel!: Element;\n  private progressBar!: Element;\n  private readonly description: HTMLElement|undefined;\n  private button: Buttons.Button.Button;\n  private downloadTraceButton: Buttons.Button.Button;\n  private startTime!: number;\n  private timeUpdateTimer?: number;\n  #rawEvents?: TraceEngine.Types.TraceEvents.TraceEventData[];\n\n  constructor(\n      options: {\n        showTimer?: boolean,\n        showProgress?: boolean,\n        description?: string,\n        buttonText?: string,\n        buttonDisabled?: boolean,\n      },\n      buttonCallback: () => (Promise<void>| void)) {\n    super(true);\n\n    this.contentElement.classList.add('timeline-status-dialog');\n\n    const statusLine = this.contentElement.createChild('div', 'status-dialog-line status');\n    statusLine.createChild('div', 'label').textContent = i18nString(UIStrings.status);\n    this.status = statusLine.createChild('div', 'content');\n    UI.ARIAUtils.markAsStatus(this.status);\n\n    if (options.showTimer) {\n      const timeLine = this.contentElement.createChild('div', 'status-dialog-line time');\n      timeLine.createChild('div', 'label').textContent = i18nString(UIStrings.time);\n      this.time = timeLine.createChild('div', 'content');\n    }\n\n    if (options.showProgress) {\n      const progressLine = this.contentElement.createChild('div', 'status-dialog-line progress');\n      this.progressLabel = progressLine.createChild('div', 'label');\n      this.progressBar = progressLine.createChild('div', 'indicator-container').createChild('div', 'indicator');\n      UI.ARIAUtils.markAsProgressBar(this.progressBar);\n    }\n\n    if (typeof options.description === 'string') {\n      const descriptionLine = this.contentElement.createChild('div', 'status-dialog-line description');\n      descriptionLine.createChild('div', 'label').textContent = i18nString(UIStrings.description);\n      this.description = descriptionLine.createChild('div', 'content');\n      this.description.innerText = options.description;\n    }\n\n    const buttonContainer = this.contentElement.createChild('div', 'stop-button');\n    this.downloadTraceButton = UI.UIUtils.createTextButton(i18nString(UIStrings.downloadAfterError), () => {\n      void this.#downloadRawTraceAfterError();\n    }, {jslogContext: 'timeline.download-after-error'});\n\n    this.downloadTraceButton.disabled = true;\n    this.downloadTraceButton.style.visibility = 'hidden';\n\n    const buttonText = options.buttonText || i18nString(UIStrings.stop);\n    this.button = UI.UIUtils.createTextButton(buttonText, buttonCallback, {\n      jslogContext: 'timeline.stop-recording',\n    });\n    // Profiling can't be stopped during initialization.\n    this.button.disabled = !options.buttonDisabled === false;\n\n    buttonContainer.append(this.downloadTraceButton);\n    buttonContainer.append(this.button);\n  }\n\n  finish(): void {\n    this.stopTimer();\n    this.button.disabled = true;\n  }\n\n  async #downloadRawTraceAfterError(): Promise<void> {\n    if (!this.#rawEvents || this.#rawEvents.length === 0) {\n      return;\n    }\n    const traceStart = Platform.DateUtilities.toISO8601Compact(new Date());\n    const fileName = `Trace-Load-Error-${traceStart}.json` as Platform.DevToolsPath.RawPathString;\n    const formattedTraceIter = traceJsonGenerator(this.#rawEvents, {});\n    const traceAsString = Array.from(formattedTraceIter).join('');\n    await Workspace.FileManager.FileManager.instance().save(\n        fileName, traceAsString, true /* forceSaveAs */, false /* isBase64 */);\n    Workspace.FileManager.FileManager.instance().close(fileName);\n  }\n\n  enableDownloadOfEvents(rawEvents: TraceEngine.Types.TraceEvents.TraceEventData[]): void {\n    this.#rawEvents = rawEvents;\n    this.downloadTraceButton.disabled = false;\n    this.downloadTraceButton.style.visibility = 'visible';\n  }\n\n  remove(): void {\n    if (this.element.parentNode) {\n      (this.element.parentNode as HTMLElement).classList.remove('tinted');\n      this.arrangeDialog((this.element.parentNode as HTMLElement));\n    }\n    this.stopTimer();\n    this.element.remove();\n  }\n\n  showPane(parent: Element): void {\n    this.arrangeDialog(parent);\n    this.show(parent);\n    parent.classList.add('tinted');\n  }\n\n  enableAndFocusButton(): void {\n    this.button.disabled = false;\n    this.button.focus();\n  }\n\n  updateStatus(text: string): void {\n    this.status.textContent = text;\n  }\n\n  updateProgressBar(activity: string, percent: number): void {\n    this.progressLabel.textContent = activity;\n    (this.progressBar as HTMLElement).style.width = percent.toFixed(1) + '%';\n    UI.ARIAUtils.setValueNow(this.progressBar, percent);\n    this.updateTimer();\n  }\n\n  startTimer(): void {\n    this.startTime = Date.now();\n    this.timeUpdateTimer = window.setInterval(this.updateTimer.bind(this, false), 1000);\n    this.updateTimer();\n  }\n\n  private stopTimer(): void {\n    if (!this.timeUpdateTimer) {\n      return;\n    }\n    clearInterval(this.timeUpdateTimer);\n    this.updateTimer(true);\n    delete this.timeUpdateTimer;\n  }\n\n  private updateTimer(precise?: boolean): void {\n    this.arrangeDialog((this.element.parentNode as HTMLElement));\n    if (!this.timeUpdateTimer || !this.time) {\n      return;\n    }\n    const elapsed = (Date.now() - this.startTime) / 1000;\n    this.time.textContent = i18nString(UIStrings.ssec, {PH1: elapsed.toFixed(precise ? 1 : 0)});\n  }\n\n  private arrangeDialog(parent: Element): void {\n    const isSmallDialog = parent.clientWidth < 325;\n    this.element.classList.toggle('small-dialog', isSmallDialog);\n    this.contentElement.classList.toggle('small-dialog', isSmallDialog);\n  }\n  override wasShown(): void {\n    super.wasShown();\n    this.registerCSSFiles([timelineStatusDialogStyles]);\n  }\n}\n\nlet loadTimelineHandlerInstance: LoadTimelineHandler;\n\nexport class LoadTimelineHandler implements Common.QueryParamHandler.QueryParamHandler {\n  static instance(opts: {\n    forceNew: boolean|null,\n  } = {forceNew: null}): LoadTimelineHandler {\n    const {forceNew} = opts;\n    if (!loadTimelineHandlerInstance || forceNew) {\n      loadTimelineHandlerInstance = new LoadTimelineHandler();\n    }\n\n    return loadTimelineHandlerInstance;\n  }\n\n  handleQueryParam(value: string): void {\n    void UI.ViewManager.ViewManager.instance().showView('timeline').then(async () => {\n      await TimelinePanel.instance().loadFromURL(window.decodeURIComponent(value) as Platform.DevToolsPath.UrlString);\n    });\n  }\n}\n\nexport class ActionDelegate implements UI.ActionRegistration.ActionDelegate {\n  handleAction(context: UI.Context.Context, actionId: string): boolean {\n    const panel = context.flavor(TimelinePanel);\n    if (panel === null) {\n      return false;\n    }\n    switch (actionId) {\n      case 'timeline.toggle-recording':\n        void panel.toggleRecording();\n        return true;\n      case 'timeline.record-reload':\n        panel.recordReload();\n        return true;\n      case 'timeline.save-to-file':\n        void panel.saveToFile();\n        return true;\n      case 'timeline.load-from-file':\n        panel.selectFileToLoad();\n        return true;\n      case 'timeline.jump-to-previous-frame':\n        panel.jumpToFrame(-1);\n        return true;\n      case 'timeline.jump-to-next-frame':\n        panel.jumpToFrame(1);\n        return true;\n      case 'timeline.show-history':\n        void panel.showHistory();\n        return true;\n      case 'timeline.previous-recording':\n        panel.navigateHistory(1);\n        return true;\n      case 'timeline.next-recording':\n        panel.navigateHistory(-1);\n        return true;\n    }\n    return false;\n  }\n}\n"]}