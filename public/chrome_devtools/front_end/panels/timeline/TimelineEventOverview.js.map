{"version":3,"file":"TimelineEventOverview.js","sourceRoot":"","sources":["../../../../../../front_end/panels/timeline/TimelineEventOverview.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2013 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport * as TraceEngine from '../../models/trace/trace.js';\nimport * as TraceBounds from '../../services/trace_bounds/trace_bounds.js';\nimport * as PerfUI from '../../ui/legacy/components/perf_ui/perf_ui.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport {\n  EventCategory,\n  getCategoryStyles,\n  getEventStyle,\n  getTimelineMainEventCategories,\n  type TimelineCategory,\n} from './EventUICategory.js';\n\nconst UIStrings = {\n  /**\n   *@description Short for Network. Label for the network requests section of the Performance panel.\n   */\n  net: 'NET',\n  /**\n   *@description Text in Timeline Event Overview of the Performance panel\n   */\n  cpu: 'CPU',\n  /**\n   *@description Text in Timeline Event Overview of the Performance panel\n   */\n  heap: 'HEAP',\n  /**\n   *@description Heap size label text content in Timeline Event Overview of the Performance panel\n   *@example {10 MB} PH1\n   *@example {30 MB} PH2\n   */\n  sSDash: '{PH1} – {PH2}',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/TimelineEventOverview.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport abstract class TimelineEventOverview extends PerfUI.TimelineOverviewPane.TimelineOverviewBase {\n  constructor(id: string, title: string|null) {\n    super();\n    this.element.id = 'timeline-overview-' + id;\n    this.element.classList.add('overview-strip');\n    if (title) {\n      this.element.createChild('div', 'timeline-overview-strip-title').textContent = title;\n    }\n  }\n\n  renderBar(begin: number, end: number, position: number, height: number, color: string): void {\n    const x = begin;\n    const width = end - begin;\n    const ctx = this.context();\n    ctx.fillStyle = color;\n    ctx.fillRect(x, position, width, height);\n  }\n}\n\nconst HIGH_NETWORK_PRIORITIES = new Set<Protocol.Network.ResourcePriority>([\n  Protocol.Network.ResourcePriority.VeryHigh,\n  Protocol.Network.ResourcePriority.High,\n  Protocol.Network.ResourcePriority.Medium,\n]);\n\nexport class TimelineEventOverviewNetwork extends TimelineEventOverview {\n  #traceParsedData: TraceEngine.Handlers.Types.TraceParseData;\n  constructor(traceParsedData: TraceEngine.Handlers.Types.TraceParseData) {\n    super('network', i18nString(UIStrings.net));\n    this.#traceParsedData = traceParsedData;\n  }\n\n  override update(start?: TraceEngine.Types.Timing.MilliSeconds, end?: TraceEngine.Types.Timing.MilliSeconds): void {\n    this.resetCanvas();\n    this.#renderWithTraceParsedData(start, end);\n  }\n\n  #renderWithTraceParsedData(\n      start?: TraceEngine.Types.Timing.MilliSeconds, end?: TraceEngine.Types.Timing.MilliSeconds): void {\n    if (!this.#traceParsedData) {\n      return;\n    }\n\n    // Because the UI is in milliseconds, we work with milliseconds through\n    // this function to get the right scale and sizing\n    const traceBoundsMilli = (start && end) ?\n        {\n          min: start,\n          max: end,\n          range: end - start,\n        } :\n        TraceEngine.Helpers.Timing.traceWindowMilliSeconds(this.#traceParsedData.Meta.traceBounds);\n\n    // We draw two paths, so each can take up half the height\n    const pathHeight = this.height() / 2;\n\n    const canvasWidth = this.width();\n    const scale = canvasWidth / traceBoundsMilli.range;\n\n    // We draw network requests in two chunks:\n    // Requests with a priority of Medium or higher go onto the first path\n    // Other requests go onto the second path.\n    const highPath = new Path2D();\n    const lowPath = new Path2D();\n\n    for (const request of this.#traceParsedData.NetworkRequests.byTime) {\n      const path = HIGH_NETWORK_PRIORITIES.has(request.args.data.priority) ? highPath : lowPath;\n      const {startTime, endTime} = TraceEngine.Helpers.Timing.eventTimingsMilliSeconds(request);\n      const rectStart = Math.max(Math.floor((startTime - traceBoundsMilli.min) * scale), 0);\n      const rectEnd = Math.min(Math.ceil((endTime - traceBoundsMilli.min) * scale + 1), canvasWidth);\n\n      path.rect(rectStart, 0, rectEnd - rectStart, pathHeight - 1);\n    }\n\n    const ctx = this.context();\n    ctx.save();\n    // Draw the high path onto the canvas.\n    ctx.fillStyle = 'hsl(214, 60%, 60%)';\n    ctx.fill(highPath);\n    // Now jump down by the height of the high path, and then draw the low path.\n    ctx.translate(0, pathHeight);\n    ctx.fillStyle = 'hsl(214, 80%, 80%)';\n    ctx.fill(lowPath);\n    ctx.restore();\n  }\n}\n\nconst categoryToIndex = new WeakMap<TimelineCategory, number>();\n\nexport class TimelineEventOverviewCPUActivity extends TimelineEventOverview {\n  private backgroundCanvas: HTMLCanvasElement;\n  #traceParsedData: TraceEngine.Handlers.Types.TraceParseData;\n  #drawn = false;\n  #start: TraceEngine.Types.Timing.MilliSeconds;\n  #end: TraceEngine.Types.Timing.MilliSeconds;\n\n  constructor(traceParsedData: TraceEngine.Handlers.Types.TraceParseData) {\n    // During the sync tracks migration this component can use either legacy\n    // Performance Model data or the new engine's data. Once the migration is\n    // complete this will be updated to only use the new engine and mentions of\n    // the PerformanceModel will be removed.\n    super('cpu-activity', i18nString(UIStrings.cpu));\n    this.#traceParsedData = traceParsedData;\n    this.backgroundCanvas = (this.element.createChild('canvas', 'fill background') as HTMLCanvasElement);\n    this.#start = TraceEngine.Helpers.Timing.traceWindowMilliSeconds(traceParsedData.Meta.traceBounds).min;\n    this.#end = TraceEngine.Helpers.Timing.traceWindowMilliSeconds(traceParsedData.Meta.traceBounds).max;\n  }\n\n  #entryCategory(entry: TraceEngine.Types.TraceEvents.TraceEventData): EventCategory|undefined {\n    // Special case: in CPU Profiles we get a lot of ProfileCalls that\n    // represent Idle time. We typically represent ProfileCalls in the\n    // Scripting Category, but if they represent idle time, we do not want\n    // that.\n    if (TraceEngine.Types.TraceEvents.isProfileCall(entry) && entry.callFrame.functionName === '(idle)') {\n      return EventCategory.IDLE;\n    }\n    const eventStyle = getEventStyle(entry.name as TraceEngine.Types.TraceEvents.KnownEventName)?.category ||\n        getCategoryStyles().other;\n    const categoryName = eventStyle.name;\n    return categoryName;\n  }\n\n  override resetCanvas(): void {\n    super.resetCanvas();\n    this.#drawn = false;\n    this.backgroundCanvas.width = this.element.clientWidth * window.devicePixelRatio;\n    this.backgroundCanvas.height = this.element.clientHeight * window.devicePixelRatio;\n  }\n\n  #draw(traceParsedData: TraceEngine.Handlers.Types.TraceParseData): void {\n    const quantSizePx = 4 * window.devicePixelRatio;\n    const width = this.width();\n    const height = this.height();\n    const baseLine = height;\n    const timeRange = this.#end - this.#start;\n    const scale = width / timeRange;\n    const quantTime = quantSizePx / scale;\n    const categories = getCategoryStyles();\n    const categoryOrder = getTimelineMainEventCategories();\n    const otherIndex = categoryOrder.indexOf(EventCategory.OTHER);\n    const idleIndex = 0;\n    console.assert(idleIndex === categoryOrder.indexOf(EventCategory.IDLE));\n    for (let i = 0; i < categoryOrder.length; ++i) {\n      categoryToIndex.set(categories[categoryOrder[i]], i);\n    }\n\n    const drawThreadEntries =\n        (context: CanvasRenderingContext2D, threadData: TraceEngine.Handlers.Threads.ThreadData): void => {\n          const quantizer = new Quantizer(this.#start, quantTime, drawSample);\n          let x = 0;\n          const categoryIndexStack: number[] = [];\n          const paths: Path2D[] = [];\n          const lastY: number[] = [];\n          for (let i = 0; i < categoryOrder.length; ++i) {\n            paths[i] = new Path2D();\n            paths[i].moveTo(0, height);\n            lastY[i] = height;\n          }\n\n          function drawSample(counters: number[]): void {\n            let y = baseLine;\n            for (let i = idleIndex + 1; i < categoryOrder.length; ++i) {\n              const h = (counters[i] || 0) / quantTime * height;\n              y -= h;\n              paths[i].bezierCurveTo(x, lastY[i], x, y, x + quantSizePx / 2, y);\n              lastY[i] = y;\n            }\n            x += quantSizePx;\n          }\n\n          const onEntryStart = (entry: TraceEngine.Types.TraceEvents.SyntheticTraceEntry): void => {\n            const category = this.#entryCategory(entry);\n            if (!category || category === 'idle') {\n              // Idle event won't show in CPU activity, so just skip them.\n              return;\n            }\n            const startTimeMilli = TraceEngine.Helpers.Timing.microSecondsToMilliseconds(entry.ts);\n            const index = categoryIndexStack.length ? categoryIndexStack[categoryIndexStack.length - 1] : idleIndex;\n            quantizer.appendInterval(startTimeMilli, index);\n            const categoryIndex = categoryOrder.indexOf(category);\n            categoryIndexStack.push(categoryIndex || otherIndex);\n          };\n\n          function onEntryEnd(entry: TraceEngine.Types.TraceEvents.SyntheticTraceEntry): void {\n            const endTimeMilli = TraceEngine.Helpers.Timing.microSecondsToMilliseconds(entry.ts) +\n                TraceEngine.Helpers.Timing.microSecondsToMilliseconds(\n                    TraceEngine.Types.Timing.MicroSeconds(entry.dur || 0));\n            const lastCategoryIndex = categoryIndexStack.pop();\n            if (endTimeMilli !== undefined && lastCategoryIndex) {\n              quantizer.appendInterval(endTimeMilli, lastCategoryIndex);\n            }\n          }\n          const startMicro = TraceEngine.Helpers.Timing.millisecondsToMicroseconds(this.#start);\n          const endMicro = TraceEngine.Helpers.Timing.millisecondsToMicroseconds(this.#end);\n          const bounds = {\n            min: startMicro,\n            max: endMicro,\n            range: TraceEngine.Types.Timing.MicroSeconds(endMicro - startMicro),\n          };\n\n          // Filter out tiny events - they don't make a visual impact to the\n          // canvas as they are so small, but they do impact the time it takes\n          // to walk the tree and render the events.\n          // However, if the entire range we are showing is 200ms or less, then show all events.\n          const minDuration = TraceEngine.Types.Timing.MicroSeconds(\n              bounds.range > 200_000 ? 16_000 : 0,\n          );\n          TraceEngine.Helpers.TreeHelpers.walkEntireTree(\n              threadData.entryToNode, threadData.tree, onEntryStart, onEntryEnd, bounds, minDuration);\n          quantizer.appendInterval(this.#start + timeRange + quantTime, idleIndex);  // Kick drawing the last bucket.\n          for (let i = categoryOrder.length - 1; i > 0; --i) {\n            paths[i].lineTo(width, height);\n            const computedColorValue = categories[categoryOrder[i]].getComputedColorValue();\n            context.fillStyle = computedColorValue;\n            context.fill(paths[i]);\n            context.strokeStyle = 'white';\n            context.lineWidth = 1;\n            context.stroke(paths[i]);\n          }\n        };\n    const backgroundContext = (this.backgroundCanvas.getContext('2d') as CanvasRenderingContext2D | null);\n    if (!backgroundContext) {\n      throw new Error('Could not find 2d canvas');\n    }\n\n    const threads = TraceEngine.Handlers.Threads.threadsInTrace(traceParsedData);\n    const mainThreadContext = this.context();\n    for (const thread of threads) {\n      // We treat CPU_PROFILE as main thread because in a CPU Profile trace there is only ever one thread.\n      const isMainThread = thread.type === TraceEngine.Handlers.Threads.ThreadType.MAIN_THREAD ||\n          thread.type === TraceEngine.Handlers.Threads.ThreadType.CPU_PROFILE;\n      if (isMainThread) {\n        drawThreadEntries(mainThreadContext, thread);\n      } else {\n        drawThreadEntries(backgroundContext, thread);\n      }\n    }\n\n    function applyPattern(ctx: CanvasRenderingContext2D): void {\n      const step = 4 * window.devicePixelRatio;\n      ctx.save();\n      ctx.lineWidth = step / Math.sqrt(8);\n      for (let x = 0.5; x < width + height; x += step) {\n        ctx.moveTo(x, 0);\n        ctx.lineTo(x - height, height);\n      }\n      ctx.globalCompositeOperation = 'destination-out';\n      ctx.stroke();\n      ctx.restore();\n    }\n\n    applyPattern(backgroundContext);\n  }\n\n  override update(): void {\n    const traceBoundsState = TraceBounds.TraceBounds.BoundsManager.instance().state();\n    const bounds = traceBoundsState?.milli.minimapTraceBounds;\n    if (!bounds) {\n      return;\n    }\n    if (bounds.min === this.#start && bounds.max === this.#end && this.#drawn) {\n      return;\n    }\n    this.#start = bounds.min;\n    this.#end = bounds.max;\n    // Order matters here, resetCanvas will set this.#drawn to false.\n    this.resetCanvas();\n    this.#drawn = true;\n    this.#draw(this.#traceParsedData);\n  }\n}\n\nexport class TimelineEventOverviewResponsiveness extends TimelineEventOverview {\n  #traceParsedData: TraceEngine.Handlers.Types.TraceParseData;\n  constructor(traceParsedData: TraceEngine.Handlers.Types.TraceParseData) {\n    super('responsiveness', null);\n    this.#traceParsedData = traceParsedData;\n  }\n\n  #gatherEventsWithRelevantWarnings(): Set<TraceEngine.Types.TraceEvents.TraceEventData> {\n    const {topLevelRendererIds} = this.#traceParsedData.Meta;\n\n    // All the warnings that we care about regarding responsiveness and want to represent on the overview.\n    const warningsForResponsiveness = new Set<TraceEngine.Handlers.ModelHandlers.Warnings.Warning>([\n      'LONG_TASK',\n      'FORCED_REFLOW',\n      'IDLE_CALLBACK_OVER_TIME',\n    ]);\n\n    const allWarningEvents = new Set<TraceEngine.Types.TraceEvents.TraceEventData>();\n    for (const warning of warningsForResponsiveness) {\n      const eventsForWarning = this.#traceParsedData.Warnings.perWarning.get(warning);\n      if (!eventsForWarning) {\n        continue;\n      }\n\n      for (const event of eventsForWarning) {\n        // Only keep events whose PID is a top level renderer, which means it\n        // was on the main thread. This avoids showing issues from iframes or\n        // other sub-frames in the minimap overview.\n        if (topLevelRendererIds.has(event.pid)) {\n          allWarningEvents.add(event);\n        }\n      }\n    }\n    return allWarningEvents;\n  }\n\n  override update(start?: TraceEngine.Types.Timing.MilliSeconds, end?: TraceEngine.Types.Timing.MilliSeconds): void {\n    this.resetCanvas();\n\n    const height = this.height();\n    const visibleTimeWindow = !(start && end) ? this.#traceParsedData.Meta.traceBounds : {\n      min: TraceEngine.Helpers.Timing.millisecondsToMicroseconds(start),\n      max: TraceEngine.Helpers.Timing.millisecondsToMicroseconds(end),\n      range: TraceEngine.Helpers.Timing.millisecondsToMicroseconds(TraceEngine.Types.Timing.MilliSeconds(end - start)),\n    };\n    const timeSpan = visibleTimeWindow.range;\n    const scale = this.width() / timeSpan;\n    const ctx = this.context();\n    const fillPath = new Path2D();\n    const markersPath = new Path2D();\n\n    const eventsWithWarning = this.#gatherEventsWithRelevantWarnings();\n    for (const event of eventsWithWarning) {\n      paintWarningDecoration(event);\n    }\n\n    ctx.fillStyle = 'hsl(0, 80%, 90%)';\n    ctx.strokeStyle = 'red';\n    ctx.lineWidth = 2 * window.devicePixelRatio;\n    ctx.fill(fillPath);\n    ctx.stroke(markersPath);\n\n    function paintWarningDecoration(event: TraceEngine.Types.TraceEvents.TraceEventData): void {\n      const {startTime, duration} = TraceEngine.Helpers.Timing.eventTimingsMicroSeconds(event);\n      const x = Math.round(scale * (startTime - visibleTimeWindow.min));\n      const width = Math.round(scale * duration);\n      fillPath.rect(x, 0, width, height);\n      markersPath.moveTo(x + width, 0);\n      markersPath.lineTo(x + width, height);\n    }\n  }\n}\n\nexport class TimelineFilmStripOverview extends TimelineEventOverview {\n  private frameToImagePromise: Map<TraceEngine.Extras.FilmStrip.Frame, Promise<HTMLImageElement>>;\n  private lastFrame: TraceEngine.Extras.FilmStrip.Frame|null = null;\n  private lastElement: Element|null;\n  private drawGeneration?: symbol;\n  private emptyImage?: HTMLImageElement;\n  #filmStrip: TraceEngine.Extras.FilmStrip.Data|null = null;\n\n  constructor(filmStrip: TraceEngine.Extras.FilmStrip.Data) {\n    super('filmstrip', null);\n    this.frameToImagePromise = new Map();\n    this.#filmStrip = filmStrip;\n    this.lastFrame = null;\n    this.lastElement = null;\n    this.reset();\n  }\n\n  override update(\n      customStartTime?: TraceEngine.Types.Timing.MilliSeconds,\n      customEndTime?: TraceEngine.Types.Timing.MilliSeconds): void {\n    this.resetCanvas();\n    const frames = this.#filmStrip ? this.#filmStrip.frames : [];\n    if (!frames.length) {\n      return;\n    }\n\n    if (this.height() === 0) {\n      // Height of 0 causes the maths below to get off and generate very large\n      // negative numbers that cause an extremely long loop when attempting to\n      // draw images by frame. Rather than that, let's warn and exist early.\n      console.warn('TimelineFilmStrip could not be drawn as its canvas height is 0');\n      return;\n    }\n\n    const drawGeneration = Symbol('drawGeneration');\n    this.drawGeneration = drawGeneration;\n    void this.imageByFrame(frames[0]).then(image => {\n      if (this.drawGeneration !== drawGeneration) {\n        return;\n      }\n      if (!image || !image.naturalWidth || !image.naturalHeight) {\n        return;\n      }\n      const imageHeight = this.height() - 2 * TimelineFilmStripOverview.Padding;\n      const imageWidth = Math.ceil(imageHeight * image.naturalWidth / image.naturalHeight);\n      const popoverScale = Math.min(200 / image.naturalWidth, 1);\n      this.emptyImage = new Image(image.naturalWidth * popoverScale, image.naturalHeight * popoverScale);\n      this.drawFrames(imageWidth, imageHeight, customStartTime, customEndTime);\n    });\n  }\n\n  private async imageByFrame(frame: TraceEngine.Extras.FilmStrip.Frame): Promise<HTMLImageElement|null> {\n    let imagePromise: Promise<HTMLImageElement|null>|undefined = this.frameToImagePromise.get(frame);\n    if (!imagePromise) {\n      imagePromise = UI.UIUtils.loadImage(frame.screenshotEvent.args.dataUri);\n      this.frameToImagePromise.set(frame, (imagePromise as Promise<HTMLImageElement>));\n    }\n    return imagePromise;\n  }\n\n  private drawFrames(\n      imageWidth: number, imageHeight: number, customStartTime?: TraceEngine.Types.Timing.MilliSeconds,\n      customEndTime?: TraceEngine.Types.Timing.MilliSeconds): void {\n    if (!imageWidth) {\n      return;\n    }\n    if (!this.#filmStrip || this.#filmStrip.frames.length < 1) {\n      return;\n    }\n    const padding = TimelineFilmStripOverview.Padding;\n    const width = this.width();\n\n    const zeroTime = customStartTime ?? TraceEngine.Helpers.Timing.microSecondsToMilliseconds(this.#filmStrip.zeroTime);\n    const spanTime = customEndTime ? customEndTime - zeroTime :\n                                     TraceEngine.Helpers.Timing.microSecondsToMilliseconds(this.#filmStrip.spanTime);\n    const scale = spanTime / width;\n    const context = this.context();\n    const drawGeneration = this.drawGeneration;\n\n    context.beginPath();\n    for (let x = padding; x < width; x += imageWidth + 2 * padding) {\n      const time = TraceEngine.Types.Timing.MilliSeconds(zeroTime + (x + imageWidth / 2) * scale);\n      const timeMicroSeconds = TraceEngine.Helpers.Timing.millisecondsToMicroseconds(time);\n      const frame = TraceEngine.Extras.FilmStrip.frameClosestToTimestamp(this.#filmStrip, timeMicroSeconds);\n      if (!frame) {\n        continue;\n      }\n      context.rect(x - 0.5, 0.5, imageWidth + 1, imageHeight + 1);\n      void this.imageByFrame(frame).then(drawFrameImage.bind(this, x));\n    }\n    context.strokeStyle = '#ddd';\n    context.stroke();\n\n    function drawFrameImage(this: TimelineFilmStripOverview, x: number, image: HTMLImageElement|null): void {\n      // Ignore draws deferred from a previous update call.\n      if (this.drawGeneration !== drawGeneration || !image) {\n        return;\n      }\n      context.drawImage(image, x, 1, imageWidth, imageHeight);\n    }\n  }\n\n  override async overviewInfoPromise(x: number): Promise<Element|null> {\n    if (!this.#filmStrip || this.#filmStrip.frames.length === 0) {\n      return null;\n    }\n\n    const calculator = this.calculator();\n    if (!calculator) {\n      return null;\n    }\n    const timeMilliSeconds = TraceEngine.Types.Timing.MilliSeconds(calculator.positionToTime(x));\n    const timeMicroSeconds = TraceEngine.Helpers.Timing.millisecondsToMicroseconds(timeMilliSeconds);\n    const frame = TraceEngine.Extras.FilmStrip.frameClosestToTimestamp(this.#filmStrip, timeMicroSeconds);\n    if (frame === this.lastFrame) {\n      return this.lastElement;\n    }\n    const imagePromise = frame ? this.imageByFrame(frame) : Promise.resolve(this.emptyImage);\n    const image = await imagePromise;\n    const element = document.createElement('div');\n    element.classList.add('frame');\n    if (image) {\n      element.createChild('div', 'thumbnail').appendChild(image);\n    }\n    this.lastFrame = frame;\n    this.lastElement = element;\n    return element;\n  }\n\n  override reset(): void {\n    this.lastFrame = null;\n    this.lastElement = null;\n    this.frameToImagePromise = new Map();\n  }\n\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  static readonly Padding = 2;\n}\n\nexport class TimelineEventOverviewMemory extends TimelineEventOverview {\n  private heapSizeLabel: HTMLElement;\n  #traceParsedData: TraceEngine.Handlers.Types.TraceParseData;\n\n  constructor(traceParsedData: TraceEngine.Handlers.Types.TraceParseData) {\n    super('memory', i18nString(UIStrings.heap));\n    this.heapSizeLabel = this.element.createChild('div', 'memory-graph-label');\n    this.#traceParsedData = traceParsedData;\n  }\n\n  resetHeapSizeLabels(): void {\n    this.heapSizeLabel.textContent = '';\n  }\n\n  override update(start?: TraceEngine.Types.Timing.MilliSeconds, end?: TraceEngine.Types.Timing.MilliSeconds): void {\n    this.resetCanvas();\n    const ratio = window.devicePixelRatio;\n\n    if (this.#traceParsedData.Memory.updateCountersByProcess.size === 0) {\n      this.resetHeapSizeLabels();\n      return;\n    }\n\n    const mainRendererIds = Array.from(this.#traceParsedData.Meta.topLevelRendererIds);\n    const counterEventsPerTrack =\n        mainRendererIds.map(pid => this.#traceParsedData.Memory.updateCountersByProcess.get(pid) || [])\n            .filter(eventsPerRenderer => eventsPerRenderer.length > 0);\n\n    const lowerOffset = 3 * ratio;\n    let maxUsedHeapSize = 0;\n    let minUsedHeapSize = 100000000000;\n\n    const boundsMs = (start && end) ?\n        {\n          min: start,\n          max: end,\n          range: end - start,\n        } :\n        TraceEngine.Helpers.Timing.traceWindowMilliSeconds(this.#traceParsedData.Meta.traceBounds);\n    const minTime = boundsMs.min;\n    const maxTime = boundsMs.max;\n\n    function calculateMinMaxSizes(event: TraceEngine.Types.TraceEvents.TraceEventUpdateCounters): void {\n      const counters = event.args.data;\n      if (!counters || !counters.jsHeapSizeUsed) {\n        return;\n      }\n      maxUsedHeapSize = Math.max(maxUsedHeapSize, counters.jsHeapSizeUsed);\n      minUsedHeapSize = Math.min(minUsedHeapSize, counters.jsHeapSizeUsed);\n    }\n\n    for (let i = 0; i < counterEventsPerTrack.length; i++) {\n      counterEventsPerTrack[i].forEach(calculateMinMaxSizes);\n    }\n\n    minUsedHeapSize = Math.min(minUsedHeapSize, maxUsedHeapSize);\n\n    const lineWidth = 1;\n    const width = this.width();\n    const height = this.height() - lowerOffset;\n    const xFactor = width / (maxTime - minTime);\n    const yFactor = (height - lineWidth) / Math.max(maxUsedHeapSize - minUsedHeapSize, 1);\n\n    const histogram = new Array(width);\n\n    function buildHistogram(event: TraceEngine.Types.TraceEvents.TraceEventUpdateCounters): void {\n      const counters = event.args.data;\n      if (!counters || !counters.jsHeapSizeUsed) {\n        return;\n      }\n      const {startTime} = TraceEngine.Helpers.Timing.eventTimingsMilliSeconds(event);\n      const x = Math.round((startTime - minTime) * xFactor);\n      const y = Math.round((counters.jsHeapSizeUsed - minUsedHeapSize) * yFactor);\n      histogram[x] = Math.max(histogram[x] || 0, y);\n    }\n    for (let i = 0; i < counterEventsPerTrack.length; i++) {\n      counterEventsPerTrack[i].forEach(buildHistogram);\n    }\n\n    const ctx = this.context();\n    const heightBeyondView = height + lowerOffset + lineWidth;\n\n    ctx.translate(0.5, 0.5);\n    ctx.beginPath();\n    ctx.moveTo(-lineWidth, heightBeyondView);\n    let y = 0;\n    let isFirstPoint = true;\n    let lastX = 0;\n    for (let x = 0; x < histogram.length; x++) {\n      if (typeof histogram[x] === 'undefined') {\n        continue;\n      }\n      if (isFirstPoint) {\n        isFirstPoint = false;\n        y = histogram[x];\n        ctx.lineTo(-lineWidth, height - y);\n      }\n      const nextY = histogram[x];\n      if (Math.abs(nextY - y) > 2 && Math.abs(x - lastX) > 1) {\n        ctx.lineTo(x, height - y);\n      }\n      y = nextY;\n      ctx.lineTo(x, height - y);\n      lastX = x;\n    }\n    ctx.lineTo(width + lineWidth, height - y);\n    ctx.lineTo(width + lineWidth, heightBeyondView);\n    ctx.closePath();\n\n    ctx.fillStyle = 'hsla(220, 90%, 70%, 0.2)';\n    ctx.fill();\n    ctx.lineWidth = lineWidth;\n    ctx.strokeStyle = 'hsl(220, 90%, 70%)';\n    ctx.stroke();\n\n    this.heapSizeLabel.textContent = i18nString(UIStrings.sSDash, {\n      PH1: Platform.NumberUtilities.bytesToString(minUsedHeapSize),\n      PH2: Platform.NumberUtilities.bytesToString(maxUsedHeapSize),\n    });\n  }\n}\n\nexport class Quantizer {\n  private lastTime: number;\n  private quantDuration: number;\n  private readonly callback: (arg0: Array<number>) => void;\n  private counters: number[];\n  private remainder: number;\n  constructor(startTime: number, quantDuration: number, callback: (arg0: Array<number>) => void) {\n    this.lastTime = startTime;\n    this.quantDuration = quantDuration;\n    this.callback = callback;\n    this.counters = [];\n    this.remainder = quantDuration;\n  }\n\n  appendInterval(time: number, group: number): void {\n    let interval = time - this.lastTime;\n    if (interval <= this.remainder) {\n      this.counters[group] = (this.counters[group] || 0) + interval;\n      this.remainder -= interval;\n      this.lastTime = time;\n      return;\n    }\n    this.counters[group] = (this.counters[group] || 0) + this.remainder;\n    this.callback(this.counters);\n    interval -= this.remainder;\n    while (interval >= this.quantDuration) {\n      const counters = [];\n      counters[group] = this.quantDuration;\n      this.callback(counters);\n      interval -= this.quantDuration;\n    }\n    this.counters = [];\n    this.counters[group] = interval;\n    this.lastTime = time;\n    this.remainder = this.quantDuration - interval;\n  }\n}\n"]}