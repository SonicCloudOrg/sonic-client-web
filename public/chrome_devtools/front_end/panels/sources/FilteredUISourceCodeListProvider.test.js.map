{"version":3,"file":"FilteredUISourceCodeListProvider.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/sources/FilteredUISourceCodeListProvider.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as Root from '../../core/root/root.js';\nimport * as Bindings from '../../models/bindings/bindings.js';\nimport * as Workspace from '../../models/workspace/workspace.js';\nimport {describeWithEnvironment} from '../../testing/EnvironmentHelpers.js';\nimport {setUpEnvironment} from '../../testing/OverridesHelpers.js';\n\nimport * as Sources from './sources.js';\n\nconst setUpEnvironmentWithUISourceCode =\n    (url: string, resourceType: Common.ResourceType.ResourceType, project?: Workspace.Workspace.Project) => {\n      const {workspace, debuggerWorkspaceBinding} = setUpEnvironment();\n      Bindings.IgnoreListManager.IgnoreListManager.instance({forceNew: false, debuggerWorkspaceBinding});\n\n      if (!project) {\n        project = {id: () => url, type: () => Workspace.Workspace.projectTypes.Network} as Workspace.Workspace.Project;\n      }\n\n      const uiSourceCode =\n          new Workspace.UISourceCode.UISourceCode(project, url as Platform.DevToolsPath.UrlString, resourceType);\n\n      project.uiSourceCodes = () => [uiSourceCode];\n\n      workspace.addProject(project);\n\n      return {workspace, project, uiSourceCode};\n    };\n\ndescribeWithEnvironment('FilteredUISourceCodeListProvider', () => {\n  before(() => {\n    Root.Runtime.experiments.register(Root.Runtime.ExperimentName.JUST_MY_CODE, '');\n  });\n\n  it('should exclude Fetch requests in the result', () => {\n    const url = 'http://www.example.com/list-fetch.json';\n    const resourceType = Common.ResourceType.resourceTypes.Fetch;\n\n    const {workspace, project} = setUpEnvironmentWithUISourceCode(url, resourceType);\n\n    const filteredUISourceCodeListProvider =\n        new Sources.FilteredUISourceCodeListProvider.FilteredUISourceCodeListProvider('test');\n    filteredUISourceCodeListProvider.attach();\n\n    const result = filteredUISourceCodeListProvider.itemCount();\n\n    workspace.removeProject(project);\n\n    assert.strictEqual(result, 0);\n  });\n\n  it('should exclude XHR requests in the result', () => {\n    const url = 'http://www.example.com/list-xhr.json';\n    const resourceType = Common.ResourceType.resourceTypes.XHR;\n\n    const {workspace, project} = setUpEnvironmentWithUISourceCode(url, resourceType);\n\n    const filteredUISourceCodeListProvider =\n        new Sources.FilteredUISourceCodeListProvider.FilteredUISourceCodeListProvider('test');\n    filteredUISourceCodeListProvider.attach();\n\n    const result = filteredUISourceCodeListProvider.itemCount();\n\n    workspace.removeProject(project);\n\n    assert.strictEqual(result, 0);\n  });\n\n  it('should include Document requests in the result', () => {\n    const url = 'http://www.example.com/index.html';\n    const resourceType = Common.ResourceType.resourceTypes.Document;\n\n    const {workspace, project} = setUpEnvironmentWithUISourceCode(url, resourceType);\n\n    const filteredUISourceCodeListProvider =\n        new Sources.FilteredUISourceCodeListProvider.FilteredUISourceCodeListProvider('test');\n    filteredUISourceCodeListProvider.attach();\n\n    const resultUrl = filteredUISourceCodeListProvider.itemKeyAt(0);\n    const resultCount = filteredUISourceCodeListProvider.itemCount();\n\n    workspace.removeProject(project);\n\n    assert.strictEqual(resultUrl, url);\n    assert.strictEqual(resultCount, 1);\n  });\n\n  it('should exclude ignored script requests in the result', () => {\n    const url = 'http://www.example.com/some-script.js';\n    const resourceType = Common.ResourceType.resourceTypes.Script;\n\n    const {workspace, project, uiSourceCode} = setUpEnvironmentWithUISourceCode(url, resourceType);\n\n    // ignore the uiSourceCode\n    Root.Runtime.experiments.setEnabled(Root.Runtime.ExperimentName.JUST_MY_CODE, true);\n    Bindings.IgnoreListManager.IgnoreListManager.instance().ignoreListUISourceCode(uiSourceCode);\n\n    const filteredUISourceCodeListProvider =\n        new Sources.FilteredUISourceCodeListProvider.FilteredUISourceCodeListProvider('test');\n    filteredUISourceCodeListProvider.attach();\n\n    const result = filteredUISourceCodeListProvider.itemCount();\n\n    workspace.removeProject(project);\n    Root.Runtime.experiments.setEnabled(Root.Runtime.ExperimentName.JUST_MY_CODE, false);\n\n    assert.strictEqual(result, 0);\n  });\n\n  it('should include Image requests in the result', () => {\n    const url = 'http://www.example.com/img.png';\n    const resourceType = Common.ResourceType.resourceTypes.Image;\n\n    const {workspace, project} = setUpEnvironmentWithUISourceCode(url, resourceType);\n\n    const filteredUISourceCodeListProvider =\n        new Sources.FilteredUISourceCodeListProvider.FilteredUISourceCodeListProvider('test');\n    filteredUISourceCodeListProvider.attach();\n\n    const resultUrl = filteredUISourceCodeListProvider.itemKeyAt(0);\n    const resultCount = filteredUISourceCodeListProvider.itemCount();\n\n    workspace.removeProject(project);\n\n    assert.strictEqual(resultCount, 1);\n    assert.strictEqual(resultUrl, url);\n  });\n\n  it('should include Script requests in the result', () => {\n    const url = 'http://www.example.com/some-script.js';\n    const resourceType = Common.ResourceType.resourceTypes.Script;\n\n    const {workspace, project} = setUpEnvironmentWithUISourceCode(url, resourceType);\n\n    const filteredUISourceCodeListProvider =\n        new Sources.FilteredUISourceCodeListProvider.FilteredUISourceCodeListProvider('test');\n    filteredUISourceCodeListProvider.attach();\n\n    const resultUrl = filteredUISourceCodeListProvider.itemKeyAt(0);\n    const resultCount = filteredUISourceCodeListProvider.itemCount();\n\n    workspace.removeProject(project);\n\n    assert.strictEqual(resultCount, 1);\n    assert.strictEqual(resultUrl, url);\n  });\n});\n"]}