{"version":3,"file":"ResourceOriginPlugin.js","sourceRoot":"","sources":["../../../../../../front_end/panels/sources/ResourceOriginPlugin.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2018 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Bindings from '../../models/bindings/bindings.js';\nimport type * as Workspace from '../../models/workspace/workspace.js';\nimport * as Components from '../../ui/legacy/components/utils/utils.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport {Plugin} from './Plugin.js';\n\nconst UIStrings = {\n  /**\n   * @description Text in the bottom toolbar of the Sources panel that lists the source mapped origin scripts.\n   * @example {bundle.min.js} PH1\n   */\n  fromS: '(From {PH1})',\n  /**\n   * @description Tooltip text for links in the bottom toolbar of the Sources panel that point to source mapped scripts.\n   * @example {bundle.min.js} PH1\n   */\n  sourceMappedFromS: '(Source mapped from {PH1})',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/sources/ResourceOriginPlugin.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class ResourceOriginPlugin extends Plugin {\n  static override accepts(uiSourceCode: Workspace.UISourceCode.UISourceCode): boolean {\n    const contentType = uiSourceCode.contentType();\n    return contentType.hasScripts() || contentType.isFromSourceMap();\n  }\n\n  override rightToolbarItems(): UI.Toolbar.ToolbarItem[] {\n    const debuggerWorkspaceBinding = Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.instance();\n\n    // Handle source mapped scripts and stylesheets.\n    if (this.uiSourceCode.contentType().isFromSourceMap()) {\n      const links = [];\n      for (const script of debuggerWorkspaceBinding.scriptsForUISourceCode(this.uiSourceCode)) {\n        const uiSourceCode = debuggerWorkspaceBinding.uiSourceCodeForScript(script);\n        if (!uiSourceCode) {\n          continue;\n        }\n        const url = uiSourceCode.url();\n        const text = Bindings.ResourceUtils.displayNameForURL(url);\n        const title = i18nString(UIStrings.sourceMappedFromS, {PH1: text});\n        links.push(Components.Linkifier.Linkifier.linkifyRevealable(\n            uiSourceCode, text, url, title, undefined, 'original-script-location'));\n      }\n      for (const originURL of Bindings.SASSSourceMapping.SASSSourceMapping.uiSourceOrigin(this.uiSourceCode)) {\n        links.push(Components.Linkifier.Linkifier.linkifyURL(originURL));\n      }\n      if (links.length === 0) {\n        return [];\n      }\n      const element = document.createElement('span');\n      links.forEach((link, index) => {\n        if (index > 0) {\n          element.append(', ');\n        }\n        element.append(link);\n      });\n      return [new UI.Toolbar.ToolbarItem(i18n.i18n.getFormatLocalizedString(str_, UIStrings.fromS, {PH1: element}))];\n    }\n\n    // Handle anonymous scripts with an originStackTrace.\n    for (const script of debuggerWorkspaceBinding.scriptsForUISourceCode(this.uiSourceCode)) {\n      if (script.originStackTrace) {\n        const link = linkifier.linkifyStackTraceTopFrame(script.debuggerModel.target(), script.originStackTrace);\n        return [new UI.Toolbar.ToolbarItem(i18n.i18n.getFormatLocalizedString(str_, UIStrings.fromS, {PH1: link}))];\n      }\n    }\n\n    return [];\n  }\n}\n\nexport const linkifier = new Components.Linkifier.Linkifier();\n"]}