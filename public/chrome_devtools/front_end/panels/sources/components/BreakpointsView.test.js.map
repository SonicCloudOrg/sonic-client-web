{"version":3,"file":"BreakpointsView.test.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/sources/components/BreakpointsView.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../../core/common/common.js';\nimport type * as Platform from '../../../core/platform/platform.js';\nimport * as SDK from '../../../core/sdk/sdk.js';\nimport type * as Protocol from '../../../generated/protocol.js';\nimport * as Bindings from '../../../models/bindings/bindings.js';\nimport * as Breakpoints from '../../../models/breakpoints/breakpoints.js';\nimport * as Workspace from '../../../models/workspace/workspace.js';\nimport {\n  assertElements,\n  dispatchClickEvent,\n  dispatchKeyDownEvent,\n  renderElementIntoDOM,\n} from '../../../testing/DOMHelpers.js';\nimport {\n  createTarget,\n  describeWithEnvironment,\n} from '../../../testing/EnvironmentHelpers.js';\nimport {describeWithMockConnection} from '../../../testing/MockConnection.js';\nimport {describeWithRealConnection} from '../../../testing/RealConnection.js';\nimport {\n  createContentProviderUISourceCode,\n  createFakeScriptMapping,\n  setupMockedUISourceCode,\n} from '../../../testing/UISourceCodeHelpers.js';\nimport * as Coordinator from '../../../ui/components/render_coordinator/render_coordinator.js';\nimport * as UI from '../../../ui/legacy/legacy.js';\n\nimport * as SourcesComponents from './components.js';\n\nconst DETAILS_SELECTOR = 'details';\nconst EXPANDED_GROUPS_SELECTOR = 'details[open]';\nconst COLLAPSED_GROUPS_SELECTOR = 'details:not([open])';\nconst CODE_SNIPPET_SELECTOR = '.code-snippet';\nconst GROUP_NAME_SELECTOR = '.group-header-title';\nconst BREAKPOINT_ITEM_SELECTOR = '.breakpoint-item';\nconst HIT_BREAKPOINT_SELECTOR = BREAKPOINT_ITEM_SELECTOR + '.hit';\nconst BREAKPOINT_LOCATION_SELECTOR = '.location';\nconst REMOVE_FILE_BREAKPOINTS_SELECTOR = '.group-hover-actions > button[data-remove-breakpoint]';\nconst REMOVE_SINGLE_BREAKPOINT_SELECTOR = '.breakpoint-item-location-or-actions > button[data-remove-breakpoint]';\nconst EDIT_SINGLE_BREAKPOINT_SELECTOR = 'button[data-edit-breakpoint]';\nconst PAUSE_ON_UNCAUGHT_EXCEPTIONS_SELECTOR = '.pause-on-uncaught-exceptions';\nconst PAUSE_ON_CAUGHT_EXCEPTIONS_SELECTOR = '.pause-on-caught-exceptions';\nconst TABBABLE_SELECTOR = '[tabindex=\"0\"]';\nconst SUMMARY_SELECTOR = 'summary';\nconst GROUP_DIFFERENTIATOR_SELECTOR = '.group-header-differentiator';\n\nconst HELLO_JS_FILE = 'hello.js';\nconst TEST_JS_FILE = 'test.js';\nconst coordinator = Coordinator.RenderCoordinator.RenderCoordinator.instance();\n\ninterface LocationTestData {\n  url: Platform.DevToolsPath.UrlString;\n  lineNumber: number;\n  columnNumber: number;\n  enabled: boolean;\n  content: string;\n  condition: Breakpoints.BreakpointManager.UserCondition;\n  isLogpoint: boolean;\n  hoverText?: string;\n}\n\nfunction createBreakpointLocations(testData: LocationTestData[]): Breakpoints.BreakpointManager.BreakpointLocation[] {\n  const breakpointLocations = testData.map(data => {\n    const mocked = setupMockedUISourceCode(data.url);\n    const mockedContent = Promise.resolve({content: data.content, isEncoded: true});\n    sinon.stub(mocked.sut, 'requestContent').returns(mockedContent);\n    const uiLocation = new Workspace.UISourceCode.UILocation(mocked.sut, data.lineNumber, data.columnNumber);\n    const breakpoint = sinon.createStubInstance(Breakpoints.BreakpointManager.Breakpoint);\n    breakpoint.enabled.returns(data.enabled);\n    breakpoint.condition.returns(data.condition);\n    breakpoint.isLogpoint.returns(data.isLogpoint);\n    breakpoint.breakpointStorageId.returns(`${data.url}:${data.lineNumber}:${data.columnNumber}`);\n    return new Breakpoints.BreakpointManager.BreakpointLocation(breakpoint, uiLocation);\n  });\n  return breakpointLocations;\n}\n\nfunction createStubBreakpointManagerAndSettings() {\n  const breakpointManager = sinon.createStubInstance(Breakpoints.BreakpointManager.BreakpointManager);\n  breakpointManager.supportsConditionalBreakpoints.returns(true);\n  const dummyStorage = new Common.Settings.SettingsStorage({});\n  const settings = Common.Settings.Settings.instance({\n    forceNew: true,\n    syncedStorage: dummyStorage,\n    globalStorage: dummyStorage,\n    localStorage: dummyStorage,\n  });\n  return {breakpointManager, settings};\n}\n\nfunction createStubBreakpointManagerAndSettingsWithMockdata(testData: LocationTestData[]): {\n  breakpointManager: sinon.SinonStubbedInstance<Breakpoints.BreakpointManager.BreakpointManager>,\n  settings: Common.Settings.Settings,\n} {\n  const {breakpointManager, settings} = createStubBreakpointManagerAndSettings();\n  sinon.stub(Breakpoints.BreakpointManager.BreakpointManager, 'instance').returns(breakpointManager);\n  const breakpointLocations = createBreakpointLocations(testData);\n  breakpointManager.allBreakpointLocations.returns(breakpointLocations);\n  return {breakpointManager, settings};\n}\n\nfunction createLocationTestData(\n    url: string, lineNumber: number, columnNumber: number, enabled: boolean = true, content: string = '',\n    condition: Breakpoints.BreakpointManager.UserCondition = Breakpoints.BreakpointManager.EMPTY_BREAKPOINT_CONDITION,\n    isLogpoint: boolean = false, hoverText?: string): LocationTestData {\n  return {\n    url: url as Platform.DevToolsPath.UrlString,\n    lineNumber,\n    columnNumber,\n    enabled,\n    content,\n    condition,\n    isLogpoint,\n    hoverText,\n  };\n}\n\nasync function setUpTestWithOneBreakpointLocation(\n    params: {file: string, lineNumber: number, columnNumber: number, enabled?: boolean, snippet?: string} = {\n      file: HELLO_JS_FILE,\n      lineNumber: 10,\n      columnNumber: 3,\n      enabled: true,\n      snippet: 'const a;',\n    }) {\n  const testData = [\n    createLocationTestData(params.file, params.lineNumber, params.columnNumber, params.enabled, params.snippet),\n  ];\n  const {breakpointManager, settings} = createStubBreakpointManagerAndSettingsWithMockdata(testData);\n\n  const controller = SourcesComponents.BreakpointsView.BreakpointsSidebarController.instance(\n      {forceNew: true, breakpointManager, settings});\n  const data = await controller.getUpdatedBreakpointViewData();\n\n  assert.lengthOf(data.groups, 1);\n  assert.lengthOf(data.groups[0].breakpointItems, 1);\n  const locations = Breakpoints.BreakpointManager.BreakpointManager.instance().allBreakpointLocations();\n  assert.lengthOf(locations, 1);\n  return {controller, groups: data.groups, location: locations[0]};\n}\n\nclass MockRevealer<T> implements Common.Revealer.Revealer<T> {\n  async reveal(_revealable: T, _omitFocus?: boolean): Promise<void> {\n  }\n}\n\nasync function createAndInitializeBreakpointsView(): Promise<SourcesComponents.BreakpointsView.BreakpointsView> {\n  // Force creation of a new BreakpointsView singleton so that it gets correctly re-wired with\n  // the current controller singleton (to pick up the latest breakpoint state).\n  const component = SourcesComponents.BreakpointsView.BreakpointsView.instance({forceNew: true});\n  await coordinator.done();  // Wait until the initial rendering finishes.\n  renderElementIntoDOM(component);\n  return component;\n}\n\nasync function renderNoBreakpoints(\n    {pauseOnUncaughtExceptions, pauseOnCaughtExceptions, independentPauseToggles}:\n        {pauseOnUncaughtExceptions: boolean, pauseOnCaughtExceptions: boolean, independentPauseToggles: boolean}):\n    Promise<SourcesComponents.BreakpointsView.BreakpointsView> {\n  const component = await createAndInitializeBreakpointsView();\n\n  component.data = {\n    breakpointsActive: true,\n    pauseOnUncaughtExceptions,\n    pauseOnCaughtExceptions,\n    independentPauseToggles,\n    groups: [],\n  };\n  await coordinator.done();\n  return component;\n}\n\nasync function renderSingleBreakpoint(\n    type: SDK.DebuggerModel.BreakpointType = SDK.DebuggerModel.BreakpointType.REGULAR_BREAKPOINT,\n    hoverText?: string): Promise<{\n  component: SourcesComponents.BreakpointsView.BreakpointsView,\n  data: SourcesComponents.BreakpointsView.BreakpointsViewData,\n}> {\n  // Only provide a hover text if it's not a regular breakpoint.\n  assert.isTrue(!hoverText || type !== SDK.DebuggerModel.BreakpointType.REGULAR_BREAKPOINT);\n  const component = await createAndInitializeBreakpointsView();\n\n  const data: SourcesComponents.BreakpointsView.BreakpointsViewData = {\n    breakpointsActive: true,\n    pauseOnUncaughtExceptions: false,\n    pauseOnCaughtExceptions: false,\n    independentPauseToggles: true,\n    groups: [\n      {\n        name: 'test1.js',\n        url: 'https://google.com/test1.js' as Platform.DevToolsPath.UrlString,\n        editable: true,\n        expanded: true,\n        breakpointItems: [\n          {\n            id: '1',\n            location: '1',\n            codeSnippet: 'const a = 0;',\n            isHit: true,\n            status: SourcesComponents.BreakpointsView.BreakpointStatus.ENABLED,\n            type,\n            hoverText,\n          },\n        ],\n      },\n    ],\n  };\n\n  component.data = data;\n  await coordinator.done();\n  return {component, data};\n}\n\nasync function renderMultipleBreakpoints(): Promise<{\n  component: SourcesComponents.BreakpointsView.BreakpointsView,\n  data: SourcesComponents.BreakpointsView.BreakpointsViewData,\n}> {\n  const component = await createAndInitializeBreakpointsView();\n\n  const data: SourcesComponents.BreakpointsView.BreakpointsViewData = {\n    breakpointsActive: true,\n    pauseOnUncaughtExceptions: false,\n    pauseOnCaughtExceptions: false,\n    independentPauseToggles: true,\n    groups: [\n      {\n        name: 'test1.js',\n        url: 'https://google.com/test1.js' as Platform.DevToolsPath.UrlString,\n        editable: true,\n        expanded: true,\n        breakpointItems: [\n          {\n            id: '1',\n            type: SDK.DebuggerModel.BreakpointType.REGULAR_BREAKPOINT,\n            location: '234',\n            codeSnippet: 'const a = x;',\n            isHit: false,\n            status: SourcesComponents.BreakpointsView.BreakpointStatus.ENABLED,\n          },\n          {\n            id: '2',\n            type: SDK.DebuggerModel.BreakpointType.REGULAR_BREAKPOINT,\n            location: '3:3',\n            codeSnippet: 'if (x > a) {',\n            isHit: true,\n            status: SourcesComponents.BreakpointsView.BreakpointStatus.DISABLED,\n          },\n        ],\n      },\n      {\n        name: 'test2.js',\n        url: 'https://google.com/test2.js' as Platform.DevToolsPath.UrlString,\n        editable: false,\n        expanded: true,\n        breakpointItems: [\n          {\n            id: '3',\n            type: SDK.DebuggerModel.BreakpointType.REGULAR_BREAKPOINT,\n            location: '11',\n            codeSnippet: 'const y;',\n            isHit: false,\n            status: SourcesComponents.BreakpointsView.BreakpointStatus.ENABLED,\n          },\n        ],\n      },\n      {\n        name: 'main.js',\n        url: 'https://test.com/main.js' as Platform.DevToolsPath.UrlString,\n        editable: true,\n        expanded: false,\n        breakpointItems: [\n          {\n            id: '4',\n            type: SDK.DebuggerModel.BreakpointType.REGULAR_BREAKPOINT,\n            location: '3',\n            codeSnippet: 'if (a == 0) {',\n            isHit: false,\n            status: SourcesComponents.BreakpointsView.BreakpointStatus.ENABLED,\n          },\n        ],\n      },\n    ],\n  };\n  component.data = data;\n  await coordinator.done();\n  return {component, data};\n}\n\nfunction extractBreakpointItems(data: SourcesComponents.BreakpointsView.BreakpointsViewData):\n    SourcesComponents.BreakpointsView.BreakpointItem[] {\n  const breakpointItems = data.groups.flatMap(group => group.breakpointItems);\n  assert.isAbove(breakpointItems.length, 0);\n  return breakpointItems;\n}\n\nfunction checkCodeSnippet(\n    renderedBreakpointItem: HTMLDivElement, breakpointItem: SourcesComponents.BreakpointsView.BreakpointItem): void {\n  const snippetElement = renderedBreakpointItem.querySelector(CODE_SNIPPET_SELECTOR);\n  assert.instanceOf(snippetElement, HTMLSpanElement);\n  assert.strictEqual(snippetElement.textContent, breakpointItem.codeSnippet);\n}\n\nfunction checkCheckboxState(\n    checkbox: HTMLInputElement, breakpointItem: SourcesComponents.BreakpointsView.BreakpointItem): void {\n  const checked = checkbox.checked;\n  const indeterminate = checkbox.indeterminate;\n  if (breakpointItem.status === SourcesComponents.BreakpointsView.BreakpointStatus.INDETERMINATE) {\n    assert.isTrue(indeterminate);\n  } else {\n    assert.isFalse(indeterminate);\n    assert.strictEqual((breakpointItem.status === SourcesComponents.BreakpointsView.BreakpointStatus.ENABLED), checked);\n  }\n}\n\nfunction checkGroupNames(\n    renderedGroupElements: Element[], breakpointGroups: SourcesComponents.BreakpointsView.BreakpointGroup[]): void {\n  assert.lengthOf(renderedGroupElements, breakpointGroups.length);\n  for (let i = 0; i < renderedGroupElements.length; ++i) {\n    const renderedGroup = renderedGroupElements[i];\n    assert.instanceOf(renderedGroup, HTMLDetailsElement);\n    const titleElement = renderedGroup.querySelector(GROUP_NAME_SELECTOR);\n    assert.instanceOf(titleElement, HTMLSpanElement);\n    assert.strictEqual(titleElement.textContent, breakpointGroups[i].name);\n  }\n}\n\nfunction hover(component: SourcesComponents.BreakpointsView.BreakpointsView, selector: string): Promise<void> {\n  assert.isNotNull(component.shadowRoot);\n  // Dispatch a mouse over.\n  component.shadowRoot.querySelector(selector)?.dispatchEvent(new Event('mouseover'));\n  // Wait until the re-rendering has happened.\n  return coordinator.done();\n}\n\ndescribeWithMockConnection('targetSupportsIndependentPauseOnExceptionToggles', () => {\n  it('can correctly identify node targets as targets that are not supporting independent pause on exception toggles',\n     async () => {\n       const target = createTarget();\n       target.markAsNodeJSForTest();\n       const supportsIndependentPauses = SourcesComponents.BreakpointsView.BreakpointsSidebarController\n                                             .targetSupportsIndependentPauseOnExceptionToggles();\n       assert.isFalse(supportsIndependentPauses);\n     });\n\n  it('can correctly identify non-node targets as targets that are supporting independent pause on exception toggles',\n     async () => {\n       createTarget();\n       const supportsIndependentPauses = SourcesComponents.BreakpointsView.BreakpointsSidebarController\n                                             .targetSupportsIndependentPauseOnExceptionToggles();\n       assert.isTrue(supportsIndependentPauses);\n     });\n});\n\ndescribeWithEnvironment('BreakpointsSidebarController', () => {\n  after(() => {\n    SourcesComponents.BreakpointsView.BreakpointsSidebarController.removeInstance();\n  });\n\n  it('can remove a breakpoint', async () => {\n    const {groups, location} = await setUpTestWithOneBreakpointLocation();\n    const breakpoint = location.breakpoint as sinon.SinonStubbedInstance<Breakpoints.BreakpointManager.Breakpoint>;\n    const breakpointItem = groups[0].breakpointItems[0];\n\n    SourcesComponents.BreakpointsView.BreakpointsSidebarController.instance().breakpointsRemoved([breakpointItem]);\n    assert.isTrue(breakpoint.remove.calledOnceWith(false));\n  });\n\n  it('changes breakpoint state', async () => {\n    const {groups, location} = await setUpTestWithOneBreakpointLocation();\n    const breakpointItem = groups[0].breakpointItems[0];\n    assert.strictEqual(breakpointItem.status, SourcesComponents.BreakpointsView.BreakpointStatus.ENABLED);\n\n    const breakpoint = location.breakpoint as sinon.SinonStubbedInstance<Breakpoints.BreakpointManager.Breakpoint>;\n    SourcesComponents.BreakpointsView.BreakpointsSidebarController.instance().breakpointStateChanged(\n        breakpointItem, false);\n    assert.isTrue(breakpoint.setEnabled.calledWith(false));\n  });\n\n  it('correctly reveals source location', async () => {\n    const {groups, location: {uiLocation}} = await setUpTestWithOneBreakpointLocation();\n    const breakpointItem = groups[0].breakpointItems[0];\n    const revealer = sinon.createStubInstance(MockRevealer<Workspace.UISourceCode.UILocation>);\n\n    Common.Revealer.registerRevealer({\n      contextTypes() {\n        return [Workspace.UISourceCode.UILocation];\n      },\n      destination: Common.Revealer.RevealerDestination.SOURCES_PANEL,\n      async loadRevealer() {\n        return revealer;\n      },\n    });\n\n    await SourcesComponents.BreakpointsView.BreakpointsSidebarController.instance().jumpToSource(breakpointItem);\n    assert.isTrue(revealer.reveal.calledOnceWith(uiLocation));\n  });\n\n  it('correctly reveals breakpoint editor', async () => {\n    const {groups, location} = await setUpTestWithOneBreakpointLocation();\n    const breakpointItem = groups[0].breakpointItems[0];\n    const revealer = sinon.createStubInstance(MockRevealer<Breakpoints.BreakpointManager.BreakpointLocation>);\n\n    Common.Revealer.registerRevealer({\n      contextTypes() {\n        return [Breakpoints.BreakpointManager.BreakpointLocation];\n      },\n      destination: Common.Revealer.RevealerDestination.SOURCES_PANEL,\n      async loadRevealer() {\n        return revealer;\n      },\n    });\n\n    await SourcesComponents.BreakpointsView.BreakpointsSidebarController.instance().breakpointEdited(\n        breakpointItem, false /* editButtonClicked */);\n    assert.isTrue(revealer.reveal.calledOnceWith(location));\n  });\n\n  describe('getUpdatedBreakpointViewData', () => {\n    it('extracts breakpoint data', async () => {\n      const testData = [\n        createLocationTestData(HELLO_JS_FILE, 3, 10),\n        createLocationTestData(TEST_JS_FILE, 1, 1),\n      ];\n\n      const {breakpointManager, settings} = createStubBreakpointManagerAndSettingsWithMockdata(testData);\n      const controller = SourcesComponents.BreakpointsView.BreakpointsSidebarController.instance(\n          {forceNew: true, breakpointManager, settings});\n      const actual = await controller.getUpdatedBreakpointViewData();\n      const createExpectedBreakpointGroups = (testData: LocationTestData) => {\n        const status = testData.enabled ? SourcesComponents.BreakpointsView.BreakpointStatus.ENABLED :\n                                          SourcesComponents.BreakpointsView.BreakpointStatus.DISABLED;\n        let type = SDK.DebuggerModel.BreakpointType.REGULAR_BREAKPOINT;\n\n        if (testData.condition) {\n          if (testData.isLogpoint) {\n            type = SDK.DebuggerModel.BreakpointType.LOGPOINT;\n          } else {\n            type = SDK.DebuggerModel.BreakpointType.CONDITIONAL_BREAKPOINT;\n          }\n        }\n\n        return {\n          name: testData.url as string,\n          url: testData.url,\n          editable: true,\n          expanded: true,\n          breakpointItems: [\n            {\n              id: `${testData.url}:${testData.lineNumber}:${testData.columnNumber}`,\n              location: `${testData.lineNumber + 1}`,\n              codeSnippet: '',\n              isHit: false,\n              status,\n              type,\n              hoverText: testData.hoverText,\n            },\n          ],\n        };\n      };\n      const expected: SourcesComponents.BreakpointsView.BreakpointsViewData = {\n        breakpointsActive: true,\n        pauseOnUncaughtExceptions: false,\n        pauseOnCaughtExceptions: false,\n        independentPauseToggles: true,\n        groups: testData.map(createExpectedBreakpointGroups),\n      };\n      assert.deepEqual(actual, expected);\n    });\n\n    it('respects the breakpointsActive setting', async () => {\n      const {breakpointManager, settings} = createStubBreakpointManagerAndSettingsWithMockdata([]);\n      const controller = SourcesComponents.BreakpointsView.BreakpointsSidebarController.instance(\n          {forceNew: true, breakpointManager, settings});\n      settings.moduleSetting('breakpoints-active').set(true);\n      let data = await controller.getUpdatedBreakpointViewData();\n      assert.strictEqual(data.breakpointsActive, true);\n      settings.moduleSetting('breakpoints-active').set(false);\n      data = await controller.getUpdatedBreakpointViewData();\n      assert.strictEqual(data.breakpointsActive, false);\n    });\n\n    it('marks groups as editable based on conditional breakpoint support', async () => {\n      const testData = [\n        createLocationTestData(HELLO_JS_FILE, 3, 10),\n        createLocationTestData(TEST_JS_FILE, 1, 1),\n      ];\n\n      const {breakpointManager, settings} = createStubBreakpointManagerAndSettingsWithMockdata(testData);\n      const controller = SourcesComponents.BreakpointsView.BreakpointsSidebarController.instance(\n          {forceNew: true, breakpointManager, settings});\n      breakpointManager.supportsConditionalBreakpoints.returns(false);\n      for (const group of (await controller.getUpdatedBreakpointViewData()).groups) {\n        assert.isFalse(group.editable);\n      }\n      breakpointManager.supportsConditionalBreakpoints.returns(true);\n      for (const group of (await controller.getUpdatedBreakpointViewData()).groups) {\n        assert.isTrue(group.editable);\n      }\n    });\n\n    it('groups breakpoints that are in the same file', async () => {\n      const testData = [\n        createLocationTestData(HELLO_JS_FILE, 3, 10),\n        createLocationTestData(TEST_JS_FILE, 1, 1),\n      ];\n\n      const {breakpointManager, settings} = createStubBreakpointManagerAndSettingsWithMockdata(testData);\n      const controller = SourcesComponents.BreakpointsView.BreakpointsSidebarController.instance(\n          {forceNew: true, breakpointManager, settings});\n      const actualViewData = await controller.getUpdatedBreakpointViewData();\n      assert.lengthOf(actualViewData.groups, 2);\n      assert.lengthOf(actualViewData.groups[0].breakpointItems, 1);\n      assert.lengthOf(actualViewData.groups[1].breakpointItems, 1);\n    });\n\n    it('correctly sets the name of the group', async () => {\n      const {groups} = await setUpTestWithOneBreakpointLocation(\n          {file: HELLO_JS_FILE, lineNumber: 0, columnNumber: 0, enabled: false});\n      assert.strictEqual(groups[0].name, HELLO_JS_FILE);\n    });\n\n    it('only extracts the line number as location if one breakpoint is on that line', async () => {\n      const {groups} = await setUpTestWithOneBreakpointLocation(\n          {file: HELLO_JS_FILE, lineNumber: 4, columnNumber: 0, enabled: false});\n      assert.strictEqual(groups[0].breakpointItems[0].location, '5');\n    });\n\n    it('extracts the line number and column number as location if more than one breakpoint is on that line',\n       async () => {\n         const testData = [\n           createLocationTestData(HELLO_JS_FILE, 3, 10),\n           createLocationTestData(HELLO_JS_FILE, 3, 15),\n         ];\n\n         const {breakpointManager, settings} = createStubBreakpointManagerAndSettingsWithMockdata(testData);\n         const controller = SourcesComponents.BreakpointsView.BreakpointsSidebarController.instance(\n             {forceNew: true, breakpointManager, settings});\n         const actualViewData = await controller.getUpdatedBreakpointViewData();\n         assert.lengthOf(actualViewData.groups, 1);\n         assert.lengthOf(actualViewData.groups[0].breakpointItems, 2);\n         assert.strictEqual(actualViewData.groups[0].breakpointItems[0].location, '4:11');\n         assert.strictEqual(actualViewData.groups[0].breakpointItems[1].location, '4:16');\n       });\n\n    it('orders breakpoints within a file by location', async () => {\n      const testData = [\n        createLocationTestData(HELLO_JS_FILE, 3, 15),\n        createLocationTestData(HELLO_JS_FILE, 3, 10),\n      ];\n\n      const {breakpointManager, settings} = createStubBreakpointManagerAndSettingsWithMockdata(testData);\n      const controller = SourcesComponents.BreakpointsView.BreakpointsSidebarController.instance(\n          {forceNew: true, breakpointManager, settings});\n      const actualViewData = await controller.getUpdatedBreakpointViewData();\n      assert.lengthOf(actualViewData.groups, 1);\n      assert.lengthOf(actualViewData.groups[0].breakpointItems, 2);\n      assert.strictEqual(actualViewData.groups[0].breakpointItems[0].location, '4:11');\n      assert.strictEqual(actualViewData.groups[0].breakpointItems[1].location, '4:16');\n    });\n\n    it('orders breakpoints within groups by location', async () => {\n      const testData = [\n        createLocationTestData(TEST_JS_FILE, 3, 15),\n        createLocationTestData(HELLO_JS_FILE, 3, 10),\n      ];\n\n      const {breakpointManager, settings} = createStubBreakpointManagerAndSettingsWithMockdata(testData);\n      const controller = SourcesComponents.BreakpointsView.BreakpointsSidebarController.instance(\n          {forceNew: true, breakpointManager, settings});\n      const actualViewData = await controller.getUpdatedBreakpointViewData();\n      assert.lengthOf(actualViewData.groups, 2);\n      const names = actualViewData.groups.map(group => group.name);\n      assert.deepEqual(names, [HELLO_JS_FILE, TEST_JS_FILE]);\n    });\n\n    it('merges breakpoints mapping to the same location into one', async () => {\n      const testData = [\n        createLocationTestData(TEST_JS_FILE, 3, 15),\n        createLocationTestData(TEST_JS_FILE, 3, 15),\n      ];\n\n      const {breakpointManager, settings} = createStubBreakpointManagerAndSettingsWithMockdata(testData);\n      const controller = SourcesComponents.BreakpointsView.BreakpointsSidebarController.instance(\n          {forceNew: true, breakpointManager, settings});\n      const actualViewData = await controller.getUpdatedBreakpointViewData();\n      assert.lengthOf(actualViewData.groups, 1);\n      assert.lengthOf(actualViewData.groups[0].breakpointItems, 1);\n    });\n\n    it('correctly extracts the enabled state', async () => {\n      const {groups} =\n          await setUpTestWithOneBreakpointLocation({file: '', lineNumber: 0, columnNumber: 0, enabled: true});\n      const breakpointItem = groups[0].breakpointItems[0];\n      assert.strictEqual(breakpointItem.status, SourcesComponents.BreakpointsView.BreakpointStatus.ENABLED);\n    });\n\n    it('correctly extracts the enabled state', async () => {\n      const {groups} =\n          await setUpTestWithOneBreakpointLocation({file: '', lineNumber: 0, columnNumber: 0, enabled: false});\n      const breakpointItem = groups[0].breakpointItems[0];\n      assert.strictEqual(breakpointItem.status, SourcesComponents.BreakpointsView.BreakpointStatus.DISABLED);\n    });\n\n    it('correctly extracts the enabled state', async () => {\n      const testData = [\n        createLocationTestData(TEST_JS_FILE, 3, 15, true /* enabled */),\n        createLocationTestData(TEST_JS_FILE, 3, 15, false /* enabled */),\n      ];\n\n      const {breakpointManager, settings} = createStubBreakpointManagerAndSettingsWithMockdata(testData);\n      const controller = SourcesComponents.BreakpointsView.BreakpointsSidebarController.instance(\n          {forceNew: true, breakpointManager, settings});\n      const actualViewData = await controller.getUpdatedBreakpointViewData();\n      assert.lengthOf(actualViewData.groups, 1);\n      assert.lengthOf(actualViewData.groups[0].breakpointItems, 1);\n      assert.strictEqual(\n          actualViewData.groups[0].breakpointItems[0].status,\n          SourcesComponents.BreakpointsView.BreakpointStatus.INDETERMINATE);\n    });\n\n    it('correctly extracts the disabled state', async () => {\n      const snippet = 'const a = x;';\n      const {groups} =\n          await setUpTestWithOneBreakpointLocation({file: '', lineNumber: 0, columnNumber: 0, enabled: false, snippet});\n      assert.strictEqual(groups[0].breakpointItems[0].codeSnippet, snippet);\n    });\n\n    it('correctly extracts the indeterminate state', async () => {\n      const testData = [\n        createLocationTestData(TEST_JS_FILE, 3, 15, true /* enabled */),\n        createLocationTestData(TEST_JS_FILE, 3, 15, false /* enabled */),\n      ];\n\n      const {breakpointManager, settings} = createStubBreakpointManagerAndSettingsWithMockdata(testData);\n      const controller = SourcesComponents.BreakpointsView.BreakpointsSidebarController.instance(\n          {forceNew: true, breakpointManager, settings});\n      const actualViewData = await controller.getUpdatedBreakpointViewData();\n      assert.lengthOf(actualViewData.groups, 1);\n      assert.lengthOf(actualViewData.groups[0].breakpointItems, 1);\n      assert.strictEqual(\n          actualViewData.groups[0].breakpointItems[0].status,\n          SourcesComponents.BreakpointsView.BreakpointStatus.INDETERMINATE);\n    });\n\n    it('correctly extracts conditional breakpoints', async () => {\n      const condition = 'x < a' as Breakpoints.BreakpointManager.UserCondition;\n      const testData = [\n        createLocationTestData(\n            TEST_JS_FILE, 3, 15, true /* enabled */, '', condition, false /* isLogpoint */, condition),\n      ];\n\n      const {breakpointManager, settings} = createStubBreakpointManagerAndSettingsWithMockdata(testData);\n      const controller = SourcesComponents.BreakpointsView.BreakpointsSidebarController.instance(\n          {forceNew: true, breakpointManager, settings});\n      const actualViewData = await controller.getUpdatedBreakpointViewData();\n      assert.lengthOf(actualViewData.groups, 1);\n      assert.lengthOf(actualViewData.groups[0].breakpointItems, 1);\n      const breakpointItem = actualViewData.groups[0].breakpointItems[0];\n      assert.strictEqual(breakpointItem.type, SDK.DebuggerModel.BreakpointType.CONDITIONAL_BREAKPOINT);\n      assert.strictEqual(breakpointItem.hoverText, condition);\n    });\n\n    it('correctly extracts logpoints', async () => {\n      const logExpression = 'x' as Breakpoints.BreakpointManager.UserCondition;\n      const testData = [\n        createLocationTestData(\n            TEST_JS_FILE, 3, 15, true /* enabled */, '', logExpression, true /* isLogpoint */, logExpression),\n      ];\n\n      const {breakpointManager, settings} = createStubBreakpointManagerAndSettingsWithMockdata(testData);\n      const controller = SourcesComponents.BreakpointsView.BreakpointsSidebarController.instance(\n          {forceNew: true, breakpointManager, settings});\n      const actualViewData = await controller.getUpdatedBreakpointViewData();\n      assert.lengthOf(actualViewData.groups, 1);\n      assert.lengthOf(actualViewData.groups[0].breakpointItems, 1);\n      const breakpointItem = actualViewData.groups[0].breakpointItems[0];\n      assert.strictEqual(breakpointItem.type, SDK.DebuggerModel.BreakpointType.LOGPOINT);\n      assert.strictEqual(breakpointItem.hoverText, logExpression);\n    });\n\n    describe('breakpoint groups', () => {\n      it('are expanded by default', async () => {\n        const {controller} = await setUpTestWithOneBreakpointLocation();\n        const actualViewData = await controller.getUpdatedBreakpointViewData();\n        assert.isTrue(actualViewData.groups[0].expanded);\n      });\n\n      it('are collapsed if user collapses it', async () => {\n        const {controller, groups} = await setUpTestWithOneBreakpointLocation();\n        controller.expandedStateChanged(groups[0].url, false /* expanded */);\n        const actualViewData = await controller.getUpdatedBreakpointViewData();\n        assert.isFalse(actualViewData.groups[0].expanded);\n      });\n\n      it('are expanded if user expands it', async () => {\n        const {controller, groups} = await setUpTestWithOneBreakpointLocation();\n        controller.expandedStateChanged(groups[0].url, true /* expanded */);\n        const actualViewData = await controller.getUpdatedBreakpointViewData();\n        assert.isTrue(actualViewData.groups[0].expanded);\n      });\n\n      it('remember the collapsed state', async () => {\n        {\n          const {controller, groups} = await setUpTestWithOneBreakpointLocation();\n          controller.expandedStateChanged(groups[0].url, false /* expanded */);\n          const actualViewData = await controller.getUpdatedBreakpointViewData();\n          assert.isFalse(actualViewData.groups[0].expanded);\n        }\n\n        // A new controller is created and initialized with the expanded settings.\n        {const breakpointManager = Breakpoints.BreakpointManager.BreakpointManager.instance();\n         const settings = Common.Settings.Settings.instance();\n         const controller = SourcesComponents.BreakpointsView.BreakpointsSidebarController.instance({\n           forceNew: true,\n           breakpointManager,\n           settings,\n         });\n         const actualViewData = await controller.getUpdatedBreakpointViewData();\n         assert.isFalse(actualViewData.groups[0].expanded);}\n      });\n\n      it('remember the expanded state', async () => {\n        {\n          const {controller, groups} = await setUpTestWithOneBreakpointLocation();\n          controller.expandedStateChanged(groups[0].url, true /* expanded */);\n          const actualViewData = await controller.getUpdatedBreakpointViewData();\n          assert.isTrue(actualViewData.groups[0].expanded);\n        }\n        // A new controller is created and initialized with the expanded settings.\n        {\n\n            const controller = SourcesComponents.BreakpointsView.BreakpointsSidebarController.instance({\n              forceNew: true,\n              breakpointManager: Breakpoints.BreakpointManager.BreakpointManager.instance(),\n              settings: Common.Settings.Settings.instance(),\n            });\n            const actualViewData = await controller.getUpdatedBreakpointViewData();\n            assert.isTrue(actualViewData.groups[0].expanded);\n\n        }\n      });\n    });\n  });\n});\n\ndescribeWithRealConnection('BreakpointsSidebarController', () => {\n  const DEFAULT_BREAKPOINT:\n      [Breakpoints.BreakpointManager.UserCondition, boolean, boolean, Breakpoints.BreakpointManager.BreakpointOrigin] =\n          [\n            Breakpoints.BreakpointManager.EMPTY_BREAKPOINT_CONDITION,\n            true,   // enabled\n            false,  // isLogpoint\n            Breakpoints.BreakpointManager.BreakpointOrigin.USER_ACTION,\n          ];\n\n  // Flaky\n  it.skip('[crbug.com/345456307] auto-expands if a user adds a new  breakpoint', async () => {\n    const breakpointManager = Breakpoints.BreakpointManager.BreakpointManager.instance();\n    const settings = Common.Settings.Settings.instance();\n    const {uiSourceCode, project} = createContentProviderUISourceCode(\n        {url: 'test.js' as Platform.DevToolsPath.UrlString, mimeType: 'text/javascript'});\n    const controller = SourcesComponents.BreakpointsView.BreakpointsSidebarController.instance(\n        {forceNew: true, breakpointManager, settings});\n\n    // Add one breakpoint and collapse the tree.\n    const b1 = await breakpointManager.setBreakpoint(uiSourceCode, 0, 0, ...DEFAULT_BREAKPOINT);\n    assert.exists(b1);\n    {\n      controller.expandedStateChanged(uiSourceCode.url(), false /* expanded */);\n      const data = await controller.getUpdatedBreakpointViewData();\n      assert.lengthOf(data.groups, 1);\n      assert.lengthOf(data.groups[0].breakpointItems, 1);\n      assert.isFalse(data.groups[0].expanded);\n    }\n\n    // Add a new breakpoint and check if it's expanded as expected.\n    const b2 = await breakpointManager.setBreakpoint(uiSourceCode, 0, 3, ...DEFAULT_BREAKPOINT);\n    assert.exists(b2);\n    {\n      const data = await controller.getUpdatedBreakpointViewData();\n      assert.lengthOf(data.groups, 1);\n      assert.lengthOf(data.groups[0].breakpointItems, 2);\n      assert.isTrue(data.groups[0].expanded);\n    }\n\n    // Clean up.\n    await b1.remove(false /* keepInStorage */);\n    await b2.remove(false /* keepInStorage */);\n    Workspace.Workspace.WorkspaceImpl.instance().removeProject(project);\n  });\n\n  it('does not auto-expand if a breakpoint was not triggered by user action', async () => {\n    const breakpointManager = Breakpoints.BreakpointManager.BreakpointManager.instance();\n    const settings = Common.Settings.Settings.instance();\n    const {uiSourceCode, project} = createContentProviderUISourceCode(\n        {url: 'test.js' as Platform.DevToolsPath.UrlString, mimeType: 'text/javascript'});\n    const controller = SourcesComponents.BreakpointsView.BreakpointsSidebarController.instance(\n        {forceNew: true, breakpointManager, settings});\n\n    // Add one breakpoint and collapse the tree.\n    const b1 = await breakpointManager.setBreakpoint(uiSourceCode, 0, 0, ...DEFAULT_BREAKPOINT);\n    assert.exists(b1);\n    {\n      controller.expandedStateChanged(uiSourceCode.url(), false /* expanded */);\n      const data = await controller.getUpdatedBreakpointViewData();\n      assert.lengthOf(data.groups, 1);\n      assert.lengthOf(data.groups[0].breakpointItems, 1);\n      assert.isFalse(data.groups[0].expanded);\n    }\n\n    // Add a new non-user triggered breakpoint and check if it's still collapsed.\n    const b2 = await breakpointManager.setBreakpoint(\n        uiSourceCode, 0, 3, Breakpoints.BreakpointManager.EMPTY_BREAKPOINT_CONDITION, true, false,\n        Breakpoints.BreakpointManager.BreakpointOrigin.OTHER);\n    assert.exists(b2);\n    {\n      const data = await controller.getUpdatedBreakpointViewData();\n      assert.lengthOf(data.groups, 1);\n      assert.lengthOf(data.groups[0].breakpointItems, 2);\n      assert.isFalse(data.groups[0].expanded);\n    }\n\n    // Clean up.\n    await b1.remove(false /* keepInStorage */);\n    await b2.remove(false /* keepInStorage */);\n    Workspace.Workspace.WorkspaceImpl.instance().removeProject(project);\n  });\n\n  it('auto-expands if a breakpoint was hit', async () => {\n    const breakpointManager = Breakpoints.BreakpointManager.BreakpointManager.instance();\n\n    // Set up sdk and ui location, and a mapping between them, such that we can identify that\n    // the hit breakpoint is the one we are adding.\n    const scriptId = '0' as Protocol.Runtime.ScriptId;\n\n    const {uiSourceCode, project} = createContentProviderUISourceCode(\n        {url: 'test.js' as Platform.DevToolsPath.UrlString, mimeType: 'text/javascript'});\n    const uiLocation = new Workspace.UISourceCode.UILocation(uiSourceCode, 0, 0);\n\n    const debuggerModel = sinon.createStubInstance(SDK.DebuggerModel.DebuggerModel);\n    const sdkLocation = new SDK.DebuggerModel.Location(debuggerModel, scriptId, 0);\n\n    const mapping = createFakeScriptMapping(debuggerModel, uiSourceCode, 0, scriptId);\n    Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.instance().addSourceMapping(mapping);\n\n    // Add one breakpoint and collapse its group.\n    const b1 = await breakpointManager.setBreakpoint(\n        uiSourceCode, uiLocation.lineNumber, uiLocation.columnNumber, ...DEFAULT_BREAKPOINT);\n    const controller = SourcesComponents.BreakpointsView.BreakpointsSidebarController.instance(\n        {forceNew: true, breakpointManager, settings: Common.Settings.Settings.instance()});\n    assert.exists(b1);\n    controller.expandedStateChanged(uiSourceCode.url(), false /* expanded */);\n\n    // Double check that the group is collapsed.\n    {\n      const data = await controller.getUpdatedBreakpointViewData();\n      assert.isFalse(data.groups[0].expanded);\n    }\n\n    // Simulating a breakpoint hit. Update the DebuggerPausedDetails to contain the info on the hit breakpoint.\n    const callFrame = sinon.createStubInstance(SDK.DebuggerModel.CallFrame);\n    callFrame.location.returns(new SDK.DebuggerModel.Location(debuggerModel, scriptId, sdkLocation.lineNumber));\n    const pausedDetails = sinon.createStubInstance(SDK.DebuggerModel.DebuggerPausedDetails);\n    pausedDetails.callFrames = [callFrame];\n\n    // Instead of setting the flavor, directly call `flavorChanged` on the controller and mock what it's set to.\n    // Setting the flavor would have other listeners listening to it, and would cause undesirable side effects.\n    sinon.stub(UI.Context.Context.instance(), 'flavor')\n        .callsFake(flavorType => flavorType === SDK.DebuggerModel.DebuggerPausedDetails ? pausedDetails : null);\n    controller.flavorChanged(pausedDetails);\n    {\n      const data = await controller.getUpdatedBreakpointViewData();\n      // Assert that the breakpoint is hit and the group is expanded.\n      assert.isTrue(data.groups[0].breakpointItems[0].isHit);\n      assert.isTrue(data.groups[0].expanded);\n    }\n\n    // Clean up.\n    await b1.remove(false /* keepInStorage */);\n    Workspace.Workspace.WorkspaceImpl.instance().removeProject(project);\n    Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.instance().removeSourceMapping(mapping);\n  });\n\n  it('changes pause on exception state', async () => {\n    const {breakpointManager, settings} = createStubBreakpointManagerAndSettings();\n    breakpointManager.allBreakpointLocations.returns([]);\n    const controller = SourcesComponents.BreakpointsView.BreakpointsSidebarController.instance(\n        {forceNew: true, breakpointManager, settings});\n    for (const pauseOnUncaughtExceptions of [true, false]) {\n      for (const pauseOnCaughtExceptions of [true, false]) {\n        controller.setPauseOnUncaughtExceptions(pauseOnUncaughtExceptions);\n        controller.setPauseOnCaughtExceptions(pauseOnCaughtExceptions);\n\n        const data = await controller.getUpdatedBreakpointViewData();\n        assert.strictEqual(data.pauseOnUncaughtExceptions, pauseOnUncaughtExceptions);\n        assert.strictEqual(data.pauseOnCaughtExceptions, pauseOnCaughtExceptions);\n        assert.strictEqual(settings.moduleSetting('pause-on-uncaught-exception').get(), pauseOnUncaughtExceptions);\n        assert.strictEqual(settings.moduleSetting('pause-on-caught-exception').get(), pauseOnCaughtExceptions);\n      }\n    }\n  });\n});\n\ndescribeWithMockConnection('BreakpointsView', () => {\n  beforeEach(() => {\n    const workspace = Workspace.Workspace.WorkspaceImpl.instance();\n    const targetManager = SDK.TargetManager.TargetManager.instance();\n    const resourceMapping = new Bindings.ResourceMapping.ResourceMapping(targetManager, workspace);\n    const debuggerWorkspaceBinding = Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.instance({\n      forceNew: true,\n      resourceMapping,\n      targetManager,\n    });\n    Breakpoints.BreakpointManager.BreakpointManager.instance(\n        {forceNew: true, targetManager, workspace, debuggerWorkspaceBinding});\n  });\n\n  it('correctly expands breakpoint groups', async () => {\n    const {component, data} = await renderMultipleBreakpoints();\n    assert.isNotNull(component.shadowRoot);\n\n    const expandedGroups = data.groups.filter(group => group.expanded);\n    assert.isAbove(expandedGroups.length, 0);\n\n    const renderedExpandedGroups = Array.from(component.shadowRoot.querySelectorAll(EXPANDED_GROUPS_SELECTOR));\n    assert.lengthOf(renderedExpandedGroups, expandedGroups.length);\n\n    checkGroupNames(renderedExpandedGroups, expandedGroups);\n  });\n\n  it('correctly collapses breakpoint groups', async () => {\n    const {component, data} = await renderMultipleBreakpoints();\n    assert.isNotNull(component.shadowRoot);\n\n    const collapsedGroups = data.groups.filter(group => !group.expanded);\n    assert.isAbove(collapsedGroups.length, 0);\n\n    const renderedCollapsedGroups = Array.from(component.shadowRoot.querySelectorAll(COLLAPSED_GROUPS_SELECTOR));\n\n    checkGroupNames(renderedCollapsedGroups, collapsedGroups);\n  });\n\n  it('renders the group names', async () => {\n    const {component, data} = await renderMultipleBreakpoints();\n    assert.isNotNull(component.shadowRoot);\n\n    const renderedGroupNames = component.shadowRoot.querySelectorAll(GROUP_NAME_SELECTOR);\n    assertElements(renderedGroupNames, HTMLSpanElement);\n\n    const expectedNames = data.groups.flatMap(group => group.name);\n    const actualNames = [];\n    for (const renderedGroupName of renderedGroupNames.values()) {\n      actualNames.push(renderedGroupName.textContent);\n    }\n    assert.deepEqual(actualNames, expectedNames);\n  });\n\n  it('renders the breakpoints with their checkboxes', async () => {\n    const {component, data} = await renderMultipleBreakpoints();\n    assert.isNotNull(component.shadowRoot);\n\n    const renderedBreakpointItems = Array.from(component.shadowRoot.querySelectorAll(BREAKPOINT_ITEM_SELECTOR));\n\n    const breakpointItems = extractBreakpointItems(data);\n    assert.lengthOf(renderedBreakpointItems, breakpointItems.length);\n\n    for (let i = 0; i < renderedBreakpointItems.length; ++i) {\n      const renderedItem = renderedBreakpointItems[i];\n      assert.instanceOf(renderedItem, HTMLDivElement);\n\n      const inputElement = renderedItem.querySelector('input');\n      assert.instanceOf(inputElement, HTMLInputElement);\n      checkCheckboxState(inputElement, breakpointItems[i]);\n    }\n  });\n\n  it('renders breakpoints with their code snippet', async () => {\n    const {component, data} = await renderMultipleBreakpoints();\n    assert.isNotNull(component.shadowRoot);\n\n    const renderedBreakpointItems = Array.from(component.shadowRoot.querySelectorAll(BREAKPOINT_ITEM_SELECTOR));\n\n    const breakpointItems = extractBreakpointItems(data);\n    assert.lengthOf(renderedBreakpointItems, breakpointItems.length);\n\n    for (let i = 0; i < renderedBreakpointItems.length; ++i) {\n      const renderedBreakpointItem = renderedBreakpointItems[i];\n      assert.instanceOf(renderedBreakpointItem, HTMLDivElement);\n      checkCodeSnippet(renderedBreakpointItem, breakpointItems[i]);\n    }\n  });\n\n  it('renders breakpoint groups with a differentiator if the file names are not unique', async () => {\n    const component = await createAndInitializeBreakpointsView();\n\n    const groupTemplate = {\n      name: 'index.js',\n      url: '' as Platform.DevToolsPath.UrlString,\n      editable: true,\n      expanded: true,\n      breakpointItems: [\n        {\n          id: '1',\n          type: SDK.DebuggerModel.BreakpointType.REGULAR_BREAKPOINT,\n          location: '234',\n          codeSnippet: 'const a = x;',\n          isHit: false,\n          status: SourcesComponents.BreakpointsView.BreakpointStatus.ENABLED,\n        },\n      ],\n    };\n\n    // Create two groups with the same file name, but different url.\n    const group1 = {...groupTemplate};\n    group1.url = 'https://google.com/lib/index.js' as Platform.DevToolsPath.UrlString;\n\n    const group2 = {...groupTemplate};\n    group2.url = 'https://google.com/src/index.js' as Platform.DevToolsPath.UrlString;\n\n    const data: SourcesComponents.BreakpointsView.BreakpointsViewData = {\n      breakpointsActive: true,\n      pauseOnUncaughtExceptions: false,\n      pauseOnCaughtExceptions: false,\n      independentPauseToggles: true,\n      groups: [\n        group1,\n        group2,\n      ],\n    };\n    component.data = data;\n    await coordinator.done();\n\n    assert.isNotNull(component.shadowRoot);\n    const groupSummaries = Array.from(component.shadowRoot.querySelectorAll(SUMMARY_SELECTOR));\n    const differentiatingPath = groupSummaries.map(group => {\n      const differentiatorElement = group.querySelector(GROUP_DIFFERENTIATOR_SELECTOR);\n      assert.instanceOf(differentiatorElement, HTMLSpanElement);\n      return differentiatorElement.textContent;\n    });\n    assert.deepEqual(differentiatingPath, ['lib/', 'src/']);\n  });\n\n  it('renders breakpoints with a differentiating path', async () => {\n    const {component, data} = await renderMultipleBreakpoints();\n    assert.isNotNull(component.shadowRoot);\n\n    const renderedBreakpointItems = Array.from(component.shadowRoot.querySelectorAll(BREAKPOINT_ITEM_SELECTOR));\n\n    const breakpointItems = extractBreakpointItems(data);\n    assert.lengthOf(renderedBreakpointItems, breakpointItems.length);\n\n    for (let i = 0; i < renderedBreakpointItems.length; ++i) {\n      const renderedBreakpointItem = renderedBreakpointItems[i];\n      assert.instanceOf(renderedBreakpointItem, HTMLDivElement);\n\n      const locationElement = renderedBreakpointItem.querySelector(BREAKPOINT_LOCATION_SELECTOR);\n      assert.instanceOf(locationElement, HTMLSpanElement);\n\n      const actualLocation = locationElement.textContent;\n      const expectedLocation = breakpointItems[i].location;\n\n      assert.strictEqual(actualLocation, expectedLocation);\n    }\n  });\n\n  it('triggers an event on clicking the checkbox of a breakpoint', async () => {\n    const {component, data} = await renderSingleBreakpoint();\n    assert.isNotNull(component.shadowRoot);\n\n    const renderedItem = component.shadowRoot.querySelector(BREAKPOINT_ITEM_SELECTOR);\n    assert.instanceOf(renderedItem, HTMLDivElement);\n\n    const checkbox = renderedItem.querySelector('input');\n    assert.instanceOf(checkbox, HTMLInputElement);\n    const checked = checkbox.checked;\n\n    const controller = SourcesComponents.BreakpointsView.BreakpointsSidebarController.instance();\n    const breakpointStateChanged = sinon.stub(controller, 'breakpointStateChanged');\n    checkbox.click();\n\n    assert.isTrue(breakpointStateChanged.calledOnceWith(data.groups[0].breakpointItems[0], !checked));\n  });\n\n  it('triggers an event on clicking on the snippet text', async () => {\n    const {component, data} = await renderSingleBreakpoint();\n    assert.isNotNull(component.shadowRoot);\n\n    const snippet = component.shadowRoot.querySelector(CODE_SNIPPET_SELECTOR);\n    assert.instanceOf(snippet, HTMLSpanElement);\n\n    const controller = SourcesComponents.BreakpointsView.BreakpointsSidebarController.instance();\n    const jumpToSource = sinon.stub(controller, 'jumpToSource');\n    snippet.click();\n\n    assert.isTrue(jumpToSource.calledOnceWith(data.groups[0].breakpointItems[0]));\n  });\n\n  it('triggers an event on expanding/unexpanding', async () => {\n    const {component, data} = await renderSingleBreakpoint();\n    assert.isNotNull(component.shadowRoot);\n\n    const renderedGroupName = component.shadowRoot.querySelector(GROUP_NAME_SELECTOR);\n    assert.instanceOf(renderedGroupName, HTMLSpanElement);\n\n    const expandedInitialValue = data.groups[0].expanded;\n\n    const controller = SourcesComponents.BreakpointsView.BreakpointsSidebarController.instance();\n    const expandedStateChanged = sinon.stub(controller, 'expandedStateChanged');\n    renderedGroupName.click();\n\n    await new Promise(resolve => setTimeout(resolve, 0));\n    const group = data.groups[0];\n    assert.isTrue(expandedStateChanged.calledOnceWith(group.url, group.expanded));\n    assert.notStrictEqual(group.expanded, expandedInitialValue);\n  });\n\n  it('highlights breakpoint if it is set to be hit', async () => {\n    const {component} = await renderSingleBreakpoint();\n    assert.isNotNull(component.shadowRoot);\n\n    const renderedBreakpointItem = component.shadowRoot.querySelector(HIT_BREAKPOINT_SELECTOR);\n    assert.instanceOf(renderedBreakpointItem, HTMLDivElement);\n  });\n\n  it('triggers an event on removing file breakpoints', async () => {\n    const {component, data} = await renderMultipleBreakpoints();\n    assert.isNotNull(component.shadowRoot);\n\n    await hover(component, SUMMARY_SELECTOR);\n\n    const removeFileBreakpointsButton = component.shadowRoot.querySelector(REMOVE_FILE_BREAKPOINTS_SELECTOR);\n    assert.instanceOf(removeFileBreakpointsButton, HTMLButtonElement);\n\n    const controller = SourcesComponents.BreakpointsView.BreakpointsSidebarController.instance();\n    const breakpointsRemoved = sinon.stub(controller, 'breakpointsRemoved');\n    removeFileBreakpointsButton.click();\n    // await new Promise(resolve => setTimeout(resolve, 0));\n    assert.isTrue(breakpointsRemoved.calledOnceWith(data.groups[0].breakpointItems));\n  });\n\n  it('triggers an event on removing one breakpoint', async () => {\n    const {component, data} = await renderMultipleBreakpoints();\n    assert.isNotNull(component.shadowRoot);\n\n    await hover(component, BREAKPOINT_ITEM_SELECTOR);\n\n    const removeFileBreakpointsButton = component.shadowRoot.querySelector(REMOVE_SINGLE_BREAKPOINT_SELECTOR);\n    assert.instanceOf(removeFileBreakpointsButton, HTMLButtonElement);\n\n    const controller = SourcesComponents.BreakpointsView.BreakpointsSidebarController.instance();\n    const breakpointsRemoved = sinon.stub(controller, 'breakpointsRemoved');\n    removeFileBreakpointsButton.click();\n    // await new Promise(resolve => setTimeout(resolve, 0));\n    assert.isTrue(breakpointsRemoved.calledOnce);\n    assert.deepEqual(breakpointsRemoved.firstCall.firstArg, [data.groups[0].breakpointItems[0]]);\n  });\n\n  it('triggers an event on editing one breakpoint', async () => {\n    const {component, data} = await renderMultipleBreakpoints();\n    assert.isNotNull(component.shadowRoot);\n\n    await hover(component, BREAKPOINT_ITEM_SELECTOR);\n\n    const editBreakpointButton = component.shadowRoot.querySelector(EDIT_SINGLE_BREAKPOINT_SELECTOR);\n    assert.instanceOf(editBreakpointButton, HTMLButtonElement);\n\n    const controller = SourcesComponents.BreakpointsView.BreakpointsSidebarController.instance();\n    const breakpointEdited = sinon.stub(controller, 'breakpointEdited');\n    editBreakpointButton.click();\n    // await new Promise(resolve => setTimeout(resolve, 0));\n    assert.isTrue(breakpointEdited.calledOnceWith(data.groups[0].breakpointItems[0], true));\n  });\n\n  it('shows a tooltip with edit condition on regular breakpoints', async () => {\n    const {component} = await renderSingleBreakpoint(SDK.DebuggerModel.BreakpointType.REGULAR_BREAKPOINT);\n    assert.isNotNull(component.shadowRoot);\n\n    await hover(component, BREAKPOINT_ITEM_SELECTOR);\n\n    const editBreakpointButton = component.shadowRoot.querySelector(EDIT_SINGLE_BREAKPOINT_SELECTOR);\n    assert.instanceOf(editBreakpointButton, HTMLButtonElement);\n\n    assert.strictEqual(editBreakpointButton.title, 'Edit condition');\n  });\n\n  describe('group checkboxes', () => {\n    async function waitForCheckboxToggledEventsWithCheckedUpdate(\n        component: SourcesComponents.BreakpointsView.BreakpointsView, numBreakpointItems: number, checked: boolean) {\n      return new Promise<void>(resolve => {\n        let numCheckboxToggledEvents = 0;\n        const controller = SourcesComponents.BreakpointsView.BreakpointsSidebarController.instance();\n        sinon.stub(controller, 'breakpointStateChanged').callsFake((_, checkedArg) => {\n          assert.strictEqual(checkedArg, checked);\n          ++numCheckboxToggledEvents;\n          if (numCheckboxToggledEvents === numBreakpointItems) {\n            resolve();\n          }\n        });\n      });\n    }\n    it('show a checked group checkbox if at least one breakpoint in that group is enabled', async () => {\n      const {component, data} = await renderMultipleBreakpoints();\n\n      // Make sure that at least one breakpoint is enabled.\n      data.groups[0].breakpointItems[0].status = SourcesComponents.BreakpointsView.BreakpointStatus.ENABLED;\n      component.data = data;\n      await coordinator.done();\n\n      await hover(component, SUMMARY_SELECTOR);\n\n      assert.isNotNull(component.shadowRoot);\n      const firstGroupSummary = component.shadowRoot.querySelector(SUMMARY_SELECTOR);\n      assert.exists(firstGroupSummary);\n      const groupCheckbox = firstGroupSummary.querySelector('input');\n      assert.instanceOf(groupCheckbox, HTMLInputElement);\n\n      assert.isTrue(groupCheckbox.checked);\n    });\n\n    it('show an unchecked group checkbox if no breakpoint in that group is enabled', async () => {\n      const {component, data} = await renderMultipleBreakpoints();\n\n      // Make sure that all breakpoints are disabled.\n      const breakpointItems = data.groups[0].breakpointItems;\n      for (let i = 0; i < breakpointItems.length; ++i) {\n        breakpointItems[i].status = SourcesComponents.BreakpointsView.BreakpointStatus.DISABLED;\n      }\n\n      component.data = data;\n      await coordinator.done();\n\n      await hover(component, SUMMARY_SELECTOR);\n\n      assert.isNotNull(component.shadowRoot);\n      const firstGroupSummary = component.shadowRoot.querySelector(SUMMARY_SELECTOR);\n      assert.exists(firstGroupSummary);\n      const groupCheckbox = firstGroupSummary.querySelector('input');\n      assert.instanceOf(groupCheckbox, HTMLInputElement);\n\n      assert.isFalse(groupCheckbox.checked);\n    });\n\n    it('disable all breakpoints on unchecking', async () => {\n      const {component, data} = await renderMultipleBreakpoints();\n\n      const numBreakpointItems = data.groups[0].breakpointItems.length;\n      assert.isTrue(numBreakpointItems > 1);\n\n      // Make sure that all breakpoints are enabled.\n      for (let i = 0; i < numBreakpointItems; ++i) {\n        data.groups[0].breakpointItems[i].status = SourcesComponents.BreakpointsView.BreakpointStatus.ENABLED;\n      }\n      component.data = data;\n      await coordinator.done();\n\n      await hover(component, SUMMARY_SELECTOR);\n\n      // Uncheck the group checkbox.\n      assert.isNotNull(component.shadowRoot);\n      const firstGroupSummary = component.shadowRoot.querySelector(SUMMARY_SELECTOR);\n      assert.exists(firstGroupSummary);\n      const groupCheckbox = firstGroupSummary.querySelector('input');\n      assert.instanceOf(groupCheckbox, HTMLInputElement);\n\n      // Wait until we receive all events fired that notify us of disabled breakpoints.\n      const waitForEventPromise = waitForCheckboxToggledEventsWithCheckedUpdate(component, numBreakpointItems, false);\n\n      groupCheckbox.click();\n      await waitForEventPromise;\n    });\n\n    it('enable all breakpoints on unchecking', async () => {\n      const {component, data} = await renderMultipleBreakpoints();\n\n      const numBreakpointItems = data.groups[0].breakpointItems.length;\n      assert.isTrue(numBreakpointItems > 1);\n\n      // Make sure that all breakpoints are disabled.\n      for (let i = 0; i < numBreakpointItems; ++i) {\n        data.groups[0].breakpointItems[i].status = SourcesComponents.BreakpointsView.BreakpointStatus.DISABLED;\n      }\n      component.data = data;\n      await coordinator.done();\n\n      await hover(component, SUMMARY_SELECTOR);\n\n      // Uncheck the group checkbox.\n      assert.isNotNull(component.shadowRoot);\n      const firstGroupSummary = component.shadowRoot.querySelector(SUMMARY_SELECTOR);\n      assert.exists(firstGroupSummary);\n      const groupCheckbox = firstGroupSummary.querySelector('input');\n      assert.instanceOf(groupCheckbox, HTMLInputElement);\n\n      // Wait until we receive all events fired that notify us of enabled breakpoints.\n      const waitForEventPromise = waitForCheckboxToggledEventsWithCheckedUpdate(component, numBreakpointItems, true);\n\n      groupCheckbox.click();\n      await waitForEventPromise;\n    });\n  });\n\n  it('only renders edit button for breakpoints in editable groups', async () => {\n    const component = await createAndInitializeBreakpointsView();\n\n    const data: SourcesComponents.BreakpointsView.BreakpointsViewData = {\n      breakpointsActive: true,\n      pauseOnUncaughtExceptions: false,\n      pauseOnCaughtExceptions: false,\n      independentPauseToggles: true,\n      groups: [\n        {\n          name: 'test1.js',\n          url: 'https://google.com/test1.js' as Platform.DevToolsPath.UrlString,\n          editable: false,\n          expanded: true,\n          breakpointItems: [\n            {\n              id: '1',\n              location: '1',\n              codeSnippet: 'const a = 0;',\n              isHit: true,\n              status: SourcesComponents.BreakpointsView.BreakpointStatus.ENABLED,\n              type: SDK.DebuggerModel.BreakpointType.REGULAR_BREAKPOINT,\n            },\n          ],\n        },\n      ],\n    };\n\n    component.data = data;\n    await coordinator.done();\n    assert.isNotNull(component.shadowRoot);\n\n    await hover(component, BREAKPOINT_ITEM_SELECTOR);\n\n    const editBreakpointButton = component.shadowRoot.querySelector(EDIT_SINGLE_BREAKPOINT_SELECTOR);\n    assert.isNull(editBreakpointButton);\n  });\n\n  it('initializes data from the controller on construction', async () => {\n    await setUpTestWithOneBreakpointLocation();\n    const component = await createAndInitializeBreakpointsView();\n    const renderedGroupName = component.shadowRoot?.querySelector(GROUP_NAME_SELECTOR);\n    assert.strictEqual(renderedGroupName?.textContent, HELLO_JS_FILE);\n  });\n\n  describe('conditional breakpoints', () => {\n    const breakpointDetails = 'x < a';\n\n    it('are rendered', async () => {\n      const {component} =\n          await renderSingleBreakpoint(SDK.DebuggerModel.BreakpointType.CONDITIONAL_BREAKPOINT, breakpointDetails);\n      const breakpointItem = component.shadowRoot?.querySelector(BREAKPOINT_ITEM_SELECTOR);\n      assert.exists(breakpointItem);\n      assert.instanceOf(breakpointItem, HTMLDivElement);\n      assert.isTrue(breakpointItem.classList.contains('conditional-breakpoint'));\n    });\n\n    it('show a tooltip', async () => {\n      const {component} =\n          await renderSingleBreakpoint(SDK.DebuggerModel.BreakpointType.CONDITIONAL_BREAKPOINT, breakpointDetails);\n      const codeSnippet = component.shadowRoot?.querySelector(CODE_SNIPPET_SELECTOR);\n      assert.exists(codeSnippet);\n      assert.instanceOf(codeSnippet, HTMLSpanElement);\n      assert.strictEqual(codeSnippet.title, `Condition: ${breakpointDetails}`);\n    });\n\n    it('show a tooltip on editing the condition', async () => {\n      const {component} =\n          await renderSingleBreakpoint(SDK.DebuggerModel.BreakpointType.CONDITIONAL_BREAKPOINT, breakpointDetails);\n      assert.isNotNull(component.shadowRoot);\n\n      await hover(component, BREAKPOINT_ITEM_SELECTOR);\n\n      const editBreakpointButton = component.shadowRoot.querySelector(EDIT_SINGLE_BREAKPOINT_SELECTOR);\n      assert.instanceOf(editBreakpointButton, HTMLButtonElement);\n\n      assert.strictEqual(editBreakpointButton.title, 'Edit condition');\n    });\n  });\n\n  describe('logpoints', () => {\n    const breakpointDetails = 'x, a';\n\n    it('are rendered', async () => {\n      const {component} = await renderSingleBreakpoint(SDK.DebuggerModel.BreakpointType.LOGPOINT, breakpointDetails);\n      const breakpointItem = component.shadowRoot?.querySelector(BREAKPOINT_ITEM_SELECTOR);\n      assert.exists(breakpointItem);\n      assert.instanceOf(breakpointItem, HTMLDivElement);\n      assert.isTrue(breakpointItem.classList.contains('logpoint'));\n    });\n\n    it('show a tooltip', async () => {\n      const {component} = await renderSingleBreakpoint(SDK.DebuggerModel.BreakpointType.LOGPOINT, breakpointDetails);\n      const codeSnippet = component.shadowRoot?.querySelector(CODE_SNIPPET_SELECTOR);\n      assert.exists(codeSnippet);\n      assert.instanceOf(codeSnippet, HTMLSpanElement);\n      assert.strictEqual(codeSnippet.title, `Logpoint: ${breakpointDetails}`);\n    });\n\n    it('show a tooltip on editing the logpoint', async () => {\n      const {component} = await renderSingleBreakpoint(SDK.DebuggerModel.BreakpointType.LOGPOINT, breakpointDetails);\n      assert.isNotNull(component.shadowRoot);\n\n      await hover(component, BREAKPOINT_ITEM_SELECTOR);\n\n      const editBreakpointButton = component.shadowRoot.querySelector(EDIT_SINGLE_BREAKPOINT_SELECTOR);\n      assert.instanceOf(editBreakpointButton, HTMLButtonElement);\n\n      assert.strictEqual(editBreakpointButton.title, 'Edit logpoint');\n    });\n  });\n\n  describe('pause on exceptions', () => {\n    it('state is rendered correctly when disabled', async () => {\n      const component = await renderNoBreakpoints(\n          {pauseOnUncaughtExceptions: false, pauseOnCaughtExceptions: false, independentPauseToggles: true});\n      assert.isNotNull(component.shadowRoot);\n\n      const pauseOnUncaughtExceptionsItem = component.shadowRoot.querySelector(PAUSE_ON_UNCAUGHT_EXCEPTIONS_SELECTOR);\n      assert.exists(pauseOnUncaughtExceptionsItem);\n\n      const pauseOnUncaughtExceptionsCheckbox = pauseOnUncaughtExceptionsItem.querySelector('input');\n      assert.instanceOf(pauseOnUncaughtExceptionsCheckbox, HTMLInputElement);\n      assert.isFalse(pauseOnUncaughtExceptionsCheckbox.checked);\n\n      const pauseOnCaughtExceptionsItem = component.shadowRoot?.querySelector(PAUSE_ON_CAUGHT_EXCEPTIONS_SELECTOR);\n      assert.exists(pauseOnCaughtExceptionsItem);\n\n      const pauseOnCaughtExceptionsCheckbox = pauseOnUncaughtExceptionsItem.querySelector('input');\n      assert.instanceOf(pauseOnCaughtExceptionsCheckbox, HTMLInputElement);\n      assert.isFalse(pauseOnCaughtExceptionsCheckbox.checked);\n    });\n\n    it('state is rendered correctly when pausing on uncaught exceptions', async () => {\n      const component = await renderNoBreakpoints(\n          {pauseOnUncaughtExceptions: true, pauseOnCaughtExceptions: false, independentPauseToggles: true});\n      assert.isNotNull(component.shadowRoot);\n\n      const pauseOnUncaughtExceptionsItem = component.shadowRoot.querySelector(PAUSE_ON_UNCAUGHT_EXCEPTIONS_SELECTOR);\n      assert.exists(pauseOnUncaughtExceptionsItem);\n\n      const pauseOnUncaughtExceptionsCheckbox = pauseOnUncaughtExceptionsItem.querySelector('input');\n      assert.exists(pauseOnUncaughtExceptionsCheckbox);\n      assert.instanceOf(pauseOnUncaughtExceptionsCheckbox, HTMLInputElement);\n      assert.isTrue(pauseOnUncaughtExceptionsCheckbox.checked);\n\n      const pauseOnCaughtExceptionsItem = component.shadowRoot?.querySelector(PAUSE_ON_CAUGHT_EXCEPTIONS_SELECTOR);\n      assert.exists(pauseOnCaughtExceptionsItem);\n\n      const pauseOnCaughtExceptionsCheckbox = pauseOnCaughtExceptionsItem.querySelector('input');\n      assert.exists(pauseOnCaughtExceptionsCheckbox);\n      assert.instanceOf(pauseOnCaughtExceptionsCheckbox, HTMLInputElement);\n      assert.isFalse(pauseOnCaughtExceptionsCheckbox.checked);\n    });\n\n    it('state is rendered correctly when pausing on all exceptions', async () => {\n      const component = await renderNoBreakpoints(\n          {pauseOnUncaughtExceptions: true, pauseOnCaughtExceptions: true, independentPauseToggles: true});\n      assert.isNotNull(component.shadowRoot);\n\n      const pauseOnUncaughtExceptionsItem = component.shadowRoot.querySelector(PAUSE_ON_UNCAUGHT_EXCEPTIONS_SELECTOR);\n      assert.exists(pauseOnUncaughtExceptionsItem);\n\n      const pauseOnUncaughtExceptionsCheckbox = pauseOnUncaughtExceptionsItem.querySelector('input');\n      assert.exists(pauseOnUncaughtExceptionsCheckbox);\n      assert.instanceOf(pauseOnUncaughtExceptionsCheckbox, HTMLInputElement);\n      assert.isTrue(pauseOnUncaughtExceptionsCheckbox.checked);\n\n      const pauseOnCaughtExceptionsItem = component.shadowRoot?.querySelector(PAUSE_ON_CAUGHT_EXCEPTIONS_SELECTOR);\n      assert.exists(pauseOnCaughtExceptionsItem);\n\n      const pauseOnCaughtExceptionsCheckbox = pauseOnCaughtExceptionsItem.querySelector('input');\n      assert.exists(pauseOnCaughtExceptionsCheckbox);\n      assert.instanceOf(pauseOnCaughtExceptionsCheckbox, HTMLInputElement);\n      assert.isTrue(pauseOnCaughtExceptionsCheckbox.checked);\n    });\n\n    it('state is rendered correctly when toggles are dependent and only pausing on uncaught exceptions', async () => {\n      const component = await renderNoBreakpoints(\n          {pauseOnUncaughtExceptions: true, pauseOnCaughtExceptions: false, independentPauseToggles: false});\n      assert.isNotNull(component.shadowRoot);\n\n      const pauseOnUncaughtExceptionsItem = component.shadowRoot.querySelector(PAUSE_ON_UNCAUGHT_EXCEPTIONS_SELECTOR);\n      assert.exists(pauseOnUncaughtExceptionsItem);\n\n      const pauseOnUncaughtExceptionsCheckbox = pauseOnUncaughtExceptionsItem.querySelector('input');\n      assert.exists(pauseOnUncaughtExceptionsCheckbox);\n      assert.instanceOf(pauseOnUncaughtExceptionsCheckbox, HTMLInputElement);\n      assert.isTrue(pauseOnUncaughtExceptionsCheckbox.checked);\n\n      const pauseOnCaughtExceptionsItem = component.shadowRoot?.querySelector(PAUSE_ON_CAUGHT_EXCEPTIONS_SELECTOR);\n      assert.exists(pauseOnCaughtExceptionsItem);\n\n      const pauseOnCaughtExceptionsCheckbox = pauseOnCaughtExceptionsItem.querySelector('input');\n      assert.instanceOf(pauseOnCaughtExceptionsCheckbox, HTMLInputElement);\n      assert.isFalse(pauseOnCaughtExceptionsCheckbox.disabled);\n    });\n\n    it('state is rendered correctly when toggles are dependent and not pausing on uncaught exceptions', async () => {\n      const component = await renderNoBreakpoints(\n          {pauseOnUncaughtExceptions: false, pauseOnCaughtExceptions: false, independentPauseToggles: false});\n      assert.isNotNull(component.shadowRoot);\n\n      const pauseOnUncaughtExceptionsItem = component.shadowRoot.querySelector(PAUSE_ON_UNCAUGHT_EXCEPTIONS_SELECTOR);\n      assert.exists(pauseOnUncaughtExceptionsItem);\n\n      const pauseOnUncaughtExceptionsCheckbox = pauseOnUncaughtExceptionsItem.querySelector('input');\n      assert.exists(pauseOnUncaughtExceptionsCheckbox);\n      assert.instanceOf(pauseOnUncaughtExceptionsCheckbox, HTMLInputElement);\n      assert.isFalse(pauseOnUncaughtExceptionsCheckbox.checked);\n\n      const pauseOnCaughtExceptionsItem = component.shadowRoot?.querySelector(PAUSE_ON_CAUGHT_EXCEPTIONS_SELECTOR);\n      assert.exists(pauseOnCaughtExceptionsItem);\n\n      const pauseOnCaughtExceptionsCheckbox = pauseOnCaughtExceptionsItem.querySelector('input');\n      assert.instanceOf(pauseOnCaughtExceptionsCheckbox, HTMLInputElement);\n      assert.isTrue(pauseOnCaughtExceptionsCheckbox.disabled);\n    });\n\n    it('state is rendered correctly when toggles are dependent and pausing on uncaught exceptions is unchecked',\n       async () => {\n         const component = await renderNoBreakpoints(\n             {pauseOnUncaughtExceptions: true, pauseOnCaughtExceptions: true, independentPauseToggles: false});\n         assert.isNotNull(component.shadowRoot);\n\n         const pauseOnUncaughtExceptionsItem =\n             component.shadowRoot.querySelector(PAUSE_ON_UNCAUGHT_EXCEPTIONS_SELECTOR);\n         assert.instanceOf(pauseOnUncaughtExceptionsItem, HTMLDivElement);\n\n         {\n           // Click on the pause on exceptions checkbox to uncheck.\n           const pauseOnUncaughtExceptionsCheckbox = pauseOnUncaughtExceptionsItem.querySelector('input');\n           assert.instanceOf(pauseOnUncaughtExceptionsCheckbox, HTMLInputElement);\n           dispatchClickEvent(pauseOnUncaughtExceptionsCheckbox);\n           await coordinator.done();\n         }\n         {\n           // Check that clicking on it actually unchecked.\n           const pauseOnUncaughtExceptionsCheckbox = pauseOnUncaughtExceptionsItem.querySelector('input');\n           assert.instanceOf(pauseOnUncaughtExceptionsCheckbox, HTMLInputElement);\n           assert.isFalse(pauseOnUncaughtExceptionsCheckbox.checked);\n         }\n\n         // Check if the pause on caught exception checkbox is unchecked and disabled as a result.\n         const pauseOnCaughtExceptionsItem = component.shadowRoot?.querySelector(PAUSE_ON_CAUGHT_EXCEPTIONS_SELECTOR);\n         assert.exists(pauseOnCaughtExceptionsItem);\n\n         const pauseOnCaughtExceptionsCheckbox = pauseOnCaughtExceptionsItem.querySelector('input');\n         assert.instanceOf(pauseOnCaughtExceptionsCheckbox, HTMLInputElement);\n         assert.isTrue(pauseOnCaughtExceptionsCheckbox.disabled);\n         assert.isFalse(pauseOnCaughtExceptionsCheckbox.checked);\n       });\n\n    it('triggers an event when disabling pausing on all exceptions', async () => {\n      const component = await renderNoBreakpoints(\n          {pauseOnUncaughtExceptions: true, pauseOnCaughtExceptions: false, independentPauseToggles: true});\n      assert.isNotNull(component.shadowRoot);\n\n      const item = component.shadowRoot.querySelector(PAUSE_ON_UNCAUGHT_EXCEPTIONS_SELECTOR);\n      assert.exists(item);\n\n      const checkbox = item.querySelector('input');\n      assert.instanceOf(checkbox, HTMLInputElement);\n      const {checked} = checkbox;\n\n      const controller = SourcesComponents.BreakpointsView.BreakpointsSidebarController.instance();\n      const setPauseOnUncaughtExceptions = sinon.stub(controller, 'setPauseOnUncaughtExceptions');\n\n      checkbox.click();\n\n      assert.isTrue(setPauseOnUncaughtExceptions.calledOnceWith(!checked));\n    });\n\n    it('triggers an event when enabling pausing on caught exceptions', async () => {\n      const component = await renderNoBreakpoints(\n          {pauseOnUncaughtExceptions: true, pauseOnCaughtExceptions: false, independentPauseToggles: true});\n      assert.isNotNull(component.shadowRoot);\n\n      const item = component.shadowRoot.querySelector(PAUSE_ON_CAUGHT_EXCEPTIONS_SELECTOR);\n      assert.exists(item);\n\n      const checkbox = item.querySelector('input');\n      assert.instanceOf(checkbox, HTMLInputElement);\n      const {checked} = checkbox;\n\n      const controller = SourcesComponents.BreakpointsView.BreakpointsSidebarController.instance();\n      const setPauseOnCaughtExceptions = sinon.stub(controller, 'setPauseOnCaughtExceptions');\n\n      checkbox.click();\n\n      assert.isTrue(setPauseOnCaughtExceptions.calledOnceWith(!checked));\n    });\n\n    it('triggers an event when enabling pausing on uncaught exceptions', async () => {\n      const component = await renderNoBreakpoints(\n          {pauseOnUncaughtExceptions: false, pauseOnCaughtExceptions: true, independentPauseToggles: true});\n      assert.isNotNull(component.shadowRoot);\n\n      const item = component.shadowRoot.querySelector(PAUSE_ON_UNCAUGHT_EXCEPTIONS_SELECTOR);\n      assert.exists(item);\n\n      const checkbox = item.querySelector('input');\n      assert.instanceOf(checkbox, HTMLInputElement);\n      const {checked} = checkbox;\n\n      const controller = SourcesComponents.BreakpointsView.BreakpointsSidebarController.instance();\n      const setPauseOnUncaughtExceptions = sinon.stub(controller, 'setPauseOnUncaughtExceptions');\n\n      checkbox.click();\n\n      assert.isTrue(setPauseOnUncaughtExceptions.calledOnceWith(!checked));\n    });\n  });\n\n  describe('navigating with keyboard', () => {\n    // One expanded group with 2 breakpoints, and one collapsed with 2 breakpoints.\n    async function renderBreakpointsForKeyboardNavigation(): Promise<{\n      component: SourcesComponents.BreakpointsView.BreakpointsView,\n      data: SourcesComponents.BreakpointsView.BreakpointsViewData,\n    }> {\n      const component = await createAndInitializeBreakpointsView();\n\n      const data: SourcesComponents.BreakpointsView.BreakpointsViewData = {\n        breakpointsActive: true,\n        pauseOnUncaughtExceptions: false,\n        pauseOnCaughtExceptions: false,\n        independentPauseToggles: true,\n        groups: [\n          {\n            name: 'test1.js',\n            url: 'https://google.com/test1.js' as Platform.DevToolsPath.UrlString,\n            editable: false,\n            expanded: true,\n            breakpointItems: [\n              {\n                id: '1',\n                type: SDK.DebuggerModel.BreakpointType.REGULAR_BREAKPOINT,\n                location: '234',\n                codeSnippet: 'const a = x;',\n                isHit: false,\n                status: SourcesComponents.BreakpointsView.BreakpointStatus.ENABLED,\n              },\n              {\n                id: '2',\n                type: SDK.DebuggerModel.BreakpointType.REGULAR_BREAKPOINT,\n                location: '3:3',\n                codeSnippet: 'if (x > a) {',\n                isHit: true,\n                status: SourcesComponents.BreakpointsView.BreakpointStatus.DISABLED,\n              },\n            ],\n          },\n          {\n            name: 'test2.js',\n            url: 'https://google.com/test2.js' as Platform.DevToolsPath.UrlString,\n            editable: false,\n            expanded: false,\n            breakpointItems: [\n              {\n                id: '3',\n                type: SDK.DebuggerModel.BreakpointType.REGULAR_BREAKPOINT,\n                location: '11',\n                codeSnippet: 'const y;',\n                isHit: false,\n                status: SourcesComponents.BreakpointsView.BreakpointStatus.ENABLED,\n              },\n              {\n                id: '4',\n                type: SDK.DebuggerModel.BreakpointType.REGULAR_BREAKPOINT,\n                location: '12',\n                codeSnippet: 'const y;',\n                isHit: false,\n                status: SourcesComponents.BreakpointsView.BreakpointStatus.ENABLED,\n              },\n            ],\n          },\n        ],\n      };\n      component.data = data;\n      await coordinator.done();\n      return {component, data};\n    }\n\n    it('pause on exceptions is tabbable', async () => {\n      const component = await renderNoBreakpoints(\n          {pauseOnUncaughtExceptions: true, pauseOnCaughtExceptions: false, independentPauseToggles: true});\n      assert.isNotNull(component.shadowRoot);\n\n      const focusableElements = component.shadowRoot.querySelectorAll(TABBABLE_SELECTOR);\n      assert.lengthOf(focusableElements, 1);\n\n      const pauseOnUncaughtExceptions = component.shadowRoot.querySelector(PAUSE_ON_UNCAUGHT_EXCEPTIONS_SELECTOR);\n      assert.deepEqual(focusableElements[0], pauseOnUncaughtExceptions);\n    });\n\n    describe('pressing the HOME key', () => {\n      it('takes the user to the pause-on-exceptions line', async () => {\n        const {component} = await renderBreakpointsForKeyboardNavigation();\n        assert.isNotNull(component.shadowRoot);\n        const secondGroupsSummary =\n            component.shadowRoot.querySelector(`${DETAILS_SELECTOR}:nth-of-type(2) > ${SUMMARY_SELECTOR}`);\n        assert.instanceOf(secondGroupsSummary, HTMLElement);\n\n        // Focus on second group by clicking on it, then press Home button.\n        dispatchClickEvent(secondGroupsSummary);\n        dispatchKeyDownEvent(secondGroupsSummary, {key: 'Home', bubbles: true});\n        await coordinator.done();\n\n        const selected = component.shadowRoot.querySelector(TABBABLE_SELECTOR);\n        assert.instanceOf(selected, HTMLElement);\n        const pauseOnUncaughtExceptions = component.shadowRoot.querySelector(PAUSE_ON_UNCAUGHT_EXCEPTIONS_SELECTOR);\n        assert.instanceOf(pauseOnUncaughtExceptions, HTMLElement);\n        assert.strictEqual(selected, pauseOnUncaughtExceptions);\n      });\n    });\n\n    describe('pressing the END key', () => {\n      it('takes the user to the summary node of the last group (if last group is collapsed)', async () => {\n        const {component} = await renderBreakpointsForKeyboardNavigation();\n        assert.isNotNull(component.shadowRoot);\n        const pauseOnUncaughtExceptions = component.shadowRoot.querySelector(PAUSE_ON_UNCAUGHT_EXCEPTIONS_SELECTOR);\n        assert.instanceOf(pauseOnUncaughtExceptions, HTMLElement);\n\n        // Focus on the pause-on-exceptions line by clicking on it, then press End key.\n        dispatchClickEvent(pauseOnUncaughtExceptions);\n        dispatchKeyDownEvent(pauseOnUncaughtExceptions, {key: 'End', bubbles: true});\n        await coordinator.done();\n\n        const selected = component.shadowRoot.querySelector(TABBABLE_SELECTOR);\n        assert.instanceOf(selected, HTMLElement);\n\n        const lastGroupSummary =\n            component.shadowRoot.querySelector(`${DETAILS_SELECTOR}:nth-of-type(2) > ${SUMMARY_SELECTOR}`);\n        assert.instanceOf(lastGroupSummary, HTMLElement);\n        assert.strictEqual(selected, lastGroupSummary);\n      });\n\n      it('takes the user to the last breakpoint item (if last group is expanded))', async () => {\n        const {component, data} = await renderBreakpointsForKeyboardNavigation();\n        // Expand the last group.\n        data.groups[1].expanded = true;\n        component.data = data;\n        await coordinator.done();\n\n        assert.isNotNull(component.shadowRoot);\n        const firstGroupSummary = component.shadowRoot.querySelector(SUMMARY_SELECTOR);\n        assert.instanceOf(firstGroupSummary, HTMLElement);\n\n        // First focus on the first group by clicking on it, then press the End button.\n        dispatchClickEvent(firstGroupSummary);\n        dispatchKeyDownEvent(firstGroupSummary, {key: 'End', bubbles: true});\n        await coordinator.done();\n\n        const selected = component.shadowRoot.querySelector(TABBABLE_SELECTOR);\n        assert.instanceOf(selected, HTMLElement);\n\n        const breakpointItems = component.shadowRoot.querySelectorAll(BREAKPOINT_ITEM_SELECTOR);\n        assertElements(breakpointItems, HTMLDivElement);\n\n        const lastBreakpointItem = breakpointItems.item(breakpointItems.length - 1);\n        assert.strictEqual(selected, lastBreakpointItem);\n      });\n    });\n\n    describe('pressing the ArrowDown key', () => {\n      it('on the pause-on-uncaught-exception takes the user to the summary node of the top most details element',\n         async () => {\n           const {component} = await renderBreakpointsForKeyboardNavigation();\n           assert.isNotNull(component.shadowRoot);\n\n           const pauseOnCaughtException = component.shadowRoot.querySelector(PAUSE_ON_CAUGHT_EXCEPTIONS_SELECTOR);\n           assert.instanceOf(pauseOnCaughtException, HTMLElement);\n\n           // Focus on the pause on exception, and navigate one down.\n           dispatchClickEvent(pauseOnCaughtException);\n           dispatchKeyDownEvent(pauseOnCaughtException, {key: 'ArrowDown', bubbles: true});\n           await coordinator.done();\n\n           const selected = component.shadowRoot.querySelector(TABBABLE_SELECTOR);\n           const firstSummary = component.shadowRoot.querySelector(`${DETAILS_SELECTOR} > ${SUMMARY_SELECTOR}`);\n           assert.instanceOf(firstSummary, HTMLElement);\n           assert.strictEqual(selected, firstSummary);\n         });\n\n      it('on the summary node of an expanded group takes the user to the top most breakpoint item of that group',\n         async () => {\n           const {component} = await renderBreakpointsForKeyboardNavigation();\n           assert.isNotNull(component.shadowRoot);\n           const collapsedDetailsElement = component.shadowRoot.querySelector(COLLAPSED_GROUPS_SELECTOR);\n           assert.instanceOf(collapsedDetailsElement, HTMLDetailsElement);\n\n           const collapsedGroupSummary = collapsedDetailsElement.querySelector(SUMMARY_SELECTOR);\n           assert.instanceOf(collapsedGroupSummary, HTMLElement);\n\n           // Focus on the collapsed group and collapse it by clicking on it. Then navigate down.\n           dispatchClickEvent(collapsedGroupSummary);\n           dispatchKeyDownEvent(collapsedGroupSummary, {key: 'ArrowDown', bubbles: true});\n           await coordinator.done();\n\n           const selected = component.shadowRoot.querySelector(TABBABLE_SELECTOR);\n           assert.instanceOf(selected, HTMLElement);\n\n           const firstBreakpointItem = collapsedDetailsElement.querySelector(BREAKPOINT_ITEM_SELECTOR);\n           assert.instanceOf(firstBreakpointItem, HTMLDivElement);\n\n           assert.strictEqual(selected, firstBreakpointItem);\n         });\n\n      it('on the summary node of a collapsed group takes the user to the summary node of the next group', async () => {\n        const {component} = await renderBreakpointsForKeyboardNavigation();\n        assert.isNotNull(component.shadowRoot);\n\n        const firstGroupSummary =\n            component.shadowRoot.querySelector(`${DETAILS_SELECTOR}:nth-of-type(1) > ${SUMMARY_SELECTOR}`);\n        assert.instanceOf(firstGroupSummary, HTMLElement);\n\n        // Focus on the expanded group and collapse it by clicking on it. Then navigate down.\n        dispatchClickEvent(firstGroupSummary);\n        dispatchKeyDownEvent(firstGroupSummary, {key: 'ArrowDown', bubbles: true});\n        await coordinator.done();\n\n        const selected = component.shadowRoot.querySelector(TABBABLE_SELECTOR);\n        assert.instanceOf(selected, HTMLElement);\n\n        const secondGroupSummary =\n            component.shadowRoot.querySelector(`${DETAILS_SELECTOR}:nth-of-type(2) > ${SUMMARY_SELECTOR}`);\n        assert.instanceOf(secondGroupSummary, HTMLElement);\n        assert.strictEqual(selected, secondGroupSummary);\n      });\n\n      it('on a breakpoint item takes the user to the next breakpoint item', async () => {\n        const {component} = await renderBreakpointsForKeyboardNavigation();\n        assert.isNotNull(component.shadowRoot);\n\n        const firstDetailsElement = component.shadowRoot.querySelector('details');\n        assert.instanceOf(firstDetailsElement, HTMLDetailsElement);\n        const firstBreakpointItem = firstDetailsElement.querySelector(BREAKPOINT_ITEM_SELECTOR);\n        assert.instanceOf(firstBreakpointItem, HTMLDivElement);\n\n        // Focus on the first breakpoint item. Then navigate up.\n        dispatchClickEvent(firstBreakpointItem);\n        dispatchKeyDownEvent(firstBreakpointItem, {key: 'ArrowDown', bubbles: true});\n        await coordinator.done();\n\n        const selected = component.shadowRoot.querySelector(TABBABLE_SELECTOR);\n        assert.instanceOf(selected, HTMLElement);\n\n        const secondBreakpointItem = firstDetailsElement.querySelector(`${BREAKPOINT_ITEM_SELECTOR}:nth-of-type(2)`);\n        assert.instanceOf(secondBreakpointItem, HTMLDivElement);\n\n        assert.strictEqual(selected, secondBreakpointItem);\n      });\n    });\n\n    describe('pressing the ArrowUp key', () => {\n      it('on the first summary takes a user to the pause on exceptions', async () => {\n        const {component} = await renderBreakpointsForKeyboardNavigation();\n        assert.isNotNull(component.shadowRoot);\n        const firstSummary = component.shadowRoot.querySelector(`${DETAILS_SELECTOR} > ${SUMMARY_SELECTOR}`);\n        assert.instanceOf(firstSummary, HTMLElement);\n\n        // Focus on the summary element.\n        dispatchClickEvent(firstSummary);\n        dispatchKeyDownEvent(firstSummary, {key: 'ArrowUp', bubbles: true});\n        await coordinator.done();\n\n        const selected = component.shadowRoot.querySelector(TABBABLE_SELECTOR);\n        const pauseOnUncaughtExceptions = component.shadowRoot.querySelector(PAUSE_ON_CAUGHT_EXCEPTIONS_SELECTOR);\n        assert.instanceOf(pauseOnUncaughtExceptions, HTMLDivElement);\n\n        assert.strictEqual(selected, pauseOnUncaughtExceptions);\n      });\n\n      it('on the first breakpoint item in an expanded group takes the user to the summary node', async () => {\n        const {component} = await renderBreakpointsForKeyboardNavigation();\n        assert.isNotNull(component.shadowRoot);\n        const expandedDetails = component.shadowRoot.querySelector(EXPANDED_GROUPS_SELECTOR);\n        assert.instanceOf(expandedDetails, HTMLDetailsElement);\n\n        const firstBreakpointItem = expandedDetails.querySelector(BREAKPOINT_ITEM_SELECTOR);\n        assert.instanceOf(firstBreakpointItem, HTMLDivElement);\n\n        // Focus on first breakpoint item. Then navigate up.\n        dispatchClickEvent(firstBreakpointItem);\n        dispatchKeyDownEvent(firstBreakpointItem, {key: 'ArrowUp', bubbles: true});\n        await coordinator.done();\n\n        const selected = component.shadowRoot.querySelector(TABBABLE_SELECTOR);\n        assert.instanceOf(selected, HTMLElement);\n\n        const summary = expandedDetails.querySelector(SUMMARY_SELECTOR);\n        assert.instanceOf(summary, HTMLElement);\n\n        assert.strictEqual(selected, summary);\n      });\n\n      it('on a breakpoint item in an expanded group takes the user to the previous breakpoint item', async () => {\n        const {component} = await renderBreakpointsForKeyboardNavigation();\n        assert.isNotNull(component.shadowRoot);\n        const expandedDetails = component.shadowRoot.querySelector(EXPANDED_GROUPS_SELECTOR);\n        assert.instanceOf(expandedDetails, HTMLDetailsElement);\n\n        const breakpointItems = expandedDetails.querySelectorAll(BREAKPOINT_ITEM_SELECTOR);\n        assert.isAbove(breakpointItems.length, 1);\n\n        const lastBreakpointItem = breakpointItems.item(breakpointItems.length - 1);\n        // Focus on last breakpoint item. Then navigate up.\n        dispatchClickEvent(lastBreakpointItem);\n        dispatchKeyDownEvent(lastBreakpointItem, {key: 'ArrowUp', bubbles: true});\n        await coordinator.done();\n\n        const selected = component.shadowRoot.querySelector(TABBABLE_SELECTOR);\n        assert.instanceOf(selected, HTMLElement);\n\n        const nextToLastBreakpointItem = breakpointItems.item(breakpointItems.length - 2);\n        assert.instanceOf(nextToLastBreakpointItem, HTMLDivElement);\n        assert.strictEqual(selected, nextToLastBreakpointItem);\n      });\n\n      it('on a summary node takes the user to the last breakpoint item of the previous group', async () => {\n        const {component} = await renderBreakpointsForKeyboardNavigation();\n        assert.isNotNull(component.shadowRoot);\n        const secondGroupSummary =\n            component.shadowRoot.querySelector(`${DETAILS_SELECTOR}:nth-of-type(2) > ${SUMMARY_SELECTOR}`);\n        assert.instanceOf(secondGroupSummary, HTMLElement);\n\n        // Focus on the group. Then navigate up.\n        dispatchClickEvent(secondGroupSummary);\n        dispatchKeyDownEvent(secondGroupSummary, {key: 'ArrowUp', bubbles: true});\n        await coordinator.done();\n\n        const selected = component.shadowRoot.querySelector(TABBABLE_SELECTOR);\n        assert.instanceOf(selected, HTMLElement);\n\n        const firstDetailsElement = component.shadowRoot.querySelector(DETAILS_SELECTOR);\n        assert.exists(firstDetailsElement);\n        const lastBreakpointItem = firstDetailsElement.querySelector(`${BREAKPOINT_ITEM_SELECTOR}:last-child`);\n        assert.instanceOf(lastBreakpointItem, HTMLDivElement);\n\n        assert.strictEqual(selected, lastBreakpointItem);\n      });\n    });\n  });\n});\n"]}