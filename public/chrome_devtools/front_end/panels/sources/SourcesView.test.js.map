{"version":3,"file":"SourcesView.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/sources/SourcesView.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Bindings from '../../models/bindings/bindings.js';\nimport * as Breakpoints from '../../models/breakpoints/breakpoints.js';\nimport * as Persistence from '../../models/persistence/persistence.js';\nimport * as Workspace from '../../models/workspace/workspace.js';\nimport {\n  createTarget,\n  describeWithEnvironment,\n} from '../../testing/EnvironmentHelpers.js';\nimport {describeWithMockConnection} from '../../testing/MockConnection.js';\nimport {\n  createContentProviderUISourceCodes,\n  createFileSystemUISourceCode,\n} from '../../testing/UISourceCodeHelpers.js';\nimport * as SourceFrame from '../../ui/legacy/components/source_frame/source_frame.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport * as SourcesComponents from './components/components.js';\nimport * as Sources from './sources.js';\n\ndescribeWithEnvironment('SourcesView', () => {\n  beforeEach(async () => {\n    const actionRegistryInstance = UI.ActionRegistry.ActionRegistry.instance({forceNew: true});\n    const workspace = Workspace.Workspace.WorkspaceImpl.instance();\n    const targetManager = SDK.TargetManager.TargetManager.instance();\n    const resourceMapping = new Bindings.ResourceMapping.ResourceMapping(targetManager, workspace);\n    const debuggerWorkspaceBinding = Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.instance({\n      forceNew: true,\n      resourceMapping,\n      targetManager,\n    });\n    const breakpointManager = Breakpoints.BreakpointManager.BreakpointManager.instance(\n        {forceNew: true, targetManager, workspace, debuggerWorkspaceBinding});\n    Persistence.Persistence.PersistenceImpl.instance({forceNew: true, workspace, breakpointManager});\n    Persistence.NetworkPersistenceManager.NetworkPersistenceManager.instance({forceNew: true, workspace});\n    UI.ShortcutRegistry.ShortcutRegistry.instance({forceNew: true, actionRegistry: actionRegistryInstance});\n  });\n\n  it('creates new source view of updated type when renamed file requires a different viewer', async () => {\n    const sourcesView = new Sources.SourcesView.SourcesView();\n    sourcesView.markAsRoot();\n    sourcesView.show(document.body);\n    const workspace = Workspace.Workspace.WorkspaceImpl.instance();\n    const {uiSourceCode, project} = createFileSystemUISourceCode({\n      url: 'file:///path/to/overrides/example.html' as Platform.DevToolsPath.UrlString,\n      mimeType: 'text/html',\n    });\n    project.canSetFileContent = () => true;\n    project.rename =\n        (uiSourceCode: Workspace.UISourceCode.UISourceCode, newName: string,\n         callback: (\n             arg0: boolean, arg1?: string, arg2?: Platform.DevToolsPath.UrlString,\n             arg3?: Common.ResourceType.ResourceType) => void) => {\n          const newURL = ('file:///path/to/overrides/' + newName) as Platform.DevToolsPath.UrlString;\n          let newContentType = Common.ResourceType.resourceTypes.Document;\n          if (newName.endsWith('.jpg')) {\n            newContentType = Common.ResourceType.resourceTypes.Image;\n          } else if (newName.endsWith('.woff')) {\n            newContentType = Common.ResourceType.resourceTypes.Font;\n          }\n          callback(true, newName, newURL, newContentType);\n        };\n\n    sourcesView.viewForFile(uiSourceCode);\n\n    assert.isTrue(sourcesView.getSourceView(uiSourceCode) instanceof Sources.UISourceCodeFrame.UISourceCodeFrame);\n\n    // Rename, but contentType stays the same\n    await uiSourceCode.rename('newName.html' as Platform.DevToolsPath.RawPathString);\n    assert.isTrue(sourcesView.getSourceView(uiSourceCode) instanceof Sources.UISourceCodeFrame.UISourceCodeFrame);\n\n    // Rename which changes contentType\n    await uiSourceCode.rename('image.jpg' as Platform.DevToolsPath.RawPathString);\n    assert.isTrue(sourcesView.getSourceView(uiSourceCode) instanceof SourceFrame.ImageView.ImageView);\n\n    // Rename which changes contentType\n    await uiSourceCode.rename('font.woff' as Platform.DevToolsPath.RawPathString);\n    assert.isTrue(sourcesView.getSourceView(uiSourceCode) instanceof SourceFrame.FontView.FontView);\n    workspace.removeProject(project);\n    sourcesView.detach();\n  });\n\n  it('creates a HeadersView when the filename is \\'.headers\\'', async () => {\n    const sourcesView = new Sources.SourcesView.SourcesView();\n    const uiSourceCode = new Workspace.UISourceCode.UISourceCode(\n        {} as Persistence.FileSystemWorkspaceBinding.FileSystem,\n        'file:///path/to/overrides/www.example.com/.headers' as Platform.DevToolsPath.UrlString,\n        Common.ResourceType.resourceTypes.Document);\n    sourcesView.viewForFile(uiSourceCode);\n    assert.isTrue(sourcesView.getSourceView(uiSourceCode) instanceof SourcesComponents.HeadersView.HeadersView);\n  });\n\n  describe('viewForFile', () => {\n    it('records the correct media type in the DevTools.SourcesPanelFileOpened metric', async () => {\n      const sourcesView = new Sources.SourcesView.SourcesView();\n      const {uiSourceCode} = createFileSystemUISourceCode({\n        url: 'file:///path/to/project/example.ts' as Platform.DevToolsPath.UrlString,\n        mimeType: 'text/typescript',\n        content: 'export class Foo {}',\n      });\n      const sourcesPanelFileOpenedSpy = sinon.spy(Host.userMetrics, 'sourcesPanelFileOpened');\n      const contentLoadedPromise = new Promise(res => window.addEventListener('source-file-loaded', res));\n      const widget = sourcesView.viewForFile(uiSourceCode);\n      assert.instanceOf(widget, Sources.UISourceCodeFrame.UISourceCodeFrame);\n      const uiSourceCodeFrame = widget as Sources.UISourceCodeFrame.UISourceCodeFrame;\n\n      // Skip creating the DebuggerPlugin, which times out and simulate DOM attach/showing.\n      sinon.stub(uiSourceCodeFrame, 'loadPlugins' as keyof typeof uiSourceCodeFrame).callsFake(() => {});\n      uiSourceCodeFrame.wasShown();\n\n      await contentLoadedPromise;\n\n      assert.isTrue(sourcesPanelFileOpenedSpy.calledWithExactly('text/typescript'));\n    });\n  });\n});\n\ndescribeWithMockConnection('SourcesView', () => {\n  let target1: SDK.Target.Target;\n  let target2: SDK.Target.Target;\n\n  beforeEach(() => {\n    const actionRegistryInstance = UI.ActionRegistry.ActionRegistry.instance({forceNew: true});\n    UI.ShortcutRegistry.ShortcutRegistry.instance({forceNew: true, actionRegistry: actionRegistryInstance});\n    target1 = createTarget();\n    target2 = createTarget();\n    const targetManager = target1.targetManager();\n    targetManager.setScopeTarget(target1);\n    const workspace = Workspace.Workspace.WorkspaceImpl.instance();\n\n    const resourceMapping = new Bindings.ResourceMapping.ResourceMapping(targetManager, workspace);\n    Bindings.CSSWorkspaceBinding.CSSWorkspaceBinding.instance({forceNew: true, resourceMapping, targetManager});\n    const debuggerWorkspaceBinding = Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.instance({\n      forceNew: true,\n      resourceMapping,\n      targetManager,\n    });\n    Bindings.IgnoreListManager.IgnoreListManager.instance({forceNew: true, debuggerWorkspaceBinding});\n    const breakpointManager = Breakpoints.BreakpointManager.BreakpointManager.instance(\n        {forceNew: true, targetManager, workspace, debuggerWorkspaceBinding});\n    Persistence.Persistence.PersistenceImpl.instance({forceNew: true, workspace, breakpointManager});\n    Persistence.NetworkPersistenceManager.NetworkPersistenceManager.instance({forceNew: true, workspace});\n  });\n\n  it('creates editor tabs only for in-scope uiSourceCodes', () => {\n    const addUISourceCodeSpy =\n        sinon.spy(Sources.TabbedEditorContainer.TabbedEditorContainer.prototype, 'addUISourceCode');\n    const removeUISourceCodesSpy =\n        sinon.spy(Sources.TabbedEditorContainer.TabbedEditorContainer.prototype, 'removeUISourceCodes');\n\n    createContentProviderUISourceCodes({\n      items: [\n        {url: 'http://example.com/a.js' as Platform.DevToolsPath.UrlString, mimeType: 'application/javascript'},\n        {url: 'http://example.com/b.js' as Platform.DevToolsPath.UrlString, mimeType: 'application/javascript'},\n      ],\n      projectId: 'projectId1',\n      projectType: Workspace.Workspace.projectTypes.Network,\n      target: target1,\n    });\n\n    createContentProviderUISourceCodes({\n      items: [\n        {url: 'http://foo.com/script.js' as Platform.DevToolsPath.UrlString, mimeType: 'application/javascript'},\n      ],\n      projectId: 'projectId2',\n      projectType: Workspace.Workspace.projectTypes.Network,\n      target: target2,\n    });\n\n    new Sources.SourcesView.SourcesView();\n    let addedURLs = addUISourceCodeSpy.args.map(args => args[0].url());\n    assert.deepEqual(addedURLs, ['http://example.com/a.js', 'http://example.com/b.js']);\n    assert.isTrue(removeUISourceCodesSpy.notCalled);\n\n    addUISourceCodeSpy.resetHistory();\n    target2.targetManager().setScopeTarget(target2);\n    addedURLs = addUISourceCodeSpy.args.map(args => args[0].url());\n    assert.deepEqual(addedURLs, ['http://foo.com/script.js']);\n    const removedURLs = removeUISourceCodesSpy.args.map(args => args[0][0].url());\n    assert.deepEqual(removedURLs, ['http://example.com/a.js', 'http://example.com/b.js']);\n  });\n\n  it('doesn\\'t remove non-network UISourceCodes when changing the scope target', () => {\n    createFileSystemUISourceCode({\n      url: 'snippet:///foo.js' as Platform.DevToolsPath.UrlString,\n      mimeType: 'application/javascript',\n      type: 'snippets',\n    });\n\n    const sourcesView = new Sources.SourcesView.SourcesView();\n    const removeUISourceCodesSpy = sinon.spy(sourcesView.editorContainer, 'removeUISourceCodes');\n    target2.targetManager().setScopeTarget(target2);\n    assert.isTrue(removeUISourceCodesSpy.notCalled);\n  });\n});\n"]}