{"version":3,"file":"InplaceFormatterEditorAction.js","sourceRoot":"","sources":["../../../../../../front_end/panels/sources/InplaceFormatterEditorAction.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2014 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Formatter from '../../models/formatter/formatter.js';\nimport * as Persistence from '../../models/persistence/persistence.js';\nimport * as Workspace from '../../models/workspace/workspace.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport {\n  type EditorAction,\n  type EditorClosedEvent,\n  Events,\n  registerEditorAction,\n  type SourcesView,\n} from './SourcesView.js';\nimport {type UISourceCodeFrame} from './UISourceCodeFrame.js';\n\nconst UIStrings = {\n  /**\n   *@description Title of the format button in the Sources panel\n   *@example {file name} PH1\n   */\n  formatS: 'Format {PH1}',\n  /**\n   *@description Tooltip text that appears when hovering over the largeicon pretty print button in the Inplace Formatter Editor Action of the Sources panel\n   */\n  format: 'Format',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/sources/InplaceFormatterEditorAction.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nlet inplaceFormatterEditorActionInstance: InplaceFormatterEditorAction;\n\nexport class InplaceFormatterEditorAction implements EditorAction {\n  private button!: UI.Toolbar.ToolbarButton;\n  private sourcesView!: SourcesView;\n  private uiSourceCodeTitleChangedEvent: Common.EventTarget.EventDescriptor|null = null;\n  constructor() {\n  }\n  static instance(opts: {\n    forceNew: boolean|null,\n  } = {forceNew: null}): InplaceFormatterEditorAction {\n    const {forceNew} = opts;\n    if (!inplaceFormatterEditorActionInstance || forceNew) {\n      inplaceFormatterEditorActionInstance = new InplaceFormatterEditorAction();\n    }\n\n    return inplaceFormatterEditorActionInstance;\n  }\n\n  private editorSelected(event: Common.EventTarget.EventTargetEvent<Workspace.UISourceCode.UISourceCode>): void {\n    const uiSourceCode = event.data;\n    this.updateButton(uiSourceCode);\n  }\n\n  private editorClosed(event: Common.EventTarget.EventTargetEvent<EditorClosedEvent>): void {\n    const {wasSelected} = event.data;\n    if (wasSelected) {\n      this.updateButton(null);\n    }\n  }\n\n  private updateButton(uiSourceCode: Workspace.UISourceCode.UISourceCode|null): void {\n    if (this.uiSourceCodeTitleChangedEvent) {\n      Common.EventTarget.removeEventListeners([this.uiSourceCodeTitleChangedEvent]);\n    }\n    this.uiSourceCodeTitleChangedEvent = uiSourceCode ?\n        uiSourceCode.addEventListener(\n            Workspace.UISourceCode.Events.TitleChanged, event => this.updateButton(event.data), this) :\n        null;\n    const isFormattable = this.isFormattable(uiSourceCode);\n    this.button.element.classList.toggle('hidden', !isFormattable);\n    if (uiSourceCode && isFormattable) {\n      this.button.setTitle(i18nString(UIStrings.formatS, {PH1: uiSourceCode.name()}));\n    }\n  }\n\n  getOrCreateButton(sourcesView: SourcesView): UI.Toolbar.ToolbarButton {\n    if (this.button) {\n      return this.button;\n    }\n\n    this.sourcesView = sourcesView;\n    this.sourcesView.addEventListener(Events.EditorSelected, this.editorSelected.bind(this));\n    this.sourcesView.addEventListener(Events.EditorClosed, this.editorClosed.bind(this));\n\n    this.button = new UI.Toolbar.ToolbarButton(i18nString(UIStrings.format), 'brackets');\n    this.button.addEventListener(UI.Toolbar.ToolbarButton.Events.Click, this.formatSourceInPlace, this);\n    this.updateButton(sourcesView.currentUISourceCode());\n\n    return this.button;\n  }\n\n  private isFormattable(uiSourceCode: Workspace.UISourceCode.UISourceCode|null): boolean {\n    if (!uiSourceCode) {\n      return false;\n    }\n    if (uiSourceCode.project().canSetFileContent()) {\n      return true;\n    }\n    if (Persistence.Persistence.PersistenceImpl.instance().binding(uiSourceCode) !== null) {\n      return true;\n    }\n    return false;\n  }\n\n  private formatSourceInPlace(): void {\n    const sourceFrame = this.sourcesView.currentSourceFrame();\n    if (!sourceFrame) {\n      return;\n    }\n    const uiSourceCode = sourceFrame.uiSourceCode();\n    if (!this.isFormattable(uiSourceCode)) {\n      return;\n    }\n\n    if (uiSourceCode.isDirty()) {\n      void this.contentLoaded(uiSourceCode, sourceFrame, uiSourceCode.workingCopy());\n    } else {\n      void uiSourceCode.requestContent().then(deferredContent => {\n        void this.contentLoaded(uiSourceCode, sourceFrame, deferredContent.content || '');\n      });\n    }\n  }\n\n  private async contentLoaded(\n      uiSourceCode: Workspace.UISourceCode.UISourceCode, sourceFrame: UISourceCodeFrame,\n      content: string): Promise<void> {\n    const {formattedContent, formattedMapping} =\n        await Formatter.ScriptFormatter.format(uiSourceCode.contentType(), sourceFrame.contentType, content);\n    if (uiSourceCode.workingCopy() === formattedContent) {\n      return;\n    }\n    const selection = sourceFrame.textEditor.toLineColumn(sourceFrame.textEditor.state.selection.main.head);\n    const [lineNumber, columnNumber] =\n        formattedMapping.originalToFormatted(selection.lineNumber, selection.columnNumber);\n    uiSourceCode.setWorkingCopy(formattedContent);\n    this.sourcesView.showSourceLocation(uiSourceCode, {lineNumber, columnNumber});\n  }\n}\n\nregisterEditorAction(InplaceFormatterEditorAction.instance);\n"]}