{"version":3,"file":"SearchSourcesView.js","sourceRoot":"","sources":["../../../../../../front_end/panels/sources/SearchSourcesView.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,MAAM,MAAM,6BAA6B,CAAC;AACtD,OAAO,KAAK,EAAE,MAAM,2BAA2B,CAAC;AAChD,OAAO,KAAK,MAAM,MAAM,qBAAqB,CAAC;AAE9C,OAAO,EAAC,kBAAkB,EAAC,MAAM,yBAAyB,CAAC;AAE3D,MAAM,OAAO,aAAa;IACf,KAAK,CAAS;IACvB,YAAY,KAAa;QACvB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,CAAC;CACF;AAED,MAAM,OAAO,iBAAkB,SAAQ,MAAM,CAAC,UAAU,CAAC,UAAU;IACjE;QACE,KAAK,CAAC,SAAS,EAAE,IAAI,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,CAAC;IACxE,CAAC;IAEQ,WAAW;QAClB,OAAO,IAAI,kBAAkB,EAAE,CAAC;IAClC,CAAC;CACF;AAED,MAAM,OAAO,cAAc;IACzB,YAAY,CAAC,QAA4B,EAAE,QAAgB;QACzD,QAAQ,QAAQ,EAAE,CAAC;YACjB,KAAK,gBAAgB,CAAC,CAAC,CAAC;gBACtB,MAAM,SAAS,GAAG,EAAE,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,YAAY,EAAE,CAAC;gBAC5F,MAAM,KAAK,GAAG,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;gBAC3E,KAAK,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;gBACtD,OAAO,IAAI,CAAC;YACd,CAAC;QACH,CAAC;QACD,OAAO,KAAK,CAAC;IACf,CAAC;CACF;AAED,MAAM,OAAO,QAAQ;IACnB,KAAK,CAAC,MAAM,CAAC,EAAC,KAAK,EAAgB,EAAE,SAA6B;QAChE,MAAM,WAAW,GAAG,EAAE,CAAC,WAAW,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;QAC1D,MAAM,WAAW,CAAC,QAAQ,CAAC,4BAA4B,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC;QAC1E,MAAM,iBAAiB,GAAG,WAAW,CAAC,kBAAkB,CAAC,4BAA4B,CAAC,CAAC;QACvF,IAAI,iBAAiB,YAAY,iBAAiB,EAAE,CAAC;YACnD,iBAAiB,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAClC,CAAC;IACH,CAAC;CACF","sourcesContent":["// Copyright 2018 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as Search from '../search/search.js';\n\nimport {SourcesSearchScope} from './SourcesSearchScope.js';\n\nexport class SearchSources {\n  readonly query: string;\n  constructor(query: string) {\n    this.query = query;\n  }\n}\n\nexport class SearchSourcesView extends Search.SearchView.SearchView {\n  constructor() {\n    super('sources', new Common.Throttler.Throttler(/* timeoutMs */ 200));\n  }\n\n  override createScope(): Search.SearchScope.SearchScope {\n    return new SourcesSearchScope();\n  }\n}\n\nexport class ActionDelegate implements UI.ActionRegistration.ActionDelegate {\n  handleAction(_context: UI.Context.Context, actionId: string): boolean {\n    switch (actionId) {\n      case 'sources.search': {\n        const selection = UI.InspectorView.InspectorView.instance().element.window().getSelection();\n        const query = selection ? selection.toString().replace(/\\r?\\n.*/, '') : '';\n        void Common.Revealer.reveal(new SearchSources(query));\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\nexport class Revealer implements Common.Revealer.Revealer<SearchSources> {\n  async reveal({query}: SearchSources, omitFocus?: boolean|undefined): Promise<void> {\n    const viewManager = UI.ViewManager.ViewManager.instance();\n    await viewManager.showView('sources.search-sources-tab', true, omitFocus);\n    const searchSourcesView = viewManager.materializedWidget('sources.search-sources-tab');\n    if (searchSourcesView instanceof SearchSourcesView) {\n      searchSourcesView.toggle(query);\n    }\n  }\n}\n"]}