{"version":3,"file":"CoveragePlugin.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/sources/CoveragePlugin.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Bindings from '../../models/bindings/bindings.js';\nimport * as Workspace from '../../models/workspace/workspace.js';\nimport {createTarget} from '../../testing/EnvironmentHelpers.js';\nimport {describeWithMockConnection} from '../../testing/MockConnection.js';\nimport {createContentProviderUISourceCode} from '../../testing/UISourceCodeHelpers.js';\nimport type * as SourceFrame from '../../ui/legacy/components/source_frame/source_frame.js';\nimport * as Coverage from '../coverage/coverage.js';\n\nimport * as Sources from './sources.js';\n\ndescribeWithMockConnection('CoveragePlugin', () => {\n  let target: SDK.Target.Target;\n  let uiSourceCode: Workspace.UISourceCode.UISourceCode;\n  let model: Coverage.CoverageModel.CoverageModel;\n  let coverageInfo: Coverage.CoverageModel.URLCoverageInfo;\n  const URL = 'test.js' as Platform.DevToolsPath.UrlString;\n\n  beforeEach(() => {\n    const tabTarget = createTarget({type: SDK.Target.Type.Tab});\n    createTarget({parentTarget: tabTarget, subtype: 'prerender'});\n    target = createTarget({parentTarget: tabTarget});\n    const workspace = Workspace.Workspace.WorkspaceImpl.instance();\n    const targetManager = SDK.TargetManager.TargetManager.instance();\n    const resourceMapping = new Bindings.ResourceMapping.ResourceMapping(targetManager, workspace);\n    Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.instance({\n      forceNew: true,\n      resourceMapping,\n      targetManager,\n    });\n    Bindings.CSSWorkspaceBinding.CSSWorkspaceBinding.instance({\n      forceNew: true,\n      resourceMapping,\n      targetManager,\n    });\n\n    model = target.model(Coverage.CoverageModel.CoverageModel) as Coverage.CoverageModel.CoverageModel;\n    coverageInfo = new Coverage.CoverageModel.URLCoverageInfo(URL);\n    coverageInfo.addToSizes(9, 28);\n    sinon.stub(model, 'getCoverageForUrl').withArgs(URL).returns(coverageInfo);\n    ({uiSourceCode} = createContentProviderUISourceCode({url: URL, mimeType: 'text/javascript'}));\n  });\n\n  it('shows stats', async () => {\n    const coveragePlugin =\n        new Sources.CoveragePlugin.CoveragePlugin(uiSourceCode, <SourceFrame.SourceFrame.Transformer>{});\n    const [toolbarItem] = coveragePlugin.rightToolbarItems();\n    assert.strictEqual('Show Details', toolbarItem.element.title);\n    assert.strictEqual('Coverage: 32.1%', toolbarItem.element.querySelector('.toolbar-text:not(.hidden)')?.textContent);\n  });\n\n  it('updates stats', async () => {\n    const coveragePlugin =\n        new Sources.CoveragePlugin.CoveragePlugin(uiSourceCode, <SourceFrame.SourceFrame.Transformer>{});\n    const [toolbarItem] = coveragePlugin.rightToolbarItems();\n    assert.strictEqual('Coverage: 32.1%', toolbarItem.element.querySelector('.toolbar-text:not(.hidden)')?.textContent);\n\n    coverageInfo.addToSizes(10, 2);\n    assert.strictEqual('Coverage: 63.3%', toolbarItem.element.querySelector('.toolbar-text:not(.hidden)')?.textContent);\n  });\n\n  it('resets stats', async () => {\n    const coveragePlugin =\n        new Sources.CoveragePlugin.CoveragePlugin(uiSourceCode, <SourceFrame.SourceFrame.Transformer>{});\n    const [toolbarItem] = coveragePlugin.rightToolbarItems();\n    assert.strictEqual('Coverage: 32.1%', toolbarItem.element.querySelector('.toolbar-text:not(.hidden)')?.textContent);\n\n    model.dispatchEventToListeners(Coverage.CoverageModel.Events.CoverageReset);\n    assert.strictEqual('Click to show Coverage Panel', toolbarItem.element.title);\n    assert.strictEqual('Coverage: n/a', toolbarItem.element.querySelector('.toolbar-text:not(.hidden)')?.textContent);\n  });\n});\n"]}