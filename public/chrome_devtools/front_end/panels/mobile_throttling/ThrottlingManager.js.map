{"version":3,"file":"ThrottlingManager.js","sourceRoot":"","sources":["../../../../../../front_end/panels/mobile_throttling/ThrottlingManager.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as IconButton from '../../ui/components/icon_button/icon_button.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport {MobileThrottlingSelector} from './MobileThrottlingSelector.js';\nimport {NetworkThrottlingSelector} from './NetworkThrottlingSelector.js';\nimport {\n  type Conditions,\n  type ConditionsList,\n  type MobileThrottlingConditionsGroup,\n  type NetworkThrottlingConditionsGroup,\n  ThrottlingPresets,\n} from './ThrottlingPresets.js';\n\nconst UIStrings = {\n  /**\n   *@description Text with two placeholders separated by a colon\n   *@example {Node removed} PH1\n   *@example {div#id1} PH2\n   */\n  sS: '{PH1}: {PH2}',\n  /**\n   *@description Text in Throttling Manager of the Network panel\n   */\n  add: 'Add…',\n  /**\n   *@description Accessibility label for custom add network throttling option\n   *@example {Custom} PH1\n   */\n  addS: 'Add {PH1}',\n  /**\n   *@description Text to indicate the network connectivity is offline\n   */\n  offline: 'Offline',\n  /**\n   *@description Text in Throttling Manager of the Network panel\n   */\n  forceDisconnectedFromNetwork: 'Force disconnected from network',\n  /**\n   *@description Text for throttling the network\n   */\n  throttling: 'Throttling',\n  /**\n   *@description Icon title in Throttling Manager of the Network panel\n   */\n  cpuThrottlingIsEnabled: 'CPU throttling is enabled',\n  /**\n   *@description Screen reader label for a select box that chooses the CPU throttling speed in the Performance panel\n   */\n  cpuThrottling: 'CPU throttling',\n  /**\n   *@description Text for no network throttling\n   */\n  noThrottling: 'No throttling',\n  /**\n   *@description Text in Throttling Manager of the Network panel\n   *@example {2} PH1\n   */\n  dSlowdown: '{PH1}× slowdown',\n  /**\n   *@description Tooltip text in Throttling Manager of the Performance panel\n   */\n  excessConcurrency: 'Exceeding the default value may degrade system performance.',\n  /**\n   *@description Tooltip text in Throttling Manager of the Performance panel\n   */\n  resetConcurrency: 'Reset to the default value',\n  /**\n   *@description Label for an check box that neables overriding navigator.hardwareConcurrency\n   */\n  hardwareConcurrency: 'Hardware concurrency',\n  /**\n   *@description Tooltip text for an input box that overrides navigator.hardwareConcurrency on the page\n   */\n  hardwareConcurrencySettingTooltip: 'Override the value reported by navigator.hardwareConcurrency on the page',\n  /**\n   *@description Icon title in Throttling Manager of the Performance panel\n   */\n  hardwareConcurrencyIsEnabled: 'Hardware concurrency override is enabled',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/mobile_throttling/ThrottlingManager.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nlet throttlingManagerInstance: ThrottlingManager;\n\nexport class ThrottlingManager {\n  private readonly cpuThrottlingControls: Set<UI.Toolbar.ToolbarComboBox>;\n  private readonly cpuThrottlingRates: number[];\n  private readonly customNetworkConditionsSetting: Common.Settings.Setting<SDK.NetworkManager.Conditions[]>;\n  private readonly currentNetworkThrottlingConditionsSetting: Common.Settings.Setting<SDK.NetworkManager.Conditions>;\n  private lastNetworkThrottlingConditions!: SDK.NetworkManager.Conditions;\n  private readonly cpuThrottlingManager: SDK.CPUThrottlingManager.CPUThrottlingManager;\n  #hardwareConcurrencyOverrideEnabled = false;\n\n  get hardwareConcurrencyOverrideEnabled(): boolean {\n    return this.#hardwareConcurrencyOverrideEnabled;\n  }\n\n  private constructor() {\n    this.cpuThrottlingManager = SDK.CPUThrottlingManager.CPUThrottlingManager.instance();\n    this.cpuThrottlingControls = new Set();\n    this.cpuThrottlingRates = ThrottlingPresets.cpuThrottlingPresets;\n    this.customNetworkConditionsSetting =\n        Common.Settings.Settings.instance().moduleSetting('custom-network-conditions');\n    this.currentNetworkThrottlingConditionsSetting = Common.Settings.Settings.instance().createSetting(\n        'preferred-network-condition', SDK.NetworkManager.NoThrottlingConditions);\n\n    this.currentNetworkThrottlingConditionsSetting.setSerializer(new SDK.NetworkManager.ConditionsSerializer());\n\n    SDK.NetworkManager.MultitargetNetworkManager.instance().addEventListener(\n        SDK.NetworkManager.MultitargetNetworkManager.Events.ConditionsChanged, () => {\n          this.lastNetworkThrottlingConditions = this.currentNetworkThrottlingConditionsSetting.get();\n          this.currentNetworkThrottlingConditionsSetting.set(\n              SDK.NetworkManager.MultitargetNetworkManager.instance().networkConditions());\n        });\n\n    if (this.isDirty()) {\n      SDK.NetworkManager.MultitargetNetworkManager.instance().setNetworkConditions(\n          this.currentNetworkThrottlingConditionsSetting.get());\n    }\n  }\n\n  static instance(opts: {forceNew: boolean|null} = {forceNew: null}): ThrottlingManager {\n    const {forceNew} = opts;\n    if (!throttlingManagerInstance || forceNew) {\n      throttlingManagerInstance = new ThrottlingManager();\n    }\n\n    return throttlingManagerInstance;\n  }\n\n  decorateSelectWithNetworkThrottling(selectElement: HTMLSelectElement): NetworkThrottlingSelector {\n    let options: (SDK.NetworkManager.Conditions|null)[] = [];\n    const selector = new NetworkThrottlingSelector(populate, select, this.customNetworkConditionsSetting);\n    selectElement.setAttribute(\n        'jslog',\n        `${\n            VisualLogging.dropDown()\n                .track({change: true})\n                .context(this.currentNetworkThrottlingConditionsSetting.name)}`);\n    selectElement.addEventListener('change', optionSelected, false);\n    return selector;\n\n    function populate(groups: NetworkThrottlingConditionsGroup[]): (SDK.NetworkManager.Conditions|null)[] {\n      selectElement.removeChildren();\n      options = [];\n      for (let i = 0; i < groups.length; ++i) {\n        const group = groups[i];\n        const groupElement = selectElement.createChild('optgroup') as HTMLOptGroupElement;\n        groupElement.label = group.title;\n        for (const conditions of group.items) {\n          // The title is usually an i18nLazyString except for custom values that are stored in the local storage in the form of a string.\n          const title = typeof conditions.title === 'function' ? conditions.title() : conditions.title;\n          const option = new Option(title, title);\n          UI.ARIAUtils.setLabel(option, i18nString(UIStrings.sS, {PH1: group.title, PH2: title}));\n          option.setAttribute(\n              'jslog',\n              `${VisualLogging.item(Platform.StringUtilities.toKebabCase(conditions.i18nTitleKey || title)).track({\n                click: true,\n              })}`);\n          groupElement.appendChild(option);\n          options.push(conditions);\n        }\n        if (i === groups.length - 1) {\n          const option = new Option(i18nString(UIStrings.add), i18nString(UIStrings.add));\n          UI.ARIAUtils.setLabel(option, i18nString(UIStrings.addS, {PH1: group.title}));\n          option.setAttribute('jslog', `${VisualLogging.action('add').track({click: true})}`);\n          groupElement.appendChild(option);\n          options.push(null);\n        }\n      }\n      return options;\n    }\n\n    function optionSelected(): void {\n      if (selectElement.selectedIndex === selectElement.options.length - 1) {\n        selector.revealAndUpdate();\n      } else {\n        const option = options[selectElement.selectedIndex];\n        if (option) {\n          selector.optionSelected(option);\n        }\n      }\n    }\n\n    function select(index: number): void {\n      if (selectElement.selectedIndex !== index) {\n        selectElement.selectedIndex = index;\n      }\n    }\n  }\n\n  createOfflineToolbarCheckbox(): UI.Toolbar.ToolbarCheckbox {\n    const checkbox = new UI.Toolbar.ToolbarCheckbox(\n        i18nString(UIStrings.offline), i18nString(UIStrings.forceDisconnectedFromNetwork), forceOffline.bind(this));\n    checkbox.element.setAttribute('jslog', `${VisualLogging.toggle('disconnect-from-network').track({click: true})}`);\n    SDK.NetworkManager.MultitargetNetworkManager.instance().addEventListener(\n        SDK.NetworkManager.MultitargetNetworkManager.Events.ConditionsChanged, networkConditionsChanged);\n    checkbox.setChecked(SDK.NetworkManager.MultitargetNetworkManager.instance().isOffline());\n\n    function forceOffline(this: ThrottlingManager): void {\n      if (checkbox.checked()) {\n        SDK.NetworkManager.MultitargetNetworkManager.instance().setNetworkConditions(\n            SDK.NetworkManager.OfflineConditions);\n      } else {\n        const newConditions =\n            (!this.lastNetworkThrottlingConditions.download && !this.lastNetworkThrottlingConditions.upload) ?\n            SDK.NetworkManager.NoThrottlingConditions :\n            this.lastNetworkThrottlingConditions;\n        SDK.NetworkManager.MultitargetNetworkManager.instance().setNetworkConditions(newConditions);\n      }\n    }\n\n    function networkConditionsChanged(): void {\n      checkbox.setChecked(SDK.NetworkManager.MultitargetNetworkManager.instance().isOffline());\n    }\n\n    return checkbox;\n  }\n\n  createMobileThrottlingButton(): UI.Toolbar.ToolbarMenuButton {\n    const button = new UI.Toolbar.ToolbarMenuButton(appendItems, undefined, undefined, 'mobile-throttling');\n    button.setTitle(i18nString(UIStrings.throttling));\n    button.setDarkText();\n\n    let options: ConditionsList = [];\n    let selectedIndex = -1;\n    const selector = new MobileThrottlingSelector(populate, select);\n    return button;\n\n    function appendItems(contextMenu: UI.ContextMenu.ContextMenu): void {\n      for (let index = 0; index < options.length; ++index) {\n        const conditions = options[index];\n        if (!conditions) {\n          continue;\n        }\n        if (conditions.title === ThrottlingPresets.getCustomConditions().title &&\n            conditions.description === ThrottlingPresets.getCustomConditions().description) {\n          continue;\n        }\n        contextMenu.defaultSection().appendCheckboxItem(\n            conditions.title, selector.optionSelected.bind(selector, conditions as Conditions),\n            {checked: selectedIndex === index, jslogContext: conditions.jslogContext});\n      }\n    }\n\n    function populate(groups: MobileThrottlingConditionsGroup[]): ConditionsList {\n      options = [];\n      for (const group of groups) {\n        for (const conditions of group.items) {\n          options.push(conditions);\n        }\n        options.push(null);\n      }\n      return options;\n    }\n\n    function select(index: number): void {\n      selectedIndex = index;\n      const option = options[index];\n      if (option) {\n        button.setText(option.title);\n        button.setTitle(`${option.title} ${option.description}`);\n      }\n    }\n  }\n\n  private updatePanelIcon(): void {\n    const warnings = [];\n    if (this.cpuThrottlingManager.cpuThrottlingRate() !== SDK.CPUThrottlingManager.CPUThrottlingRates.NoThrottling) {\n      warnings.push(i18nString(UIStrings.cpuThrottlingIsEnabled));\n    }\n    if (this.hardwareConcurrencyOverrideEnabled) {\n      warnings.push(i18nString(UIStrings.hardwareConcurrencyIsEnabled));\n    }\n    UI.InspectorView.InspectorView.instance().setPanelWarnings('timeline', warnings);\n  }\n\n  setCPUThrottlingRate(rate: number): void {\n    this.cpuThrottlingManager.setCPUThrottlingRate(rate);\n    if (rate !== SDK.CPUThrottlingManager.CPUThrottlingRates.NoThrottling) {\n      Host.userMetrics.actionTaken(Host.UserMetrics.Action.CpuThrottlingEnabled);\n    }\n    const index = this.cpuThrottlingRates.indexOf(rate);\n    for (const control of this.cpuThrottlingControls) {\n      control.setSelectedIndex(index);\n    }\n    this.updatePanelIcon();\n  }\n\n  createCPUThrottlingSelector(): UI.Toolbar.ToolbarComboBox {\n    const control = new UI.Toolbar.ToolbarComboBox(\n        event => this.setCPUThrottlingRate(this.cpuThrottlingRates[(event.target as HTMLSelectElement).selectedIndex]),\n        i18nString(UIStrings.cpuThrottling));\n    this.cpuThrottlingControls.add(control);\n    const currentRate = this.cpuThrottlingManager.cpuThrottlingRate();\n\n    for (let i = 0; i < this.cpuThrottlingRates.length; ++i) {\n      const rate = this.cpuThrottlingRates[i];\n      const title = rate === 1 ? i18nString(UIStrings.noThrottling) : i18nString(UIStrings.dSlowdown, {PH1: rate});\n      const option = control.createOption(title);\n      control.addOption(option);\n      if (currentRate === rate) {\n        control.setSelectedIndex(i);\n      }\n    }\n    return control;\n  }\n\n  createHardwareConcurrencySelector(): {\n    input: UI.Toolbar.ToolbarItem,\n    reset: UI.Toolbar.ToolbarButton,\n    warning: UI.Toolbar.ToolbarItem,\n    toggle: UI.Toolbar.ToolbarItem,\n  } {\n    const input = new UI.Toolbar.ToolbarItem(UI.UIUtils.createInput('devtools-text-input', 'number'));\n    input.setTitle(i18nString(UIStrings.hardwareConcurrencySettingTooltip));\n    const inputElement = input.element as HTMLInputElement;\n    inputElement.min = '1';\n    input.setEnabled(false);\n\n    const toggle = new UI.Toolbar.ToolbarCheckbox(\n        i18nString(UIStrings.hardwareConcurrency), i18nString(UIStrings.hardwareConcurrencySettingTooltip));\n    const reset = new UI.Toolbar.ToolbarButton('Reset concurrency', 'undo');\n    reset.setTitle(i18nString(UIStrings.resetConcurrency));\n    const icon = new IconButton.Icon.Icon();\n    icon.data = {iconName: 'warning-filled', color: 'var(--icon-warning)', width: '14px', height: '14px'};\n    const warning = new UI.Toolbar.ToolbarItem(icon);\n    warning.setTitle(i18nString(UIStrings.excessConcurrency));\n\n    toggle.inputElement.disabled = true;  // Prevent modification while still wiring things up asynchronously below\n    reset.element.classList.add('timeline-concurrency-hidden');\n    warning.element.classList.add('timeline-concurrency-hidden');\n\n    void this.cpuThrottlingManager.getHardwareConcurrency().then(defaultValue => {\n      if (defaultValue === undefined) {\n        return;\n      }\n\n      const setHardwareConcurrency = (value: number): void => {\n        if (value >= 1) {\n          this.cpuThrottlingManager.setHardwareConcurrency(value);\n        }\n        if (value > defaultValue) {\n          warning.element.classList.remove('timeline-concurrency-hidden');\n        } else {\n          warning.element.classList.add('timeline-concurrency-hidden');\n        }\n        if (value === defaultValue) {\n          reset.element.classList.add('timeline-concurrency-hidden');\n        } else {\n          reset.element.classList.remove('timeline-concurrency-hidden');\n        }\n      };\n\n      inputElement.value = `${defaultValue}`;\n      inputElement.oninput = () => setHardwareConcurrency(Number(inputElement.value));\n      toggle.inputElement.disabled = false;\n      toggle.inputElement.addEventListener('change', () => {\n        this.#hardwareConcurrencyOverrideEnabled = toggle.checked();\n        this.updatePanelIcon();\n\n        input.setEnabled(this.hardwareConcurrencyOverrideEnabled);\n        setHardwareConcurrency(this.hardwareConcurrencyOverrideEnabled ? Number(inputElement.value) : defaultValue);\n      });\n\n      reset.addEventListener(UI.Toolbar.ToolbarButton.Events.Click, () => {\n        inputElement.value = `${defaultValue}`;\n        setHardwareConcurrency(defaultValue);\n      });\n    });\n\n    return {input, reset, warning, toggle};\n  }\n\n  setHardwareConcurrency(concurrency: number): void {\n    this.cpuThrottlingManager.setHardwareConcurrency(concurrency);\n  }\n\n  private isDirty(): boolean {\n    const networkConditions = SDK.NetworkManager.MultitargetNetworkManager.instance().networkConditions();\n    const knownCurrentConditions = this.currentNetworkThrottlingConditionsSetting.get();\n    return !SDK.NetworkManager.networkConditionsEqual(networkConditions, knownCurrentConditions);\n  }\n}\n\nexport class ActionDelegate implements UI.ActionRegistration.ActionDelegate {\n  handleAction(_context: UI.Context.Context, actionId: string): boolean {\n    if (actionId === 'network-conditions.network-online') {\n      SDK.NetworkManager.MultitargetNetworkManager.instance().setNetworkConditions(\n          SDK.NetworkManager.NoThrottlingConditions);\n      return true;\n    }\n    if (actionId === 'network-conditions.network-low-end-mobile') {\n      SDK.NetworkManager.MultitargetNetworkManager.instance().setNetworkConditions(SDK.NetworkManager.Slow3GConditions);\n      return true;\n    }\n    if (actionId === 'network-conditions.network-mid-tier-mobile') {\n      SDK.NetworkManager.MultitargetNetworkManager.instance().setNetworkConditions(SDK.NetworkManager.Slow4GConditions);\n      return true;\n    }\n    if (actionId === 'network-conditions.network-offline') {\n      SDK.NetworkManager.MultitargetNetworkManager.instance().setNetworkConditions(\n          SDK.NetworkManager.OfflineConditions);\n      return true;\n    }\n    return false;\n  }\n}\n\nexport function throttlingManager(): ThrottlingManager {\n  return ThrottlingManager.instance();\n}\n"]}