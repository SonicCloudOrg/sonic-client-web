{"version":3,"file":"LayerTreeOutline.js","sourceRoot":"","sources":["../../../../../../front_end/panels/layer_viewer/LayerTreeOutline.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2013 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as SDK from '../../core/sdk/sdk.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport {\n  LayerSelection,\n  type LayerView,\n  type LayerViewHost,\n  type Selection,\n  type SnapshotSelection,\n} from './LayerViewHost.js';\n\nconst UIStrings = {\n  /**\n   *@description Label for layers sidepanel tree\n   */\n  layersTreePane: 'Layers Tree Pane',\n  /**\n   *@description A context menu item in the DView of the Layers panel\n   */\n  showPaintProfiler: 'Show Paint Profiler',\n  /**\n   *@description Details text content in Layer Tree Outline of the Layers panel\n   *@example {10} PH1\n   *@example {10} PH2\n   */\n  updateChildDimension: ' ({PH1} × {PH2})',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/layer_viewer/LayerTreeOutline.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class LayerTreeOutline extends Common.ObjectWrapper.eventMixin<EventTypes, typeof UI.TreeOutline.TreeOutline>(\n    UI.TreeOutline.TreeOutline) implements Common.EventTarget.EventTarget<EventTypes>, LayerView {\n  private layerViewHost: LayerViewHost;\n  private treeOutline: UI.TreeOutline.TreeOutlineInShadow;\n  private lastHoveredNode: LayerTreeElement|null;\n  override element: HTMLElement;\n  private layerTree?: SDK.LayerTreeBase.LayerTreeBase|null;\n  private layerSnapshotMap?: Map<SDK.LayerTreeBase.Layer, SnapshotSelection>;\n\n  constructor(layerViewHost: LayerViewHost) {\n    super();\n    this.layerViewHost = layerViewHost;\n    this.layerViewHost.registerView(this);\n\n    this.treeOutline = new UI.TreeOutline.TreeOutlineInShadow();\n    this.treeOutline.element.classList.add('layer-tree', 'overflow-auto');\n    this.treeOutline.element.addEventListener('mousemove', this.onMouseMove.bind(this) as EventListener, false);\n    this.treeOutline.element.addEventListener('mouseout', this.onMouseMove.bind(this) as EventListener, false);\n    this.treeOutline.element.addEventListener('contextmenu', this.onContextMenu.bind(this) as EventListener, true);\n    UI.ARIAUtils.setLabel(this.treeOutline.contentElement, i18nString(UIStrings.layersTreePane));\n\n    this.lastHoveredNode = null;\n    this.element = this.treeOutline.element;\n    this.layerViewHost.showInternalLayersSetting().addChangeListener(this.update, this);\n  }\n\n  override focus(): void {\n    this.treeOutline.focus();\n  }\n\n  selectObject(selection: Selection|null): void {\n    this.hoverObject(null);\n    const layer = selection && selection.layer();\n    const node = layer && layerToTreeElement.get(layer);\n    if (node) {\n      node.revealAndSelect(true);\n    } else if (this.treeOutline.selectedTreeElement) {\n      this.treeOutline.selectedTreeElement.deselect();\n    }\n  }\n\n  hoverObject(selection: Selection|null): void {\n    const layer = selection && selection.layer();\n    const node = layer && layerToTreeElement.get(layer);\n    if (node === this.lastHoveredNode) {\n      return;\n    }\n    if (this.lastHoveredNode) {\n      this.lastHoveredNode.setHovered(false);\n    }\n    if (node) {\n      node.setHovered(true);\n    }\n    this.lastHoveredNode = node as LayerTreeElement;\n  }\n\n  setLayerTree(layerTree: SDK.LayerTreeBase.LayerTreeBase|null): void {\n    this.layerTree = layerTree;\n    this.update();\n  }\n\n  private update(): void {\n    const showInternalLayers = this.layerViewHost.showInternalLayersSetting().get();\n    const seenLayers = new Map<SDK.LayerTreeBase.Layer, boolean>();\n    let root: (SDK.LayerTreeBase.Layer|null)|null = null;\n    if (this.layerTree) {\n      if (!showInternalLayers) {\n        root = this.layerTree.contentRoot();\n      }\n      if (!root) {\n        root = this.layerTree.root();\n      }\n    }\n\n    function updateLayer(this: LayerTreeOutline, layer: SDK.LayerTreeBase.Layer): void {\n      if (!layer.drawsContent() && !showInternalLayers) {\n        return;\n      }\n      if (seenLayers.get(layer)) {\n        console.assert(false, 'Duplicate layer: ' + layer.id());\n      }\n      seenLayers.set(layer, true);\n      let node: LayerTreeElement|null = layerToTreeElement.get(layer) || null;\n      let parentLayer = layer.parent();\n      // Skip till nearest visible ancestor.\n      while (parentLayer && parentLayer !== root && !parentLayer.drawsContent() && !showInternalLayers) {\n        parentLayer = parentLayer.parent();\n      }\n      const parent =\n          layer === root ? this.treeOutline.rootElement() : parentLayer && layerToTreeElement.get(parentLayer);\n      if (!parent) {\n        console.assert(false, 'Parent is not in the tree');\n        return;\n      }\n      if (!node) {\n        node = new LayerTreeElement(this, layer);\n        parent.appendChild(node);\n        // Expand all new non-content layers to expose content layers better.\n        if (!layer.drawsContent()) {\n          node.expand();\n        }\n      } else {\n        if (node.parent !== parent) {\n          const oldSelection = this.treeOutline.selectedTreeElement;\n          if (node.parent) {\n            node.parent.removeChild(node);\n          }\n          parent.appendChild(node);\n          if (oldSelection && oldSelection !== this.treeOutline.selectedTreeElement) {\n            oldSelection.select();\n          }\n        }\n        node.update();\n      }\n    }\n    if (root && this.layerTree) {\n      this.layerTree.forEachLayer(updateLayer.bind(this), root);\n    }\n    // Cleanup layers that don't exist anymore from tree.\n    const rootElement = this.treeOutline.rootElement();\n    for (let node = rootElement.firstChild(); node instanceof LayerTreeElement && !node.root;) {\n      if (seenLayers.get(node.layer)) {\n        node = node.traverseNextTreeElement(false);\n      } else {\n        const nextNode = node.nextSibling || node.parent;\n        if (node.parent) {\n          node.parent.removeChild(node);\n        }\n        if (node === this.lastHoveredNode) {\n          this.lastHoveredNode = null;\n        }\n        node = nextNode;\n      }\n    }\n    if (!this.treeOutline.selectedTreeElement && this.layerTree) {\n      const elementToSelect = this.layerTree.contentRoot() || this.layerTree.root();\n      if (elementToSelect) {\n        const layer = layerToTreeElement.get(elementToSelect);\n        if (layer) {\n          layer.revealAndSelect(true);\n        }\n      }\n    }\n  }\n\n  private onMouseMove(event: MouseEvent): void {\n    const node = this.treeOutline.treeElementFromEvent(event) as LayerTreeElement | null;\n    if (node === this.lastHoveredNode) {\n      return;\n    }\n    this.layerViewHost.hoverObject(this.selectionForNode(node));\n  }\n\n  selectedNodeChanged(node: LayerTreeElement): void {\n    this.layerViewHost.selectObject(this.selectionForNode(node));\n  }\n\n  private onContextMenu(event: MouseEvent): void {\n    const selection = this.selectionForNode(this.treeOutline.treeElementFromEvent(event) as LayerTreeElement | null);\n    const contextMenu = new UI.ContextMenu.ContextMenu(event);\n    const layer = selection && selection.layer();\n    if (layer) {\n      this.layerSnapshotMap = this.layerViewHost.getLayerSnapshotMap();\n      if (this.layerSnapshotMap.has(layer)) {\n        contextMenu.defaultSection().appendItem(\n            i18nString(UIStrings.showPaintProfiler),\n            () => this.dispatchEventToListeners(Events.PaintProfilerRequested, selection as Selection),\n            {jslogContext: 'layers.paint-profiler'});\n      }\n    }\n    this.layerViewHost.showContextMenu(contextMenu, selection);\n  }\n\n  private selectionForNode(node: LayerTreeElement|null): Selection|null {\n    return node && node.layer ? new LayerSelection(node.layer) : null;\n  }\n}\n\nexport const enum Events {\n  PaintProfilerRequested = 'PaintProfilerRequested',\n}\n\nexport type EventTypes = {\n  [Events.PaintProfilerRequested]: Selection,\n};\n\nexport class LayerTreeElement extends UI.TreeOutline.TreeElement {\n  // Watch out: This is different from treeOutline that\n  // LayerTreeElement inherits from UI.TreeOutline.TreeElement.\n  treeOutlineInternal: LayerTreeOutline;\n  layer: SDK.LayerTreeBase.Layer;\n\n  constructor(tree: LayerTreeOutline, layer: SDK.LayerTreeBase.Layer) {\n    super();\n    this.treeOutlineInternal = tree;\n    this.layer = layer;\n    layerToTreeElement.set(layer, this);\n    this.update();\n  }\n\n  update(): void {\n    const node = this.layer.nodeForSelfOrAncestor();\n    const title = document.createDocumentFragment();\n    UI.UIUtils.createTextChild(title, node ? node.simpleSelector() : '#' + this.layer.id());\n    const details = title.createChild('span', 'dimmed');\n    details.textContent =\n        i18nString(UIStrings.updateChildDimension, {PH1: this.layer.width(), PH2: this.layer.height()});\n    this.title = title;\n  }\n\n  override onselect(): boolean {\n    this.treeOutlineInternal.selectedNodeChanged(this);\n    return false;\n  }\n\n  setHovered(hovered: boolean): void {\n    this.listItemElement.classList.toggle('hovered', hovered);\n  }\n}\n\nexport const layerToTreeElement = new WeakMap<SDK.LayerTreeBase.Layer, LayerTreeElement>();\n"]}