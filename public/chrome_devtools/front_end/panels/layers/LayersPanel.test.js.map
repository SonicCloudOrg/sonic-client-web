{"version":3,"file":"LayersPanel.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/layers/LayersPanel.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as SDK from '../../core/sdk/sdk.js';\nimport {createTarget, stubNoopSettings} from '../../testing/EnvironmentHelpers.js';\nimport {describeWithMockConnection} from '../../testing/MockConnection.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport * as Layers from './layers.js';\n\ndescribeWithMockConnection('LayersPanel', () => {\n  let target: SDK.Target.Target;\n  let prerenderTarget: SDK.Target.Target;\n\n  beforeEach(async () => {\n    const actionRegistryInstance = UI.ActionRegistry.ActionRegistry.instance({forceNew: true});\n    UI.ShortcutRegistry.ShortcutRegistry.instance({forceNew: true, actionRegistry: actionRegistryInstance});\n    stubNoopSettings();\n    const tabTarget = createTarget({type: SDK.Target.Type.Tab});\n    prerenderTarget = createTarget({parentTarget: tabTarget, subtype: 'prerender'});\n    target = createTarget({parentTarget: tabTarget});\n  });\n\n  it('udpates 3d view when layer painted', async () => {\n    const panel = Layers.LayersPanel.LayersPanel.instance({forceNew: true});\n    const layerTreeModel = target.model(Layers.LayerTreeModel.LayerTreeModel);\n    assert.exists(layerTreeModel);\n    const updateLayerSnapshot = sinon.stub(panel.layers3DView, 'updateLayerSnapshot');\n    const LAYER = {id: () => 'TEST_LAYER'} as Layers.LayerTreeModel.AgentLayer;\n    layerTreeModel.dispatchEventToListeners(Layers.LayerTreeModel.Events.LayerPainted, LAYER);\n    assert.isTrue(updateLayerSnapshot.calledOnceWith(LAYER));\n  });\n\n  it('can handle scope switches', async () => {\n    const panel = Layers.LayersPanel.LayersPanel.instance({forceNew: true});\n    const primaryLayerTreeModel = target.model(Layers.LayerTreeModel.LayerTreeModel);\n    assert.exists(primaryLayerTreeModel);\n    const prerenderLayerTreeModel = prerenderTarget.model(Layers.LayerTreeModel.LayerTreeModel);\n    assert.exists(prerenderLayerTreeModel);\n    const updateLayerSnapshot = sinon.stub(panel.layers3DView, 'updateLayerSnapshot');\n\n    const LAYER_1 = {id: () => 'TEST_LAYER_1'} as Layers.LayerTreeModel.AgentLayer;\n    const LAYER_2 = {id: () => 'TEST_LAYER_2'} as Layers.LayerTreeModel.AgentLayer;\n    primaryLayerTreeModel.dispatchEventToListeners(Layers.LayerTreeModel.Events.LayerPainted, LAYER_1);\n    prerenderLayerTreeModel.dispatchEventToListeners(Layers.LayerTreeModel.Events.LayerPainted, LAYER_2);\n    assert.isTrue(updateLayerSnapshot.calledOnceWith(LAYER_1));\n\n    updateLayerSnapshot.reset();\n    SDK.TargetManager.TargetManager.instance().setScopeTarget(prerenderTarget);\n    primaryLayerTreeModel.dispatchEventToListeners(Layers.LayerTreeModel.Events.LayerPainted, LAYER_1);\n    prerenderLayerTreeModel.dispatchEventToListeners(Layers.LayerTreeModel.Events.LayerPainted, LAYER_2);\n    assert.isTrue(updateLayerSnapshot.calledOnceWith(LAYER_2));\n  });\n});\n"]}