{"version":3,"file":"NetworkSearchScope.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/network/NetworkSearchScope.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Logs from '../../models/logs/logs.js';\nimport * as TextUtils from '../../models/text_utils/text_utils.js';\nimport * as Workspace from '../../models/workspace/workspace.js';\nimport {describeWithLocale} from '../../testing/EnvironmentHelpers.js';\nimport type * as Search from '../search/search.js';\n\nimport * as Network from './network.js';\n\ndescribeWithLocale('NetworkSearchScope', () => {\n  let scope: Network.NetworkSearchScope.NetworkSearchScope;\n\n  beforeEach(() => {\n    const fakeRequest1 = SDK.NetworkRequest.NetworkRequest.createWithoutBackendRequest(\n        'fakeId1', 'http://example.com/main.js' as Platform.DevToolsPath.UrlString,\n        'http://example.com/index.html' as Platform.DevToolsPath.UrlString, null);\n    fakeRequest1.setRequestHeaders([{name: 'fooRequestHeader', value: 'value1'}]);\n    fakeRequest1.responseHeaders = [{name: 'fooResponseHeader', value: 'foo value'}];\n    fakeRequest1.setResourceType(Common.ResourceType.resourceTypes.Script);\n    fakeRequest1.mimeType = 'text/javascript';\n    fakeRequest1.setContentDataProvider(\n        async () => new TextUtils.ContentData.ContentData(\n            'This is the response body of request 1.\\nAnd a second line.\\n', false, fakeRequest1.mimeType));\n\n    const fakeRequest2 = SDK.NetworkRequest.NetworkRequest.createWithoutBackendRequest(\n        'fakeId1', 'http://example.com/bundle.min.js' as Platform.DevToolsPath.UrlString,\n        'http://example.com/index.html' as Platform.DevToolsPath.UrlString, null);\n    fakeRequest2.setRequestHeaders([{name: 'barRequestHeader', value: 'value2'}]);\n    fakeRequest2.responseHeaders = [{name: 'barResponseHeader', value: 'bar value'}];\n    fakeRequest2.setResourceType(Common.ResourceType.resourceTypes.Script);\n    fakeRequest2.mimeType = 'text/javascript';\n    fakeRequest2.setContentDataProvider(\n        async () => new TextUtils.ContentData.ContentData(\n            'This is the first line.\\nAnd another line in the response body of request 2.\\n', false,\n            fakeRequest2.mimeType));\n\n    const fakeLog = sinon.createStubInstance(Logs.NetworkLog.NetworkLog, {requests: [fakeRequest1, fakeRequest2]});\n    scope = new Network.NetworkSearchScope.NetworkSearchScope(fakeLog);\n  });\n\n  it('calls finished callback when done', async () => {\n    const searchConfig = new Workspace.SearchConfig.SearchConfig('foo', false, false);\n    const finishedStub = sinon.stub();\n\n    await scope.performSearch(searchConfig, new Common.Progress.Progress(), () => {}, finishedStub);\n\n    assert.isTrue(finishedStub.calledOnceWith(true));\n  });\n\n  it('finds requests by url', async () => {\n    const searchConfig = new Workspace.SearchConfig.SearchConfig('main', false, false);\n    const results: Search.SearchScope.SearchResult[] = [];\n\n    await scope.performSearch(searchConfig, new Common.Progress.Progress(), result => results.push(result), () => {});\n\n    assert.lengthOf(results, 1);\n    assert.strictEqual(results[0].label(), 'main.js');\n    assert.strictEqual(results[0].matchesCount(), 1);\n    assert.strictEqual(results[0].matchLabel(0), 'URL');\n    assert.strictEqual(results[0].matchLineContent(0), 'http://example.com/main.js');\n  });\n\n  it('finds request header names', async () => {\n    const searchConfig = new Workspace.SearchConfig.SearchConfig('fooRequest', false, false);\n    const results: Search.SearchScope.SearchResult[] = [];\n\n    await scope.performSearch(searchConfig, new Common.Progress.Progress(), result => results.push(result), () => {});\n\n    assert.lengthOf(results, 1);\n    assert.strictEqual(results[0].label(), 'main.js');\n    assert.strictEqual(results[0].matchesCount(), 1);\n    assert.strictEqual(results[0].matchLabel(0), 'fooRequestHeader:');\n    assert.strictEqual(results[0].matchLineContent(0), 'value1');\n  });\n\n  it('finds request header values', async () => {\n    const searchConfig = new Workspace.SearchConfig.SearchConfig('value2', false, false);\n    const results: Search.SearchScope.SearchResult[] = [];\n\n    await scope.performSearch(searchConfig, new Common.Progress.Progress(), result => results.push(result), () => {});\n\n    assert.lengthOf(results, 1);\n    assert.strictEqual(results[0].label(), 'bundle.min.js');\n    assert.strictEqual(results[0].matchesCount(), 1);\n    assert.strictEqual(results[0].matchLabel(0), 'barRequestHeader:');\n    assert.strictEqual(results[0].matchLineContent(0), 'value2');\n  });\n\n  it('finds response header names', async () => {\n    const searchConfig = new Workspace.SearchConfig.SearchConfig('barResponse', false, false);\n    const results: Search.SearchScope.SearchResult[] = [];\n\n    await scope.performSearch(searchConfig, new Common.Progress.Progress(), result => results.push(result), () => {});\n\n    assert.lengthOf(results, 1);\n    assert.strictEqual(results[0].label(), 'bundle.min.js');\n    assert.strictEqual(results[0].matchesCount(), 1);\n    assert.strictEqual(results[0].matchLabel(0), 'barResponseHeader:');\n    assert.strictEqual(results[0].matchLineContent(0), 'bar value');\n  });\n\n  it('finds response header values', async () => {\n    const searchConfig = new Workspace.SearchConfig.SearchConfig('foo value', false, false);\n    const results: Search.SearchScope.SearchResult[] = [];\n\n    await scope.performSearch(searchConfig, new Common.Progress.Progress(), result => results.push(result), () => {});\n\n    assert.lengthOf(results, 1);\n    assert.strictEqual(results[0].label(), 'main.js');\n    assert.strictEqual(results[0].matchesCount(), 1);\n    assert.strictEqual(results[0].matchLabel(0), 'fooResponseHeader:');\n    assert.strictEqual(results[0].matchLineContent(0), 'foo value');\n  });\n\n  it('honors \"file:\" query prefixes to filter requests', async () => {\n    const searchConfig = new Workspace.SearchConfig.SearchConfig('f:main.js value', false, false);\n    const results: Search.SearchScope.SearchResult[] = [];\n\n    await scope.performSearch(searchConfig, new Common.Progress.Progress(), result => results.push(result), () => {});\n\n    assert.lengthOf(results, 1);\n    assert.strictEqual(results[0].label(), 'main.js');\n    assert.strictEqual(results[0].matchesCount(), 2);\n\n    assert.strictEqual(results[0].matchLabel(0), 'fooRequestHeader:');\n    assert.strictEqual(results[0].matchLineContent(0), 'value1');\n    assert.strictEqual(results[0].matchLabel(1), 'fooResponseHeader:');\n    assert.strictEqual(results[0].matchLineContent(1), 'foo value');\n  });\n\n  it('finds matches in response bodies', async () => {\n    const searchConfig = new Workspace.SearchConfig.SearchConfig('response body', false, false);\n    const results: Search.SearchScope.SearchResult[] = [];\n\n    await scope.performSearch(searchConfig, new Common.Progress.Progress(), result => results.push(result), () => {});\n\n    assert.lengthOf(results, 2);\n    assert.strictEqual(results[0].label(), 'bundle.min.js');\n    assert.strictEqual(results[0].matchesCount(), 1);\n    assert.strictEqual(results[0].matchLabel(0), '2');\n    assert.strictEqual(results[0].matchLineContent(0), 'And another line in the response body of request 2.');\n\n    assert.strictEqual(results[1].label(), 'main.js');\n    assert.strictEqual(results[1].matchesCount(), 1);\n    assert.strictEqual(results[1].matchLabel(0), '1');\n    assert.strictEqual(results[1].matchLineContent(0), 'This is the response body of request 1.');\n  });\n\n  it('handles \"file:\" prefix correctly for response body matches', async () => {\n    const searchConfig = new Workspace.SearchConfig.SearchConfig('f:bundle.min.js response body', false, false);\n    const results: Search.SearchScope.SearchResult[] = [];\n\n    await scope.performSearch(searchConfig, new Common.Progress.Progress(), result => results.push(result), () => {});\n\n    assert.lengthOf(results, 1);\n    assert.strictEqual(results[0].label(), 'bundle.min.js');\n    assert.strictEqual(results[0].matchesCount(), 1);\n    assert.strictEqual(results[0].matchLabel(0), '2');\n    assert.strictEqual(results[0].matchLineContent(0), 'And another line in the response body of request 2.');\n  });\n\n  it('finds matches in response bodies only if all parts of a query match', async () => {\n    const searchConfig = new Workspace.SearchConfig.SearchConfig('\"response body\"\"second line\"', false, false);\n    const results: Search.SearchScope.SearchResult[] = [];\n\n    await scope.performSearch(searchConfig, new Common.Progress.Progress(), result => results.push(result), () => {});\n\n    assert.lengthOf(results, 1);\n    assert.strictEqual(results[0].label(), 'main.js');\n    assert.strictEqual(results[0].matchesCount(), 2);\n    assert.strictEqual(results[0].matchLabel(0), '1');\n    assert.strictEqual(results[0].matchLineContent(0), 'This is the response body of request 1.');\n    assert.strictEqual(results[0].matchLabel(1), '2');\n    assert.strictEqual(results[0].matchLineContent(1), 'And a second line.');\n  });\n});\n"]}