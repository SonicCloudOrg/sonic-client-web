{"version":3,"file":"HeaderSectionRow.test.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/network/components/HeaderSectionRow.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Host from '../../../core/host/host.js';\nimport * as Platform from '../../../core/platform/platform.js';\nimport * as Protocol from '../../../generated/protocol.js';\nimport {\n  dispatchCopyEvent,\n  dispatchInputEvent,\n  dispatchKeyDownEvent,\n  dispatchPasteEvent,\n  getCleanTextContentFromElements,\n  renderElementIntoDOM,\n} from '../../../testing/DOMHelpers.js';\nimport {describeWithEnvironment} from '../../../testing/EnvironmentHelpers.js';\nimport * as Coordinator from '../../../ui/components/render_coordinator/render_coordinator.js';\n\nimport * as NetworkComponents from './components.js';\nimport {type EditableSpan} from './EditableSpan.js';\n\nconst coordinator = Coordinator.RenderCoordinator.RenderCoordinator.instance();\n\nasync function renderHeaderSectionRow(header: NetworkComponents.HeaderSectionRow.HeaderDescriptor): Promise<{\n  component: NetworkComponents.HeaderSectionRow.HeaderSectionRow,\n  nameEditable: HTMLSpanElement | null,\n  valueEditable: HTMLSpanElement | null,\n  scrollIntoViewSpy: sinon.SinonSpy,\n}> {\n  const component = new NetworkComponents.HeaderSectionRow.HeaderSectionRow();\n  const scrollIntoViewSpy = sinon.spy(component, 'scrollIntoView');\n  renderElementIntoDOM(component);\n  assert.isTrue(scrollIntoViewSpy.notCalled);\n  component.data = {header};\n  await coordinator.done();\n  assert.isNotNull(component.shadowRoot);\n\n  let nameEditable: HTMLSpanElement|null = null;\n  const nameEditableComponent = component.shadowRoot.querySelector<NetworkComponents.EditableSpan.EditableSpan>(\n      '.header-name devtools-editable-span');\n  if (nameEditableComponent) {\n    assert.instanceOf(nameEditableComponent, HTMLElement);\n    assert.isNotNull(nameEditableComponent.shadowRoot);\n    nameEditable = nameEditableComponent.shadowRoot.querySelector('.editable');\n    assert.instanceOf(nameEditable, HTMLSpanElement);\n  }\n\n  let valueEditable: HTMLSpanElement|null = null;\n  const valueEditableComponent = component.shadowRoot.querySelector<NetworkComponents.EditableSpan.EditableSpan>(\n      '.header-value devtools-editable-span');\n  if (valueEditableComponent) {\n    assert.instanceOf(valueEditableComponent, HTMLElement);\n    assert.isNotNull(valueEditableComponent.shadowRoot);\n    valueEditable = valueEditableComponent.shadowRoot.querySelector('.editable');\n    assert.instanceOf(valueEditable, HTMLSpanElement);\n  }\n\n  return {component, nameEditable, valueEditable, scrollIntoViewSpy};\n}\n\nconst hasReloadPrompt = (shadowRoot: ShadowRoot) => {\n  return Boolean(\n      shadowRoot.querySelector('devtools-icon[title=\"Refresh the page/request for these changes to take effect\"]'));\n};\n\ndescribeWithEnvironment('HeaderSectionRow', () => {\n  it('emits UMA event when a header value is being copied', async () => {\n    const headerData: NetworkComponents.HeaderSectionRow.HeaderDescriptor = {\n      name: Platform.StringUtilities.toLowerCaseString('some-header-name'),\n      value: 'someHeaderValue',\n      valueEditable: NetworkComponents.HeaderSectionRow.EditingAllowedStatus.Disabled,\n    };\n    const {component, scrollIntoViewSpy} = await renderHeaderSectionRow(headerData);\n    assert.isNotNull(component.shadowRoot);\n    assert.isTrue(scrollIntoViewSpy.notCalled);\n\n    const spy = sinon.spy(Host.userMetrics, 'actionTaken');\n    const headerValue = component.shadowRoot.querySelector('.header-value');\n    assert.instanceOf(headerValue, HTMLElement);\n\n    assert.isTrue(spy.notCalled);\n    dispatchCopyEvent(headerValue);\n    assert.isTrue(spy.calledWith(Host.UserMetrics.Action.NetworkPanelCopyValue));\n  });\n\n  it('renders detailed reason for blocked requests', async () => {\n    const headerData: NetworkComponents.HeaderSectionRow.HeaderDescriptor = {\n      name: Platform.StringUtilities.toLowerCaseString('cross-origin-resource-policy'),\n      value: null,\n      valueEditable: NetworkComponents.HeaderSectionRow.EditingAllowedStatus.Disabled,\n      headerNotSet: true,\n      blockedDetails: {\n        explanation: () =>\n            'To use this resource from a different origin, the server needs to specify a cross-origin resource policy in the response headers:',\n        examples: [\n          {\n            codeSnippet: 'Cross-Origin-Resource-Policy: same-site',\n            comment: () => 'Choose this option if the resource and the document are served from the same site.',\n          },\n          {\n            codeSnippet: 'Cross-Origin-Resource-Policy: cross-origin',\n            comment: () =>\n                'Only choose this option if an arbitrary website including this resource does not impose a security risk.',\n          },\n        ],\n        link: {url: 'https://web.dev/coop-coep/'},\n      },\n    };\n    const {component} = await renderHeaderSectionRow(headerData);\n    assert.isNotNull(component.shadowRoot);\n\n    const headerName = component.shadowRoot.querySelector('.header-name');\n    assert.instanceOf(headerName, HTMLDivElement);\n    const regex = /^\\s*not-set\\s*cross-origin-resource-policy:\\s*$/;\n    assert.isTrue(regex.test(headerName.textContent || ''));\n\n    const headerValue = component.shadowRoot.querySelector('.header-value');\n    assert.instanceOf(headerValue, HTMLDivElement);\n    assert.strictEqual(headerValue.textContent?.trim(), '');\n\n    assert.strictEqual(\n        getCleanTextContentFromElements(component.shadowRoot, '.call-to-action')[0],\n        'To use this resource from a different origin, the server needs to specify a cross-origin ' +\n            'resource policy in the response headers:Cross-Origin-Resource-Policy: same-siteChoose ' +\n            'this option if the resource and the document are served from the same site.' +\n            'Cross-Origin-Resource-Policy: cross-originOnly choose this option if an arbitrary website ' +\n            'including this resource does not impose a security risk.Learn more',\n    );\n  });\n\n  it('displays decoded \"x-client-data\"-header', async () => {\n    const headerData: NetworkComponents.HeaderSectionRow.HeaderDescriptor = {\n      name: Platform.StringUtilities.toLowerCaseString('x-client-data'),\n      value: 'CJa2yQEIpLbJAQiTocsB',\n      valueEditable: NetworkComponents.HeaderSectionRow.EditingAllowedStatus.Disabled,\n    };\n    const {component} = await renderHeaderSectionRow(headerData);\n    assert.isNotNull(component.shadowRoot);\n\n    const headerName = component.shadowRoot.querySelector('.header-name');\n    assert.instanceOf(headerName, HTMLDivElement);\n    assert.strictEqual(headerName.textContent?.trim(), 'x-client-data:');\n\n    const headerValue = component.shadowRoot.querySelector('.header-value');\n    assert.instanceOf(headerValue, HTMLDivElement);\n    assert.isTrue(headerValue.classList.contains('flex-columns'));\n\n    assert.isTrue(\n        (getCleanTextContentFromElements(component.shadowRoot, '.header-value')[0]).startsWith('CJa2yQEIpLbJAQiTocsB'));\n\n    assert.strictEqual(\n        getCleanTextContentFromElements(component.shadowRoot, '.header-value code')[0],\n        'message ClientVariations {// Active Google-visible variation IDs on this client. These are reported for analysis, but do not directly affect any server-side behavior.repeated int32 variation_id = [3300118, 3300132, 3330195];\\n}',\n    );\n  });\n\n  it('displays info about blocked \"Set-Cookie\"-headers', async () => {\n    const headerData: NetworkComponents.HeaderSectionRow.HeaderDescriptor = {\n      name: Platform.StringUtilities.toLowerCaseString('set-cookie'),\n      value: 'secure=only; Secure',\n      valueEditable: NetworkComponents.HeaderSectionRow.EditingAllowedStatus.Disabled,\n      setCookieBlockedReasons:\n          [Protocol.Network.SetCookieBlockedReason.SecureOnly, Protocol.Network.SetCookieBlockedReason.OverwriteSecure],\n    };\n    const {component} = await renderHeaderSectionRow(headerData);\n    assert.isNotNull(component.shadowRoot);\n\n    const headerName = component.shadowRoot.querySelector('.header-name');\n    assert.instanceOf(headerName, HTMLDivElement);\n    assert.strictEqual(headerName.textContent?.trim(), 'set-cookie:');\n\n    const headerValue = component.shadowRoot.querySelector('.header-value');\n    assert.instanceOf(headerValue, HTMLDivElement);\n    assert.strictEqual(headerValue.textContent?.trim(), 'secure=only; Secure');\n\n    const icon = component.shadowRoot.querySelector('devtools-icon');\n    assert.instanceOf(icon, HTMLElement);\n\n    assert.strictEqual(\n        icon.title,\n        'This attempt to set a cookie via a Set-Cookie header was blocked because it had the ' +\n            '\"Secure\" attribute but was not received over a secure connection.\\nThis attempt to ' +\n            'set a cookie via a Set-Cookie header was blocked because it was not sent over a ' +\n            'secure connection and would have overwritten a cookie with the Secure attribute.');\n  });\n\n  it('can be highlighted', async () => {\n    const headerData: NetworkComponents.HeaderSectionRow.HeaderDescriptor = {\n      name: Platform.StringUtilities.toLowerCaseString('some-header-name'),\n      value: 'someHeaderValue',\n      valueEditable: NetworkComponents.HeaderSectionRow.EditingAllowedStatus.Disabled,\n      highlight: true,\n    };\n    const {component, scrollIntoViewSpy} = await renderHeaderSectionRow(headerData);\n    assert.isNotNull(component.shadowRoot);\n    const headerRowElement = component.shadowRoot.querySelector('.row.header-highlight');\n    assert.instanceOf(headerRowElement, HTMLDivElement);\n    assert.isTrue(scrollIntoViewSpy.calledOnce);\n  });\n\n  it('allows editing header name and header value', async () => {\n    const originalHeaderName = Platform.StringUtilities.toLowerCaseString('some-header-name');\n    const originalHeaderValue = 'someHeaderValue';\n    const headerData: NetworkComponents.HeaderSectionRow.HeaderDescriptor = {\n      name: originalHeaderName,\n      value: originalHeaderValue,\n      nameEditable: true,\n      valueEditable: NetworkComponents.HeaderSectionRow.EditingAllowedStatus.Enabled,\n    };\n    const editedHeaderName = 'new-header-name';\n    const editedHeaderValue = 'new value for header';\n\n    const {component, nameEditable, valueEditable} = await renderHeaderSectionRow(headerData);\n    assert.isNotNull(component.shadowRoot);\n\n    let headerValueFromEvent = '';\n    let headerNameFromEvent = '';\n    let headerEditedEventCount = 0;\n    component.addEventListener('headeredited', event => {\n      headerEditedEventCount++;\n      headerValueFromEvent = event.headerValue;\n      headerNameFromEvent = event.headerName;\n    });\n\n    assert.instanceOf(nameEditable, HTMLSpanElement);\n    assert.isTrue(hasReloadPrompt(component.shadowRoot));\n    nameEditable.focus();\n    nameEditable.innerText = editedHeaderName;\n    dispatchInputEvent(nameEditable, {inputType: 'insertText', data: editedHeaderName, bubbles: true, composed: true});\n    nameEditable.blur();\n    await coordinator.done();\n\n    assert.strictEqual(headerEditedEventCount, 1);\n    assert.strictEqual(headerNameFromEvent, editedHeaderName);\n    assert.strictEqual(headerValueFromEvent, originalHeaderValue);\n    assert.isTrue(hasReloadPrompt(component.shadowRoot));\n\n    assert.instanceOf(valueEditable, HTMLSpanElement);\n    valueEditable.focus();\n    valueEditable.innerText = editedHeaderValue;\n    dispatchInputEvent(\n        valueEditable, {inputType: 'insertText', data: editedHeaderValue, bubbles: true, composed: true});\n    valueEditable.blur();\n    await coordinator.done();\n\n    assert.strictEqual(headerEditedEventCount, 2);\n    assert.strictEqual(headerNameFromEvent, editedHeaderName);\n    assert.strictEqual(headerValueFromEvent, editedHeaderValue);\n    assert.isTrue(hasReloadPrompt(component.shadowRoot));\n\n    nameEditable.focus();\n    nameEditable.innerText = originalHeaderName;\n    dispatchInputEvent(\n        nameEditable, {inputType: 'insertText', data: originalHeaderName, bubbles: true, composed: true});\n    nameEditable.blur();\n    await coordinator.done();\n\n    assert.strictEqual(headerEditedEventCount, 3);\n    assert.strictEqual(headerNameFromEvent, originalHeaderName);\n    assert.strictEqual(headerValueFromEvent, editedHeaderValue);\n    assert.isTrue(hasReloadPrompt(component.shadowRoot));\n\n    valueEditable.focus();\n    valueEditable.innerText = originalHeaderValue;\n    dispatchInputEvent(\n        valueEditable, {inputType: 'insertText', data: originalHeaderValue, bubbles: true, composed: true});\n    valueEditable.blur();\n    await coordinator.done();\n\n    assert.strictEqual(headerEditedEventCount, 4);\n    assert.strictEqual(headerNameFromEvent, originalHeaderName);\n    assert.strictEqual(headerValueFromEvent, originalHeaderValue);\n    assert.isTrue(hasReloadPrompt(component.shadowRoot));\n  });\n\n  it('does not allow setting an emtpy header name', async () => {\n    const headerName = Platform.StringUtilities.toLowerCaseString('some-header-name');\n    const headerData: NetworkComponents.HeaderSectionRow.HeaderDescriptor = {\n      name: headerName,\n      value: 'someHeaderValue',\n      nameEditable: true,\n      valueEditable: NetworkComponents.HeaderSectionRow.EditingAllowedStatus.Enabled,\n    };\n\n    const {component, nameEditable} = await renderHeaderSectionRow(headerData);\n    assert.isNotNull(component.shadowRoot);\n\n    let headerEditedEventCount = 0;\n    component.addEventListener('headeredited', () => {\n      headerEditedEventCount++;\n    });\n\n    assert.instanceOf(nameEditable, HTMLElement);\n    nameEditable.focus();\n    nameEditable.innerText = '';\n    nameEditable.blur();\n\n    assert.strictEqual(headerEditedEventCount, 0);\n    assert.strictEqual(nameEditable.innerText, 'Some-Header-Name');\n  });\n\n  it('resets edited value on escape key', async () => {\n    const originalHeaderValue = 'special chars: \\'\\\"\\\\.,;!?@_-+/=<>()[]{}|*&^%$#§±`~';\n    const headerData: NetworkComponents.HeaderSectionRow.HeaderDescriptor = {\n      name: Platform.StringUtilities.toLowerCaseString('some-header-name'),\n      value: originalHeaderValue,\n      originalValue: originalHeaderValue,\n      valueEditable: NetworkComponents.HeaderSectionRow.EditingAllowedStatus.Enabled,\n    };\n\n    const {component, valueEditable} = await renderHeaderSectionRow(headerData);\n    assert.isNotNull(component.shadowRoot);\n\n    let eventCount = 0;\n    component.addEventListener('headeredited', () => {\n      eventCount++;\n    });\n\n    assert.instanceOf(valueEditable, HTMLElement);\n    assert.strictEqual(valueEditable.innerText, originalHeaderValue);\n    valueEditable.focus();\n    valueEditable.innerText = 'new value for header';\n    dispatchKeyDownEvent(valueEditable, {key: 'Escape', bubbles: true, composed: true});\n\n    assert.strictEqual(eventCount, 0);\n    assert.strictEqual(valueEditable.innerText, originalHeaderValue);\n    const row = component.shadowRoot.querySelector('.row');\n    assert.isFalse(row?.classList.contains('header-overridden'));\n  });\n\n  it('confirms edited value and exits editing mode on \"Enter\"-key', async () => {\n    const headerData: NetworkComponents.HeaderSectionRow.HeaderDescriptor = {\n      name: Platform.StringUtilities.toLowerCaseString('some-header-name'),\n      value: 'someHeaderValue',\n      valueEditable: NetworkComponents.HeaderSectionRow.EditingAllowedStatus.Enabled,\n    };\n    const editedHeaderValue = 'new value for header';\n\n    const {component, valueEditable} = await renderHeaderSectionRow(headerData);\n    assert.isNotNull(component.shadowRoot);\n\n    let headerValueFromEvent = '';\n    let eventCount = 0;\n    component.addEventListener('headeredited', event => {\n      headerValueFromEvent = event.headerValue;\n      eventCount++;\n    });\n\n    assert.instanceOf(valueEditable, HTMLElement);\n    valueEditable.focus();\n    valueEditable.innerText = editedHeaderValue;\n    dispatchKeyDownEvent(valueEditable, {key: 'Enter', bubbles: true});\n\n    assert.strictEqual(headerValueFromEvent, editedHeaderValue);\n    assert.strictEqual(eventCount, 1);\n  });\n\n  it('adds and removes `header-overridden` class correctly', async () => {\n    const headerData: NetworkComponents.HeaderSectionRow.HeaderDescriptor = {\n      name: Platform.StringUtilities.toLowerCaseString('some-header-name'),\n      value: 'someHeaderValue',\n      originalValue: 'someHeaderValue',\n      valueEditable: NetworkComponents.HeaderSectionRow.EditingAllowedStatus.Enabled,\n      highlight: true,\n    };\n\n    const {component, valueEditable} = await renderHeaderSectionRow(headerData);\n    assert.isNotNull(component.shadowRoot);\n    assert.instanceOf(valueEditable, HTMLElement);\n    const row = component.shadowRoot.querySelector('.row');\n    assert.isFalse(row?.classList.contains('header-overridden'));\n    assert.isTrue(row?.classList.contains('header-highlight'));\n    assert.isFalse(hasReloadPrompt(component.shadowRoot));\n\n    valueEditable.focus();\n    valueEditable.innerText = 'a';\n    dispatchInputEvent(valueEditable, {inputType: 'insertText', data: 'a', bubbles: true, composed: true});\n    await coordinator.done();\n    assert.isTrue(row?.classList.contains('header-overridden'));\n    assert.isFalse(row?.classList.contains('header-highlight'));\n    assert.isTrue(hasReloadPrompt(component.shadowRoot));\n\n    dispatchKeyDownEvent(valueEditable, {key: 'Escape', bubbles: true, composed: true});\n    await coordinator.done();\n    assert.isFalse(component.shadowRoot.querySelector('.row')?.classList.contains('header-overridden'));\n  });\n\n  it('adds and removes `header-overridden` class correctly when editing unset headers', async () => {\n    const headerData: NetworkComponents.HeaderSectionRow.HeaderDescriptor = {\n      name: Platform.StringUtilities.toLowerCaseString('some-header-name'),\n      value: null,\n      originalValue: null,\n      valueEditable: NetworkComponents.HeaderSectionRow.EditingAllowedStatus.Enabled,\n    };\n\n    const {component, valueEditable} = await renderHeaderSectionRow(headerData);\n    assert.isNotNull(component.shadowRoot);\n    assert.instanceOf(valueEditable, HTMLElement);\n    const row = component.shadowRoot.querySelector('.row');\n    assert.isFalse(row?.classList.contains('header-overridden'));\n\n    valueEditable.focus();\n    valueEditable.innerText = 'a';\n    dispatchInputEvent(valueEditable, {inputType: 'insertText', data: 'a', bubbles: true, composed: true});\n    await coordinator.done();\n    assert.isTrue(row?.classList.contains('header-overridden'));\n\n    dispatchKeyDownEvent(valueEditable, {key: 'Escape', bubbles: true, composed: true});\n    await coordinator.done();\n    assert.isFalse(component.shadowRoot.querySelector('.row')?.classList.contains('header-overridden'));\n  });\n\n  it('shows error-icon when header name contains disallowed characters', async () => {\n    const headerData: NetworkComponents.HeaderSectionRow.HeaderDescriptor = {\n      name: Platform.StringUtilities.toLowerCaseString('some-header-name'),\n      value: 'someHeaderValue',\n      originalValue: 'someHeaderValue',\n      nameEditable: true,\n      valueEditable: NetworkComponents.HeaderSectionRow.EditingAllowedStatus.Enabled,\n    };\n\n    const {component, nameEditable} = await renderHeaderSectionRow(headerData);\n    assert.isNotNull(component.shadowRoot);\n    assert.instanceOf(nameEditable, HTMLElement);\n    const row = component.shadowRoot.querySelector('.row');\n    assert.instanceOf(row, HTMLDivElement);\n    assert.strictEqual(row.querySelector('devtools-icon.disallowed-characters'), null);\n    assert.isTrue(hasReloadPrompt(component.shadowRoot));\n\n    nameEditable.focus();\n    nameEditable.innerText = '*';\n    dispatchInputEvent(nameEditable, {inputType: 'insertText', data: '*', bubbles: true, composed: true});\n    await coordinator.done();\n    assert.instanceOf(row.querySelector('devtools-icon.disallowed-characters'), HTMLElement);\n    assert.isTrue(hasReloadPrompt(component.shadowRoot));\n\n    dispatchKeyDownEvent(nameEditable, {key: 'Escape', bubbles: true, composed: true});\n    await coordinator.done();\n    assert.strictEqual(row.querySelector('devtools-icon.disallowed-characters'), null);\n    assert.isTrue(hasReloadPrompt(component.shadowRoot));\n  });\n\n  it('split header name and value on pasted content', async () => {\n    const originalHeaderName = Platform.StringUtilities.toLowerCaseString('some-header-name');\n    const originalHeaderValue = 'someHeaderValue';\n    const headerData: NetworkComponents.HeaderSectionRow.HeaderDescriptor = {\n      name: originalHeaderName,\n      value: originalHeaderValue,\n      nameEditable: true,\n      valueEditable: NetworkComponents.HeaderSectionRow.EditingAllowedStatus.Enabled,\n    };\n    const editedHeaderName = 'permissions-Policy: unload=(https://xyz.com)';\n\n    const {component, nameEditable, valueEditable} = await renderHeaderSectionRow(headerData);\n    assert.isNotNull(component.shadowRoot);\n    assert.instanceOf(nameEditable, HTMLElement);\n    assert.instanceOf(valueEditable, HTMLElement);\n\n    let headerValueFromEvent = '';\n    let headerNameFromEvent = '';\n    let headerEditedEventCount = 0;\n\n    component.addEventListener('headeredited', event => {\n      headerValueFromEvent = event.headerValue;\n      headerNameFromEvent = event.headerName;\n      headerEditedEventCount++;\n    });\n\n    const dt = new DataTransfer();\n    dt.setData('text/plain', editedHeaderName);\n\n    // update name on blur\n    nameEditable.focus();\n    dispatchPasteEvent(nameEditable, {clipboardData: dt, bubbles: true, composed: true});\n    nameEditable.blur();\n\n    await coordinator.done();\n    assert.strictEqual(headerEditedEventCount, 1);\n    assert.strictEqual(headerNameFromEvent, 'permissions-policy');\n    assert.strictEqual(headerValueFromEvent, 'someHeaderValue');\n\n    // update value on blur\n    valueEditable.blur();\n    await coordinator.done();\n    assert.strictEqual(headerEditedEventCount, 2);\n    assert.strictEqual(headerNameFromEvent, 'permissions-policy');\n    assert.strictEqual(headerValueFromEvent, 'unload=(https://xyz.com)');\n\n    // final value on UI\n    const nameEl = component.shadowRoot.querySelector('.header-name devtools-editable-span') as EditableSpan;\n    const valueEl = component.shadowRoot.querySelector('.header-value devtools-editable-span') as EditableSpan;\n\n    assert.strictEqual(nameEl.value, 'Permissions-Policy');\n    assert.strictEqual(valueEl.value, 'unload=(https://xyz.com)');\n  });\n\n  it('set and revert pasted header name on escape', async () => {\n    const originalHeaderName = Platform.StringUtilities.toLowerCaseString('some-header-name');\n    const originalHeaderValue = 'someHeaderValue';\n    const headerData: NetworkComponents.HeaderSectionRow.HeaderDescriptor = {\n      name: originalHeaderName,\n      value: originalHeaderValue,\n      nameEditable: true,\n      valueEditable: NetworkComponents.HeaderSectionRow.EditingAllowedStatus.Enabled,\n    };\n    const editedHeaderName = ':abc';\n\n    const {component, nameEditable, valueEditable} = await renderHeaderSectionRow(headerData);\n    assert.isNotNull(component.shadowRoot);\n    assert.instanceOf(nameEditable, HTMLElement);\n    assert.instanceOf(valueEditable, HTMLElement);\n\n    let headerEditedEventCount = 0;\n\n    component.addEventListener('headeredited', () => {\n      headerEditedEventCount++;\n    });\n\n    const dt = new DataTransfer();\n    dt.setData('text/plain', editedHeaderName);\n\n    nameEditable.focus();\n    dispatchPasteEvent(nameEditable, {clipboardData: dt, bubbles: true, composed: true});\n\n    const nameEl = component.shadowRoot.querySelector('.header-name devtools-editable-span') as EditableSpan;\n    const valueEl = component.shadowRoot.querySelector('.header-value devtools-editable-span') as EditableSpan;\n\n    await coordinator.done();\n    assert.strictEqual(nameEl.value, ':Abc');\n    assert.strictEqual(valueEl.value, originalHeaderValue);\n\n    dispatchKeyDownEvent(nameEditable, {key: 'Escape', bubbles: true, composed: true});\n\n    await coordinator.done();\n    assert.strictEqual(headerEditedEventCount, 0);\n    assert.strictEqual(nameEl.value, 'Some-Header-Name');\n  });\n\n  it('revert pasted header name and value on escape', async () => {\n    const originalHeaderName = Platform.StringUtilities.toLowerCaseString('some-header-name');\n    const originalHeaderValue = 'someHeaderValue';\n    const headerData: NetworkComponents.HeaderSectionRow.HeaderDescriptor = {\n      name: originalHeaderName,\n      value: originalHeaderValue,\n      nameEditable: true,\n      valueEditable: NetworkComponents.HeaderSectionRow.EditingAllowedStatus.Enabled,\n    };\n    const editedHeaderName = 'permissions-Policy: unload=(https://xyz.com)';\n\n    const {component, nameEditable, valueEditable} = await renderHeaderSectionRow(headerData);\n    assert.isNotNull(component.shadowRoot);\n    assert.instanceOf(nameEditable, HTMLElement);\n    assert.instanceOf(valueEditable, HTMLElement);\n\n    let headerEditedEventCount = 0;\n\n    component.addEventListener('headeredited', () => {\n      headerEditedEventCount++;\n    });\n\n    const dt = new DataTransfer();\n    dt.setData('text/plain', editedHeaderName);\n\n    nameEditable.focus();\n    dispatchPasteEvent(nameEditable, {clipboardData: dt, bubbles: true, composed: true});\n\n    const nameEl = component.shadowRoot.querySelector('.header-name devtools-editable-span') as EditableSpan;\n    const valueEl = component.shadowRoot.querySelector('.header-value devtools-editable-span') as EditableSpan;\n\n    await coordinator.done();\n    assert.strictEqual(nameEl.value, 'Permissions-Policy');\n    assert.strictEqual(valueEl.value, 'unload=(https://xyz.com)');\n\n    dispatchKeyDownEvent(valueEditable, {key: 'Escape', bubbles: true, composed: true});\n\n    await coordinator.done();\n    assert.strictEqual(headerEditedEventCount, 0);\n    assert.strictEqual(nameEl.value, 'Some-Header-Name');\n    assert.strictEqual(valueEl.value, 'someHeaderValue');\n  });\n\n  it('recoginzes only alphanumeric characters, dashes, and underscores as valid in header names', () => {\n    assert.strictEqual(NetworkComponents.HeaderSectionRow.isValidHeaderName('AlphaNumeric123'), true);\n    assert.strictEqual(NetworkComponents.HeaderSectionRow.isValidHeaderName('Alpha Numeric'), false);\n    assert.strictEqual(NetworkComponents.HeaderSectionRow.isValidHeaderName('AlphaNumeric123!'), false);\n    assert.strictEqual(NetworkComponents.HeaderSectionRow.isValidHeaderName('With-dashes_and_underscores'), true);\n    assert.strictEqual(NetworkComponents.HeaderSectionRow.isValidHeaderName('no*'), false);\n  });\n\n  it('allows removing a header override', async () => {\n    const headerName = Platform.StringUtilities.toLowerCaseString('some-header-name');\n    const headerValue = 'someHeaderValue';\n    const headerData: NetworkComponents.HeaderSectionRow.HeaderDescriptor = {\n      name: headerName,\n      value: headerValue,\n      valueEditable: NetworkComponents.HeaderSectionRow.EditingAllowedStatus.Enabled,\n    };\n\n    const {component} = await renderHeaderSectionRow(headerData);\n    assert.isNotNull(component.shadowRoot);\n\n    let headerValueFromEvent = '';\n    let headerNameFromEvent = '';\n    let headerRemovedEventCount = 0;\n\n    component.addEventListener('headerremoved', event => {\n      headerRemovedEventCount++;\n      headerValueFromEvent = (event as NetworkComponents.HeaderSectionRow.HeaderRemovedEvent).headerValue;\n      headerNameFromEvent = (event as NetworkComponents.HeaderSectionRow.HeaderRemovedEvent).headerName;\n    });\n\n    const removeHeaderButton = component.shadowRoot.querySelector('.remove-header') as HTMLElement;\n    removeHeaderButton.click();\n\n    assert.strictEqual(headerRemovedEventCount, 1);\n    assert.strictEqual(headerNameFromEvent, headerName);\n    assert.strictEqual(headerValueFromEvent, headerValue);\n  });\n\n  it('removes leading/trailing whitespace when editing header names/values', async () => {\n    const originalHeaderName = Platform.StringUtilities.toLowerCaseString('some-header-name');\n    const originalHeaderValue = 'someHeaderValue';\n    const headerData: NetworkComponents.HeaderSectionRow.HeaderDescriptor = {\n      name: originalHeaderName,\n      value: originalHeaderValue,\n      nameEditable: true,\n      valueEditable: NetworkComponents.HeaderSectionRow.EditingAllowedStatus.Enabled,\n    };\n    const editedHeaderName = ' new-header-name ';\n    const editedHeaderValue = ' new value for header ';\n\n    const {component, nameEditable, valueEditable} = await renderHeaderSectionRow(headerData);\n    assert.isNotNull(component.shadowRoot);\n\n    let headerValueFromEvent = '';\n    let headerNameFromEvent = '';\n    let headerEditedEventCount = 0;\n    component.addEventListener('headeredited', event => {\n      headerEditedEventCount++;\n      headerValueFromEvent = event.headerValue;\n      headerNameFromEvent = event.headerName;\n    });\n\n    assert.instanceOf(nameEditable, HTMLElement);\n    nameEditable.focus();\n    nameEditable.innerText = editedHeaderName;\n    nameEditable.blur();\n\n    assert.strictEqual(headerEditedEventCount, 1);\n    assert.strictEqual(headerNameFromEvent, editedHeaderName.trim());\n    assert.strictEqual(headerValueFromEvent, originalHeaderValue);\n\n    assert.instanceOf(valueEditable, HTMLElement);\n    valueEditable.focus();\n    valueEditable.innerText = editedHeaderValue;\n    valueEditable.blur();\n\n    assert.strictEqual(headerEditedEventCount, 2);\n    assert.strictEqual(headerNameFromEvent, editedHeaderName.trim());\n    assert.strictEqual(headerValueFromEvent, editedHeaderValue.trim());\n  });\n});\n"]}