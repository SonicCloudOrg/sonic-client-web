{"version":3,"file":"EventSourceMessagesView.js","sourceRoot":"","sources":["../../../../../../front_end/panels/network/EventSourceMessagesView.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2014 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as DataGrid from '../../ui/legacy/components/data_grid/data_grid.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport eventSourceMessagesViewStyles from './eventSourceMessagesView.css.js';\n\nconst UIStrings = {\n  /**\n   *@description Text in Event Source Messages View of the Network panel\n   */\n  id: 'Id',\n  /**\n   *@description Text that refers to some types\n   */\n  type: 'Type',\n  /**\n   *@description Text in Event Source Messages View of the Network panel\n   */\n  data: 'Data',\n  /**\n   *@description Text that refers to the time\n   */\n  time: 'Time',\n  /**\n   *@description Data grid name for Event Source data grids\n   */\n  eventSource: 'Event Source',\n  /**\n   *@description A context menu item in the Resource Web Socket Frame View of the Network panel\n   */\n  copyMessage: 'Copy message',\n  /**\n   *@description Text to clear everything\n   */\n  clearAll: 'Clear all',\n  /**\n   *@description Example for placeholder text\n   */\n  filterByRegex: 'Filter using regex (example: https?)',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/network/EventSourceMessagesView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class EventSourceMessagesView extends UI.Widget.VBox {\n  private readonly request: SDK.NetworkRequest.NetworkRequest;\n  private dataGrid: DataGrid.SortableDataGrid.SortableDataGrid<EventSourceMessageNode>;\n  private readonly mainToolbar: UI.Toolbar.Toolbar;\n  private readonly clearAllButton: UI.Toolbar.ToolbarButton;\n  private readonly filterTextInput: UI.Toolbar.ToolbarInput;\n  private filterRegex: RegExp|null;\n\n  private messageFilterSetting: Common.Settings.Setting<string> =\n      Common.Settings.Settings.instance().createSetting('network-event-source-message-filter', '');\n\n  constructor(request: SDK.NetworkRequest.NetworkRequest) {\n    super();\n\n    this.element.classList.add('event-source-messages-view');\n    this.element.setAttribute('jslog', `${VisualLogging.pane('event-stream').track({resize: true})}`);\n    this.request = request;\n\n    this.mainToolbar = new UI.Toolbar.Toolbar('');\n\n    this.clearAllButton = new UI.Toolbar.ToolbarButton(i18nString(UIStrings.clearAll), 'clear');\n    this.clearAllButton.addEventListener(UI.Toolbar.ToolbarButton.Events.Click, this.clearMessages, this);\n    this.mainToolbar.appendToolbarItem(this.clearAllButton);\n\n    const placeholder = i18nString(UIStrings.filterByRegex);\n    this.filterTextInput = new UI.Toolbar.ToolbarFilter(placeholder, 0.4);\n    this.filterTextInput.addEventListener(UI.Toolbar.ToolbarInput.Event.TextChanged, this.updateFilterSetting, this);\n    const filter = this.messageFilterSetting.get();\n    this.filterRegex = null;\n    this.setFilter(filter);\n    if (filter) {\n      this.filterTextInput.setValue(filter);\n    }\n    this.mainToolbar.appendToolbarItem(this.filterTextInput);\n\n    this.element.appendChild(this.mainToolbar.element);\n\n    const columns = ([\n      {id: 'id', title: i18nString(UIStrings.id), sortable: true, weight: 8},\n      {id: 'type', title: i18nString(UIStrings.type), sortable: true, weight: 8},\n      {id: 'data', title: i18nString(UIStrings.data), sortable: false, weight: 88},\n      {id: 'time', title: i18nString(UIStrings.time), sortable: true, weight: 8},\n    ] as DataGrid.DataGrid.ColumnDescriptor[]);\n\n    this.dataGrid = new DataGrid.SortableDataGrid.SortableDataGrid({\n      displayName: i18nString(UIStrings.eventSource),\n      columns,\n      editCallback: undefined,\n      deleteCallback: undefined,\n      refreshCallback: undefined,\n    });\n    this.dataGrid.setStriped(true);\n    this.dataGrid.setStickToBottom(true);\n    this.dataGrid.setRowContextMenuCallback(this.onRowContextMenu.bind(this));\n    this.dataGrid.markColumnAsSortedBy('time', DataGrid.DataGrid.Order.Ascending);\n    this.sortItems();\n    this.dataGrid.addEventListener(DataGrid.DataGrid.Events.SortingChanged, this.sortItems, this);\n\n    this.dataGrid.setName('event-source-messages-view');\n    this.dataGrid.asWidget().show(this.element);\n  }\n\n  override wasShown(): void {\n    this.refresh();\n    this.registerCSSFiles([eventSourceMessagesViewStyles]);\n    this.request.addEventListener(SDK.NetworkRequest.Events.EventSourceMessageAdded, this.messageAdded, this);\n  }\n\n  override willHide(): void {\n    this.request.removeEventListener(SDK.NetworkRequest.Events.EventSourceMessageAdded, this.messageAdded, this);\n  }\n\n  private messageAdded(event: Common.EventTarget.EventTargetEvent<SDK.NetworkRequest.EventSourceMessage>): void {\n    const message = event.data;\n    if (!this.messageFilter(message)) {\n      return;\n    }\n    this.dataGrid.insertChild(new EventSourceMessageNode(message));\n  }\n\n  private messageFilter(message: SDK.NetworkRequest.EventSourceMessage): boolean {\n    return !this.filterRegex || this.filterRegex.test(message.eventName) || this.filterRegex.test(message.eventId) ||\n        this.filterRegex.test(message.data);\n  }\n\n  private clearMessages(): void {\n    clearMessageOffsets.set(this.request, this.request.eventSourceMessages().length);\n    this.refresh();\n  }\n\n  private updateFilterSetting(): void {\n    const text = this.filterTextInput.value();\n    this.messageFilterSetting.set(text);\n    this.setFilter(text);\n    this.refresh();\n  }\n\n  private setFilter(text: string): void {\n    this.filterRegex = null;\n    if (text) {\n      try {\n        this.filterRegex = new RegExp(text, 'i');\n      } catch (e) {\n        // this regex will never match any input\n        this.filterRegex = new RegExp('(?!)', 'i');\n      }\n    }\n  }\n\n  private sortItems(): void {\n    const sortColumnId = this.dataGrid.sortColumnId();\n    if (!sortColumnId) {\n      return;\n    }\n    const comparator =\n        (Comparators[sortColumnId] as\n             ((arg0: DataGrid.SortableDataGrid.SortableDataGridNode<EventSourceMessageNode>,\n               arg1: DataGrid.SortableDataGrid.SortableDataGridNode<EventSourceMessageNode>) => number) |\n         undefined);\n    if (!comparator) {\n      return;\n    }\n    this.dataGrid.sortNodes(comparator, !this.dataGrid.isSortOrderAscending());\n  }\n\n  private onRowContextMenu(\n      contextMenu: UI.ContextMenu.ContextMenu,\n      node: DataGrid.DataGrid.DataGridNode<DataGrid.ViewportDataGrid.ViewportDataGridNode<\n          DataGrid.SortableDataGrid.SortableDataGridNode<EventSourceMessageNode>>>): void {\n    contextMenu.clipboardSection().appendItem(\n        i18nString(UIStrings.copyMessage),\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText.bind(\n            Host.InspectorFrontendHost.InspectorFrontendHostInstance, node.data.data),\n        {jslogContext: 'copy'});\n  }\n\n  refresh(): void {\n    this.dataGrid.rootNode().removeChildren();\n\n    let messages = this.request.eventSourceMessages();\n    const offset = clearMessageOffsets.get(this.request) || 0;\n    messages = messages.slice(offset);\n    messages = messages.filter(this.messageFilter.bind(this));\n    messages.forEach(message => this.dataGrid.insertChild(new EventSourceMessageNode(message)));\n  }\n}\n\nexport class EventSourceMessageNode extends DataGrid.SortableDataGrid.SortableDataGridNode<EventSourceMessageNode> {\n  readonly message: SDK.NetworkRequest.EventSourceMessage;\n\n  constructor(message: SDK.NetworkRequest.EventSourceMessage) {\n    const time = new Date(message.time * 1000);\n    const timeText = ('0' + time.getHours()).substr(-2) + ':' + ('0' + time.getMinutes()).substr(-2) + ':' +\n        ('0' + time.getSeconds()).substr(-2) + '.' + ('00' + time.getMilliseconds()).substr(-3);\n    const timeNode = document.createElement('div');\n    UI.UIUtils.createTextChild(timeNode, timeText);\n    UI.Tooltip.Tooltip.install(timeNode, time.toLocaleString());\n    super({id: message.eventId, type: message.eventName, data: message.data, time: timeNode});\n    this.message = message;\n  }\n}\n\nfunction eventSourceMessageNodeComparator(\n    fieldGetter: (arg0: SDK.NetworkRequest.EventSourceMessage) => (number | string), a: EventSourceMessageNode,\n    b: EventSourceMessageNode): number {\n  const aValue = fieldGetter(a.message);\n  const bValue = fieldGetter(b.message);\n  return aValue < bValue ? -1 : aValue > bValue ? 1 : 0;\n}\n\nexport const Comparators: {\n  [x: string]: (arg0: EventSourceMessageNode, arg1: EventSourceMessageNode) => number,\n} = {\n  'id': eventSourceMessageNodeComparator.bind(null, message => message.eventId),\n  'type': eventSourceMessageNodeComparator.bind(null, message => message.eventName),\n  'time': eventSourceMessageNodeComparator.bind(null, message => message.time),\n};\n\nconst clearMessageOffsets = new WeakMap<SDK.NetworkRequest.NetworkRequest, number>();\n"]}