{"version":3,"file":"RequestPayloadView.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/network/RequestPayloadView.test.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,OAAO,MAAM,cAAc,CAAC;AAExC,QAAQ,CAAC,oBAAoB,EAAE,GAAG,EAAE;IAClC,EAAE,CAAC,iBAAiB,EAAE,KAAK,IAAI,EAAE;QAC/B,MAAM,OAAO,GAAG,mDAAmD,CAAC;QACpE,MAAM,gBAAgB,GAAG,OAAO,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,eAAe,CAAC,OAAO,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;QAC1G,MAAM,CAAC,WAAW,CAAC,gBAAgB,CAAC,WAAW,EAAE,+BAA+B,CAAC,CAAC;IACpF,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Network from './network.js';\n\ndescribe('RequestPayloadView', () => {\n  it('decodes headers', async () => {\n    const encoded = 'Test+%21%40%23%24%25%5E%26*%28%29_%2B+parameters.';\n    const parameterElement = Network.RequestPayloadView.RequestPayloadView.formatParameter(encoded, '', true);\n    assert.strictEqual(parameterElement.textContent, 'Test !@#$%^&*()_+ parameters.');\n  });\n});\n"]}