{"version":3,"file":"RequestHTMLView.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/network/RequestHTMLView.test.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,SAAS,MAAM,uCAAuC,CAAC;AAEnE,OAAO,KAAK,OAAO,MAAM,cAAc,CAAC;AAExC,QAAQ,CAAC,iBAAiB,EAAE,GAAG,EAAE;IAC/B,EAAE,CAAC,wCAAwC,EAAE,KAAK,IAAI,EAAE;QACtD,MAAM,OAAO,GAAG,yFAAyF,CAAC;QAC1G,MAAM,WAAW,GAAG,IAAI,SAAS,CAAC,WAAW,CAAC,WAAW,CAAC,OAAO,EAAE,KAAK,EAAE,WAAW,CAAC,CAAC;QACvF,MAAM,QAAQ,GAAG,OAAO,CAAC,eAAe,CAAC,eAAe,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;QAC7E,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QACxB,QAAQ,CAAC,UAAU,EAAE,CAAC;QACtB,MAAM,GAAG,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC1C,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAEnB,MAAM,MAAM,GAAG,QAAQ,CAAC,cAAc,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QAC/D,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QAEtB,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,GAAG,EAAE,WAAW,CAAC,SAAS,EAAE,CAAC,CAAC;QACxD,MAAM,CAAC,WAAW,CAAC,kBAAkB,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,+BAA+B,GAAG,OAAO,CAAC,CAAC;QAE9F,QAAQ,CAAC,MAAM,EAAE,CAAC;IACpB,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as TextUtils from '../../models/text_utils/text_utils.js';\n\nimport * as Network from './network.js';\n\ndescribe('RequestHTMLView', () => {\n  it('renders a HTML document into an iframe', async () => {\n    const content = '<body><p>octothorp: #</p><p>hello world!<p>%3Cp%3EURI%20encoded%20tag!%3C%2Fp%3E</body>';\n    const contentData = new TextUtils.ContentData.ContentData(content, false, 'text/html');\n    const htmlView = Network.RequestHTMLView.RequestHTMLView.create(contentData);\n    assert.exists(htmlView);\n    htmlView.markAsRoot();\n    const div = document.createElement('div');\n    htmlView.show(div);\n\n    const iframe = htmlView.contentElement.querySelector('iframe');\n    assert.exists(iframe);\n\n    assert.strictEqual(iframe.src, contentData.asDataUrl());\n    assert.strictEqual(decodeURIComponent(iframe.src), 'data:text/html;charset=utf-8,' + content);\n\n    htmlView.detach();\n  });\n});\n"]}