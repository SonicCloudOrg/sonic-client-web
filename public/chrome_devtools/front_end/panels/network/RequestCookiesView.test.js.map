{"version":3,"file":"RequestCookiesView.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/network/RequestCookiesView.test.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAG7B,OAAO,KAAK,IAAI,MAAM,yBAAyB,CAAC;AAChD,OAAO,KAAK,GAAG,MAAM,uBAAuB,CAAC;AAE7C,OAAO,EAAC,oBAAoB,EAAC,MAAM,6BAA6B,CAAC;AACjE,OAAO,EAAC,0BAA0B,EAAC,MAAM,iCAAiC,CAAC;AAE3E,OAAO,KAAK,OAAO,MAAM,cAAc,CAAC;AAExC,SAAS,iBAAiB,CAAC,OAA0C;IACnE,MAAM,SAAS,GAAG,IAAI,OAAO,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC;IAC7E,MAAM,GAAG,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IAC1C,oBAAoB,CAAC,GAAG,CAAC,CAAC;IAC1B,SAAS,CAAC,UAAU,EAAE,CAAC;IACvB,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACpB,OAAO,SAAS,CAAC;AACnB,CAAC;AAED,0BAA0B,CAAC,oBAAoB,EAAE,GAAG,EAAE;IACpD,UAAU,CAAC,GAAG,EAAE;QACd,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,QAAQ,CAAC,8BAA8B,EAAE,EAAE,CAAC,CAAC;IACxE,CAAC,CAAC,CAAC;IACH,EAAE,CAAC,mEAAmE,EAAE,GAAG,EAAE;QAC3E,MAAM,OAAO,GAAG,GAAG,CAAC,cAAc,CAAC,cAAc,CAAC,MAAM,CACpD,WAAyC,EACzC,kCAAqE,EAAE,EAAqC,EAC5G,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QACtB,MAAM,SAAS,GAAG,iBAAiB,CAAC,OAAO,CAAC,CAAC;QAC7C,MAAM,OAAO,GAAG,SAAS,CAAC,OAAO,CAAC,aAAa,CAAC,sCAAsC,CAAC,CAAC;QACxF,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QACvB,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;QACpD,OAAO,CAAC,mBAAmB,CAAC;YAC1B,6BAA6B,EAAE,IAAI;YACnC,sBAAsB,EAAE,EAAE;YAC1B,qBAAqB,EAAE,EAAE;YACzB,aAAa,EAAE,EAAC,WAAW,EAAE,CAAC,EAAC;YAC/B,cAAc,EAAE,EAAE;SACoB,CAAC,CAAC;QAC1C,SAAS,CAAC,QAAQ,EAAE,CAAC;QACrB,SAAS,CAAC,QAAQ,EAAE,CAAC;QACrB,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;QACrD,SAAS,CAAC,MAAM,EAAE,CAAC;IACrB,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as Root from '../../core/root/root.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport {renderElementIntoDOM} from '../../testing/DOMHelpers.js';\nimport {describeWithMockConnection} from '../../testing/MockConnection.js';\n\nimport * as Network from './network.js';\n\nfunction renderCookiesView(request: SDK.NetworkRequest.NetworkRequest): Network.RequestCookiesView.RequestCookiesView {\n  const component = new Network.RequestCookiesView.RequestCookiesView(request);\n  const div = document.createElement('div');\n  renderElementIntoDOM(div);\n  component.markAsRoot();\n  component.show(div);\n  return component;\n}\n\ndescribeWithMockConnection('RequestCookiesView', () => {\n  beforeEach(() => {\n    Root.Runtime.experiments.register('experimental-cookie-features', '');\n  });\n  it('show a message when request site has cookies in another partition', () => {\n    const request = SDK.NetworkRequest.NetworkRequest.create(\n        'requestId' as Protocol.Network.RequestId,\n        'https://www.example.com/foo.html' as Platform.DevToolsPath.UrlString, '' as Platform.DevToolsPath.UrlString,\n        null, null, null);\n    const component = renderCookiesView(request);\n    const message = component.element.querySelector('.site-has-cookies-in-other-partition');\n    assert.exists(message);\n    assert.isTrue(message.classList.contains('hidden'));\n    request.addExtraRequestInfo({\n      siteHasCookieInOtherPartition: true,\n      includedRequestCookies: [],\n      blockedRequestCookies: [],\n      connectTiming: {requestTime: 0},\n      requestHeaders: [],\n    } as SDK.NetworkRequest.ExtraRequestInfo);\n    component.willHide();\n    component.wasShown();\n    assert.isFalse(message.classList.contains('hidden'));\n    component.detach();\n  });\n});\n"]}