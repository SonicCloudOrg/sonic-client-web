{"version":3,"file":"RequestResponseView.js","sourceRoot":"","sources":["../../../../../../front_end/panels/network/RequestResponseView.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA4BG;AAEH,OAAO,KAAK,MAAM,MAAM,6BAA6B,CAAC;AACtD,OAAO,KAAK,IAAI,MAAM,yBAAyB,CAAC;AAChD,OAAO,KAAK,IAAI,MAAM,yBAAyB,CAAC;AAEhD,OAAO,KAAK,SAAS,MAAM,uCAAuC,CAAC;AACnE,OAAO,KAAK,WAAW,MAAM,yDAAyD,CAAC;AACvF,OAAO,KAAK,EAAE,MAAM,2BAA2B,CAAC;AAChD,OAAO,KAAK,aAAa,MAAM,2CAA2C,CAAC;AAE3E,MAAM,SAAS,GAAG;IAChB;;OAEG;IACH,4BAA4B,EAAE,8CAA8C;IAC5E;;OAEG;IACH,wBAAwB,EAAE,8BAA8B;CACzD,CAAC;AACF,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,uCAAuC,EAAE,SAAS,CAAC,CAAC;AAC7F,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AACtE,MAAM,OAAO,mBAAoB,SAAQ,EAAE,CAAC,MAAM,CAAC,IAAI;IACrD,OAAO,CAAoC;IACnC,kBAAkB,CAAiC;IAE3D,YAAY,OAA0C;QACpD,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;QAC3C,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,OAAO,EAAE,GAAG,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,EAAC,MAAM,EAAE,IAAI,EAAC,CAAC,EAAE,CAAC,CAAC;QAC9F,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;IACjC,CAAC;IAED,MAAM,CAAC,KAAK,CAAC,oBAAoB,CAAC,OAA0C;QAC1E,IAAI,UAAU,GAAG,mBAAmB,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QAClD,IAAI,UAAU,KAAK,SAAS,EAAE,CAAC;YAC7B,OAAO,UAAU,CAAC;QACpB,CAAC;QAED,MAAM,WAAW,GAAG,MAAM,OAAO,CAAC,uBAAuB,EAAE,CAAC;QAC5D,6GAA6G;QAC7G,IAAI,SAAS,CAAC,oBAAoB,CAAC,OAAO,CAAC,WAAW,CAAC;YACnD,CAAC,CAAC,WAAW,CAAC,aAAa,IAAI,WAAW,CAAC,QAAQ,KAAK,kBAAkB,CAAC,EAAE,CAAC;YAChF,mBAAmB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YACpC,OAAO,IAAI,CAAC;QACd,CAAC;QAED,IAAI,QAAQ,CAAC;QACb,+GAA+G;QAC/G,uFAAuF;QACvF,IAAI,MAAM,CAAC,YAAY,CAAC,YAAY,CAAC,mBAAmB,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,kBAAkB,EAAE,CAAC;YAClG,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;QAC9B,CAAC;aAAM,CAAC;YACN,QAAQ,GAAG,OAAO,CAAC,YAAY,EAAE,CAAC,iBAAiB,EAAE,IAAI,OAAO,CAAC,QAAQ,CAAC;QAC5E,CAAC;QAED,MAAM,UAAU,GAAG,WAAW,CAAC,QAAQ,KAAK,kBAAkB,CAAC,CAAC;YAC5D,KAAK,CAAC,CAAC;YACP,SAAS,CAAC,SAAS,CAAC,UAAU,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,CAAC;QAC/D,MAAM,SAAS,GAAG,MAAM,CAAC,YAAY,CAAC,YAAY,CAAC,mBAAmB,CAClE,QAAQ,EAAE,OAAO,CAAC,YAAY,EAAE,CAAC,eAAe,EAAE,EAAE,UAAU,CAAC,CAAC;QAEpE,IAAI,CAAC,WAAW,CAAC,iCAAiC,CAAC,SAAS,CAAC,CAAC;QAC9D,UAAU,GAAG,WAAW,CAAC,mBAAmB,CAAC,mBAAmB,CAAC,oBAAoB,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;QACzG,mBAAmB,CAAC,GAAG,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;QAC7C,OAAO,UAAU,CAAC;IACpB,CAAC;IAEQ,QAAQ;QACf,KAAK,IAAI,CAAC,aAAa,EAAE,CAAC;IAC5B,CAAC;IAEO,aAAa;QACnB,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC7B,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QAC/C,CAAC;QACD,OAAO,IAAI,CAAC,kBAAkB,CAAC;IACjC,CAAC;IAED,KAAK,CAAC,WAAW;QACf,MAAM,YAAY,GAAG,MAAM,IAAI,CAAC,aAAa,EAAE,CAAC;QAChD,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAChC,OAAO,YAAY,CAAC;IACtB,CAAC;IAED,KAAK,CAAC,aAAa;QACjB,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,uBAAuB,EAAE,CAAC;QACjE,IAAI,SAAS,CAAC,oBAAoB,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,CAAC;YACxD,OAAO,IAAI,EAAE,CAAC,WAAW,CAAC,WAAW,CAAC,UAAU,CAAC,SAAS,CAAC,wBAAwB,CAAC,GAAG,IAAI,GAAG,WAAW,CAAC,KAAK,CAAC,CAAC;QACnH,CAAC;QAED,MAAM,UAAU,GAAG,MAAM,mBAAmB,CAAC,oBAAoB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAChF,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,OAAO,CAAC,UAAU,KAAK,GAAG,EAAE,CAAC;YACnD,OAAO,IAAI,EAAE,CAAC,WAAW,CAAC,WAAW,CAAC,UAAU,CAAC,SAAS,CAAC,4BAA4B,CAAC,CAAC,CAAC;QAC5F,CAAC;QAED,OAAO,UAAU,CAAC;IACpB,CAAC;IAED,KAAK,CAAC,cAAc,CAAC,QAAgD;QACnE,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,aAAa,EAAE,CAAC;QACxC,IAAI,IAAI,YAAY,WAAW,CAAC,mBAAmB,CAAC,mBAAmB,EAAE,CAAC;YACxE,KAAK,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;QACrC,CAAC;IACH,CAAC;CACF;AAED,MAAM,mBAAmB,GAAG,IAAI,OAAO,EAAuD,CAAC","sourcesContent":["/*\n * Copyright (C) 2011 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as SDK from '../../core/sdk/sdk.js';\nimport * as TextUtils from '../../models/text_utils/text_utils.js';\nimport * as SourceFrame from '../../ui/legacy/components/source_frame/source_frame.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nconst UIStrings = {\n  /**\n   *@description Text in Request Response View of the Network panel\n   */\n  thisRequestHasNoResponseData: 'This request has no response data available.',\n  /**\n   *@description Text in Request Preview View of the Network panel\n   */\n  failedToLoadResponseData: 'Failed to load response data',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/network/RequestResponseView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class RequestResponseView extends UI.Widget.VBox {\n  request: SDK.NetworkRequest.NetworkRequest;\n  private contentViewPromise: Promise<UI.Widget.Widget>|null;\n\n  constructor(request: SDK.NetworkRequest.NetworkRequest) {\n    super();\n    this.element.classList.add('request-view');\n    this.element.setAttribute('jslog', `${VisualLogging.pane('response').track({resize: true})}`);\n    this.request = request;\n    this.contentViewPromise = null;\n  }\n\n  static async sourceViewForRequest(request: SDK.NetworkRequest.NetworkRequest): Promise<UI.Widget.Widget|null> {\n    let sourceView = requestToSourceView.get(request);\n    if (sourceView !== undefined) {\n      return sourceView;\n    }\n\n    const contentData = await request.requestStreamingContent();\n    // Note: Even though WASM is binary data, the source view will disassemble it and show a text representation.\n    if (TextUtils.StreamingContentData.isError(contentData) ||\n        !(contentData.isTextContent || contentData.mimeType === 'application/wasm')) {\n      requestToSourceView.delete(request);\n      return null;\n    }\n\n    let mimeType;\n    // If the main document is of type JSON (or any JSON subtype), do not use the more generic canonical MIME type,\n    // which would prevent the JSON from being pretty-printed. See https://crbug.com/406900\n    if (Common.ResourceType.ResourceType.simplifyContentType(request.mimeType) === 'application/json') {\n      mimeType = request.mimeType;\n    } else {\n      mimeType = request.resourceType().canonicalMimeType() || request.mimeType;\n    }\n\n    const isMinified = contentData.mimeType === 'application/wasm' ?\n        false :\n        TextUtils.TextUtils.isMinified(contentData.content().text);\n    const mediaType = Common.ResourceType.ResourceType.mediaTypeForMetrics(\n        mimeType, request.resourceType().isFromSourceMap(), isMinified);\n\n    Host.userMetrics.networkPanelResponsePreviewOpened(mediaType);\n    sourceView = SourceFrame.ResourceSourceFrame.ResourceSourceFrame.createSearchableView(request, mimeType);\n    requestToSourceView.set(request, sourceView);\n    return sourceView;\n  }\n\n  override wasShown(): void {\n    void this.doShowPreview();\n  }\n\n  private doShowPreview(): Promise<UI.Widget.Widget> {\n    if (!this.contentViewPromise) {\n      this.contentViewPromise = this.showPreview();\n    }\n    return this.contentViewPromise;\n  }\n\n  async showPreview(): Promise<UI.Widget.Widget> {\n    const responseView = await this.createPreview();\n    responseView.show(this.element);\n    return responseView;\n  }\n\n  async createPreview(): Promise<UI.Widget.Widget> {\n    const contentData = await this.request.requestStreamingContent();\n    if (TextUtils.StreamingContentData.isError(contentData)) {\n      return new UI.EmptyWidget.EmptyWidget(i18nString(UIStrings.failedToLoadResponseData) + ': ' + contentData.error);\n    }\n\n    const sourceView = await RequestResponseView.sourceViewForRequest(this.request);\n    if (!sourceView || this.request.statusCode === 204) {\n      return new UI.EmptyWidget.EmptyWidget(i18nString(UIStrings.thisRequestHasNoResponseData));\n    }\n\n    return sourceView;\n  }\n\n  async revealPosition(position: SourceFrame.SourceFrame.RevealPosition): Promise<void> {\n    const view = await this.doShowPreview();\n    if (view instanceof SourceFrame.ResourceSourceFrame.SearchableContainer) {\n      void view.revealPosition(position);\n    }\n  }\n}\n\nconst requestToSourceView = new WeakMap<SDK.NetworkRequest.NetworkRequest, UI.Widget.Widget>();\n"]}