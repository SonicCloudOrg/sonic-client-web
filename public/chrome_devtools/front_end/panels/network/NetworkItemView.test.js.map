{"version":3,"file":"NetworkItemView.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/network/NetworkItemView.test.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAG7B,OAAO,KAAK,GAAG,MAAM,uBAAuB,CAAC;AAE7C,OAAO,EAAC,oBAAoB,EAAC,MAAM,6BAA6B,CAAC;AACjE,OAAO,EACL,sBAAsB,EACtB,uBAAuB,GACxB,MAAM,qCAAqC,CAAC;AAC7C,OAAO,EAAC,0BAA0B,EAAC,MAAM,iCAAiC,CAAC;AAC3E,OAAO,EAAC,gBAAgB,EAAC,MAAM,mCAAmC,CAAC;AAInE,OAAO,KAAK,cAAc,MAAM,sBAAsB,CAAC;AACvD,OAAO,KAAK,OAAO,MAAM,cAAc,CAAC;AAExC,SAAS,qBAAqB,CAAC,OAA2C;IACxE,IAAI,CAAC,OAAO,EAAE,CAAC;QACb,OAAO,GAAG,GAAG,CAAC,cAAc,CAAC,cAAc,CAAC,MAAM,CAC9C,WAAyC,EACzC,kCAAqE,EAAE,EAAqC,EAC5G,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;IACxB,CAAC;IACD,MAAM,eAAe,GACjB,IAAI,OAAO,CAAC,eAAe,CAAC,eAAe,CAAC,OAAO,EAAE,EAAyD,CAAC,CAAC;IACpH,MAAM,GAAG,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IAC1C,oBAAoB,CAAC,GAAG,CAAC,CAAC;IAC1B,eAAe,CAAC,UAAU,EAAE,CAAC;IAC7B,eAAe,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC1B,OAAO,eAAe,CAAC;AACzB,CAAC;AAED,SAAS,gBAAgB,CAAC,IAAmC,EAAE,KAAa;IAC1E,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,KAAK,KAAK,CAAC,EAAE,CAAC,MAAM,CAAqC,CAAC;IAC9F,MAAM,QAAQ,GAAG,IAAI,EAAE,IAAoC,CAAC;IAE5D,OAAO,QAAQ,CAAC;AAClB,CAAC;AAED,0BAA0B,CAAC,iBAAiB,EAAE,GAAG,EAAE;IACjD,UAAU,CAAC,GAAG,EAAE;QACd,gBAAgB,EAAE,CAAC;IACrB,CAAC,CAAC,CAAC;IAEH,SAAS,CAAC,KAAK,IAAI,EAAE;QACnB,MAAM,sBAAsB,EAAE,CAAC;IACjC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,sCAAsC,EAAE,KAAK,IAAI,EAAE;QACpD,MAAM,eAAe,GAAG,qBAAqB,EAAE,CAAC;QAChD,MAAM,oBAAoB,GAAG,eAAe,CAAC,uBAAuB,EAAE,CAAC;QACvE,MAAM,uBAAuB,GAAG,KAAK,CAAC,GAAG,CAAC,oBAAoB,EAAE,cAAc,CAAC,CAAC;QAEhF,MAAM,CAAC,MAAM,CAAC,uBAAuB,CAAC,SAAS,CAAC,CAAC;QAEjD,eAAe,CAAC,YAAY,6EAA4D,YAAY,CAAC,CAAC;QAEtG,MAAM,CAAC,MAAM,CACT,uBAAuB,CAAC,UAAU,6EAA4D,YAAY,CAAC,CAAC,CAAC;QACjH,eAAe,CAAC,MAAM,EAAE,CAAC;IAC3B,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAEH,uBAAuB,CAAC,iBAAiB,EAAE,GAAG,EAAE;IAC9C,IAAI,OAA0C,CAAC;IAC/C,MAAM,mBAAmB,GAAG,kBAAkB,CAAC;IAE/C,UAAU,CAAC,KAAK,IAAI,EAAE;QACpB,OAAO,GAAG,GAAG,CAAC,cAAc,CAAC,cAAc,CAAC,MAAM,CAC9C,WAAyC,EAAE,yBAA4D,EACvG,EAAqC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QAC7D,OAAO,CAAC,UAAU,GAAG,GAAG,CAAC;IAC3B,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,qDAAqD,EAAE,GAAG,EAAE;QAC7D,OAAO,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;QAChC,OAAO,CAAC,oBAAoB,GAAG,IAAI,CAAC;QACpC,OAAO,CAAC,eAAe,GAAG,CAAC,EAAC,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,YAAY,EAAC,CAAC,CAAC;QAC/D,OAAO,CAAC,uBAAuB,GAAG,CAAC,EAAC,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,UAAU,EAAC,CAAC,CAAC;QAErE,MAAM,eAAe,GAAG,qBAAqB,CAAC,OAAO,CAAC,CAAC;QACvD,MAAM,WAAW,GAAG,gBAAgB,CAAC,eAAe,CAAC,MAAM,CAAC,EAAE,mBAAmB,CAAC,CAAC;QACnF,MAAM,YAAY,GAAG,gBAAgB,CAAC,eAAe,CAAC,MAAM,CAAC,EAAE,UAAU,CAAC,CAAC;QAE3E,eAAe,CAAC,MAAM,EAAE,CAAC;QAEzB,MAAM,CAAC,WAAW,CAAC,WAAW,CAAC,QAAQ,EAAE,mBAAmB,CAAC,CAAC;QAC9D,MAAM,CAAC,WAAW,CAAC,YAAY,CAAC,QAAQ,EAAE,mBAAmB,CAAC,CAAC;IACjE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,uCAAuC,EAAE,GAAG,EAAE;QAC/C,OAAO,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;QAChC,OAAO,CAAC,eAAe,GAAG,CAAC,EAAC,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,YAAY,EAAC,CAAC,CAAC;QAC/D,OAAO,CAAC,uBAAuB,GAAG,CAAC,EAAC,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,UAAU,EAAC,CAAC,CAAC;QAErE,MAAM,eAAe,GAAG,qBAAqB,CAAC,OAAO,CAAC,CAAC;QACvD,MAAM,WAAW,GAAG,gBAAgB,CAAC,eAAe,CAAC,MAAM,CAAC,EAAE,mBAAmB,CAAC,CAAC;QACnF,MAAM,YAAY,GAAG,gBAAgB,CAAC,eAAe,CAAC,MAAM,CAAC,EAAE,UAAU,CAAC,CAAC;QAE3E,eAAe,CAAC,MAAM,EAAE,CAAC;QAEzB,MAAM,CAAC,WAAW,CAAC,WAAW,CAAC,QAAQ,EAAE,mBAAmB,CAAC,CAAC;QAC9D,MAAM,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;IACnC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,uCAAuC,EAAE,GAAG,EAAE;QAC/C,OAAO,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;QAChC,OAAO,CAAC,oBAAoB,GAAG,IAAI,CAAC;QAEpC,MAAM,eAAe,GAAG,qBAAqB,CAAC,OAAO,CAAC,CAAC;QACvD,MAAM,WAAW,GAAG,gBAAgB,CAAC,eAAe,CAAC,MAAM,CAAC,EAAE,mBAAmB,CAAC,CAAC;QACnF,MAAM,YAAY,GAAG,gBAAgB,CAAC,eAAe,CAAC,MAAM,CAAC,EAAE,UAAU,CAAC,CAAC;QAE3E,eAAe,CAAC,MAAM,EAAE,CAAC;QAEzB,MAAM,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;QAChC,MAAM,CAAC,WAAW,CAAC,YAAY,CAAC,QAAQ,EAAE,mBAAmB,CAAC,CAAC;IACjE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,iDAAiD,EAAE,GAAG,EAAE;QACzD,MAAM,eAAe,GAAG,qBAAqB,CAAC,OAAO,CAAC,CAAC;QACvD,MAAM,WAAW,GAAG,gBAAgB,CAAC,eAAe,CAAC,MAAM,CAAC,EAAE,mBAAmB,CAAC,CAAC;QACnF,MAAM,YAAY,GAAG,gBAAgB,CAAC,eAAe,CAAC,MAAM,CAAC,EAAE,UAAU,CAAC,CAAC;QAE3E,eAAe,CAAC,MAAM,EAAE,CAAC;QAEzB,MAAM,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;QAChC,MAAM,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;IACnC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,uEAAuE,EAAE,GAAG,EAAE;QAC/E,OAAO,CAAC,QAAQ,GAAG,mBAAmB,CAAC;QACvC,MAAM,eAAe,GAAG,qBAAqB,CAAC,OAAO,CAAC,CAAC;QAEvD,MAAM,CAAC,MAAM,CAAC,eAAe,CAAC,MAAM,gFAA4D,CAAC,CAAC;QAClG,MAAM,CAAC,MAAM,CAAC,eAAe,CAAC,MAAM,0EAAyD,CAAC,CAAC;QAE/F,eAAe,CAAC,MAAM,EAAE,CAAC;IAC3B,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport {renderElementIntoDOM} from '../../testing/DOMHelpers.js';\nimport {\n  deinitializeGlobalVars,\n  describeWithEnvironment,\n} from '../../testing/EnvironmentHelpers.js';\nimport {describeWithMockConnection} from '../../testing/MockConnection.js';\nimport {setUpEnvironment} from '../../testing/OverridesHelpers.js';\nimport type * as IconButton from '../../ui/components/icon_button/icon_button.js';\nimport type * as UI from '../../ui/legacy/legacy.js';\n\nimport * as NetworkForward from './forward/forward.js';\nimport * as Network from './network.js';\n\nfunction renderNetworkItemView(request?: SDK.NetworkRequest.NetworkRequest): Network.NetworkItemView.NetworkItemView {\n  if (!request) {\n    request = SDK.NetworkRequest.NetworkRequest.create(\n        'requestId' as Protocol.Network.RequestId,\n        'https://www.example.com/foo.html' as Platform.DevToolsPath.UrlString, '' as Platform.DevToolsPath.UrlString,\n        null, null, null);\n  }\n  const networkItemView =\n      new Network.NetworkItemView.NetworkItemView(request, {} as Network.NetworkTimeCalculator.NetworkTimeCalculator);\n  const div = document.createElement('div');\n  renderElementIntoDOM(div);\n  networkItemView.markAsRoot();\n  networkItemView.show(div);\n  return networkItemView;\n}\n\nfunction getIconDataInTab(tabs: UI.TabbedPane.TabbedPaneTab[], tabId: string) {\n  const icon = tabs.find(tab => tab.id === tabId)?.['icon'] as IconButton.Icon.Icon | undefined;\n  const iconData = icon?.data as IconButton.Icon.IconWithName;\n\n  return iconData;\n}\n\ndescribeWithMockConnection('NetworkItemView', () => {\n  beforeEach(() => {\n    setUpEnvironment();\n  });\n\n  afterEach(async () => {\n    await deinitializeGlobalVars();\n  });\n\n  it('reveals header in RequestHeadersView', async () => {\n    const networkItemView = renderNetworkItemView();\n    const headersViewComponent = networkItemView.getHeadersViewComponent();\n    const headersViewComponentSpy = sinon.spy(headersViewComponent, 'revealHeader');\n\n    assert.isTrue(headersViewComponentSpy.notCalled);\n\n    networkItemView.revealHeader(NetworkForward.UIRequestLocation.UIHeaderSection.Response, 'headerName');\n\n    assert.isTrue(\n        headersViewComponentSpy.calledWith(NetworkForward.UIRequestLocation.UIHeaderSection.Response, 'headerName'));\n    networkItemView.detach();\n  });\n});\n\ndescribeWithEnvironment('NetworkItemView', () => {\n  let request: SDK.NetworkRequest.NetworkRequest;\n  const OVERRIDEN_ICON_NAME = 'small-status-dot';\n\n  beforeEach(async () => {\n    request = SDK.NetworkRequest.NetworkRequest.create(\n        'requestId' as Protocol.Network.RequestId, 'https://www.example.com' as Platform.DevToolsPath.UrlString,\n        '' as Platform.DevToolsPath.UrlString, null, null, null);\n    request.statusCode = 200;\n  });\n\n  it('shows indicator for overriden headers and responses', () => {\n    request.setWasIntercepted(true);\n    request.hasOverriddenContent = true;\n    request.responseHeaders = [{name: 'foo', value: 'overridden'}];\n    request.originalResponseHeaders = [{name: 'foo', value: 'original'}];\n\n    const networkItemView = renderNetworkItemView(request);\n    const headersIcon = getIconDataInTab(networkItemView['tabs'], 'headers-component');\n    const responseIcon = getIconDataInTab(networkItemView['tabs'], 'response');\n\n    networkItemView.detach();\n\n    assert.strictEqual(headersIcon.iconName, OVERRIDEN_ICON_NAME);\n    assert.strictEqual(responseIcon.iconName, OVERRIDEN_ICON_NAME);\n  });\n\n  it('shows indicator for overriden headers', () => {\n    request.setWasIntercepted(true);\n    request.responseHeaders = [{name: 'foo', value: 'overridden'}];\n    request.originalResponseHeaders = [{name: 'foo', value: 'original'}];\n\n    const networkItemView = renderNetworkItemView(request);\n    const headersIcon = getIconDataInTab(networkItemView['tabs'], 'headers-component');\n    const responseIcon = getIconDataInTab(networkItemView['tabs'], 'response');\n\n    networkItemView.detach();\n\n    assert.strictEqual(headersIcon.iconName, OVERRIDEN_ICON_NAME);\n    assert.isUndefined(responseIcon);\n  });\n\n  it('shows indicator for overriden content', () => {\n    request.setWasIntercepted(true);\n    request.hasOverriddenContent = true;\n\n    const networkItemView = renderNetworkItemView(request);\n    const headersIcon = getIconDataInTab(networkItemView['tabs'], 'headers-component');\n    const responseIcon = getIconDataInTab(networkItemView['tabs'], 'response');\n\n    networkItemView.detach();\n\n    assert.isUndefined(headersIcon);\n    assert.strictEqual(responseIcon.iconName, OVERRIDEN_ICON_NAME);\n  });\n\n  it('does not show indicator for unoverriden request', () => {\n    const networkItemView = renderNetworkItemView(request);\n    const headersIcon = getIconDataInTab(networkItemView['tabs'], 'headers-component');\n    const responseIcon = getIconDataInTab(networkItemView['tabs'], 'response');\n\n    networkItemView.detach();\n\n    assert.isUndefined(headersIcon);\n    assert.isUndefined(responseIcon);\n  });\n\n  it('shows the Response and EventSource tab for text/event-stream requests', () => {\n    request.mimeType = 'text/event-stream';\n    const networkItemView = renderNetworkItemView(request);\n\n    assert.isTrue(networkItemView.hasTab(NetworkForward.UIRequestLocation.UIRequestTabs.EventSource));\n    assert.isTrue(networkItemView.hasTab(NetworkForward.UIRequestLocation.UIRequestTabs.Response));\n\n    networkItemView.detach();\n  });\n});\n"]}