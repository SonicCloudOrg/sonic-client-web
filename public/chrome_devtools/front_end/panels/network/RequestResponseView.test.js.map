{"version":3,"file":"RequestResponseView.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/network/RequestResponseView.test.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAG7B,OAAO,KAAK,GAAG,MAAM,uBAAuB,CAAC;AAE7C,OAAO,KAAK,SAAS,MAAM,uCAAuC,CAAC;AACnE,OAAO,EAAC,uBAAuB,EAAC,MAAM,qCAAqC,CAAC;AAC5E,OAAO,KAAK,WAAW,MAAM,yDAAyD,CAAC;AACvF,OAAO,KAAK,EAAE,MAAM,2BAA2B,CAAC;AAEhD,OAAO,KAAK,OAAO,MAAM,cAAc,CAAC;AAExC,uBAAuB,CAAC,qBAAqB,EAAE,GAAG,EAAE;IAClD,EAAE,CAAC,qDAAqD,EAAE,KAAK,IAAI,EAAE;QACnE,MAAM,OAAO,GAAG,GAAG,CAAC,cAAc,CAAC,cAAc,CAAC,MAAM,CACpD,WAAyC,EACzC,2CAA8E,EAC9E,EAAqC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QAC7D,OAAO,CAAC,sBAAsB,CAC1B,GAAG,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,SAAS,CAAC,WAAW,CAAC,WAAW,CACvD,sGAAsG,EACtG,IAAI,EAAE,kBAAkB,CAAC,CAAC,CAAC,CAAC;QACpC,OAAO,CAAC,QAAQ,GAAG,kBAAkB,CAAC;QACtC,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC;QAExB,MAAM,gBAAgB,GAAG,IAAI,EAAE,CAAC,WAAW,CAAC,WAAW,CAAC,qBAAqB,CAAC,CAAC;QAC/E,MAAM,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,mBAAmB,CAAC,mBAAmB,EAAE,sBAAsB,CAAC;aAClF,OAAO,CAAC,gBAAgB,CAAC,CAAC;QAEhD,MAAM,SAAS,GAAG,IAAI,OAAO,CAAC,mBAAmB,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC;QAC/E,SAAS,CAAC,UAAU,EAAE,CAAC;QACvB,MAAM,MAAM,GAAG,MAAM,SAAS,CAAC,WAAW,EAAE,CAAC;QAE7C,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,qBAAqB,CAAC,OAAO,EAAE,kBAAkB,CAAC,CAAC,CAAC;QAC3E,MAAM,CAAC,WAAW,CAAC,MAAM,EAAE,gBAAgB,CAAC,CAAC;QAE7C,SAAS,CAAC,MAAM,EAAE,CAAC;IACrB,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport * as TextUtils from '../../models/text_utils/text_utils.js';\nimport {describeWithEnvironment} from '../../testing/EnvironmentHelpers.js';\nimport * as SourceFrame from '../../ui/legacy/components/source_frame/source_frame.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport * as Network from './network.js';\n\ndescribeWithEnvironment('RequestResponseView', () => {\n  it('does show WASM disassembly for WASM module requests', async () => {\n    const request = SDK.NetworkRequest.NetworkRequest.create(\n        'requestId' as Protocol.Network.RequestId,\n        'http://devtools-frontend.test/module.wasm' as Platform.DevToolsPath.UrlString,\n        '' as Platform.DevToolsPath.UrlString, null, null, null);\n    request.setContentDataProvider(\n        () => Promise.resolve(new TextUtils.ContentData.ContentData(\n            'AGFzbQEAAAABBQFgAAF/AwIBAAcHAQNiYXIAAAoGAQQAQQILACQEbmFtZQAQD3Nob3ctd2FzbS0yLndhdAEGAQADYmFyAgMBAAA=',\n            true, 'application/wasm')));\n    request.mimeType = 'application/wasm';\n    request.finished = true;\n\n    const mockedSourceView = new UI.EmptyWidget.EmptyWidget('<disassembled WASM>');\n    const viewStub = sinon.stub(SourceFrame.ResourceSourceFrame.ResourceSourceFrame, 'createSearchableView')\n                         .returns(mockedSourceView);\n\n    const component = new Network.RequestResponseView.RequestResponseView(request);\n    component.markAsRoot();\n    const widget = await component.showPreview();\n\n    assert.isTrue(viewStub.calledOnceWithExactly(request, 'application/wasm'));\n    assert.strictEqual(widget, mockedSourceView);\n\n    component.detach();\n  });\n});\n"]}