{"version":3,"file":"AnimationTimeline.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/animation/AnimationTimeline.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport {\n  createTarget,\n  stubNoopSettings,\n} from '../../testing/EnvironmentHelpers.js';\nimport {expectCall} from '../../testing/ExpectStubCall.js';\nimport {describeWithMockConnection} from '../../testing/MockConnection.js';\nimport * as Elements from '../elements/elements.js';\n\nimport * as Animation from './animation.js';\n\nconst TIME_ANIMATION_PAYLOAD = {\n  id: 'animation-id',\n  name: 'animation-name',\n  pausedState: false,\n  playState: 'running',\n  playbackRate: 1,\n  startTime: 42,\n  currentTime: 0,\n  type: Protocol.Animation.AnimationType.CSSAnimation,\n  source: {\n    delay: 0,\n    endDelay: 0,\n    duration: 10000,\n    backendNodeId: 42 as Protocol.DOM.BackendNodeId,\n  } as Protocol.Animation.AnimationEffect,\n};\n\nconst SDA_ANIMATION_PAYLOAD = {\n  id: 'animation-id',\n  name: 'animation-name',\n  pausedState: false,\n  playState: 'running',\n  playbackRate: 1,\n  startTime: 42,\n  currentTime: 0,\n  type: Protocol.Animation.AnimationType.CSSAnimation,\n  source: {\n    delay: 0,\n    endDelay: 0,\n    duration: 10000,\n    backendNodeId: 42 as Protocol.DOM.BackendNodeId,\n  } as Protocol.Animation.AnimationEffect,\n  viewOrScrollTimeline: {\n    axis: Protocol.DOM.ScrollOrientation.Vertical,\n    sourceNodeId: 42 as Protocol.DOM.BackendNodeId,\n    startOffset: 42,\n    endOffset: 142,\n  },\n};\n\ntype AnimationDOMNodeStubs = {\n  verticalScrollRange: sinon.SinonStub,\n  horizontalScrollRange: sinon.SinonStub,\n  scrollLeft: sinon.SinonStub,\n  scrollTop: sinon.SinonStub,\n  addScrollEventListener: sinon.SinonStub,\n  removeScrollEventListener: sinon.SinonStub,\n};\nclass ManualPromise {\n  #waitPromise: Promise<void>;\n  #resolveFn!: Function;\n  constructor() {\n    this.#waitPromise = new Promise(r => {\n      this.#resolveFn = r;\n    });\n  }\n\n  resolve() {\n    this.#resolveFn();\n    this.#waitPromise = new Promise(r => {\n      this.#resolveFn = r;\n    });\n  }\n\n  wait() {\n    return this.#waitPromise;\n  }\n}\n\nconst cancelAllPendingRaf = () => {\n  let rafId = window.requestAnimationFrame(() => {});\n  while (rafId--) {\n    window.cancelAnimationFrame(rafId);\n  }\n};\n\nconst stubAnimationGroup = () => {\n  sinon.stub(Animation.AnimationModel.AnimationGroup.prototype, 'scrollNode')\n      .resolves(new Animation.AnimationDOMNode.AnimationDOMNode(null as unknown as SDK.DOMModel.DOMNode));\n};\n\nconst stubAnimationDOMNode = (): AnimationDOMNodeStubs => {\n  const verticalScrollRange =\n      sinon.stub(Animation.AnimationDOMNode.AnimationDOMNode.prototype, 'verticalScrollRange').resolves(100);\n  const horizontalScrollRange =\n      sinon.stub(Animation.AnimationDOMNode.AnimationDOMNode.prototype, 'horizontalScrollRange').resolves(100);\n  const scrollLeft = sinon.stub(Animation.AnimationDOMNode.AnimationDOMNode.prototype, 'scrollLeft').resolves(10);\n  const scrollTop = sinon.stub(Animation.AnimationDOMNode.AnimationDOMNode.prototype, 'scrollTop').resolves(10);\n  const addScrollEventListener =\n      sinon.stub(Animation.AnimationDOMNode.AnimationDOMNode.prototype, 'addScrollEventListener').resolves();\n  const removeScrollEventListener =\n      sinon.stub(Animation.AnimationDOMNode.AnimationDOMNode.prototype, 'removeScrollEventListener').resolves();\n  return {\n    verticalScrollRange,\n    horizontalScrollRange,\n    scrollLeft,\n    scrollTop,\n    addScrollEventListener,\n    removeScrollEventListener,\n  };\n};\n\ndescribeWithMockConnection('AnimationTimeline', () => {\n  let target: SDK.Target.Target;\n  let view: Animation.AnimationTimeline.AnimationTimeline;\n\n  beforeEach(() => {\n    Common.Linkifier.registerLinkifier({\n      contextTypes() {\n        return [SDK.DOMModel.DOMNode];\n      },\n      async loadLinkifier() {\n        return Elements.DOMLinkifier.Linkifier.instance();\n      },\n    });\n\n    stubNoopSettings();\n    target = createTarget();\n\n    const runtimeAgent = target.model(SDK.RuntimeModel.RuntimeModel)?.agent!;\n\n    const stub = sinon.stub(runtimeAgent, 'invoke_evaluate');\n    stub.callsFake(params => {\n      if (params.expression === 'window.devicePixelRatio') {\n        return Promise.resolve({\n          result: {\n            type: 'number' as Protocol.Runtime.RemoteObjectType,\n            value: 1,\n          },\n          getError: () => undefined,\n        });\n      }\n\n      return stub.wrappedMethod(params);\n    });\n  });\n\n  afterEach(() => {\n    cancelAllPendingRaf();\n    view.detach();\n  });\n\n  const updatesUiOnEvent = (inScope: boolean) => async () => {\n    SDK.TargetManager.TargetManager.instance().setScopeTarget(inScope ? target : null);\n    const model = target.model(Animation.AnimationModel.AnimationModel);\n    assert.exists(model);\n\n    view = Animation.AnimationTimeline.AnimationTimeline.instance({forceNew: true});\n    view.markAsRoot();\n    view.show(document.body);\n    await new Promise<void>(resolve => setTimeout(resolve, 0));\n\n    const previewContainer = (view.contentElement.querySelector('.animation-timeline-buffer') as HTMLElement);\n\n    await model.animationStarted({\n      id: 'id',\n      name: 'name',\n      pausedState: false,\n      playState: 'playState',\n      playbackRate: 1,\n      startTime: 42,\n      currentTime: 43,\n      type: Protocol.Animation.AnimationType.CSSAnimation,\n      source: {\n        delay: 0,\n        duration: 1001,\n        backendNodeId: 42 as Protocol.DOM.BackendNodeId,\n      } as Protocol.Animation.AnimationEffect,\n    });\n\n    if (inScope) {\n      await expectCall(sinon.stub(view, 'previewsCreatedForTest'));\n    }\n    assert.strictEqual(previewContainer.querySelectorAll('.animation-buffer-preview').length, inScope ? 1 : 0);\n  };\n\n  it('updates UI on in scope animation group start', updatesUiOnEvent(true));\n  it('does not update UI on out of scope animation group start', updatesUiOnEvent(false));\n\n  // Flaking on multiple bots on CQ.\n  describe.skip('[crbug.com/334003901] resizing time controls', () => {\n    it('updates --timeline-controls-width and calls onResize', async () => {\n      view = Animation.AnimationTimeline.AnimationTimeline.instance({forceNew: true});\n      view.markAsRoot();\n      view.show(document.body);\n      const onResizeStub = sinon.stub(view, 'onResize');\n      await new Promise<void>(resolve => setTimeout(resolve, 0));\n\n      const resizer = view.contentElement.querySelector('.timeline-controls-resizer');\n      assert.exists(resizer);\n\n      const initialWidth = view.element.style.getPropertyValue('--timeline-controls-width');\n      assert.strictEqual(initialWidth, '150px');\n\n      const resizerRect = resizer.getBoundingClientRect();\n      resizer.dispatchEvent(\n          new PointerEvent('pointerdown', {\n            clientX: resizerRect.x + resizerRect.width / 2,\n            clientY: resizerRect.y + resizerRect.height / 2,\n          }),\n      );\n      resizer.ownerDocument.dispatchEvent(\n          new PointerEvent('pointermove', {\n            buttons: 1,\n            clientX: (resizerRect.x + resizerRect.width / 2) + 20,\n            clientY: resizerRect.y + resizerRect.height / 2,\n          }),\n      );\n      resizer.ownerDocument.dispatchEvent(new PointerEvent('pointerup'));\n\n      const afterResizeWidth = view.element.style.getPropertyValue('--timeline-controls-width');\n      assert.notStrictEqual(initialWidth, afterResizeWidth);\n      assert.isTrue(onResizeStub.calledOnce);\n    });\n  });\n\n  // Flaking on multiple bots on CQ.\n  describe.skip('[crbug.com/334003901] Animation group nodes are removed', () => {\n    const waitForPreviewsManualPromise = new ManualPromise();\n    const waitForAnimationGroupSelectedPromise = new ManualPromise();\n\n    let domModel: SDK.DOMModel.DOMModel;\n    let animationModel: Animation.AnimationModel.AnimationModel;\n    let contentDocument: SDK.DOMModel.DOMDocument;\n    beforeEach(async () => {\n      view = Animation.AnimationTimeline.AnimationTimeline.instance({forceNew: true});\n      view.markAsRoot();\n      view.show(document.body);\n\n      sinon.stub(view, 'animationGroupSelectedForTest').callsFake(() => {\n        waitForAnimationGroupSelectedPromise.resolve();\n      });\n      sinon.stub(view, 'previewsCreatedForTest').callsFake(() => {\n        waitForPreviewsManualPromise.resolve();\n      });\n\n      const model = target.model(Animation.AnimationModel.AnimationModel);\n      assert.exists(model);\n      animationModel = model;\n\n      const modelForDom = target.model(SDK.DOMModel.DOMModel);\n      assert.exists(modelForDom);\n      domModel = modelForDom;\n\n      contentDocument = SDK.DOMModel.DOMDocument.create(domModel, null, false, {\n        nodeId: 0 as Protocol.DOM.NodeId,\n        backendNodeId: 0 as Protocol.DOM.BackendNodeId,\n        nodeType: Node.DOCUMENT_NODE,\n        nodeName: '#document',\n        localName: 'document',\n        nodeValue: '',\n      }) as SDK.DOMModel.DOMDocument;\n\n      void animationModel.animationStarted(TIME_ANIMATION_PAYLOAD);\n\n      await waitForPreviewsManualPromise.wait();\n    });\n\n    describe('when the animation group is already selected', () => {\n      it('should hide scrubber, disable control button and make current time empty', async () => {\n        const domNode = SDK.DOMModel.DOMNode.create(domModel, contentDocument, false, {\n          nodeId: 1 as Protocol.DOM.NodeId,\n          backendNodeId: 1 as Protocol.DOM.BackendNodeId,\n          nodeType: Node.ELEMENT_NODE,\n          nodeName: 'div',\n          localName: 'div',\n          nodeValue: '',\n        });\n        sinon.stub(SDK.DOMModel.DeferredDOMNode.prototype, 'resolvePromise').resolves(domNode);\n\n        const preview = view.element.shadowRoot!.querySelector('.animation-buffer-preview') as HTMLElement;\n        preview.click();\n        await waitForAnimationGroupSelectedPromise.wait();\n\n        const gridHeader = view.element.shadowRoot!.querySelector('.animation-grid-header');\n        assert.exists(gridHeader);\n        assert.isTrue(gridHeader.classList.contains('scrubber-enabled'));\n\n        const scrubber = view.element.shadowRoot!.querySelector('.animation-scrubber');\n        assert.exists(scrubber);\n        assert.isFalse(scrubber.classList.contains('hidden'));\n\n        const controlButton = view.element.shadowRoot!.querySelector('.animation-controls-toolbar')\n                                  ?.shadowRoot!.querySelector('.toolbar-button') as HTMLButtonElement;\n        assert.exists(controlButton);\n        assert.isFalse(controlButton.disabled);\n\n        const currentTime = view.element.shadowRoot!.querySelector('.animation-timeline-current-time');\n        assert.exists(currentTime);\n\n        domModel.dispatchEventToListeners(SDK.DOMModel.Events.NodeRemoved, {node: domNode, parent: contentDocument});\n        assert.isFalse(gridHeader.classList.contains('scrubber-enabled'));\n        assert.isTrue(scrubber.classList.contains('hidden'));\n        assert.isTrue(controlButton.disabled);\n        assert.isTrue(currentTime.textContent === '');\n      });\n\n      it('should mark the animation node as removed in the NodeUI', async () => {\n        const domNode = SDK.DOMModel.DOMNode.create(domModel, contentDocument, false, {\n          nodeId: 1 as Protocol.DOM.NodeId,\n          backendNodeId: 1 as Protocol.DOM.BackendNodeId,\n          nodeType: Node.ELEMENT_NODE,\n          nodeName: 'div',\n          localName: 'div',\n          nodeValue: '',\n        });\n        sinon.stub(SDK.DOMModel.DeferredDOMNode.prototype, 'resolvePromise').resolves(domNode);\n\n        const preview = view.element.shadowRoot!.querySelector('.animation-buffer-preview') as HTMLElement;\n        preview.click();\n        await waitForAnimationGroupSelectedPromise.wait();\n\n        // Wait for the animation group to be fully selected and scrubber enabled.\n        const gridHeader = view.element.shadowRoot!.querySelector('.animation-grid-header');\n        assert.exists(gridHeader);\n        assert.isTrue(gridHeader.classList.contains('scrubber-enabled'));\n\n        const animationNodeRow = view.element.shadowRoot!.querySelector('.animation-node-row') as HTMLElement;\n        assert.exists(animationNodeRow);\n        assert.isFalse(animationNodeRow.classList.contains('animation-node-removed'));\n\n        domModel.dispatchEventToListeners(SDK.DOMModel.Events.NodeRemoved, {node: domNode, parent: contentDocument});\n        assert.isTrue(animationNodeRow.classList.contains('animation-node-removed'));\n      });\n    });\n\n    describe('when the animation group is not selected and the nodes are removed', () => {\n      it('should scrubber be hidden, control button be disabled and current time be empty', async () => {\n        // Owner document is null for the resolved deferred nodes that are already removed from the DOM.\n        const domNode = SDK.DOMModel.DOMNode.create(domModel, null, false, {\n          nodeId: 1 as Protocol.DOM.NodeId,\n          backendNodeId: 1 as Protocol.DOM.BackendNodeId,\n          nodeType: Node.ELEMENT_NODE,\n          nodeName: 'div',\n          localName: 'div',\n          nodeValue: '',\n        });\n        sinon.stub(SDK.DOMModel.DeferredDOMNode.prototype, 'resolvePromise').resolves(domNode);\n\n        const preview = view.element.shadowRoot!.querySelector('.animation-buffer-preview') as HTMLElement;\n        preview.click();\n        await waitForAnimationGroupSelectedPromise.wait();\n\n        const gridHeader = view.element.shadowRoot!.querySelector('.animation-grid-header');\n        assert.exists(gridHeader);\n        assert.isFalse(gridHeader.classList.contains('scrubber-enabled'));\n\n        const scrubber = view.element.shadowRoot!.querySelector('.animation-scrubber');\n        assert.exists(scrubber);\n        assert.isTrue(scrubber.classList.contains('hidden'));\n\n        const controlButton = view.element.shadowRoot!.querySelector('.animation-controls-toolbar')\n                                  ?.shadowRoot!.querySelector('.toolbar-button') as HTMLButtonElement;\n        assert.exists(controlButton);\n        assert.isTrue(controlButton.disabled);\n\n        const currentTime = view.element.shadowRoot!.querySelector('.animation-timeline-current-time');\n        assert.exists(currentTime);\n        assert.isTrue(currentTime.textContent === '');\n      });\n    });\n  });\n\n  // Flaking on multiple bots on CQ.\n  describe.skip('[crbug.com/334003901] time animations', () => {\n    const waitForPreviewsManualPromise = new ManualPromise();\n    const waitForAnimationGroupSelectedPromise = new ManualPromise();\n    const waitForScheduleRedrawAfterAnimationGroupUpdated = new ManualPromise();\n\n    let domModel: SDK.DOMModel.DOMModel;\n    let animationModel: Animation.AnimationModel.AnimationModel;\n    let contentDocument: SDK.DOMModel.DOMDocument;\n    beforeEach(async () => {\n      view = Animation.AnimationTimeline.AnimationTimeline.instance({forceNew: true});\n      view.markAsRoot();\n      view.show(document.body);\n\n      sinon.stub(view, 'animationGroupSelectedForTest').callsFake(() => {\n        waitForAnimationGroupSelectedPromise.resolve();\n      });\n      sinon.stub(view, 'previewsCreatedForTest').callsFake(() => {\n        waitForPreviewsManualPromise.resolve();\n      });\n      sinon.stub(view, 'scheduledRedrawAfterAnimationGroupUpdatedForTest').callsFake(() => {\n        waitForScheduleRedrawAfterAnimationGroupUpdated.resolve();\n      });\n\n      const model = target.model(Animation.AnimationModel.AnimationModel);\n      assert.isNotNull(model);\n      animationModel = model;\n\n      const modelForDom = target.model(SDK.DOMModel.DOMModel);\n      assert.isNotNull(modelForDom);\n      domModel = modelForDom;\n\n      contentDocument = SDK.DOMModel.DOMDocument.create(domModel, null, false, {\n        nodeId: 0 as Protocol.DOM.NodeId,\n        backendNodeId: 0 as Protocol.DOM.BackendNodeId,\n        nodeType: Node.DOCUMENT_NODE,\n        nodeName: '#document',\n        localName: 'document',\n        nodeValue: '',\n      }) as SDK.DOMModel.DOMDocument;\n\n      const domNode = SDK.DOMModel.DOMNode.create(domModel, contentDocument, false, {\n        nodeId: 1 as Protocol.DOM.NodeId,\n        backendNodeId: 1 as Protocol.DOM.BackendNodeId,\n        nodeType: Node.ELEMENT_NODE,\n        nodeName: 'div',\n        localName: 'div',\n        nodeValue: '',\n      });\n      sinon.stub(SDK.DOMModel.DeferredDOMNode.prototype, 'resolvePromise').resolves(domNode);\n\n      void animationModel.animationStarted(TIME_ANIMATION_PAYLOAD);\n\n      await waitForPreviewsManualPromise.wait();\n    });\n\n    describe('animationGroupUpdated', () => {\n      it('should update duration on animationGroupUpdated', async () => {\n        const preview = view.element.shadowRoot!.querySelector('.animation-buffer-preview') as HTMLElement;\n        assert.isNotNull(preview);\n        preview.click();\n        await waitForAnimationGroupSelectedPromise.wait();\n\n        void animationModel.animationUpdated({\n          ...TIME_ANIMATION_PAYLOAD,\n          source: {\n            ...TIME_ANIMATION_PAYLOAD.source,\n            iterations: 3,\n            duration: 10,\n          },\n        });\n\n        await waitForScheduleRedrawAfterAnimationGroupUpdated.wait();\n        // 3 (iterations) * 10 (iteration duration)\n        assert.strictEqual(view.duration(), 30);\n      });\n\n      it('should schedule re-draw on animationGroupUpdated', async () => {\n        const preview = view.element.shadowRoot!.querySelector('.animation-buffer-preview') as HTMLElement;\n        assert.isNotNull(preview);\n        preview.click();\n        await waitForAnimationGroupSelectedPromise.wait();\n\n        void animationModel.animationUpdated(TIME_ANIMATION_PAYLOAD);\n\n        await waitForScheduleRedrawAfterAnimationGroupUpdated.wait();\n      });\n    });\n  });\n\n  // Flaking on multiple bots on CQ.\n  describe.skip('[crbug.com/334003901] scroll driven animations', () => {\n    let stubbedAnimationDOMNode: AnimationDOMNodeStubs;\n    const waitForPreviewsManualPromise = new ManualPromise();\n    const waitForAnimationGroupSelectedPromise = new ManualPromise();\n    const waitForScheduleRedrawAfterAnimationGroupUpdated = new ManualPromise();\n\n    let domModel: SDK.DOMModel.DOMModel;\n    let animationModel: Animation.AnimationModel.AnimationModel;\n    let contentDocument: SDK.DOMModel.DOMDocument;\n    beforeEach(async () => {\n      stubbedAnimationDOMNode = stubAnimationDOMNode();\n      stubAnimationGroup();\n\n      view = Animation.AnimationTimeline.AnimationTimeline.instance({forceNew: true});\n      view.markAsRoot();\n      view.show(document.body);\n\n      sinon.stub(view, 'animationGroupSelectedForTest').callsFake(() => {\n        waitForAnimationGroupSelectedPromise.resolve();\n      });\n      sinon.stub(view, 'previewsCreatedForTest').callsFake(() => {\n        waitForPreviewsManualPromise.resolve();\n      });\n      sinon.stub(view, 'scheduledRedrawAfterAnimationGroupUpdatedForTest').callsFake(() => {\n        waitForScheduleRedrawAfterAnimationGroupUpdated.resolve();\n      });\n\n      const model = target.model(Animation.AnimationModel.AnimationModel);\n      assert.exists(model);\n      animationModel = model;\n\n      const modelForDom = target.model(SDK.DOMModel.DOMModel);\n      assert.exists(modelForDom);\n      domModel = modelForDom;\n\n      contentDocument = SDK.DOMModel.DOMDocument.create(domModel, null, false, {\n        nodeId: 0 as Protocol.DOM.NodeId,\n        backendNodeId: 0 as Protocol.DOM.BackendNodeId,\n        nodeType: Node.DOCUMENT_NODE,\n        nodeName: '#document',\n        localName: 'document',\n        nodeValue: '',\n      }) as SDK.DOMModel.DOMDocument;\n\n      const domNode = SDK.DOMModel.DOMNode.create(domModel, contentDocument, false, {\n        nodeId: 1 as Protocol.DOM.NodeId,\n        backendNodeId: 1 as Protocol.DOM.BackendNodeId,\n        nodeType: Node.ELEMENT_NODE,\n        nodeName: 'div',\n        localName: 'div',\n        nodeValue: '',\n      });\n      sinon.stub(SDK.DOMModel.DeferredDOMNode.prototype, 'resolvePromise').resolves(domNode);\n\n      void animationModel.animationStarted({\n        id: 'animation-id',\n        name: 'animation-name',\n        pausedState: false,\n        playState: 'running',\n        playbackRate: 1,\n        startTime: 42,\n        currentTime: 0,\n        type: Protocol.Animation.AnimationType.CSSAnimation,\n        source: {\n          delay: 0,\n          endDelay: 0,\n          duration: 10000,\n          backendNodeId: 42 as Protocol.DOM.BackendNodeId,\n        } as Protocol.Animation.AnimationEffect,\n        viewOrScrollTimeline: {\n          axis: Protocol.DOM.ScrollOrientation.Vertical,\n          sourceNodeId: 42 as Protocol.DOM.BackendNodeId,\n          startOffset: 42,\n          endOffset: 142,\n        },\n      });\n\n      await waitForPreviewsManualPromise.wait();\n    });\n\n    it('should disable global controls after a scroll driven animation is selected', async () => {\n      const preview = view.element.shadowRoot!.querySelector('.animation-buffer-preview') as HTMLElement;\n      preview.click();\n      await waitForAnimationGroupSelectedPromise.wait();\n\n      const playbackRateButtons = [...view.element.shadowRoot!.querySelectorAll('.animation-playback-rate-button')!];\n      assert.isTrue(\n          playbackRateButtons.every(button => button.getAttribute('disabled')),\n          'All the playback rate buttons are disabled');\n\n      const timelineToolbar = view.element.shadowRoot!.querySelector('.animation-timeline-toolbar')!;\n      const pauseAllButton = timelineToolbar.shadowRoot!.querySelector('[aria-label=\\'Pause all\\']');\n      assert.exists(pauseAllButton?.getAttribute('disabled'), 'Pause all button is disabled');\n\n      const controlsToolbar = view.element.shadowRoot!.querySelector('.animation-controls-toolbar')!;\n      const replayButton = controlsToolbar.shadowRoot!.querySelector('[aria-label=\\'Replay timeline\\']');\n      assert.exists(replayButton?.getAttribute('disabled'), 'Replay button is disabled');\n    });\n\n    it('should show current time text in pixels', async () => {\n      const preview = view.element.shadowRoot!.querySelector('.animation-buffer-preview') as HTMLElement;\n      preview.click();\n      await waitForAnimationGroupSelectedPromise.wait();\n\n      const currentTimeElement = view.element.shadowRoot!.querySelector('.animation-timeline-current-time')!;\n      assert.isTrue(currentTimeElement.textContent?.includes('px'));\n    });\n\n    it('should show timeline grid values in pixels', async () => {\n      const preview = view.element.shadowRoot!.querySelector('.animation-buffer-preview') as HTMLElement;\n      preview.click();\n      await waitForAnimationGroupSelectedPromise.wait();\n\n      const labelElements = [...view.element.shadowRoot!.querySelectorAll('.animation-timeline-grid-label')!];\n      assert.isTrue(\n          labelElements.every(el => el.textContent?.includes('px')),\n          'Label is expected to be a pixel value but it is not');\n    });\n\n    describe('animationGroupUpdated', () => {\n      it('should re-draw preview after receiving animationGroupUpdated', async () => {\n        const preview = view.element.shadowRoot!.querySelector('.animation-buffer-preview') as HTMLElement;\n        preview.click();\n        await waitForAnimationGroupSelectedPromise.wait();\n        const initialPreviewLine = preview.querySelector('line');\n        assert.isNotNull(initialPreviewLine);\n        const initialPreviewLineLength = Number.parseInt(initialPreviewLine.getAttribute('x2')!, 10) -\n            Number.parseInt(initialPreviewLine.getAttribute('x1')!, 10);\n\n        void animationModel.animationUpdated({\n          ...SDA_ANIMATION_PAYLOAD,\n          source: {\n            ...SDA_ANIMATION_PAYLOAD.source,\n            duration: 50,\n          },\n        });\n        await waitForScheduleRedrawAfterAnimationGroupUpdated.wait();\n\n        const currentPreviewLine = preview.querySelector('line');\n        assert.isNotNull(currentPreviewLine);\n        const currentPreviewLineLength = Number.parseInt(currentPreviewLine.getAttribute('x2')!, 10) -\n            Number.parseInt(currentPreviewLine.getAttribute('x1')!, 10);\n        assert.isTrue(currentPreviewLineLength < initialPreviewLineLength);\n      });\n\n      it('should update duration if the scroll range is changed on animationGroupUpdated', async () => {\n        const SCROLL_RANGE = 20;\n        const preview = view.element.shadowRoot!.querySelector('.animation-buffer-preview') as HTMLElement;\n        preview.click();\n        await waitForAnimationGroupSelectedPromise.wait();\n\n        stubbedAnimationDOMNode.verticalScrollRange.resolves(SCROLL_RANGE);\n        void animationModel.animationUpdated(SDA_ANIMATION_PAYLOAD);\n\n        await waitForScheduleRedrawAfterAnimationGroupUpdated.wait();\n        assert.strictEqual(view.duration(), SCROLL_RANGE);\n      });\n\n      it('should update current time text if the scroll top is changed on animationGroupUpdated', async () => {\n        const SCROLL_TOP = 5;\n        stubbedAnimationDOMNode.scrollTop.resolves(SCROLL_TOP);\n        const preview = view.element.shadowRoot!.querySelector('.animation-buffer-preview') as HTMLElement;\n        const currentTimeElement = view.element.shadowRoot!.querySelector('.animation-timeline-current-time');\n        assert.isNotNull(currentTimeElement);\n        assert.isNotNull(preview);\n\n        preview.click();\n        await waitForAnimationGroupSelectedPromise.wait();\n        void animationModel.animationUpdated(SDA_ANIMATION_PAYLOAD);\n\n        await waitForScheduleRedrawAfterAnimationGroupUpdated.wait();\n        assert.strictEqual(currentTimeElement.textContent, '5px');\n      });\n\n      it('should update scrubber position if the scroll top is changed on animationGroupUpdated', async () => {\n        const SCROLL_TOP = 5;\n        stubbedAnimationDOMNode.scrollTop.resolves(SCROLL_TOP);\n        const preview = view.element.shadowRoot!.querySelector('.animation-buffer-preview') as HTMLElement;\n        const timelineScrubberElement = view.element.shadowRoot!.querySelector('.animation-scrubber') as HTMLElement;\n        preview.click();\n        await waitForAnimationGroupSelectedPromise.wait();\n\n        void animationModel.animationUpdated(SDA_ANIMATION_PAYLOAD);\n\n        await waitForScheduleRedrawAfterAnimationGroupUpdated.wait();\n        const translateX = Number.parseFloat(timelineScrubberElement.style.transform.match(/translateX\\((.*)px\\)/)![1]);\n        assert.closeTo(translateX, SCROLL_TOP * view.pixelTimeRatio(), 0.5);\n      });\n\n      it('should schedule re-draw selected group after receiving animationGroupUpdated', async () => {\n        const preview = view.element.shadowRoot!.querySelector('.animation-buffer-preview') as HTMLElement;\n        preview.click();\n        await waitForAnimationGroupSelectedPromise.wait();\n\n        void animationModel.animationUpdated(SDA_ANIMATION_PAYLOAD);\n\n        await waitForScheduleRedrawAfterAnimationGroupUpdated.wait();\n      });\n    });\n  });\n});\n"]}