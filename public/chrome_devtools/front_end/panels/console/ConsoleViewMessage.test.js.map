{"version":3,"file":"ConsoleViewMessage.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/console/ConsoleViewMessage.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport {\n  createConsoleViewMessageWithStubDeps,\n  createStackTrace,\n} from '../../testing/ConsoleHelpers.js';\nimport {createTarget} from '../../testing/EnvironmentHelpers.js';\nimport {describeWithMockConnection} from '../../testing/MockConnection.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\ndescribeWithMockConnection('ConsoleViewMessage', () => {\n  describe('anchor rendering', () => {\n    it('links to the top frame for normal console message', () => {\n      const target = createTarget();\n      const runtimeModel = target.model(SDK.RuntimeModel.RuntimeModel);\n      const stackTrace = createStackTrace([\n        'USER_ID::userNestedFunction::http://example.com/script.js::40::15',\n        'USER_ID::userFunction::http://example.com/script.js::10::2',\n        'APP_ID::entry::http://example.com/app.js::25::10',\n      ]);\n      const messageDetails = {\n        type: Protocol.Runtime.ConsoleAPICalledEventType.Log,\n        stackTrace,\n      };\n      const rawMessage = new SDK.ConsoleModel.ConsoleMessage(\n          runtimeModel, Common.Console.FrontendMessageSource.ConsoleAPI, /* level */ null, 'got here', messageDetails);\n      const {message, linkifier} = createConsoleViewMessageWithStubDeps(rawMessage);\n\n      message.toMessageElement();  // Trigger rendering.\n\n      sinon.assert.calledOnceWithExactly(linkifier.linkifyStackTraceTopFrame, target, stackTrace);\n    });\n\n    it('links to the frame with the logpoint/breakpoint if the stack trace contains the \"marker sourceURL\"', () => {\n      const target = createTarget();\n      const runtimeModel = target.model(SDK.RuntimeModel.RuntimeModel);\n      const stackTrace = createStackTrace([\n        `LOG_ID::eval::${SDK.DebuggerModel.LOGPOINT_SOURCE_URL}::0::15`,\n        'USER_ID::userFunction::http://example.com/script.js::10::2',\n        'APP_ID::entry::http://example.com/app.js::25::10',\n      ]);\n      const messageDetails = {\n        type: Protocol.Runtime.ConsoleAPICalledEventType.Log,\n        stackTrace,\n      };\n      const rawMessage = new SDK.ConsoleModel.ConsoleMessage(\n          runtimeModel, Common.Console.FrontendMessageSource.ConsoleAPI, /* level */ null, 'value of x is 42',\n          messageDetails);\n      const {message, linkifier} = createConsoleViewMessageWithStubDeps(rawMessage);\n\n      message.toMessageElement();  // Trigger rendering.\n\n      const expectedCallFrame = stackTrace.callFrames[1];  // userFunction.\n      sinon.assert.calledOnceWithExactly(\n          linkifier.maybeLinkifyConsoleCallFrame, target, expectedCallFrame,\n          {inlineFrameIndex: 0, revealBreakpoint: true, userMetric: undefined});\n    });\n\n    it('uses the last \"marker sourceURL\" frame when searching for the breakpoint/logpoint frame', () => {\n      const target = createTarget();\n      const runtimeModel = target.model(SDK.RuntimeModel.RuntimeModel);\n      const stackTrace = createStackTrace([\n        `LOG_ID::leakedClosure::${SDK.DebuggerModel.LOGPOINT_SOURCE_URL}::2::3`,\n        'USER_ID::callback::http://example.com/script.js::5::42',\n        `LOG_ID::eval::${SDK.DebuggerModel.LOGPOINT_SOURCE_URL}::0::15`,\n        'USER_ID::userFunction::http://example.com/script.js::10::2',\n        'APP_ID::entry::http://example.com/app.js::25::10',\n      ]);\n      const messageDetails = {\n        type: Protocol.Runtime.ConsoleAPICalledEventType.Log,\n        stackTrace,\n      };\n      const rawMessage = new SDK.ConsoleModel.ConsoleMessage(\n          runtimeModel, Common.Console.FrontendMessageSource.ConsoleAPI, /* level */ null, 'value of x is 42',\n          messageDetails);\n      const {message, linkifier} = createConsoleViewMessageWithStubDeps(rawMessage);\n\n      message.toMessageElement();  // Trigger rendering.\n\n      const expectedCallFrame = stackTrace.callFrames[3];  // userFunction.\n      sinon.assert.calledOnceWithExactly(\n          linkifier.maybeLinkifyConsoleCallFrame, target, expectedCallFrame,\n          {inlineFrameIndex: 0, revealBreakpoint: true, userMetric: undefined});\n    });\n  });\n\n  describe('console insights', () => {\n    it('shows a hover button', () => {\n      sinon.stub(UI.ActionRegistry.ActionRegistry.instance(), 'hasAction')\n          .withArgs('explain.console-message.hover')\n          .returns(true);\n      const target = createTarget();\n      const runtimeModel = target.model(SDK.RuntimeModel.RuntimeModel);\n      const rawMessage = new SDK.ConsoleModel.ConsoleMessage(\n          runtimeModel, Common.Console.FrontendMessageSource.ConsoleAPI, Protocol.Log.LogEntryLevel.Error, 'got here');\n      const {message} = createConsoleViewMessageWithStubDeps(rawMessage);\n      const messageElement = message.toMessageElement();  // Trigger rendering.\n      const button = messageElement.querySelector('[aria-label=\\'Understand this error\\']');\n      assert.strictEqual(button?.textContent, 'Understand this error');\n    });\n\n    it('does not show a hover button if the console message text is empty', () => {\n      sinon.stub(UI.ActionRegistry.ActionRegistry.instance(), 'hasAction')\n          .withArgs('explain.console-message.hover')\n          .returns(true);\n      const target = createTarget();\n      const runtimeModel = target.model(SDK.RuntimeModel.RuntimeModel);\n      const rawMessage = new SDK.ConsoleModel.ConsoleMessage(\n          runtimeModel, Common.Console.FrontendMessageSource.ConsoleAPI, Protocol.Log.LogEntryLevel.Error, '');\n      const {message} = createConsoleViewMessageWithStubDeps(rawMessage);\n      const messageElement = message.toMessageElement();  // Trigger rendering.\n      const button = messageElement.querySelector('[aria-label=\\'Understand this error\\']');\n      assert.isNull(button);\n    });\n\n    it('does not show a hover button for the self-XSS warning message', () => {\n      sinon.stub(UI.ActionRegistry.ActionRegistry.instance(), 'hasAction')\n          .withArgs('explain.console-message.hover')\n          .returns(true);\n      const target = createTarget();\n      const runtimeModel = target.model(SDK.RuntimeModel.RuntimeModel);\n      const rawMessage = new SDK.ConsoleModel.ConsoleMessage(\n          runtimeModel, Common.Console.FrontendMessageSource.SelfXss, Protocol.Log.LogEntryLevel.Warning,\n          'Don’t paste code...');\n      const {message} = createConsoleViewMessageWithStubDeps(rawMessage);\n      const messageElement = message.toMessageElement();  // Trigger rendering.\n      const button = messageElement.querySelector('[aria-label=\\'Understand this warning\\']');\n      assert.isNull(button);\n    });\n  });\n});\n"]}