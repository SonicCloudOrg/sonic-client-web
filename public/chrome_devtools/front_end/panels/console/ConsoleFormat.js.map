{"version":3,"file":"ConsoleFormat.js","sourceRoot":"","sources":["../../../../../../front_end/panels/console/ConsoleFormat.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport type * as SDK from '../../core/sdk/sdk.js';\n\n// VGA color palette\nconst ANSI_COLORS = ['black', 'red', 'green', 'yellow', 'blue', 'magenta', 'cyan', 'gray'];\nconst ANSI_BRIGHT_COLORS =\n    ['darkgray', 'lightred', 'lightgreen', 'lightyellow', 'lightblue', 'lightmagenta', 'lightcyan', 'white'];\n\nexport type FormatToken = {\n  type: 'generic'|'optimal',\n  value: SDK.RemoteObject.RemoteObject,\n}|{\n  type: 'string' | 'style',\n  value: string,\n};\n\n/**\n * This is the front-end part of the Formatter function specified in the\n * Console Standard (https://console.spec.whatwg.org/#formatter). Here we\n * assume that all type conversions have already happened in V8 before and\n * are only concerned with performing the actual substitutions and dealing\n * with generic and optimal object formatting as well as styling.\n *\n * @param fmt the format string.\n * @param args the substitution arguments for `fmt`.\n * @returns a list of `FormatToken`s as well as the unused arguments.\n */\nexport const format = (fmt: string, args: SDK.RemoteObject.RemoteObject[]): {\n  tokens: FormatToken[],\n  args: SDK.RemoteObject.RemoteObject[],\n} => {\n  const tokens: FormatToken[] = [];\n\n  // Current maintained style for ANSI color codes.\n  const currentStyle = new Map<string, string>();\n  function addTextDecoration(value: string): void {\n    const textDecoration = currentStyle.get('text-decoration') ?? '';\n    if (!textDecoration.includes(value)) {\n      currentStyle.set('text-decoration', `${textDecoration} ${value}`);\n    }\n  }\n  function removeTextDecoration(value: string): void {\n    const textDecoration = currentStyle.get('text-decoration')?.replace(` ${value}`, '');\n    if (textDecoration) {\n      currentStyle.set('text-decoration', textDecoration);\n    } else {\n      currentStyle.delete('text-decoration');\n    }\n  }\n\n  function addStringToken(value: string): void {\n    if (!value) {\n      return;\n    }\n    if (tokens.length && tokens[tokens.length - 1].type === 'string') {\n      tokens[tokens.length - 1].value += value;\n      return;\n    }\n    tokens.push({type: 'string', value});\n  }\n\n  let argIndex = 0;\n  const re = /%([%_Oocsdfi])|\\x1B\\[([\\d;]*)m/;\n  for (let match = re.exec(fmt); match !== null; match = re.exec(fmt)) {\n    addStringToken(match.input.substring(0, match.index));\n    let substitution: number|string|undefined = undefined;\n    const specifier = match[1];\n    switch (specifier) {\n      case '%':\n        addStringToken('%');\n        substitution = '';\n        break;\n      case 's':\n        if (argIndex < args.length) {\n          const {description} = args[argIndex++];\n          substitution = description ?? '';\n        }\n        break;\n      case 'c':\n        if (argIndex < args.length) {\n          const type = 'style';\n          const value = args[argIndex++].description ?? '';\n          tokens.push({type, value});\n          substitution = '';\n        }\n        break;\n      case 'o':\n      case 'O':\n        if (argIndex < args.length) {\n          const type = specifier === 'O' ? 'generic' : 'optimal';\n          const value = args[argIndex++];\n          tokens.push({type, value});\n          substitution = '';\n        }\n        break;\n      case '_':\n        if (argIndex < args.length) {\n          argIndex++;\n          substitution = '';\n        }\n        break;\n      case 'd':\n      case 'f':\n      case 'i':\n        if (argIndex < args.length) {\n          const {value} = args[argIndex++];\n          substitution = typeof value !== 'number' ? NaN : value;\n          if (specifier !== 'f') {\n            substitution = Math.floor(substitution);\n          }\n        }\n        break;\n      case undefined: {\n        const codes = (match[2] || '0').split(';').map(code => code ? parseInt(code, 10) : 0);\n        while (codes.length) {\n          const code = codes.shift() as number;\n          switch (code) {\n            case 0:\n              currentStyle.clear();\n              break;\n            case 1:\n              currentStyle.set('font-weight', 'bold');\n              break;\n            case 2:\n              currentStyle.set('font-weight', 'lighter');\n              break;\n            case 3:\n              currentStyle.set('font-style', 'italic');\n              break;\n            case 4:\n              addTextDecoration('underline');\n              break;\n            case 9:\n              addTextDecoration('line-through');\n              break;\n            case 22:\n              currentStyle.delete('font-weight');\n              break;\n            case 23:\n              currentStyle.delete('font-style');\n              break;\n            case 24:\n              removeTextDecoration('underline');\n              break;\n            case 29:\n              removeTextDecoration('line-through');\n              break;\n            case 38:\n            case 48:\n              if (codes.shift() === 2) {\n                const r = codes.shift() ?? 0, g = codes.shift() ?? 0, b = codes.shift() ?? 0;\n                currentStyle.set(code === 38 ? 'color' : 'background-color', `rgb(${r},${g},${b})`);\n              }\n              break;\n            case 39:\n            case 49:\n              currentStyle.delete(code === 39 ? 'color' : 'background-color');\n              break;\n            case 53:\n              addTextDecoration('overline');\n              break;\n            case 55:\n              removeTextDecoration('overline');\n              break;\n            default: {\n              const color = ANSI_COLORS[code - 30] ?? ANSI_BRIGHT_COLORS[code - 90];\n              if (color !== undefined) {\n                currentStyle.set('color', `var(--console-color-${color})`);\n              } else {\n                const background = ANSI_COLORS[code - 40] ?? ANSI_BRIGHT_COLORS[code - 100];\n                if (background !== undefined) {\n                  currentStyle.set('background-color', `var(--console-color-${background})`);\n                }\n              }\n              break;\n            }\n          }\n        }\n        const value = [...currentStyle.entries()].map(([key, val]) => `${key}:${val.trimStart()}`).join(';');\n        const type = 'style';\n        tokens.push({type, value});\n        substitution = '';\n        break;\n      }\n    }\n    if (substitution === undefined) {\n      // If there's no substitution, emit the original specifier / sequence verbatim.\n      addStringToken(match[0]);\n      substitution = '';\n    }\n    fmt = substitution + match.input.substring(match.index + match[0].length);\n  }\n  addStringToken(fmt);\n  return {tokens, args: args.slice(argIndex)};\n};\n\nexport const updateStyle = (currentStyle: Map<string, {value: string, priority: string}>, styleToAdd: string): void => {\n  const ALLOWED_PROPERTY_PREFIXES = ['background', 'border', 'color', 'font', 'line', 'margin', 'padding', 'text'];\n  // We only allow data URLs with the `url()` CSS function.\n  // The capture group is not intended to grab the whole URL exactly, just enough so we can check the scheme.\n  const URL_REGEX = /url\\([\\'\\\"]?([^\\)]*)/g;\n\n  currentStyle.clear();\n  const buffer = document.createElement('span');\n  buffer.setAttribute('style', styleToAdd);\n  for (const property of buffer.style) {\n    if (!ALLOWED_PROPERTY_PREFIXES.some(\n            prefix => property.startsWith(prefix) || property.startsWith(`-webkit-${prefix}`))) {\n      continue;\n    }\n\n    // There could be multiple `url()` functions, so we check them all.\n    // If any of them is not a `data` URL, we skip the whole property.\n    const value = buffer.style.getPropertyValue(property);\n    const potentialUrls = [...value.matchAll(URL_REGEX)].map(match => match[1]);\n    if (potentialUrls.some(\n            potentialUrl => !Common.ParsedURL.schemeIs(potentialUrl as Platform.DevToolsPath.UrlString, 'data:'))) {\n      continue;\n    }\n    currentStyle.set(property, {\n      value,\n      priority: buffer.style.getPropertyPriority(property),\n    });\n  }\n};\n"]}