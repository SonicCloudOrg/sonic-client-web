{"version":3,"file":"coverage-meta.js","sourceRoot":"","sources":["../../../../../../front_end/panels/coverage/coverage-meta.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport type * as Coverage from './coverage.js';\n\nconst UIStrings = {\n  /**\n   *@description Title of the 'Coverage' tool in the bottom drawer\n   */\n  coverage: 'Coverage',\n  /**\n   *@description Command for showing the 'Coverage' tool in the bottom drawer\n   */\n  showCoverage: 'Show Coverage',\n  /**\n   *@description Title of an action under the Performance category that can be invoked through the Command Menu\n   */\n  instrumentCoverage: 'Instrument coverage',\n  /**\n   *@description Title of an action under the Performance category that can be invoked through the Command Menu\n   */\n  stopInstrumentingCoverageAndShow: 'Stop instrumenting coverage and show results',\n  /**\n   *@description Title of an action in the coverage tool to start with reload\n   */\n  startInstrumentingCoverageAnd: 'Start instrumenting coverage and reload page',\n  /**\n   *@description Title of an action in the Coverage tool to clear all data.\n   */\n  clearCoverage: 'Clear coverage',\n  /**\n   *@description Title of an action in the Coverage tool to export the data.\n   */\n  exportCoverage: 'Export coverage',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/coverage/coverage-meta.ts', UIStrings);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\n\nlet loadedCoverageModule: (typeof Coverage|undefined);\n\nasync function loadCoverageModule(): Promise<typeof Coverage> {\n  if (!loadedCoverageModule) {\n    loadedCoverageModule = await import('./coverage.js');\n  }\n  return loadedCoverageModule;\n}\n\nfunction maybeRetrieveContextTypes<T = unknown>(getClassCallBack: (coverageModule: typeof Coverage) => T[]): T[] {\n  if (loadedCoverageModule === undefined) {\n    return [];\n  }\n  return getClassCallBack(loadedCoverageModule);\n}\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.DRAWER_VIEW,\n  id: 'coverage',\n  title: i18nLazyString(UIStrings.coverage),\n  commandPrompt: i18nLazyString(UIStrings.showCoverage),\n  persistence: UI.ViewManager.ViewPersistence.CLOSEABLE,\n  order: 100,\n  async loadView() {\n    const Coverage = await loadCoverageModule();\n    return Coverage.CoverageView.CoverageView.instance();\n  },\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'coverage.toggle-recording',\n  iconClass: UI.ActionRegistration.IconClass.START_RECORDING,\n  toggleable: true,\n  toggledIconClass: UI.ActionRegistration.IconClass.STOP_RECORDING,\n  toggleWithRedColor: true,\n  async loadActionDelegate() {\n    const Coverage = await loadCoverageModule();\n    return new Coverage.CoverageView.ActionDelegate();\n  },\n  category: UI.ActionRegistration.ActionCategory.PERFORMANCE,\n  options: [\n    {\n      value: true,\n      title: i18nLazyString(UIStrings.instrumentCoverage),\n    },\n    {\n      value: false,\n      title: i18nLazyString(UIStrings.stopInstrumentingCoverageAndShow),\n    },\n  ],\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'coverage.start-with-reload',\n  iconClass: UI.ActionRegistration.IconClass.REFRESH,\n  async loadActionDelegate() {\n    const Coverage = await loadCoverageModule();\n    return new Coverage.CoverageView.ActionDelegate();\n  },\n  category: UI.ActionRegistration.ActionCategory.PERFORMANCE,\n  title: i18nLazyString(UIStrings.startInstrumentingCoverageAnd),\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'coverage.clear',\n  iconClass: UI.ActionRegistration.IconClass.CLEAR,\n  category: UI.ActionRegistration.ActionCategory.PERFORMANCE,\n  title: i18nLazyString(UIStrings.clearCoverage),\n  async loadActionDelegate() {\n    const Coverage = await loadCoverageModule();\n    return new Coverage.CoverageView.ActionDelegate();\n  },\n  contextTypes() {\n    return maybeRetrieveContextTypes(Coverage => [Coverage.CoverageView.CoverageView]);\n  },\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'coverage.export',\n  iconClass: UI.ActionRegistration.IconClass.DOWNLOAD,\n  category: UI.ActionRegistration.ActionCategory.PERFORMANCE,\n  title: i18nLazyString(UIStrings.exportCoverage),\n  async loadActionDelegate() {\n    const Coverage = await loadCoverageModule();\n    return new Coverage.CoverageView.ActionDelegate();\n  },\n  contextTypes() {\n    return maybeRetrieveContextTypes(Coverage => [Coverage.CoverageView.CoverageView]);\n  },\n});\n"]}