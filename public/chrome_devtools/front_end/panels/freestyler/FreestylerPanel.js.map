{"version":3,"file":"FreestylerPanel.js","sourceRoot":"","sources":["../../../../../../front_end/panels/freestyler/FreestylerPanel.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as LitHtml from '../../ui/lit-html/lit-html.js';\n\nimport {\n  ChatMessageEntity,\n  FreestylerChatUi,\n  type Props as FreestylerChatUiProps,\n  State as FreestylerChatUiState,\n} from './components/FreestylerChatUi.js';\nimport {FreestylerAgent, type Step} from './FreestylerAgent.js';\nimport freestylerPanelStyles from './freestylerPanel.css.js';\n\nconst UIStrings = {\n  /**\n   *@description Freestyler UI text for clearing messages.\n   */\n  clearMessages: 'Clear messages',\n  /**\n   *@description Freestyler UI text for sending feedback.\n   */\n  sendFeedback: 'Send feedback',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/freestyler/FreestylerPanel.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\ntype ViewOutput = {};\ntype View = (input: FreestylerChatUiProps, output: ViewOutput, target: HTMLElement) => void;\n\n// TODO(ergunsh): Use the WidgetElement instead of separately creating the toolbar.\nfunction createToolbar(target: HTMLElement, {onClearClick}: {onClearClick: () => void}): void {\n  const toolbarContainer = target.createChild('div', 'freestyler-toolbar-container');\n  const leftToolbar = new UI.Toolbar.Toolbar('', toolbarContainer);\n  const rightToolbar = new UI.Toolbar.Toolbar('freestyler-right-toolbar', toolbarContainer);\n\n  const clearButton =\n      new UI.Toolbar.ToolbarButton(i18nString(UIStrings.clearMessages), 'clear', undefined, 'freestyler.clear');\n  clearButton.addEventListener(UI.Toolbar.ToolbarButton.Events.Click, onClearClick);\n  leftToolbar.appendToolbarItem(clearButton);\n\n  rightToolbar.appendSeparator();\n  const feedbackButton =\n      new UI.Toolbar.ToolbarButton(i18nString(UIStrings.sendFeedback), 'bug', undefined, 'freestyler.feedback');\n  const helpButton =\n      new UI.Toolbar.ToolbarButton(i18nString(UIStrings.sendFeedback), 'help', undefined, 'freestyler.help');\n  rightToolbar.appendToolbarItem(feedbackButton);\n  rightToolbar.appendToolbarItem(helpButton);\n}\n\nfunction defaultView(input: FreestylerChatUiProps, output: ViewOutput, target: HTMLElement): void {\n  // clang-format off\n  LitHtml.render(LitHtml.html`\n    <${FreestylerChatUi.litTagName} .props=${input} >\n    </${FreestylerChatUi.litTagName}>\n  `, target, {host: input}); // eslint-disable-line rulesdir/lit_html_host_this\n  // clang-format on\n}\n\nlet freestylerPanelInstance: FreestylerPanel;\nexport class FreestylerPanel extends UI.Panel.Panel {\n  static panelName = 'freestyler';\n\n  #toggleSearchElementAction: UI.ActionRegistration.Action;\n  #selectedNode: SDK.DOMModel.DOMNode|null;\n  #contentContainer: HTMLElement;\n  #aidaClient: Host.AidaClient.AidaClient;\n  #agent: FreestylerAgent;\n  #viewProps: FreestylerChatUiProps;\n  private constructor(private view: View = defaultView) {\n    super(FreestylerPanel.panelName);\n\n    createToolbar(this.contentElement, {onClearClick: this.#handleClearClick.bind(this)});\n    this.#toggleSearchElementAction =\n        UI.ActionRegistry.ActionRegistry.instance().getAction('elements.toggle-element-search');\n    this.#aidaClient = new Host.AidaClient.AidaClient();\n    this.#contentContainer = this.contentElement.createChild('div', 'freestyler-chat-ui-container');\n    this.#agent = new FreestylerAgent({aidaClient: this.#aidaClient});\n    this.#selectedNode = UI.Context.Context.instance().flavor(SDK.DOMModel.DOMNode);\n    this.#viewProps = {\n      state: FreestylerChatUiState.CHAT_VIEW,\n      messages: [],\n      inspectElementToggled: this.#toggleSearchElementAction.toggled(),\n      selectedNode: this.#selectedNode,\n      onTextSubmit: this.#handleTextSubmit.bind(this),\n      onInspectElementClick: this.#handleSelectElementClick.bind(this),\n      onAcceptPrivacyNotice: this.#handleAcceptPrivacyNotice.bind(this),\n    };\n\n    this.#toggleSearchElementAction.addEventListener(UI.ActionRegistration.Events.Toggled, ev => {\n      this.#viewProps.inspectElementToggled = ev.data;\n      this.doUpdate();\n    });\n\n    UI.Context.Context.instance().addFlavorChangeListener(SDK.DOMModel.DOMNode, ev => {\n      this.#viewProps.selectedNode = ev.data;\n      this.doUpdate();\n    });\n    this.doUpdate();\n  }\n\n  static instance(opts: {\n    forceNew: boolean|null,\n  }|undefined = {forceNew: null}): FreestylerPanel {\n    const {forceNew} = opts;\n    if (!freestylerPanelInstance || forceNew) {\n      freestylerPanelInstance = new FreestylerPanel();\n    }\n\n    return freestylerPanelInstance;\n  }\n\n  override wasShown(): void {\n    this.registerCSSFiles([freestylerPanelStyles]);\n  }\n\n  doUpdate(): void {\n    this.view(this.#viewProps, this, this.#contentContainer);\n  }\n\n  #handleSelectElementClick(): void {\n    void this.#toggleSearchElementAction.execute();\n  }\n\n  handleAction(actionId: string): void {\n    switch (actionId) {\n      case 'freestyler.element-panel-context': {\n        // TODO(340805362): Add UMA\n        this.#handleClearClick();\n        break;\n      }\n      case 'freestyler.style-tab-context': {\n        // TODO(340805362): Add UMA\n        this.#handleClearClick();\n        break;\n      }\n    }\n  }\n\n  // TODO(ergunsh): Handle cancelling agent run.\n  #handleClearClick(): void {\n    this.#viewProps.messages = [];\n    this.#viewProps.state = FreestylerChatUiState.CHAT_VIEW;\n    this.doUpdate();\n  }\n\n  async #handleTextSubmit(text: string): Promise<void> {\n    this.#viewProps.messages.push({\n      entity: ChatMessageEntity.USER,\n      text,\n    });\n    this.#viewProps.state = FreestylerChatUiState.CHAT_VIEW_LOADING;\n    this.doUpdate();\n\n    const systemMessage = {\n      entity: ChatMessageEntity.MODEL,\n      text: '',\n    };\n    this.#viewProps.messages.push(systemMessage);\n\n    await this.#agent.run(text, (step: Step, output: string) => {\n      if (this.#viewProps.state === FreestylerChatUiState.CHAT_VIEW_LOADING) {\n        this.#viewProps.state = FreestylerChatUiState.CHAT_VIEW;\n      }\n      // TODO(ergunsh): Better visualize.\n      systemMessage.text += `\\n${output}`;\n      this.doUpdate();\n    });\n  }\n\n  #handleAcceptPrivacyNotice(): void {\n    this.#viewProps.state = FreestylerChatUiState.CHAT_VIEW;\n    this.doUpdate();\n  }\n}\n\nexport class ActionDelegate implements UI.ActionRegistration.ActionDelegate {\n  handleAction(\n      _context: UI.Context.Context,\n      actionId: string,\n      ): boolean {\n    switch (actionId) {\n      case 'freestyler.element-panel-context':\n      case 'freestyler.style-tab-context': {\n        void (async () => {\n          const view = UI.ViewManager.ViewManager.instance().view(\n              FreestylerPanel.panelName,\n          );\n\n          if (view) {\n            await UI.ViewManager.ViewManager.instance().showView(\n                FreestylerPanel.panelName,\n            );\n            const widget = (await view.widget()) as FreestylerPanel;\n            widget.handleAction(actionId);\n          }\n        })();\n        return true;\n      }\n    }\n\n    return false;\n  }\n}\n"]}