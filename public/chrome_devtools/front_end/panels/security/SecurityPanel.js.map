{"version":3,"file":"SecurityPanel.js","sourceRoot":"","sources":["../../../../../../front_end/panels/security/SecurityPanel.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2015 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport * as NetworkForward from '../../panels/network/forward/forward.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as VisualLogging from '../../ui/visual_logging/visual_logging.js';\n\nimport lockIconStyles from './lockIcon.css.js';\nimport mainViewStyles from './mainView.css.js';\nimport originViewStyles from './originView.css.js';\nimport {\n  Events,\n  type PageVisibleSecurityState,\n  SecurityModel,\n  securityStateCompare,\n  SecurityStyleExplanation,\n  SummaryMessages,\n} from './SecurityModel.js';\nimport sidebarStyles from './sidebar.css.js';\n\nconst UIStrings = {\n  /**\n   *@description Title text content in Security Panel of the Security panel\n   */\n  overview: 'Overview',\n  /**\n   *@description Text in Security Panel of the Security panel\n   */\n  mainOrigin: 'Main origin',\n  /**\n   *@description Text in Security Panel of the Security panel\n   */\n  nonsecureOrigins: 'Non-secure origins',\n  /**\n   *@description Text in Security Panel of the Security panel\n   */\n  secureOrigins: 'Secure origins',\n  /**\n   *@description Text in Security Panel of the Security panel\n   */\n  unknownCanceled: 'Unknown / canceled',\n  /**\n   *@description Text in Security Panel of the Security panel\n   */\n  reloadToViewDetails: 'Reload to view details',\n  /**\n   *@description New parent title in Security Panel of the Security panel\n   */\n  mainOriginSecure: 'Main origin (secure)',\n  /**\n   *@description New parent title in Security Panel of the Security panel\n   */\n  mainOriginNonsecure: 'Main origin (non-secure)',\n  /**\n   *@description Summary div text content in Security Panel of the Security panel\n   */\n  securityOverview: 'Security overview',\n  /**\n   *@description Text to show something is secure\n   */\n  secure: 'Secure',\n  /**\n   *@description Sdk console message message level info of level Labels in Console View of the Console panel\n   */\n  info: 'Info',\n  /**\n   *@description Not secure div text content in Security Panel of the Security panel\n   */\n  notSecure: 'Not secure',\n  /**\n   *@description Text to view a security certificate\n   */\n  viewCertificate: 'View certificate',\n  /**\n   *@description Text in Security Panel of the Security panel\n   */\n  notSecureBroken: 'Not secure (broken)',\n  /**\n   *@description Main summary for page when it has been deemed unsafe by the SafeBrowsing service.\n   */\n  thisPageIsDangerousFlaggedBy: 'This page is dangerous (flagged by Google Safe Browsing).',\n  /**\n   *@description Summary phrase for a security problem where the site is deemed unsafe by the SafeBrowsing service.\n   */\n  flaggedByGoogleSafeBrowsing: 'Flagged by Google Safe Browsing',\n  /**\n   *@description Description of a security problem where the site is deemed unsafe by the SafeBrowsing service.\n   */\n  toCheckThisPagesStatusVisit: 'To check this page\\'s status, visit g.co/safebrowsingstatus.',\n  /**\n   *@description Main summary for a non cert error page.\n   */\n  thisIsAnErrorPage: 'This is an error page.',\n  /**\n   *@description Main summary for where the site is non-secure HTTP.\n   */\n  thisPageIsInsecureUnencrypted: 'This page is insecure (unencrypted HTTP).',\n  /**\n   *@description Main summary for where the site has a non-cryptographic secure origin.\n   */\n  thisPageHasANonhttpsSecureOrigin: 'This page has a non-HTTPS secure origin.',\n  /**\n   *@description Message to display in devtools security tab when the page you are on triggered a safety tip.\n   */\n  thisPageIsSuspicious: 'This page is suspicious',\n  /**\n   *@description Body of message to display in devtools security tab when you are viewing a page that triggered a safety tip.\n   */\n  chromeHasDeterminedThatThisSiteS: 'Chrome has determined that this site could be fake or fraudulent.',\n  /**\n   *@description Second part of the body of message to display in devtools security tab when you are viewing a page that triggered a safety tip.\n   */\n  ifYouBelieveThisIsShownIn:\n      'If you believe this is shown in error please visit https://g.co/chrome/lookalike-warnings.',\n  /**\n   *@description Summary of a warning when the user visits a page that triggered a Safety Tip because the domain looked like another domain.\n   */\n  possibleSpoofingUrl: 'Possible spoofing URL',\n  /**\n   *@description Body of a warning when the user visits a page that triggered a Safety Tip because the domain looked like another domain.\n   *@example {wikipedia.org} PH1\n   */\n  thisSitesHostnameLooksSimilarToP:\n      'This site\\'s hostname looks similar to {PH1}. Attackers sometimes mimic sites by making small, hard-to-see changes to the domain name.',\n  /**\n   *@description second part of body of a warning when the user visits a page that triggered a Safety Tip because the domain looked like another domain.\n   */\n  ifYouBelieveThisIsShownInErrorSafety:\n      'If you believe this is shown in error please visit https://g.co/chrome/lookalike-warnings.',\n  /**\n   *@description Title of the devtools security tab when the page you are on triggered a safety tip.\n   */\n  thisPageIsSuspiciousFlaggedBy: 'This page is suspicious (flagged by Chrome).',\n  /**\n   *@description Text for a security certificate\n   */\n  certificate: 'Certificate',\n  /**\n   *@description Summary phrase for a security problem where the site's certificate chain contains a SHA1 signature.\n   */\n  insecureSha: 'insecure (SHA-1)',\n  /**\n   *@description Description of a security problem where the site's certificate chain contains a SHA1 signature.\n   */\n  theCertificateChainForThisSite: 'The certificate chain for this site contains a certificate signed using SHA-1.',\n  /**\n   *@description Summary phrase for a security problem where the site's certificate is missing a subjectAltName extension.\n   */\n  subjectAlternativeNameMissing: '`Subject Alternative Name` missing',\n  /**\n   *@description Description of a security problem where the site's certificate is missing a subjectAltName extension.\n   */\n  theCertificateForThisSiteDoesNot:\n      'The certificate for this site does not contain a `Subject Alternative Name` extension containing a domain name or IP address.',\n  /**\n   *@description Summary phrase for a security problem with the site's certificate.\n   */\n  missing: 'missing',\n  /**\n   *@description Description of a security problem with the site's certificate.\n   *@example {net::ERR_CERT_AUTHORITY_INVALID} PH1\n   */\n  thisSiteIsMissingAValidTrusted: 'This site is missing a valid, trusted certificate ({PH1}).',\n  /**\n   *@description Summary phrase for a site that has a valid server certificate.\n   */\n  validAndTrusted: 'valid and trusted',\n  /**\n   *@description Description of a site that has a valid server certificate.\n   *@example {Let's Encrypt Authority X3} PH1\n   */\n  theConnectionToThisSiteIsUsingA:\n      'The connection to this site is using a valid, trusted server certificate issued by {PH1}.',\n  /**\n   *@description Summary phrase for a security state where Private Key Pinning is ignored because the certificate chains to a locally-trusted root.\n   */\n  publickeypinningBypassed: 'Public-Key-Pinning bypassed',\n  /**\n   *@description Description of a security state where Private Key Pinning is ignored because the certificate chains to a locally-trusted root.\n   */\n  publickeypinningWasBypassedByA: 'Public-Key-Pinning was bypassed by a local root certificate.',\n  /**\n   *@description Summary phrase for a site with a certificate that is expiring soon.\n   */\n  certificateExpiresSoon: 'Certificate expires soon',\n  /**\n   *@description Description for a site with a certificate that is expiring soon.\n   */\n  theCertificateForThisSiteExpires:\n      'The certificate for this site expires in less than 48 hours and needs to be renewed.',\n  /**\n   *@description Text that refers to the network connection\n   */\n  connection: 'Connection',\n  /**\n   *@description Summary phrase for a site that uses a modern, secure TLS protocol and cipher.\n   */\n  secureConnectionSettings: 'secure connection settings',\n  /**\n   *@description Description of a site's TLS settings.\n   *@example {TLS 1.2} PH1\n   *@example {ECDHE_RSA} PH2\n   *@example {AES_128_GCM} PH3\n   */\n  theConnectionToThisSiteIs:\n      'The connection to this site is encrypted and authenticated using {PH1}, {PH2}, and {PH3}.',\n  /**\n   *@description A recommendation to the site owner to use a modern TLS protocol\n   *@example {TLS 1.0} PH1\n   */\n  sIsObsoleteEnableTlsOrLater: '{PH1} is obsolete. Enable TLS 1.2 or later.',\n  /**\n   *@description A recommendation to the site owner to use a modern TLS key exchange\n   */\n  rsaKeyExchangeIsObsoleteEnableAn: 'RSA key exchange is obsolete. Enable an ECDHE-based cipher suite.',\n  /**\n   *@description A recommendation to the site owner to use a modern TLS cipher\n   *@example {3DES_EDE_CBC} PH1\n   */\n  sIsObsoleteEnableAnAesgcmbased: '{PH1} is obsolete. Enable an AES-GCM-based cipher suite.',\n  /**\n   *@description A recommendation to the site owner to use a modern TLS server signature\n   */\n  theServerSignatureUsesShaWhichIs:\n      'The server signature uses SHA-1, which is obsolete. Enable a SHA-2 signature algorithm instead. (Note this is different from the signature in the certificate.)',\n  /**\n   *@description Summary phrase for a site that uses an outdated SSL settings (protocol, key exchange, or cipher).\n   */\n  obsoleteConnectionSettings: 'obsolete connection settings',\n  /**\n   *@description A title of the 'Resources' action category\n   */\n  resources: 'Resources',\n  /**\n   *@description Summary for page when there is active mixed content\n   */\n  activeMixedContent: 'active mixed content',\n  /**\n   *@description Description for page when there is active mixed content\n   */\n  youHaveRecentlyAllowedNonsecure:\n      'You have recently allowed non-secure content (such as scripts or iframes) to run on this site.',\n  /**\n   *@description Summary for page when there is mixed content\n   */\n  mixedContent: 'mixed content',\n  /**\n   *@description Description for page when there is mixed content\n   */\n  thisPageIncludesHttpResources: 'This page includes HTTP resources.',\n  /**\n   *@description Summary for page when there is a non-secure form\n   */\n  nonsecureForm: 'non-secure form',\n  /**\n   *@description Description for page when there is a non-secure form\n   */\n  thisPageIncludesAFormWithA: 'This page includes a form with a non-secure \"action\" attribute.',\n  /**\n   *@description Summary for the page when it contains active content with certificate error\n   */\n  activeContentWithCertificate: 'active content with certificate errors',\n  /**\n   *@description Description for the page when it contains active content with certificate error\n   */\n  youHaveRecentlyAllowedContent:\n      'You have recently allowed content loaded with certificate errors (such as scripts or iframes) to run on this site.',\n  /**\n   *@description Summary for page when there is active content with certificate errors\n   */\n  contentWithCertificateErrors: 'content with certificate errors',\n  /**\n   *@description Description for page when there is content with certificate errors\n   */\n  thisPageIncludesResourcesThat: 'This page includes resources that were loaded with certificate errors.',\n  /**\n   *@description Summary for page when all resources are served securely\n   */\n  allServedSecurely: 'all served securely',\n  /**\n   *@description Description for page when all resources are served securely\n   */\n  allResourcesOnThisPageAreServed: 'All resources on this page are served securely.',\n  /**\n   *@description Text in Security Panel of the Security panel\n   */\n  blockedMixedContent: 'Blocked mixed content',\n  /**\n   *@description Text in Security Panel of the Security panel\n   */\n  yourPageRequestedNonsecure: 'Your page requested non-secure resources that were blocked.',\n  /**\n   *@description Refresh prompt text content in Security Panel of the Security panel\n   */\n  reloadThePageToRecordRequestsFor: 'Reload the page to record requests for HTTP resources.',\n  /**\n   * @description Link text in the Security Panel. Clicking the link navigates the user to the\n   * Network panel. Requests refers to network requests. Each request is a piece of data transmitted\n   * from the current user's browser to a remote server.\n   */\n  viewDRequestsInNetworkPanel:\n      '{n, plural, =1 {View # request in Network Panel} other {View # requests in Network Panel}}',\n  /**\n   *@description Text for the origin of something\n   */\n  origin: 'Origin',\n  /**\n   *@description Text in Security Panel of the Security panel\n   */\n  viewRequestsInNetworkPanel: 'View requests in Network Panel',\n  /**\n   *@description Text for security or network protocol\n   */\n  protocol: 'Protocol',\n  /**\n   *@description Text in the Security panel that refers to how the TLS handshake\n   *established encryption keys.\n   */\n  keyExchange: 'Key exchange',\n  /**\n   *@description Text in Security Panel that refers to how the TLS handshake\n   *encrypted data.\n   */\n  cipher: 'Cipher',\n  /**\n   *@description Text in Security Panel that refers to the signature algorithm\n   *used by the server for authenticate in the TLS handshake.\n   */\n  serverSignature: 'Server signature',\n  /**\n   *@description Text in Security Panel that refers to whether the ClientHello\n   *message in the TLS handshake was encrypted.\n   */\n  encryptedClientHello: 'Encrypted ClientHello',\n  /**\n   *@description Sct div text content in Security Panel of the Security panel\n   */\n  certificateTransparency: 'Certificate Transparency',\n  /**\n   *@description Text that refers to the subject of a security certificate\n   */\n  subject: 'Subject',\n  /**\n   *@description Text to show since when an item is valid\n   */\n  validFrom: 'Valid from',\n  /**\n   *@description Text to indicate the expiry date\n   */\n  validUntil: 'Valid until',\n  /**\n   *@description Text for the issuer of an item\n   */\n  issuer: 'Issuer',\n  /**\n   *@description Text in Security Panel of the Security panel\n   */\n  openFullCertificateDetails: 'Open full certificate details',\n  /**\n   *@description Text in Security Panel of the Security panel\n   */\n  sct: 'SCT',\n  /**\n   *@description Text in Security Panel of the Security panel\n   */\n  logName: 'Log name',\n  /**\n   *@description Text in Security Panel of the Security panel\n   */\n  logId: 'Log ID',\n  /**\n   *@description Text in Security Panel of the Security panel\n   */\n  validationStatus: 'Validation status',\n  /**\n   *@description Text for the source of something\n   */\n  source: 'Source',\n  /**\n   * @description Label for a date/time string in the Security panel. It indicates the time at which\n   * a security certificate was issued (created by an authority and distributed).\n   */\n  issuedAt: 'Issued at',\n  /**\n   *@description Text in Security Panel of the Security panel\n   */\n  hashAlgorithm: 'Hash algorithm',\n  /**\n   *@description Text in Security Panel of the Security panel\n   */\n  signatureAlgorithm: 'Signature algorithm',\n  /**\n   *@description Text in Security Panel of the Security panel\n   */\n  signatureData: 'Signature data',\n  /**\n   *@description Toggle scts details link text content in Security Panel of the Security panel\n   */\n  showFullDetails: 'Show full details',\n  /**\n   *@description Toggle scts details link text content in Security Panel of the Security panel\n   */\n  hideFullDetails: 'Hide full details',\n  /**\n   *@description Text in Security Panel of the Security panel\n   */\n  thisRequestCompliesWithChromes: 'This request complies with `Chrome`\\'s Certificate Transparency policy.',\n  /**\n   *@description Text in Security Panel of the Security panel\n   */\n  thisRequestDoesNotComplyWith: 'This request does not comply with `Chrome`\\'s Certificate Transparency policy.',\n  /**\n   *@description Text in Security Panel of the Security panel\n   */\n  thisResponseWasLoadedFromCache: 'This response was loaded from cache. Some security details might be missing.',\n  /**\n   *@description Text in Security Panel of the Security panel\n   */\n  theSecurityDetailsAboveAreFrom: 'The security details above are from the first inspected response.',\n  /**\n   *@description Main summary for where the site has a non-cryptographic secure origin.\n   */\n  thisOriginIsANonhttpsSecure: 'This origin is a non-HTTPS secure origin.',\n  /**\n   *@description Text in Security Panel of the Security panel\n   */\n  yourConnectionToThisOriginIsNot: 'Your connection to this origin is not secure.',\n  /**\n   *@description No info div text content in Security Panel of the Security panel\n   */\n  noSecurityInformation: 'No security information',\n  /**\n   *@description Text in Security Panel of the Security panel\n   */\n  noSecurityDetailsAreAvailableFor: 'No security details are available for this origin.',\n  /**\n   *@description San div text content in Security Panel of the Security panel\n   */\n  na: '(n/a)',\n  /**\n   *@description Text to show less content\n   */\n  showLess: 'Show less',\n  /**\n   *@description Truncated santoggle text content in Security Panel of the Security panel\n   *@example {2} PH1\n   */\n  showMoreSTotal: 'Show more ({PH1} total)',\n  /**\n   *@description Shown when a field refers to an option that is unknown to the frontend.\n   */\n  unknownField: 'unknown',\n  /**\n   *@description Shown when a field refers to a TLS feature which was enabled.\n   */\n  enabled: 'enabled',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/security/SecurityPanel.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nlet securityPanelInstance: SecurityPanel;\n\n// See https://www.iana.org/assignments/tls-parameters/tls-parameters.xhtml#tls-signaturescheme\n// This contains signature schemes supported by Chrome.\nconst SignatureSchemeStrings = new Map([\n  // The full name for these schemes is RSASSA-PKCS1-v1_5, sometimes\n  // \"PKCS#1 v1.5\", but those are very long, so let \"RSA\" vs \"RSA-PSS\"\n  // disambiguate.\n  [0x0201, 'RSA with SHA-1'],\n  [0x0401, 'RSA with SHA-256'],\n  [0x0501, 'RSA with SHA-384'],\n  [0x0601, 'RSA with SHA-512'],\n\n  // We omit the curve from these names because in TLS 1.2 these code points\n  // were not specific to a curve. Saying \"P-256\" for a server that used a P-384\n  // key with SHA-256 in TLS 1.2 would be confusing.\n  [0x0403, 'ECDSA with SHA-256'],\n  [0x0503, 'ECDSA with SHA-384'],\n\n  [0x0804, 'RSA-PSS with SHA-256'],\n  [0x0805, 'RSA-PSS with SHA-384'],\n  [0x0806, 'RSA-PSS with SHA-512'],\n]);\n\nexport class SecurityPanel extends UI.Panel.PanelWithSidebar implements\n    SDK.TargetManager.SDKModelObserver<SecurityModel> {\n  readonly mainView: SecurityMainView;\n  private readonly sidebarMainViewElement: SecurityPanelSidebarTreeElement;\n  readonly sidebarTree: SecurityPanelSidebarTree;\n  private readonly lastResponseReceivedForLoaderId: Map<string, SDK.NetworkRequest.NetworkRequest>;\n  private readonly origins: Map<string, OriginState>;\n  private readonly filterRequestCounts: Map<string, number>;\n  private visibleView: UI.Widget.VBox|null;\n  private eventListeners: Common.EventTarget.EventDescriptor[];\n  private securityModel: SecurityModel|null;\n\n  private constructor() {\n    super('security');\n\n    this.mainView = new SecurityMainView(this);\n\n    const title = document.createElement('span');\n    title.classList.add('title');\n    title.textContent = i18nString(UIStrings.overview);\n    this.sidebarMainViewElement = new SecurityPanelSidebarTreeElement(\n        title, this.setVisibleView.bind(this, this.mainView), 'security-main-view-sidebar-tree-item', 'lock-icon');\n    this.sidebarMainViewElement.tooltip = title.textContent;\n    this.sidebarTree = new SecurityPanelSidebarTree(this.sidebarMainViewElement, this.showOrigin.bind(this));\n    this.panelSidebarElement().appendChild(this.sidebarTree.element);\n\n    this.lastResponseReceivedForLoaderId = new Map();\n\n    this.origins = new Map();\n\n    this.filterRequestCounts = new Map();\n\n    this.visibleView = null;\n    this.eventListeners = [];\n    this.securityModel = null;\n\n    SDK.TargetManager.TargetManager.instance().observeModels(SecurityModel, this, {scoped: true});\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.ResourceTreeModel.ResourceTreeModel, SDK.ResourceTreeModel.Events.PrimaryPageChanged,\n        this.onPrimaryPageChanged, this);\n  }\n\n  static instance(opts: {forceNew: boolean|null} = {forceNew: null}): SecurityPanel {\n    const {forceNew} = opts;\n    if (!securityPanelInstance || forceNew) {\n      securityPanelInstance = new SecurityPanel();\n    }\n\n    return securityPanelInstance;\n  }\n\n  static createCertificateViewerButtonForOrigin(text: string, origin: string): Element {\n    const certificateButton = UI.UIUtils.createTextButton(text, async (e: Event) => {\n      e.consume();\n      const names = await SDK.NetworkManager.MultitargetNetworkManager.instance().getCertificate(origin);\n      if (names.length > 0) {\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance.showCertificateViewer(names);\n      }\n    }, {className: 'origin-button', jslogContext: 'security.view-certificate-for-origin', title: text});\n    UI.ARIAUtils.markAsButton(certificateButton);\n    return certificateButton;\n  }\n\n  static createCertificateViewerButtonForCert(text: string, names: string[]): Element {\n    const certificateButton = UI.UIUtils.createTextButton(text, e => {\n      e.consume();\n      Host.InspectorFrontendHost.InspectorFrontendHostInstance.showCertificateViewer(names);\n    }, {className: 'origin-button', jslogContext: 'security.view-certificate'});\n    UI.ARIAUtils.markAsButton(certificateButton);\n    return certificateButton;\n  }\n\n  static createHighlightedUrl(url: Platform.DevToolsPath.UrlString, securityState: string): Element {\n    const schemeSeparator = '://';\n    const index = url.indexOf(schemeSeparator);\n\n    // If the separator is not found, just display the text without highlighting.\n    if (index === -1) {\n      const text = document.createElement('span');\n      text.textContent = url;\n      return text;\n    }\n\n    const highlightedUrl = document.createElement('span');\n\n    const scheme = url.substr(0, index);\n    const content = url.substr(index + schemeSeparator.length);\n    highlightedUrl.createChild('span', 'url-scheme-' + securityState).textContent = scheme;\n    highlightedUrl.createChild('span', 'url-scheme-separator').textContent = schemeSeparator;\n    highlightedUrl.createChild('span').textContent = content;\n\n    return highlightedUrl;\n  }\n\n  private updateVisibleSecurityState(visibleSecurityState: PageVisibleSecurityState): void {\n    this.sidebarMainViewElement.setSecurityState(visibleSecurityState.securityState);\n    this.mainView.updateVisibleSecurityState(visibleSecurityState);\n  }\n\n  private onVisibleSecurityStateChanged({data}: Common.EventTarget.EventTargetEvent<PageVisibleSecurityState>): void {\n    this.updateVisibleSecurityState(data);\n  }\n\n  selectAndSwitchToMainView(): void {\n    // The sidebar element will trigger displaying the main view. Rather than making a redundant call to display the main view, we rely on this.\n    this.sidebarMainViewElement.select(true);\n  }\n  showOrigin(origin: Platform.DevToolsPath.UrlString): void {\n    const originState = this.origins.get(origin);\n    if (!originState) {\n      return;\n    }\n    if (!originState.originView) {\n      originState.originView = new SecurityOriginView(this, origin, originState);\n    }\n\n    this.setVisibleView(originState.originView);\n  }\n\n  override wasShown(): void {\n    super.wasShown();\n    if (!this.visibleView) {\n      this.selectAndSwitchToMainView();\n    }\n  }\n\n  override focus(): void {\n    this.sidebarTree.focus();\n  }\n\n  private setVisibleView(view: UI.Widget.VBox): void {\n    if (this.visibleView === view) {\n      return;\n    }\n\n    if (this.visibleView) {\n      this.visibleView.detach();\n    }\n\n    this.visibleView = view;\n\n    if (view) {\n      this.splitWidget().setMainWidget(view);\n    }\n  }\n\n  private onResponseReceived(event: Common.EventTarget.EventTargetEvent<SDK.NetworkManager.ResponseReceivedEvent>):\n      void {\n    const request = event.data.request;\n    if (request.resourceType() === Common.ResourceType.resourceTypes.Document && request.loaderId) {\n      this.lastResponseReceivedForLoaderId.set(request.loaderId, request);\n    }\n  }\n\n  private processRequest(request: SDK.NetworkRequest.NetworkRequest): void {\n    const origin = Common.ParsedURL.ParsedURL.extractOrigin(request.url());\n\n    if (!origin) {\n      // We don't handle resources like data: URIs. Most of them don't affect the lock icon.\n      return;\n    }\n\n    let securityState = request.securityState();\n    if (request.mixedContentType === Protocol.Security.MixedContentType.Blockable ||\n        request.mixedContentType === Protocol.Security.MixedContentType.OptionallyBlockable) {\n      securityState = Protocol.Security.SecurityState.Insecure;\n    }\n\n    const originState = this.origins.get(origin);\n    if (originState) {\n      if (securityStateCompare(securityState, originState.securityState) < 0) {\n        originState.securityState = securityState;\n        const securityDetails = request.securityDetails();\n        if (securityDetails) {\n          originState.securityDetails = securityDetails;\n        }\n        this.sidebarTree.updateOrigin(origin, securityState);\n        if (originState.originView) {\n          originState.originView.setSecurityState(securityState);\n        }\n      }\n    } else {\n      // This stores the first security details we see for an origin, but we should\n      // eventually store a (deduplicated) list of all the different security\n      // details we have seen. https://crbug.com/503170\n      const newOriginState: OriginState = {\n        securityState,\n        securityDetails: request.securityDetails(),\n        loadedFromCache: request.cached(),\n        originView: undefined,\n      };\n      this.origins.set(origin, newOriginState);\n\n      this.sidebarTree.addOrigin(origin, securityState);\n\n      // Don't construct the origin view yet (let it happen lazily).\n    }\n  }\n\n  private onRequestFinished(event: Common.EventTarget.EventTargetEvent<SDK.NetworkRequest.NetworkRequest>): void {\n    const request = event.data;\n    this.updateFilterRequestCounts(request);\n    this.processRequest(request);\n  }\n\n  private updateFilterRequestCounts(request: SDK.NetworkRequest.NetworkRequest): void {\n    if (request.mixedContentType === Protocol.Security.MixedContentType.None) {\n      return;\n    }\n\n    let filterKey: string = NetworkForward.UIFilter.MixedContentFilterValues.All;\n    if (request.wasBlocked()) {\n      filterKey = NetworkForward.UIFilter.MixedContentFilterValues.Blocked;\n    } else if (request.mixedContentType === Protocol.Security.MixedContentType.Blockable) {\n      filterKey = NetworkForward.UIFilter.MixedContentFilterValues.BlockOverridden;\n    } else if (request.mixedContentType === Protocol.Security.MixedContentType.OptionallyBlockable) {\n      filterKey = NetworkForward.UIFilter.MixedContentFilterValues.Displayed;\n    }\n\n    const currentCount = this.filterRequestCounts.get(filterKey);\n    if (!currentCount) {\n      this.filterRequestCounts.set(filterKey, 1);\n    } else {\n      this.filterRequestCounts.set(filterKey, currentCount + 1);\n    }\n\n    this.mainView.refreshExplanations();\n  }\n\n  filterRequestCount(filterKey: string): number {\n    return this.filterRequestCounts.get(filterKey) || 0;\n  }\n\n  modelAdded(securityModel: SecurityModel): void {\n    if (securityModel.target() !== securityModel.target().outermostTarget()) {\n      return;\n    }\n\n    this.securityModel = securityModel;\n    const resourceTreeModel = securityModel.resourceTreeModel();\n    const networkManager = securityModel.networkManager();\n    if (this.eventListeners.length) {\n      Common.EventTarget.removeEventListeners(this.eventListeners);\n    }\n    this.eventListeners = [\n      securityModel.addEventListener(Events.VisibleSecurityStateChanged, this.onVisibleSecurityStateChanged, this),\n      resourceTreeModel.addEventListener(\n          SDK.ResourceTreeModel.Events.InterstitialShown, this.onInterstitialShown, this),\n      resourceTreeModel.addEventListener(\n          SDK.ResourceTreeModel.Events.InterstitialHidden, this.onInterstitialHidden, this),\n      networkManager.addEventListener(SDK.NetworkManager.Events.ResponseReceived, this.onResponseReceived, this),\n      networkManager.addEventListener(SDK.NetworkManager.Events.RequestFinished, this.onRequestFinished, this),\n    ];\n\n    if (resourceTreeModel.isInterstitialShowing) {\n      this.onInterstitialShown();\n    }\n  }\n\n  modelRemoved(securityModel: SecurityModel): void {\n    if (this.securityModel !== securityModel) {\n      return;\n    }\n\n    this.securityModel = null;\n    Common.EventTarget.removeEventListeners(this.eventListeners);\n  }\n\n  private onPrimaryPageChanged(\n      event: Common.EventTarget.EventTargetEvent<\n          {frame: SDK.ResourceTreeModel.ResourceTreeFrame, type: SDK.ResourceTreeModel.PrimaryPageChangeType}>): void {\n    const {frame} = event.data;\n    const request = this.lastResponseReceivedForLoaderId.get(frame.loaderId);\n\n    this.selectAndSwitchToMainView();\n    this.sidebarTree.clearOrigins();\n    this.origins.clear();\n    this.lastResponseReceivedForLoaderId.clear();\n    this.filterRequestCounts.clear();\n    // After clearing the filtered request counts, refresh the\n    // explanations to reflect the new counts.\n    this.mainView.refreshExplanations();\n\n    // If we could not find a matching request (as in the case of clicking\n    // through an interstitial, see https://crbug.com/669309), set the origin\n    // based upon the url data from the PrimaryPageChanged event itself.\n    const origin = Common.ParsedURL.ParsedURL.extractOrigin(request ? request.url() : frame.url);\n    this.sidebarTree.setMainOrigin(origin);\n\n    if (request) {\n      this.processRequest(request);\n    }\n  }\n\n  private onInterstitialShown(): void {\n    // The panel might have been displaying the origin view on the\n    // previously loaded page. When showing an interstitial, switch\n    // back to the Overview view.\n    this.selectAndSwitchToMainView();\n    this.sidebarTree.toggleOriginsList(true /* hidden */);\n  }\n\n  private onInterstitialHidden(): void {\n    this.sidebarTree.toggleOriginsList(false /* hidden */);\n  }\n}\n\nexport class SecurityPanelSidebarTree extends UI.TreeOutline.TreeOutlineInShadow {\n  private readonly showOriginInPanel: (arg0: Origin) => void;\n  private mainOrigin: string|null;\n  private readonly originGroupTitles: Map<OriginGroup, string>;\n  private originGroups: Map<OriginGroup, UI.TreeOutline.TreeElement>;\n  private readonly elementsByOrigin: Map<string, SecurityPanelSidebarTreeElement>;\n  private readonly mainViewReloadMessage: UI.TreeOutline.TreeElement;\n\n  constructor(mainViewElement: SecurityPanelSidebarTreeElement, showOriginInPanel: (arg0: Origin) => void) {\n    super();\n\n    this.appendChild(mainViewElement);\n\n    this.registerCSSFiles([lockIconStyles, sidebarStyles]);\n\n    this.showOriginInPanel = showOriginInPanel;\n    this.mainOrigin = null;\n\n    this.originGroupTitles = new Map([\n      [OriginGroup.MainOrigin, i18nString(UIStrings.mainOrigin)],\n      [OriginGroup.NonSecure, i18nString(UIStrings.nonsecureOrigins)],\n      [OriginGroup.Secure, i18nString(UIStrings.secureOrigins)],\n      [OriginGroup.Unknown, i18nString(UIStrings.unknownCanceled)],\n    ]);\n\n    this.originGroups = new Map();\n    for (const group of Object.values(OriginGroup)) {\n      const element = this.createOriginGroupElement(this.originGroupTitles.get(group) as string);\n      this.originGroups.set(group, element);\n      this.appendChild(element);\n    }\n\n    this.mainViewReloadMessage = new UI.TreeOutline.TreeElement(i18nString(UIStrings.reloadToViewDetails));\n    this.mainViewReloadMessage.selectable = false;\n    this.mainViewReloadMessage.listItemElement.classList.add('security-main-view-reload-message');\n    const treeElement = this.originGroups.get(OriginGroup.MainOrigin);\n    (treeElement as UI.TreeOutline.TreeElement).appendChild(this.mainViewReloadMessage);\n\n    this.clearOriginGroups();\n\n    this.elementsByOrigin = new Map();\n  }\n\n  private originGroupTitle(originGroup: OriginGroup): string {\n    return this.originGroupTitles.get(originGroup) as string;\n  }\n\n  private originGroupElement(originGroup: OriginGroup): UI.TreeOutline.TreeElement {\n    return this.originGroups.get(originGroup) as UI.TreeOutline.TreeElement;\n  }\n\n  private createOriginGroupElement(originGroupTitle: string): UI.TreeOutline.TreeElement {\n    const originGroup = new UI.TreeOutline.TreeElement(originGroupTitle, true);\n    originGroup.selectable = false;\n    originGroup.setCollapsible(false);\n    originGroup.expand();\n    originGroup.listItemElement.classList.add('security-sidebar-origins');\n    UI.ARIAUtils.setLabel(originGroup.childrenListElement, originGroupTitle);\n    return originGroup;\n  }\n\n  toggleOriginsList(hidden: boolean): void {\n    for (const element of this.originGroups.values()) {\n      element.hidden = hidden;\n    }\n  }\n\n  addOrigin(origin: Platform.DevToolsPath.UrlString, securityState: Protocol.Security.SecurityState): void {\n    this.mainViewReloadMessage.hidden = true;\n    const originElement = new SecurityPanelSidebarTreeElement(\n        SecurityPanel.createHighlightedUrl(origin, securityState), this.showOriginInPanel.bind(this, origin),\n        'security-sidebar-tree-item', 'security-property');\n    originElement.tooltip = origin;\n    this.elementsByOrigin.set(origin, originElement);\n    this.updateOrigin(origin, securityState);\n  }\n\n  setMainOrigin(origin: string): void {\n    this.mainOrigin = origin;\n  }\n\n  updateOrigin(origin: string, securityState: Protocol.Security.SecurityState): void {\n    const originElement = this.elementsByOrigin.get(origin) as SecurityPanelSidebarTreeElement;\n    originElement.setSecurityState(securityState);\n\n    let newParent: UI.TreeOutline.TreeElement;\n    if (origin === this.mainOrigin) {\n      newParent = this.originGroups.get(OriginGroup.MainOrigin) as UI.TreeOutline.TreeElement;\n      if (securityState === Protocol.Security.SecurityState.Secure) {\n        newParent.title = i18nString(UIStrings.mainOriginSecure);\n      } else {\n        newParent.title = i18nString(UIStrings.mainOriginNonsecure);\n      }\n      UI.ARIAUtils.setLabel(newParent.childrenListElement, newParent.title);\n    } else {\n      switch (securityState) {\n        case Protocol.Security.SecurityState.Secure:\n          newParent = this.originGroupElement(OriginGroup.Secure);\n          break;\n        case Protocol.Security.SecurityState.Unknown:\n          newParent = this.originGroupElement(OriginGroup.Unknown);\n          break;\n        default:\n          newParent = this.originGroupElement(OriginGroup.NonSecure);\n          break;\n      }\n    }\n\n    const oldParent = originElement.parent;\n    if (oldParent !== newParent) {\n      if (oldParent) {\n        oldParent.removeChild(originElement);\n        if (oldParent.childCount() === 0) {\n          oldParent.hidden = true;\n        }\n      }\n      newParent.appendChild(originElement);\n      newParent.hidden = false;\n    }\n  }\n\n  private clearOriginGroups(): void {\n    for (const [originGroup, originGroupElement] of this.originGroups) {\n      if (originGroup === OriginGroup.MainOrigin) {\n        for (let i = originGroupElement.childCount() - 1; i > 0; i--) {\n          originGroupElement.removeChildAtIndex(i);\n        }\n        originGroupElement.title = this.originGroupTitle(OriginGroup.MainOrigin);\n        originGroupElement.hidden = false;\n        this.mainViewReloadMessage.hidden = false;\n      } else {\n        originGroupElement.removeChildren();\n        originGroupElement.hidden = true;\n      }\n    }\n  }\n\n  clearOrigins(): void {\n    this.clearOriginGroups();\n    this.elementsByOrigin.clear();\n  }\n  wasShown(): void {\n  }\n}\n\nexport enum OriginGroup {\n  MainOrigin = 'MainOrigin',\n  NonSecure = 'NonSecure',\n  Secure = 'Secure',\n  Unknown = 'Unknown',\n}\n\nexport class SecurityPanelSidebarTreeElement extends UI.TreeOutline.TreeElement {\n  private readonly selectCallback: () => void;\n  private readonly cssPrefix: string;\n  private readonly iconElement: HTMLElement;\n  private securityStateInternal: Protocol.Security.SecurityState|null;\n\n  constructor(textElement: Element, selectCallback: () => void, className: string, cssPrefix: string) {\n    super('', false);\n    this.selectCallback = selectCallback;\n    this.cssPrefix = cssPrefix;\n    this.listItemElement.classList.add(className);\n    this.iconElement = this.listItemElement.createChild('div', 'icon');\n    this.iconElement.classList.add(this.cssPrefix);\n    this.listItemElement.appendChild(textElement);\n    this.securityStateInternal = null;\n    this.setSecurityState(Protocol.Security.SecurityState.Unknown);\n  }\n\n  setSecurityState(newSecurityState: Protocol.Security.SecurityState): void {\n    if (this.securityStateInternal) {\n      this.iconElement.classList.remove(this.cssPrefix + '-' + this.securityStateInternal);\n    }\n\n    this.securityStateInternal = newSecurityState;\n    this.iconElement.classList.add(this.cssPrefix + '-' + newSecurityState);\n  }\n\n  securityState(): Protocol.Security.SecurityState|null {\n    return this.securityStateInternal;\n  }\n\n  override onselect(): boolean {\n    this.selectCallback();\n    return true;\n  }\n}\n\nexport class SecurityMainView extends UI.Widget.VBox {\n  private readonly panel: SecurityPanel;\n  private readonly summarySection: HTMLElement;\n  private readonly securityExplanationsMain: HTMLElement;\n  private readonly securityExplanationsExtra: HTMLElement;\n  private readonly lockSpectrum: Map<Protocol.Security.SecurityState, HTMLElement>;\n  private summaryText: HTMLElement;\n  private explanations: (Protocol.Security.SecurityStateExplanation|SecurityStyleExplanation)[]|null;\n  private securityState: Protocol.Security.SecurityState|null;\n  constructor(panel: SecurityPanel) {\n    super(true);\n    this.element.setAttribute('jslog', `${VisualLogging.pane('security.main-view')}`);\n\n    this.setMinimumSize(200, 100);\n\n    this.contentElement.classList.add('security-main-view');\n\n    this.panel = panel;\n\n    this.summarySection = this.contentElement.createChild('div', 'security-summary');\n\n    // Info explanations should appear after all others.\n    this.securityExplanationsMain =\n        this.contentElement.createChild('div', 'security-explanation-list security-explanations-main');\n    this.securityExplanationsExtra =\n        this.contentElement.createChild('div', 'security-explanation-list security-explanations-extra');\n\n    // Fill the security summary section.\n    const summaryDiv = this.summarySection.createChild('div', 'security-summary-section-title');\n    summaryDiv.textContent = i18nString(UIStrings.securityOverview);\n    UI.ARIAUtils.markAsHeading(summaryDiv, 1);\n\n    const lockSpectrum = this.summarySection.createChild('div', 'lock-spectrum');\n    this.lockSpectrum = new Map([\n      [Protocol.Security.SecurityState.Secure, lockSpectrum.createChild('div', 'lock-icon lock-icon-secure')],\n      [Protocol.Security.SecurityState.Neutral, lockSpectrum.createChild('div', 'lock-icon lock-icon-neutral')],\n      [Protocol.Security.SecurityState.Insecure, lockSpectrum.createChild('div', 'lock-icon lock-icon-insecure')],\n    ]);\n    UI.Tooltip.Tooltip.install(\n        this.getLockSpectrumDiv(Protocol.Security.SecurityState.Secure), i18nString(UIStrings.secure));\n    UI.Tooltip.Tooltip.install(\n        this.getLockSpectrumDiv(Protocol.Security.SecurityState.Neutral), i18nString(UIStrings.info));\n    UI.Tooltip.Tooltip.install(\n        this.getLockSpectrumDiv(Protocol.Security.SecurityState.Insecure), i18nString(UIStrings.notSecure));\n\n    this.summarySection.createChild('div', 'triangle-pointer-container')\n        .createChild('div', 'triangle-pointer-wrapper')\n        .createChild('div', 'triangle-pointer');\n\n    this.summaryText = this.summarySection.createChild('div', 'security-summary-text');\n    UI.ARIAUtils.markAsHeading(this.summaryText, 2);\n\n    this.explanations = null;\n    this.securityState = null;\n  }\n\n  getLockSpectrumDiv(securityState: Protocol.Security.SecurityState): HTMLElement {\n    const element = this.lockSpectrum.get(securityState);\n    if (!element) {\n      throw new Error(`Invalid argument: ${securityState}`);\n    }\n    return element;\n  }\n\n  private addExplanation(\n      parent: Element, explanation: Protocol.Security.SecurityStateExplanation|SecurityStyleExplanation): Element {\n    const explanationSection = parent.createChild('div', 'security-explanation');\n    explanationSection.classList.add('security-explanation-' + explanation.securityState);\n\n    explanationSection.createChild('div', 'security-property')\n        .classList.add('security-property-' + explanation.securityState);\n    const text = explanationSection.createChild('div', 'security-explanation-text');\n\n    const explanationHeader = text.createChild('div', 'security-explanation-title');\n\n    if (explanation.title) {\n      explanationHeader.createChild('span').textContent = explanation.title + ' - ';\n      explanationHeader.createChild('span', 'security-explanation-title-' + explanation.securityState).textContent =\n          explanation.summary;\n    } else {\n      explanationHeader.textContent = explanation.summary;\n    }\n\n    text.createChild('div').textContent = explanation.description;\n\n    if (explanation.certificate.length) {\n      text.appendChild(SecurityPanel.createCertificateViewerButtonForCert(\n          i18nString(UIStrings.viewCertificate), explanation.certificate));\n    }\n\n    if (explanation.recommendations && explanation.recommendations.length) {\n      const recommendationList = text.createChild('ul', 'security-explanation-recommendations');\n      for (const recommendation of explanation.recommendations) {\n        recommendationList.createChild('li').textContent = recommendation;\n      }\n    }\n    return text;\n  }\n\n  updateVisibleSecurityState(visibleSecurityState: PageVisibleSecurityState): void {\n    // Remove old state.\n    // It's safe to call this even when this.securityState is undefined.\n    this.summarySection.classList.remove('security-summary-' + this.securityState);\n\n    // Add new state.\n    this.securityState = visibleSecurityState.securityState;\n    this.summarySection.classList.add('security-summary-' + this.securityState);\n\n    // Update the color and title of the triangle icon in the lock spectrum to\n    // match the security state.\n    if (this.securityState === Protocol.Security.SecurityState.Insecure) {\n      this.getLockSpectrumDiv(Protocol.Security.SecurityState.Insecure).classList.add('lock-icon-insecure');\n      this.getLockSpectrumDiv(Protocol.Security.SecurityState.Insecure).classList.remove('lock-icon-insecure-broken');\n      UI.Tooltip.Tooltip.install(\n          this.getLockSpectrumDiv(Protocol.Security.SecurityState.Insecure), i18nString(UIStrings.notSecure));\n    } else if (this.securityState === Protocol.Security.SecurityState.InsecureBroken) {\n      this.getLockSpectrumDiv(Protocol.Security.SecurityState.Insecure).classList.add('lock-icon-insecure-broken');\n      this.getLockSpectrumDiv(Protocol.Security.SecurityState.Insecure).classList.remove('lock-icon-insecure');\n      UI.Tooltip.Tooltip.install(\n          this.getLockSpectrumDiv(Protocol.Security.SecurityState.Insecure), i18nString(UIStrings.notSecureBroken));\n    }\n\n    const {summary, explanations} = this.getSecuritySummaryAndExplanations(visibleSecurityState);\n    // Use override summary if present, otherwise use base explanation\n    this.summaryText.textContent = summary || SummaryMessages[this.securityState]();\n\n    this.explanations = this.orderExplanations(explanations);\n\n    this.refreshExplanations();\n  }\n\n  private getSecuritySummaryAndExplanations(visibleSecurityState: PageVisibleSecurityState):\n      {summary: (string|undefined), explanations: Array<SecurityStyleExplanation>} {\n    const {securityState, securityStateIssueIds} = visibleSecurityState;\n    let summary;\n    const explanations: SecurityStyleExplanation[] = [];\n    summary = this.explainSafetyTipSecurity(visibleSecurityState, summary, explanations);\n    if (securityStateIssueIds.includes('malicious-content')) {\n      summary = i18nString(UIStrings.thisPageIsDangerousFlaggedBy);\n      // Always insert SafeBrowsing explanation at the front.\n      explanations.unshift(new SecurityStyleExplanation(\n          Protocol.Security.SecurityState.Insecure, undefined, i18nString(UIStrings.flaggedByGoogleSafeBrowsing),\n          i18nString(UIStrings.toCheckThisPagesStatusVisit)));\n    } else if (\n        securityStateIssueIds.includes('is-error-page') &&\n        (visibleSecurityState.certificateSecurityState === null ||\n         visibleSecurityState.certificateSecurityState.certificateNetworkError === null)) {\n      summary = i18nString(UIStrings.thisIsAnErrorPage);\n      // In the case of a non cert error page, we usually don't have a\n      // certificate, connection, or content that needs to be explained, e.g. in\n      // the case of a net error, so we can early return.\n      return {summary, explanations};\n    } else if (\n        securityState === Protocol.Security.SecurityState.InsecureBroken &&\n        securityStateIssueIds.includes('scheme-is-not-cryptographic')) {\n      summary = summary || i18nString(UIStrings.thisPageIsInsecureUnencrypted);\n    }\n\n    if (securityStateIssueIds.includes('scheme-is-not-cryptographic')) {\n      if (securityState === Protocol.Security.SecurityState.Neutral &&\n          !securityStateIssueIds.includes('insecure-origin')) {\n        summary = i18nString(UIStrings.thisPageHasANonhttpsSecureOrigin);\n      }\n      return {summary, explanations};\n    }\n\n    this.explainCertificateSecurity(visibleSecurityState, explanations);\n    this.explainConnectionSecurity(visibleSecurityState, explanations);\n    this.explainContentSecurity(visibleSecurityState, explanations);\n    return {summary, explanations};\n  }\n\n  private explainSafetyTipSecurity(\n      visibleSecurityState: PageVisibleSecurityState, summary: string|undefined,\n      explanations: SecurityStyleExplanation[]): string|undefined {\n    const {securityStateIssueIds, safetyTipInfo} = visibleSecurityState;\n    const currentExplanations = [];\n\n    if (securityStateIssueIds.includes('bad_reputation')) {\n      const formatedDescription = `${i18nString(UIStrings.chromeHasDeterminedThatThisSiteS)}\\n\\n${\n          i18nString(UIStrings.ifYouBelieveThisIsShownIn)}`;\n      currentExplanations.push({\n        summary: i18nString(UIStrings.thisPageIsSuspicious),\n        description: formatedDescription,\n      });\n    } else if (securityStateIssueIds.includes('lookalike') && safetyTipInfo && safetyTipInfo.safeUrl) {\n      const hostname = new URL(safetyTipInfo.safeUrl).hostname;\n      const hostnamePlaceholder = {PH1: hostname};\n      const formatedDescriptionSafety =\n          `${i18nString(UIStrings.thisSitesHostnameLooksSimilarToP, hostnamePlaceholder)}\\n\\n${\n              i18nString(UIStrings.ifYouBelieveThisIsShownInErrorSafety)}`;\n      currentExplanations.push(\n          {summary: i18nString(UIStrings.possibleSpoofingUrl), description: formatedDescriptionSafety});\n    }\n\n    if (currentExplanations.length > 0) {\n      // To avoid overwriting SafeBrowsing's title, set the main summary only if\n      // it's empty. The title set here can be overridden by later checks (e.g.\n      // bad HTTP).\n      summary = summary || i18nString(UIStrings.thisPageIsSuspiciousFlaggedBy);\n      explanations.push(new SecurityStyleExplanation(\n          Protocol.Security.SecurityState.Insecure, undefined, currentExplanations[0].summary,\n          currentExplanations[0].description));\n    }\n    return summary;\n  }\n\n  private explainCertificateSecurity(\n      visibleSecurityState: PageVisibleSecurityState, explanations: SecurityStyleExplanation[]): void {\n    const {certificateSecurityState, securityStateIssueIds} = visibleSecurityState;\n    const title = i18nString(UIStrings.certificate);\n    if (certificateSecurityState && certificateSecurityState.certificateHasSha1Signature) {\n      const explanationSummary = i18nString(UIStrings.insecureSha);\n      const description = i18nString(UIStrings.theCertificateChainForThisSite);\n      if (certificateSecurityState.certificateHasWeakSignature) {\n        explanations.push(new SecurityStyleExplanation(\n            Protocol.Security.SecurityState.Insecure, title, explanationSummary, description,\n            certificateSecurityState.certificate, Protocol.Security.MixedContentType.None));\n      } else {\n        explanations.push(new SecurityStyleExplanation(\n            Protocol.Security.SecurityState.Neutral, title, explanationSummary, description,\n            certificateSecurityState.certificate, Protocol.Security.MixedContentType.None));\n      }\n    }\n\n    if (certificateSecurityState && securityStateIssueIds.includes('cert-missing-subject-alt-name')) {\n      explanations.push(new SecurityStyleExplanation(\n          Protocol.Security.SecurityState.Insecure, title, i18nString(UIStrings.subjectAlternativeNameMissing),\n          i18nString(UIStrings.theCertificateForThisSiteDoesNot), certificateSecurityState.certificate,\n          Protocol.Security.MixedContentType.None));\n    }\n\n    if (certificateSecurityState && certificateSecurityState.certificateNetworkError !== null) {\n      explanations.push(new SecurityStyleExplanation(\n          Protocol.Security.SecurityState.Insecure, title, i18nString(UIStrings.missing),\n          i18nString(UIStrings.thisSiteIsMissingAValidTrusted, {PH1: certificateSecurityState.certificateNetworkError}),\n          certificateSecurityState.certificate, Protocol.Security.MixedContentType.None));\n    } else if (certificateSecurityState && !certificateSecurityState.certificateHasSha1Signature) {\n      explanations.push(new SecurityStyleExplanation(\n          Protocol.Security.SecurityState.Secure, title, i18nString(UIStrings.validAndTrusted),\n          i18nString(UIStrings.theConnectionToThisSiteIsUsingA, {PH1: certificateSecurityState.issuer}),\n          certificateSecurityState.certificate, Protocol.Security.MixedContentType.None));\n    }\n\n    if (securityStateIssueIds.includes('pkp-bypassed')) {\n      explanations.push(new SecurityStyleExplanation(\n          Protocol.Security.SecurityState.Info, title, i18nString(UIStrings.publickeypinningBypassed),\n          i18nString(UIStrings.publickeypinningWasBypassedByA)));\n    }\n\n    if (certificateSecurityState && certificateSecurityState.isCertificateExpiringSoon()) {\n      explanations.push(new SecurityStyleExplanation(\n          Protocol.Security.SecurityState.Info, undefined, i18nString(UIStrings.certificateExpiresSoon),\n          i18nString(UIStrings.theCertificateForThisSiteExpires)));\n    }\n  }\n\n  private explainConnectionSecurity(\n      visibleSecurityState: PageVisibleSecurityState, explanations: SecurityStyleExplanation[]): void {\n    const certificateSecurityState = visibleSecurityState.certificateSecurityState;\n    if (!certificateSecurityState) {\n      return;\n    }\n\n    const title = i18nString(UIStrings.connection);\n    if (certificateSecurityState.modernSSL) {\n      explanations.push(new SecurityStyleExplanation(\n          Protocol.Security.SecurityState.Secure, title, i18nString(UIStrings.secureConnectionSettings),\n          i18nString(UIStrings.theConnectionToThisSiteIs, {\n            PH1: certificateSecurityState.protocol,\n            PH2: certificateSecurityState.getKeyExchangeName(),\n            PH3: certificateSecurityState.getCipherFullName(),\n          })));\n      return;\n    }\n\n    const recommendations = [];\n    if (certificateSecurityState.obsoleteSslProtocol) {\n      recommendations.push(i18nString(UIStrings.sIsObsoleteEnableTlsOrLater, {PH1: certificateSecurityState.protocol}));\n    }\n    if (certificateSecurityState.obsoleteSslKeyExchange) {\n      recommendations.push(i18nString(UIStrings.rsaKeyExchangeIsObsoleteEnableAn));\n    }\n    if (certificateSecurityState.obsoleteSslCipher) {\n      recommendations.push(\n          i18nString(UIStrings.sIsObsoleteEnableAnAesgcmbased, {PH1: certificateSecurityState.cipher}));\n    }\n    if (certificateSecurityState.obsoleteSslSignature) {\n      recommendations.push(i18nString(UIStrings.theServerSignatureUsesShaWhichIs));\n    }\n\n    explanations.push(new SecurityStyleExplanation(\n        Protocol.Security.SecurityState.Info, title, i18nString(UIStrings.obsoleteConnectionSettings),\n        i18nString(UIStrings.theConnectionToThisSiteIs, {\n          PH1: certificateSecurityState.protocol,\n          PH2: certificateSecurityState.getKeyExchangeName(),\n          PH3: certificateSecurityState.getCipherFullName(),\n        }),\n        undefined, undefined, recommendations));\n  }\n\n  private explainContentSecurity(\n      visibleSecurityState: PageVisibleSecurityState, explanations: SecurityStyleExplanation[]): void {\n    // Add the secure explanation unless there is an issue.\n    let addSecureExplanation = true;\n    const title = i18nString(UIStrings.resources);\n    const securityStateIssueIds = visibleSecurityState.securityStateIssueIds;\n\n    if (securityStateIssueIds.includes('ran-mixed-content')) {\n      addSecureExplanation = false;\n      explanations.push(new SecurityStyleExplanation(\n          Protocol.Security.SecurityState.Insecure, title, i18nString(UIStrings.activeMixedContent),\n          i18nString(UIStrings.youHaveRecentlyAllowedNonsecure), [], Protocol.Security.MixedContentType.Blockable));\n    }\n\n    if (securityStateIssueIds.includes('displayed-mixed-content')) {\n      addSecureExplanation = false;\n      explanations.push(new SecurityStyleExplanation(\n          Protocol.Security.SecurityState.Neutral, title, i18nString(UIStrings.mixedContent),\n          i18nString(UIStrings.thisPageIncludesHttpResources), [],\n          Protocol.Security.MixedContentType.OptionallyBlockable));\n    }\n\n    if (securityStateIssueIds.includes('contained-mixed-form')) {\n      addSecureExplanation = false;\n      explanations.push(new SecurityStyleExplanation(\n          Protocol.Security.SecurityState.Neutral, title, i18nString(UIStrings.nonsecureForm),\n          i18nString(UIStrings.thisPageIncludesAFormWithA)));\n    }\n\n    if (visibleSecurityState.certificateSecurityState === null ||\n        visibleSecurityState.certificateSecurityState.certificateNetworkError === null) {\n      if (securityStateIssueIds.includes('ran-content-with-cert-error')) {\n        addSecureExplanation = false;\n        explanations.push(new SecurityStyleExplanation(\n            Protocol.Security.SecurityState.Insecure, title, i18nString(UIStrings.activeContentWithCertificate),\n            i18nString(UIStrings.youHaveRecentlyAllowedContent)));\n      }\n\n      if (securityStateIssueIds.includes('displayed-content-with-cert-errors')) {\n        addSecureExplanation = false;\n        explanations.push(new SecurityStyleExplanation(\n            Protocol.Security.SecurityState.Neutral, title, i18nString(UIStrings.contentWithCertificateErrors),\n            i18nString(UIStrings.thisPageIncludesResourcesThat)));\n      }\n    }\n\n    if (addSecureExplanation) {\n      if (!securityStateIssueIds.includes('scheme-is-not-cryptographic')) {\n        explanations.push(new SecurityStyleExplanation(\n            Protocol.Security.SecurityState.Secure, title, i18nString(UIStrings.allServedSecurely),\n            i18nString(UIStrings.allResourcesOnThisPageAreServed)));\n      }\n    }\n  }\n\n  private orderExplanations(explanations: SecurityStyleExplanation[]): SecurityStyleExplanation[] {\n    if (explanations.length === 0) {\n      return explanations;\n    }\n    const securityStateOrder = [\n      Protocol.Security.SecurityState.Insecure,\n      Protocol.Security.SecurityState.Neutral,\n      Protocol.Security.SecurityState.Secure,\n      Protocol.Security.SecurityState.Info,\n    ];\n    const orderedExplanations = [];\n    for (const securityState of securityStateOrder) {\n      orderedExplanations.push(...explanations.filter(explanation => explanation.securityState === securityState));\n    }\n    return orderedExplanations;\n  }\n\n  refreshExplanations(): void {\n    this.securityExplanationsMain.removeChildren();\n    this.securityExplanationsExtra.removeChildren();\n    if (!this.explanations) {\n      return;\n    }\n    for (const explanation of this.explanations) {\n      if (explanation.securityState === Protocol.Security.SecurityState.Info) {\n        this.addExplanation(this.securityExplanationsExtra, explanation);\n      } else {\n        switch (explanation.mixedContentType) {\n          case Protocol.Security.MixedContentType.Blockable:\n            this.addMixedContentExplanation(\n                this.securityExplanationsMain, explanation,\n                NetworkForward.UIFilter.MixedContentFilterValues.BlockOverridden);\n            break;\n          case Protocol.Security.MixedContentType.OptionallyBlockable:\n            this.addMixedContentExplanation(\n                this.securityExplanationsMain, explanation, NetworkForward.UIFilter.MixedContentFilterValues.Displayed);\n            break;\n          default:\n            this.addExplanation(this.securityExplanationsMain, explanation);\n            break;\n        }\n      }\n    }\n\n    if (this.panel.filterRequestCount(NetworkForward.UIFilter.MixedContentFilterValues.Blocked) > 0) {\n      const explanation = {\n        securityState: Protocol.Security.SecurityState.Info,\n        summary: i18nString(UIStrings.blockedMixedContent),\n        description: i18nString(UIStrings.yourPageRequestedNonsecure),\n        mixedContentType: Protocol.Security.MixedContentType.Blockable,\n        certificate: [],\n        title: '',\n      } as Protocol.Security.SecurityStateExplanation;\n      this.addMixedContentExplanation(\n          this.securityExplanationsMain, explanation, NetworkForward.UIFilter.MixedContentFilterValues.Blocked);\n    }\n  }\n\n  private addMixedContentExplanation(\n      parent: Element, explanation: Protocol.Security.SecurityStateExplanation|SecurityStyleExplanation,\n      filterKey: string): void {\n    const element = this.addExplanation(parent, explanation);\n\n    const filterRequestCount = this.panel.filterRequestCount(filterKey);\n    if (!filterRequestCount) {\n      // Network instrumentation might not have been enabled for the page\n      // load, so the security panel does not necessarily know a count of\n      // individual mixed requests at this point. Prompt them to refresh\n      // instead of pointing them to the Network panel to get prompted\n      // to refresh.\n      const refreshPrompt = element.createChild('div', 'security-mixed-content');\n      refreshPrompt.textContent = i18nString(UIStrings.reloadThePageToRecordRequestsFor);\n      return;\n    }\n\n    const requestsAnchor =\n        element.createChild('button', 'security-mixed-content devtools-link text-button link-style') as HTMLElement;\n    UI.ARIAUtils.markAsLink(requestsAnchor);\n    requestsAnchor.tabIndex = 0;\n    requestsAnchor.textContent = i18nString(UIStrings.viewDRequestsInNetworkPanel, {n: filterRequestCount});\n\n    requestsAnchor.addEventListener('click', this.showNetworkFilter.bind(this, filterKey));\n  }\n\n  showNetworkFilter(filterKey: string, e: Event): void {\n    e.consume();\n    void Common.Revealer.reveal(NetworkForward.UIFilter.UIRequestFilter.filters(\n        [{filterType: NetworkForward.UIFilter.FilterType.MixedContent, filterValue: filterKey}]));\n  }\n  override wasShown(): void {\n    super.wasShown();\n    this.registerCSSFiles([lockIconStyles, mainViewStyles]);\n  }\n}\n\nexport class SecurityOriginView extends UI.Widget.VBox {\n  private readonly panel: SecurityPanel;\n  private readonly originLockIcon: HTMLElement;\n  constructor(panel: SecurityPanel, origin: Platform.DevToolsPath.UrlString, originState: OriginState) {\n    super();\n    this.element.setAttribute('jslog', `${VisualLogging.pane('security.origin-view')}`);\n    this.panel = panel;\n    this.setMinimumSize(200, 100);\n\n    this.element.classList.add('security-origin-view');\n\n    const titleSection = this.element.createChild('div', 'title-section');\n    const titleDiv = titleSection.createChild('div', 'title-section-header');\n    titleDiv.textContent = i18nString(UIStrings.origin);\n    UI.ARIAUtils.markAsHeading(titleDiv, 1);\n\n    const originDisplay = titleSection.createChild('div', 'origin-display');\n    this.originLockIcon = originDisplay.createChild('span', 'security-property');\n    this.originLockIcon.classList.add('security-property-' + originState.securityState);\n\n    originDisplay.appendChild(SecurityPanel.createHighlightedUrl(origin, originState.securityState));\n\n    const originNetworkDiv = titleSection.createChild('div', 'view-network-button');\n    const originNetworkButton = UI.UIUtils.createTextButton(i18nString(UIStrings.viewRequestsInNetworkPanel), event => {\n      event.consume();\n      const parsedURL = new Common.ParsedURL.ParsedURL(origin);\n      void Common.Revealer.reveal(NetworkForward.UIFilter.UIRequestFilter.filters([\n        {filterType: NetworkForward.UIFilter.FilterType.Domain, filterValue: parsedURL.host},\n        {filterType: NetworkForward.UIFilter.FilterType.Scheme, filterValue: parsedURL.scheme},\n      ]));\n    }, {jslogContext: 'reveal-in-network'});\n    originNetworkDiv.appendChild(originNetworkButton);\n    UI.ARIAUtils.markAsLink(originNetworkButton);\n\n    if (originState.securityDetails) {\n      const connectionSection = this.element.createChild('div', 'origin-view-section');\n      const connectionDiv = connectionSection.createChild('div', 'origin-view-section-title');\n      connectionDiv.textContent = i18nString(UIStrings.connection);\n      UI.ARIAUtils.markAsHeading(connectionDiv, 2);\n\n      let table: SecurityDetailsTable = new SecurityDetailsTable();\n      connectionSection.appendChild(table.element());\n      table.addRow(i18nString(UIStrings.protocol), originState.securityDetails.protocol);\n\n      // A TLS connection negotiates a cipher suite and, when doing an ephemeral\n      // ECDH key exchange, a \"named group\". In TLS 1.2, the cipher suite is\n      // named like TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256. The DevTools protocol\n      // tried to decompose this name and calls the \"ECDHE_RSA\" portion the\n      // \"keyExchange\", because it determined the rough shape of the key\n      // exchange portion of the handshake. (A keyExchange of \"RSA\" meant a very\n      // different handshake set.) But ECDHE_RSA was still parameterized by a\n      // named group (e.g. X25519), which the DevTools protocol exposes as\n      // \"keyExchangeGroup\".\n      //\n      // Then, starting TLS 1.3, the cipher suites are named like\n      // TLS_AES_128_GCM_SHA256. The handshake shape is implicit in the\n      // protocol. keyExchange is empty and we only have keyExchangeGroup.\n      //\n      // \"Key exchange group\" isn't common terminology and, in TLS 1.3,\n      // something like \"X25519\" is better labelled as \"key exchange\" than \"key\n      // exchange group\" anyway. So combine the two fields when displaying in\n      // the UI.\n      if (originState.securityDetails.keyExchange && originState.securityDetails.keyExchangeGroup) {\n        table.addRow(\n            i18nString(UIStrings.keyExchange),\n            originState.securityDetails.keyExchange + ' with ' + originState.securityDetails.keyExchangeGroup);\n      } else if (originState.securityDetails.keyExchange) {\n        table.addRow(i18nString(UIStrings.keyExchange), originState.securityDetails.keyExchange);\n      } else if (originState.securityDetails.keyExchangeGroup) {\n        table.addRow(i18nString(UIStrings.keyExchange), originState.securityDetails.keyExchangeGroup);\n      }\n\n      if (originState.securityDetails.serverSignatureAlgorithm) {\n        // See https://www.iana.org/assignments/tls-parameters/tls-parameters.xhtml#tls-signaturescheme\n        let sigString = SignatureSchemeStrings.get(originState.securityDetails.serverSignatureAlgorithm);\n        sigString ??=\n            i18nString(UIStrings.unknownField) + ' (' + originState.securityDetails.serverSignatureAlgorithm + ')';\n        table.addRow(i18nString(UIStrings.serverSignature), sigString);\n      }\n\n      table.addRow(\n          i18nString(UIStrings.cipher),\n          originState.securityDetails.cipher +\n              (originState.securityDetails.mac ? ' with ' + originState.securityDetails.mac : ''));\n\n      if (originState.securityDetails.encryptedClientHello) {\n        table.addRow(i18nString(UIStrings.encryptedClientHello), i18nString(UIStrings.enabled));\n      }\n\n      // Create the certificate section outside the callback, so that it appears in the right place.\n      const certificateSection = this.element.createChild('div', 'origin-view-section');\n      const certificateDiv = certificateSection.createChild('div', 'origin-view-section-title');\n      certificateDiv.textContent = i18nString(UIStrings.certificate);\n      UI.ARIAUtils.markAsHeading(certificateDiv, 2);\n\n      const sctListLength = originState.securityDetails.signedCertificateTimestampList.length;\n      const ctCompliance = originState.securityDetails.certificateTransparencyCompliance;\n      let sctSection;\n      if (sctListLength || ctCompliance !== Protocol.Network.CertificateTransparencyCompliance.Unknown) {\n        // Create the Certificate Transparency section outside the callback, so that it appears in the right place.\n        sctSection = this.element.createChild('div', 'origin-view-section');\n        const sctDiv = sctSection.createChild('div', 'origin-view-section-title');\n        sctDiv.textContent = i18nString(UIStrings.certificateTransparency);\n        UI.ARIAUtils.markAsHeading(sctDiv, 2);\n      }\n\n      const sanDiv = this.createSanDiv(originState.securityDetails.sanList);\n      const validFromString = new Date(1000 * originState.securityDetails.validFrom).toUTCString();\n      const validUntilString = new Date(1000 * originState.securityDetails.validTo).toUTCString();\n\n      table = new SecurityDetailsTable();\n      certificateSection.appendChild(table.element());\n      table.addRow(i18nString(UIStrings.subject), originState.securityDetails.subjectName);\n      table.addRow(i18n.i18n.lockedString('SAN'), sanDiv);\n      table.addRow(i18nString(UIStrings.validFrom), validFromString);\n      table.addRow(i18nString(UIStrings.validUntil), validUntilString);\n      table.addRow(i18nString(UIStrings.issuer), originState.securityDetails.issuer);\n\n      table.addRow(\n          '',\n          SecurityPanel.createCertificateViewerButtonForOrigin(\n              i18nString(UIStrings.openFullCertificateDetails), origin));\n\n      if (!sctSection) {\n        return;\n      }\n\n      // Show summary of SCT(s) of Certificate Transparency.\n      const sctSummaryTable = new SecurityDetailsTable();\n      sctSummaryTable.element().classList.add('sct-summary');\n      sctSection.appendChild(sctSummaryTable.element());\n      for (let i = 0; i < sctListLength; i++) {\n        const sct = originState.securityDetails.signedCertificateTimestampList[i];\n        sctSummaryTable.addRow(\n            i18nString(UIStrings.sct), sct.logDescription + ' (' + sct.origin + ', ' + sct.status + ')');\n      }\n\n      // Show detailed SCT(s) of Certificate Transparency.\n      const sctTableWrapper = sctSection.createChild('div', 'sct-details');\n      sctTableWrapper.classList.add('hidden');\n      for (let i = 0; i < sctListLength; i++) {\n        const sctTable = new SecurityDetailsTable();\n        sctTableWrapper.appendChild(sctTable.element());\n        const sct = originState.securityDetails.signedCertificateTimestampList[i];\n        sctTable.addRow(i18nString(UIStrings.logName), sct.logDescription);\n        sctTable.addRow(i18nString(UIStrings.logId), sct.logId.replace(/(.{2})/g, '$1 '));\n        sctTable.addRow(i18nString(UIStrings.validationStatus), sct.status);\n        sctTable.addRow(i18nString(UIStrings.source), sct.origin);\n        sctTable.addRow(i18nString(UIStrings.issuedAt), new Date(sct.timestamp).toUTCString());\n        sctTable.addRow(i18nString(UIStrings.hashAlgorithm), sct.hashAlgorithm);\n        sctTable.addRow(i18nString(UIStrings.signatureAlgorithm), sct.signatureAlgorithm);\n        sctTable.addRow(i18nString(UIStrings.signatureData), sct.signatureData.replace(/(.{2})/g, '$1 '));\n      }\n\n      // Add link to toggle between displaying of the summary of the SCT(s) and the detailed SCT(s).\n      if (sctListLength) {\n        function toggleSctDetailsDisplay(): void {\n          let buttonText;\n          const isDetailsShown = !sctTableWrapper.classList.contains('hidden');\n          if (isDetailsShown) {\n            buttonText = i18nString(UIStrings.showFullDetails);\n          } else {\n            buttonText = i18nString(UIStrings.hideFullDetails);\n          }\n          toggleSctsDetailsLink.textContent = buttonText;\n          UI.ARIAUtils.setLabel(toggleSctsDetailsLink, buttonText);\n          UI.ARIAUtils.setExpanded(toggleSctsDetailsLink, !isDetailsShown);\n          sctSummaryTable.element().classList.toggle('hidden');\n          sctTableWrapper.classList.toggle('hidden');\n        }\n        const toggleSctsDetailsLink = UI.UIUtils.createTextButton(\n            i18nString(UIStrings.showFullDetails), toggleSctDetailsDisplay,\n            {className: 'details-toggle', jslogContext: 'security.toggle-scts-details'});\n        sctSection.appendChild(toggleSctsDetailsLink);\n      }\n\n      switch (ctCompliance) {\n        case Protocol.Network.CertificateTransparencyCompliance.Compliant:\n          sctSection.createChild('div', 'origin-view-section-notes').textContent =\n              i18nString(UIStrings.thisRequestCompliesWithChromes);\n          break;\n        case Protocol.Network.CertificateTransparencyCompliance.NotCompliant:\n          sctSection.createChild('div', 'origin-view-section-notes').textContent =\n              i18nString(UIStrings.thisRequestDoesNotComplyWith);\n          break;\n        case Protocol.Network.CertificateTransparencyCompliance.Unknown:\n          break;\n      }\n\n      const noteSection = this.element.createChild('div', 'origin-view-section origin-view-notes');\n      if (originState.loadedFromCache) {\n        noteSection.createChild('div').textContent = i18nString(UIStrings.thisResponseWasLoadedFromCache);\n      }\n      noteSection.createChild('div').textContent = i18nString(UIStrings.theSecurityDetailsAboveAreFrom);\n    } else if (originState.securityState === Protocol.Security.SecurityState.Secure) {\n      // If the security state is secure but there are no security details,\n      // this means that the origin is a non-cryptographic secure origin, e.g.\n      // chrome:// or about:.\n      const secureSection = this.element.createChild('div', 'origin-view-section');\n      const secureDiv = secureSection.createChild('div', 'origin-view-section-title');\n      secureDiv.textContent = i18nString(UIStrings.secure);\n      UI.ARIAUtils.markAsHeading(secureDiv, 2);\n      secureSection.createChild('div').textContent = i18nString(UIStrings.thisOriginIsANonhttpsSecure);\n    } else if (originState.securityState !== Protocol.Security.SecurityState.Unknown) {\n      const notSecureSection = this.element.createChild('div', 'origin-view-section');\n      const notSecureDiv = notSecureSection.createChild('div', 'origin-view-section-title');\n      notSecureDiv.textContent = i18nString(UIStrings.notSecure);\n      UI.ARIAUtils.markAsHeading(notSecureDiv, 2);\n      notSecureSection.createChild('div').textContent = i18nString(UIStrings.yourConnectionToThisOriginIsNot);\n    } else {\n      const noInfoSection = this.element.createChild('div', 'origin-view-section');\n      const noInfoDiv = noInfoSection.createChild('div', 'origin-view-section-title');\n      noInfoDiv.textContent = i18nString(UIStrings.noSecurityInformation);\n      UI.ARIAUtils.markAsHeading(noInfoDiv, 2);\n      noInfoSection.createChild('div').textContent = i18nString(UIStrings.noSecurityDetailsAreAvailableFor);\n    }\n  }\n\n  private createSanDiv(sanList: string[]): Element {\n    const sanDiv = document.createElement('div');\n    if (sanList.length === 0) {\n      sanDiv.textContent = i18nString(UIStrings.na);\n      sanDiv.classList.add('empty-san');\n    } else {\n      const truncatedNumToShow = 2;\n      const listIsTruncated = sanList.length > truncatedNumToShow + 1;\n      for (let i = 0; i < sanList.length; i++) {\n        const span = sanDiv.createChild('span', 'san-entry');\n        span.textContent = sanList[i];\n        if (listIsTruncated && i >= truncatedNumToShow) {\n          span.classList.add('truncated-entry');\n        }\n      }\n      if (listIsTruncated) {\n        function toggleSANTruncation(): void {\n          const isTruncated = sanDiv.classList.contains('truncated-san');\n          let buttonText;\n          if (isTruncated) {\n            sanDiv.classList.remove('truncated-san');\n            buttonText = i18nString(UIStrings.showLess);\n          } else {\n            sanDiv.classList.add('truncated-san');\n            buttonText = i18nString(UIStrings.showMoreSTotal, {PH1: sanList.length});\n          }\n          truncatedSANToggle.textContent = buttonText;\n          UI.ARIAUtils.setLabel(truncatedSANToggle, buttonText);\n          UI.ARIAUtils.setExpanded(truncatedSANToggle, isTruncated);\n        }\n        const truncatedSANToggle = UI.UIUtils.createTextButton(\n            i18nString(UIStrings.showMoreSTotal, {PH1: sanList.length}), toggleSANTruncation,\n            {jslogContext: 'security.toggle-san-truncation'});\n        sanDiv.appendChild(truncatedSANToggle);\n        toggleSANTruncation();\n      }\n    }\n    return sanDiv;\n  }\n\n  setSecurityState(newSecurityState: Protocol.Security.SecurityState): void {\n    for (const className of Array.prototype.slice.call(this.originLockIcon.classList)) {\n      if (className.startsWith('security-property-')) {\n        this.originLockIcon.classList.remove(className);\n      }\n    }\n\n    this.originLockIcon.classList.add('security-property-' + newSecurityState);\n  }\n  override wasShown(): void {\n    super.wasShown();\n    this.registerCSSFiles([originViewStyles, lockIconStyles]);\n  }\n}\n\nexport class SecurityDetailsTable {\n  private readonly elementInternal: HTMLTableElement;\n\n  constructor() {\n    this.elementInternal = document.createElement('table');\n    this.elementInternal.classList.add('details-table');\n  }\n\n  element(): HTMLTableElement {\n    return this.elementInternal;\n  }\n\n  addRow(key: string, value: string|Node): void {\n    const row = this.elementInternal.createChild('tr', 'details-table-row');\n    row.createChild('td').textContent = key;\n\n    const valueCell = row.createChild('td');\n    if (typeof value === 'string') {\n      valueCell.textContent = value;\n    } else {\n      valueCell.appendChild(value);\n    }\n  }\n}\nexport interface OriginState {\n  securityState: Protocol.Security.SecurityState;\n  securityDetails: Protocol.Network.SecurityDetails|null;\n  loadedFromCache: boolean;\n  originView?: SecurityOriginView|null;\n}\n\nexport type Origin = Platform.DevToolsPath.UrlString;\n"]}