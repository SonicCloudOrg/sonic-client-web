{"version":3,"file":"linear_memory_inspector-meta.js","sourceRoot":"","sources":["../../../../../../front_end/panels/linear_memory_inspector/linear_memory_inspector-meta.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,MAAM,MAAM,6BAA6B,CAAC;AACtD,OAAO,KAAK,IAAI,MAAM,yBAAyB,CAAC;AAChD,OAAO,KAAK,GAAG,MAAM,uBAAuB,CAAC;AAC7C,OAAO,KAAK,QAAQ,MAAM,mDAAmD,CAAC;AAC9E,OAAO,KAAK,EAAE,MAAM,2BAA2B,CAAC;AAIhD,MAAM,SAAS,GAAG;IAChB;;OAEG;IACH,eAAe,EAAE,kBAAkB;IACnC;;OAEG;IACH,mBAAmB,EAAE,uBAAuB;CAC7C,CAAC;AACF,MAAM,IAAI,GACN,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,gEAAgE,EAAE,SAAS,CAAC,CAAC;AAC7G,MAAM,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,gCAAgC,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AAExF,IAAI,iCAA2E,CAAC;AAEhF,KAAK,UAAU,+BAA+B;IAC5C,IAAI,CAAC,iCAAiC,EAAE,CAAC;QACvC,iCAAiC,GAAG,MAAM,MAAM,CAAC,8BAA8B,CAAC,CAAC;IACnF,CAAC;IACD,OAAO,iCAAiC,CAAC;AAC3C,CAAC;AAED,EAAE,CAAC,WAAW,CAAC,qBAAqB,CAAC;IACnC,QAAQ,mEAA+C;IACvD,EAAE,EAAE,yBAAyB;IAC7B,KAAK,EAAE,cAAc,CAAC,SAAS,CAAC,eAAe,CAAC;IAChD,aAAa,EAAE,cAAc,CAAC,SAAS,CAAC,mBAAmB,CAAC;IAC5D,KAAK,EAAE,GAAG;IACV,WAAW,4DAA0C;IACrD,KAAK,CAAC,QAAQ;QACZ,MAAM,qBAAqB,GAAG,MAAM,+BAA+B,EAAE,CAAC;QACtE,OAAO,qBAAqB,CAAC,yBAAyB,CAAC,yBAAyB,CAAC,QAAQ,EAAE,CAAC;IAC9F,CAAC;CACF,CAAC,CAAC;AAEH,EAAE,CAAC,WAAW,CAAC,gBAAgB,CAAC;IAC9B,KAAK,CAAC,YAAY;QAChB,MAAM,qBAAqB,GAAG,MAAM,+BAA+B,EAAE,CAAC;QACtE,OAAO,qBAAqB,CAAC,+BAA+B,CAAC,+BAA+B,CAAC,QAAQ,EAAE,CAAC;IAC1G,CAAC;IACD,UAAU,EAAE,SAAS;IACrB,YAAY;QACV,OAAO;YACL,QAAQ,CAAC,uBAAuB,CAAC,yBAAyB;SAC3D,CAAC;IACJ,CAAC;CACF,CAAC,CAAC;AAEH,MAAM,CAAC,QAAQ,CAAC,gBAAgB,CAAC;IAC/B,YAAY;QACV,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,uBAAuB,CAAC,CAAC;IACpD,CAAC;IACD,WAAW,EAAE,MAAM,CAAC,QAAQ,CAAC,mBAAmB,CAAC,sBAAsB;IACvE,KAAK,CAAC,YAAY;QAChB,MAAM,qBAAqB,GAAG,MAAM,+BAA+B,EAAE,CAAC;QACtE,OAAO,qBAAqB,CAAC,+BAA+B,CAAC,+BAA+B,CAAC,QAAQ,EAAE,CAAC;IAC1G,CAAC;CACF,CAAC,CAAC","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as ObjectUI from '../../ui/legacy/components/object_ui/object_ui.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport type * as LinearMemoryInspector from './linear_memory_inspector.js';\n\nconst UIStrings = {\n  /**\n   *@description Title of the Linear Memory inspector tool\n   */\n  memoryInspector: 'Memory inspector',\n  /**\n   *@description Command for showing the 'Memory inspector' tool\n   */\n  showMemoryInspector: 'Show Memory inspector',\n};\nconst str_ =\n    i18n.i18n.registerUIStrings('panels/linear_memory_inspector/linear_memory_inspector-meta.ts', UIStrings);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\n\nlet loadedLinearMemoryInspectorModule: (typeof LinearMemoryInspector|undefined);\n\nasync function loadLinearMemoryInspectorModule(): Promise<typeof LinearMemoryInspector> {\n  if (!loadedLinearMemoryInspectorModule) {\n    loadedLinearMemoryInspectorModule = await import('./linear_memory_inspector.js');\n  }\n  return loadedLinearMemoryInspectorModule;\n}\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.DRAWER_VIEW,\n  id: 'linear-memory-inspector',\n  title: i18nLazyString(UIStrings.memoryInspector),\n  commandPrompt: i18nLazyString(UIStrings.showMemoryInspector),\n  order: 100,\n  persistence: UI.ViewManager.ViewPersistence.CLOSEABLE,\n  async loadView() {\n    const LinearMemoryInspector = await loadLinearMemoryInspectorModule();\n    return LinearMemoryInspector.LinearMemoryInspectorPane.LinearMemoryInspectorPane.instance();\n  },\n});\n\nUI.ContextMenu.registerProvider({\n  async loadProvider() {\n    const LinearMemoryInspector = await loadLinearMemoryInspectorModule();\n    return LinearMemoryInspector.LinearMemoryInspectorController.LinearMemoryInspectorController.instance();\n  },\n  experiment: undefined,\n  contextTypes() {\n    return [\n      ObjectUI.ObjectPropertiesSection.ObjectPropertyTreeElement,\n    ];\n  },\n});\n\nCommon.Revealer.registerRevealer({\n  contextTypes() {\n    return [SDK.RemoteObject.LinearMemoryInspectable];\n  },\n  destination: Common.Revealer.RevealerDestination.MEMORY_INSPECTOR_PANEL,\n  async loadRevealer() {\n    const LinearMemoryInspector = await loadLinearMemoryInspectorModule();\n    return LinearMemoryInspector.LinearMemoryInspectorController.LinearMemoryInspectorController.instance();\n  },\n});\n"]}