{"version":3,"file":"PlatformFontsWidget.js","sourceRoot":"","sources":["../../../../../../front_end/panels/elements/PlatformFontsWidget.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2013 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as i18n from '../../core/i18n/i18n.js';\n\nimport platformFontsWidgetStyles from './platformFontsWidget.css.js';\n\nimport type * as SDK from '../../core/sdk/sdk.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport type * as Protocol from '../../generated/protocol.js';\n\nimport {Events, type ComputedStyleModel} from './ComputedStyleModel.js';\n\nconst UIStrings = {\n  /**\n   *@description Section title text content in Platform Fonts Widget of the Elements panel\n   */\n  renderedFonts: 'Rendered Fonts',\n  /**\n   *@description Font property title text content in Platform Fonts Widget of the Elements panel\n   */\n  familyName: 'Family name',\n  /**\n   *@description Font property title text content in Platform Fonts Widget of the Elements panel\n   */\n  postScriptName: 'PostScript name',\n  /**\n   *@description Font property title text content in Platform Fonts Widget of the Elements panel\n   */\n  fontOrigin: 'Font origin',\n  /**\n   *@description Text in Platform Fonts Widget of the Elements panel\n   */\n  networkResource: 'Network resource',\n  /**\n   *@description Text in Platform Fonts Widget of the Elements panel\n   */\n  localFile: 'Local file',\n  /**\n   *@description Text in Platform Fonts Widget of the Elements panel. Indicates a number of glyphs (characters) .\n   */\n  dGlyphs: '{n, plural, =1 {(# glyph)} other {(# glyphs)}}',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/elements/PlatformFontsWidget.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class PlatformFontsWidget extends UI.ThrottledWidget.ThrottledWidget {\n  private readonly sharedModel: ComputedStyleModel;\n  private readonly sectionTitle: HTMLDivElement;\n  private readonly fontStatsSection: HTMLElement;\n\n  constructor(sharedModel: ComputedStyleModel) {\n    super(true);\n\n    this.sharedModel = sharedModel;\n    this.sharedModel.addEventListener(Events.ComputedStyleChanged, this.update, this);\n\n    this.sectionTitle = document.createElement('div');\n    this.sectionTitle.classList.add('title');\n    this.contentElement.classList.add('platform-fonts');\n    this.contentElement.appendChild(this.sectionTitle);\n    this.sectionTitle.textContent = i18nString(UIStrings.renderedFonts);\n    this.fontStatsSection = this.contentElement.createChild('div', 'stats-section');\n  }\n\n  override doUpdate(): Promise<void> {\n    const cssModel = this.sharedModel.cssModel();\n    const node = this.sharedModel.node();\n    if (!node || !cssModel) {\n      return Promise.resolve();\n    }\n\n    return cssModel.getPlatformFonts(node.id).then(this.refreshUI.bind(this, node));\n  }\n\n  private refreshUI(node: SDK.DOMModel.DOMNode, platformFonts: Protocol.CSS.PlatformFontUsage[]|null): void {\n    if (this.sharedModel.node() !== node) {\n      return;\n    }\n\n    this.fontStatsSection.removeChildren();\n\n    const isEmptySection = !platformFonts || !platformFonts.length;\n    this.sectionTitle.classList.toggle('hidden', isEmptySection);\n    if (isEmptySection || !platformFonts) {\n      return;\n    }\n\n    platformFonts.sort(function(a, b) {\n      return b.glyphCount - a.glyphCount;\n    });\n\n    for (const platformFont of platformFonts) {\n      const fontStatElement = this.fontStatsSection.createChild('div', 'font-stats-item');\n      const familyNameElement = fontStatElement.createChild('div');\n      familyNameElement.textContent = `${UIStrings.familyName}: ${platformFont.familyName}`;\n\n      const postScriptNameElement = fontStatElement.createChild('div');\n      postScriptNameElement.textContent = `${UIStrings.postScriptName}: ${platformFont.postScriptName}`;\n\n      const fontOriginElement = fontStatElement.createChild('div');\n      const fontOrigin =\n          platformFont.isCustomFont ? i18nString(UIStrings.networkResource) : i18nString(UIStrings.localFile);\n      fontOriginElement.textContent = `${UIStrings.fontOrigin}: ${fontOrigin}`;\n\n      const fontUsageElement = fontOriginElement.createChild('span', 'font-usage');\n      const usage = platformFont.glyphCount;\n      fontUsageElement.textContent = i18nString(UIStrings.dGlyphs, {n: usage});\n    }\n  }\n  override wasShown(): void {\n    super.wasShown();\n    this.registerCSSFiles([platformFontsWidgetStyles]);\n  }\n}\n"]}