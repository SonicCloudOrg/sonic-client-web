{"version":3,"file":"ComputedStyleWidget.js","sourceRoot":"","sources":["../../../../../../front_end/panels/elements/ComputedStyleWidget.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/*\n * Copyright (C) 2007 Apple Inc.  All rights reserved.\n * Copyright (C) 2009 Joseph Pecoraro\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as TreeOutline from '../../ui/components/tree_outline/tree_outline.js';\nimport * as InlineEditor from '../../ui/legacy/components/inline_editor/inline_editor.js';\nimport * as Components from '../../ui/legacy/components/utils/utils.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as LitHtml from '../../ui/lit-html/lit-html.js';\n\nimport * as ElementsComponents from './components/components.js';\nimport {type ComputedStyle, ComputedStyleModel, Events} from './ComputedStyleModel.js';\nimport computedStyleSidebarPaneStyles from './computedStyleSidebarPane.css.js';\nimport {ImagePreviewPopover} from './ImagePreviewPopover.js';\nimport {PlatformFontsWidget} from './PlatformFontsWidget.js';\nimport {type ColorMatch, ColorMatcher} from './PropertyMatchers.js';\nimport {categorizePropertyName, type Category, DefaultCategoryOrder} from './PropertyNameCategories.js';\nimport {type MatchRenderer, Renderer, type RenderingContext, StringRenderer, URLRenderer} from './PropertyRenderer.js';\nimport {StylePropertiesSection} from './StylePropertiesSection.js';\n\nconst UIStrings = {\n  /**\n   * @description Text for a checkbox setting that controls whether the user-supplied filter text\n   * excludes all CSS propreties which are filtered out, or just greys them out. In Computed Style\n   * Widget of the Elements panel\n   */\n  showAll: 'Show all',\n  /**\n   * @description Text for a checkbox setting that controls whether similar CSS properties should be\n   * grouped together or not. In Computed Style Widget of the Elements panel.\n   */\n  group: 'Group',\n  /** [\n   * @description Text shown to the user when a filter is applied to the computed CSS properties, but\n   * no properties matched the filter and thus no results were returned.\n   */\n  noMatchingProperty: 'No matching property',\n  /**\n   * @description Context menu item in Elements panel to navigate to the source code location of the\n   * CSS selector that was clicked on.\n   */\n  navigateToSelectorSource: 'Navigate to selector source',\n  /**\n   * @description Context menu item in Elements panel to navigate to the corresponding CSS style rule\n   * for this computed property.\n   */\n  navigateToStyle: 'Navigate to style',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/elements/ComputedStyleWidget.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\n/**\n * Rendering a property's name and value is expensive, and each time we do it\n * it generates a new HTML element. If we call this directly from our Lit\n * components, we will generate a brand new DOM element on each single render.\n * This is very expensive and unneccessary - for the majority of re-renders a\n * property's name and value does not change. So we cache the rest of rendering\n * the name and value in a map, where the key used is a combination of the\n * property's name and value. This ensures that we only re-generate this element\n * if the node itself changes.\n * The resulting Element nodes are inserted into the ComputedStyleProperty\n * component via <slot>s, ensuring that Lit doesn't directly render/re-render\n * the element.\n */\nconst propertyContentsCache = new Map<string, {name: Element, value: Element}>();\n\nfunction renderPropertyContents(\n    node: SDK.DOMModel.DOMNode, propertyName: string, propertyValue: string): {name: Element, value: Element} {\n  const cacheKey = propertyName + ':' + propertyValue;\n  const valueFromCache = propertyContentsCache.get(cacheKey);\n  if (valueFromCache) {\n    return valueFromCache;\n  }\n  const name = Renderer.renderNameElement(propertyName);\n  name.slot = 'name';\n  const value = Renderer.renderValueElement(\n      propertyName, propertyValue, [new ColorRenderer(), new URLRenderer(null, node), new StringRenderer()]);\n  value.slot = 'value';\n  propertyContentsCache.set(cacheKey, {name, value});\n  return {name, value};\n}\n\n/**\n * Note: this function is called for each tree node on each render, so we need\n * to ensure nothing expensive runs here, or if it does it is safely cached.\n **/\nconst createPropertyElement =\n    (node: SDK.DOMModel.DOMNode, propertyName: string, propertyValue: string, traceable: boolean, inherited: boolean,\n     activeProperty: SDK.CSSProperty.CSSProperty|undefined,\n     onContextMenu: ((event: Event) => void)): LitHtml.TemplateResult => {\n      const {name, value} = renderPropertyContents(node, propertyName, propertyValue);\n      // clang-format off\n      return LitHtml.html`<${ElementsComponents.ComputedStyleProperty.ComputedStyleProperty.litTagName}\n        .traceable=${traceable}\n        .inherited=${inherited}\n        @oncontextmenu=${onContextMenu}\n        @onnavigatetosource=${(event: ElementsComponents.ComputedStyleProperty.NavigateToSourceEvent):void => {\n          if (activeProperty) {\n            navigateToSource(activeProperty, event);\n          }\n        }}>\n          ${name}\n          ${value}\n      </${ElementsComponents.ComputedStyleProperty.ComputedStyleProperty.litTagName}>`;\n      // clang-format on\n    };\n\nconst createTraceElement =\n    (node: SDK.DOMModel.DOMNode, property: SDK.CSSProperty.CSSProperty, isPropertyOverloaded: boolean,\n     matchedStyles: SDK.CSSMatchedStyles.CSSMatchedStyles,\n     linkifier: Components.Linkifier.Linkifier): ElementsComponents.ComputedStyleTrace.ComputedStyleTrace => {\n      const trace = new ElementsComponents.ComputedStyleTrace.ComputedStyleTrace();\n\n      const valueElement = Renderer.renderValueElement(\n          property.name, property.value, [new ColorRenderer(), new URLRenderer(null, node), new StringRenderer()]);\n      valueElement.slot = 'trace-value';\n      trace.appendChild(valueElement);\n\n      const rule = (property.ownerStyle.parentRule as SDK.CSSRule.CSSStyleRule | null);\n      let ruleOriginNode;\n      if (rule) {\n        ruleOriginNode = StylePropertiesSection.createRuleOriginNode(matchedStyles, linkifier, rule);\n      }\n      trace.data = {\n        selector: rule ? rule.selectorText() : 'element.style',\n        active: !isPropertyOverloaded,\n        onNavigateToSource: navigateToSource.bind(null, property),\n        ruleOriginNode,\n      };\n\n      return trace;\n    };\n\nclass ColorRenderer implements MatchRenderer<ColorMatch> {\n  render(match: ColorMatch, context: RenderingContext): Node[] {\n    const swatch = new InlineEditor.ColorSwatch.ColorSwatch();\n    swatch.setReadonly(true);\n    swatch.renderColor(match.text, true);\n    const valueElement = document.createElement('span');\n    valueElement.textContent = swatch.getText();\n    swatch.append(valueElement);\n\n    swatch.addEventListener(\n        InlineEditor.ColorSwatch.ColorChangedEvent.eventName, (event: InlineEditor.ColorSwatch.ColorChangedEvent) => {\n          const {data} = event;\n          valueElement.textContent = data.text;\n        });\n\n    context.addControl('color', swatch);\n    return [swatch];\n  }\n\n  matcher(): ColorMatcher {\n    return new ColorMatcher();\n  }\n}\n\nconst navigateToSource = (cssProperty: SDK.CSSProperty.CSSProperty, event?: Event): void => {\n  if (!event) {\n    return;\n  }\n  void Common.Revealer.reveal(cssProperty);\n  event.consume(true);\n};\n\nconst propertySorter = (propA: string, propB: string): number => {\n  if (propA.startsWith('--') !== propB.startsWith('--')) {\n    return propA.startsWith('--') ? 1 : -1;\n  }\n  if (propA.startsWith('-webkit') !== propB.startsWith('-webkit')) {\n    return propA.startsWith('-webkit') ? 1 : -1;\n  }\n  const canonicalA = SDK.CSSMetadata.cssMetadata().canonicalPropertyName(propA);\n  const canonicalB = SDK.CSSMetadata.cssMetadata().canonicalPropertyName(propB);\n  return Platform.StringUtilities.compare(canonicalA, canonicalB);\n};\n\ntype ComputedStyleData = {\n  tag: 'property',\n  propertyName: string,\n  propertyValue: string,\n  inherited: boolean,\n}|{\n  tag: 'traceElement',\n  property: SDK.CSSProperty.CSSProperty,\n  rule: SDK.CSSRule.CSSRule | null,\n}|{\n  tag: 'category',\n  name: string,\n};\n\nexport class ComputedStyleWidget extends UI.ThrottledWidget.ThrottledWidget {\n  private computedStyleModel: ComputedStyleModel;\n  private readonly showInheritedComputedStylePropertiesSetting: Common.Settings.Setting<boolean>;\n  private readonly groupComputedStylesSetting: Common.Settings.Setting<boolean>;\n  input: UI.Toolbar.ToolbarInput;\n  private filterRegex: RegExp|null;\n  private readonly noMatchesElement: HTMLElement;\n  private readonly linkifier: Components.Linkifier.Linkifier;\n  private readonly imagePreviewPopover: ImagePreviewPopover;\n\n  #computedStylesTree = new TreeOutline.TreeOutline.TreeOutline<ComputedStyleData>();\n  #treeData?: TreeOutline.TreeOutline.TreeOutlineData<ComputedStyleData>;\n\n  constructor() {\n    super(true);\n\n    this.contentElement.classList.add('styles-sidebar-computed-style-widget');\n\n    this.computedStyleModel = new ComputedStyleModel();\n    this.computedStyleModel.addEventListener(Events.ComputedStyleChanged, this.update, this);\n\n    this.showInheritedComputedStylePropertiesSetting =\n        Common.Settings.Settings.instance().createSetting('show-inherited-computed-style-properties', false);\n    this.showInheritedComputedStylePropertiesSetting.addChangeListener(this.update.bind(this));\n\n    this.groupComputedStylesSetting = Common.Settings.Settings.instance().createSetting('group-computed-styles', false);\n    this.groupComputedStylesSetting.addChangeListener(() => {\n      this.update();\n    });\n\n    const hbox = this.contentElement.createChild('div', 'hbox styles-sidebar-pane-toolbar');\n    const toolbar = new UI.Toolbar.Toolbar('styles-pane-toolbar', hbox);\n    const filterInput = new UI.Toolbar.ToolbarFilter(undefined, 1, 1, undefined, undefined, false);\n    filterInput.addEventListener(UI.Toolbar.ToolbarInput.Event.TextChanged, this.onFilterChanged, this);\n    toolbar.appendToolbarItem(filterInput);\n    this.input = filterInput;\n    this.filterRegex = null;\n\n    toolbar.appendToolbarItem(new UI.Toolbar.ToolbarSettingCheckbox(\n        this.showInheritedComputedStylePropertiesSetting, undefined, i18nString(UIStrings.showAll)));\n    toolbar.appendToolbarItem(\n        new UI.Toolbar.ToolbarSettingCheckbox(this.groupComputedStylesSetting, undefined, i18nString(UIStrings.group)));\n\n    this.noMatchesElement = this.contentElement.createChild('div', 'gray-info-message');\n    this.noMatchesElement.textContent = i18nString(UIStrings.noMatchingProperty);\n\n    this.contentElement.appendChild(this.#computedStylesTree);\n\n    this.linkifier = new Components.Linkifier.Linkifier(maxLinkLength);\n\n    this.imagePreviewPopover = new ImagePreviewPopover(this.contentElement, event => {\n      const link = event.composedPath()[0];\n      if (link instanceof Element) {\n        return link;\n      }\n      return null;\n    }, () => this.computedStyleModel.node());\n\n    const fontsWidget = new PlatformFontsWidget(this.computedStyleModel);\n    fontsWidget.show(this.contentElement);\n  }\n\n  override onResize(): void {\n    const isNarrow = this.contentElement.offsetWidth < 260;\n    this.#computedStylesTree.classList.toggle('computed-narrow', isNarrow);\n  }\n\n  override wasShown(): void {\n    super.wasShown();\n    this.registerCSSFiles([computedStyleSidebarPaneStyles]);\n  }\n\n  override async doUpdate(): Promise<void> {\n    const [nodeStyles, matchedStyles] =\n        await Promise.all([this.computedStyleModel.fetchComputedStyle(), this.fetchMatchedCascade()]);\n    if (!nodeStyles || !matchedStyles) {\n      this.noMatchesElement.classList.remove('hidden');\n      return;\n    }\n    const shouldGroupComputedStyles = this.groupComputedStylesSetting.get();\n    if (shouldGroupComputedStyles) {\n      await this.rebuildGroupedList(nodeStyles, matchedStyles);\n    } else {\n      await this.rebuildAlphabeticalList(nodeStyles, matchedStyles);\n    }\n  }\n\n  private async fetchMatchedCascade(): Promise<SDK.CSSMatchedStyles.CSSMatchedStyles|null> {\n    const node = this.computedStyleModel.node();\n    if (!node || !this.computedStyleModel.cssModel()) {\n      return null;\n    }\n\n    const cssModel = this.computedStyleModel.cssModel();\n    if (!cssModel) {\n      return null;\n    }\n\n    return cssModel.cachedMatchedCascadeForNode(node).then(validateStyles.bind(this));\n\n    function validateStyles(this: ComputedStyleWidget, matchedStyles: SDK.CSSMatchedStyles.CSSMatchedStyles|null):\n        SDK.CSSMatchedStyles.CSSMatchedStyles|null {\n      return matchedStyles && matchedStyles.node() === this.computedStyleModel.node() ? matchedStyles : null;\n    }\n  }\n\n  private async rebuildAlphabeticalList(nodeStyle: ComputedStyle, matchedStyles: SDK.CSSMatchedStyles.CSSMatchedStyles):\n      Promise<void> {\n    this.imagePreviewPopover.hide();\n    this.linkifier.reset();\n    const cssModel = this.computedStyleModel.cssModel();\n    if (!cssModel) {\n      return;\n    }\n\n    const uniqueProperties = [...nodeStyle.computedStyle.keys()];\n    uniqueProperties.sort(propertySorter);\n\n    const node = nodeStyle.node;\n    const propertyTraces = this.computePropertyTraces(matchedStyles);\n    const nonInheritedProperties = this.computeNonInheritedProperties(matchedStyles);\n    const showInherited = this.showInheritedComputedStylePropertiesSetting.get();\n    const tree: TreeOutline.TreeOutlineUtils.TreeNode<ComputedStyleData>[] = [];\n    for (const propertyName of uniqueProperties) {\n      const propertyValue = nodeStyle.computedStyle.get(propertyName) || '';\n      const canonicalName = SDK.CSSMetadata.cssMetadata().canonicalPropertyName(propertyName);\n      const isInherited = !nonInheritedProperties.has(canonicalName);\n      if (!showInherited && isInherited && !alwaysShownComputedProperties.has(propertyName)) {\n        continue;\n      }\n      if (!showInherited && propertyName.startsWith('--')) {\n        continue;\n      }\n      if (propertyName !== canonicalName && propertyValue === nodeStyle.computedStyle.get(canonicalName)) {\n        continue;\n      }\n      tree.push(this.buildTreeNode(propertyTraces, propertyName, propertyValue, isInherited));\n    }\n\n    const defaultRenderer = this.createTreeNodeRenderer(propertyTraces, node, matchedStyles);\n    this.#treeData = {\n      tree,\n      compact: true,\n      defaultRenderer,\n    };\n    this.filterAlphabeticalList();\n  }\n\n  private async rebuildGroupedList(\n      nodeStyle: ComputedStyle|null, matchedStyles: SDK.CSSMatchedStyles.CSSMatchedStyles|null): Promise<void> {\n    this.imagePreviewPopover.hide();\n    this.linkifier.reset();\n    const cssModel = this.computedStyleModel.cssModel();\n    if (!nodeStyle || !matchedStyles || !cssModel) {\n      this.noMatchesElement.classList.remove('hidden');\n      return;\n    }\n\n    const node = nodeStyle.node;\n    const propertyTraces = this.computePropertyTraces(matchedStyles);\n    const nonInheritedProperties = this.computeNonInheritedProperties(matchedStyles);\n    const showInherited = this.showInheritedComputedStylePropertiesSetting.get();\n\n    const propertiesByCategory = new Map<Category, string[]>();\n\n    const tree: TreeOutline.TreeOutlineUtils.TreeNode<ComputedStyleData>[] = [];\n    for (const [propertyName, propertyValue] of nodeStyle.computedStyle) {\n      const canonicalName = SDK.CSSMetadata.cssMetadata().canonicalPropertyName(propertyName);\n      const isInherited = !nonInheritedProperties.has(canonicalName);\n      if (!showInherited && isInherited && !alwaysShownComputedProperties.has(propertyName)) {\n        continue;\n      }\n      if (!showInherited && propertyName.startsWith('--')) {\n        continue;\n      }\n      if (propertyName !== canonicalName && propertyValue === nodeStyle.computedStyle.get(canonicalName)) {\n        continue;\n      }\n\n      const categories = categorizePropertyName(propertyName);\n      for (const category of categories) {\n        if (!propertiesByCategory.has(category)) {\n          propertiesByCategory.set(category, []);\n        }\n        propertiesByCategory.get(category)?.push(propertyName);\n      }\n    }\n\n    this.#computedStylesTree.removeChildren();\n    for (const category of DefaultCategoryOrder) {\n      const properties = propertiesByCategory.get(category);\n      if (properties && properties.length > 0) {\n        const propertyNodes: TreeOutline.TreeOutlineUtils.TreeNode<ComputedStyleData>[] = [];\n        for (const propertyName of properties) {\n          const propertyValue = nodeStyle.computedStyle.get(propertyName) || '';\n          const canonicalName = SDK.CSSMetadata.cssMetadata().canonicalPropertyName(propertyName);\n          const isInherited = !nonInheritedProperties.has(canonicalName);\n          propertyNodes.push(this.buildTreeNode(propertyTraces, propertyName, propertyValue, isInherited));\n        }\n        tree.push({id: category, treeNodeData: {tag: 'category', name: category}, children: async () => propertyNodes});\n      }\n    }\n    const defaultRenderer = this.createTreeNodeRenderer(propertyTraces, node, matchedStyles);\n    this.#treeData = {\n      tree,\n      compact: true,\n      defaultRenderer,\n    };\n    return this.filterGroupLists();\n  }\n\n  private buildTraceNode(property: SDK.CSSProperty.CSSProperty):\n      TreeOutline.TreeOutlineUtils.TreeNode<ComputedStyleData> {\n    const rule = property.ownerStyle.parentRule;\n    return {\n      treeNodeData: {\n        tag: 'traceElement',\n        property,\n        rule,\n      },\n      id: (rule?.origin || '') + ': ' + property.ownerStyle.styleSheetId + (property.range || property.name),\n    };\n  }\n\n  private createTreeNodeRenderer(\n      propertyTraces: Map<string, SDK.CSSProperty.CSSProperty[]>,\n      domNode: SDK.DOMModel.DOMNode,\n      matchedStyles: SDK.CSSMatchedStyles.CSSMatchedStyles,\n      ):\n      (node: TreeOutline.TreeOutlineUtils.TreeNode<ComputedStyleData>,\n       state: {isExpanded: boolean}) => LitHtml.TemplateResult {\n    return node => {\n      const data = node.treeNodeData;\n      if (data.tag === 'property') {\n        const trace = propertyTraces.get(data.propertyName);\n        const activeProperty = trace?.find(\n            property => matchedStyles.propertyState(property) === SDK.CSSMatchedStyles.PropertyState.Active);\n        const propertyElement = createPropertyElement(\n            domNode, data.propertyName, data.propertyValue, propertyTraces.has(data.propertyName), data.inherited,\n            activeProperty, event => {\n              if (activeProperty) {\n                this.handleContextMenuEvent(matchedStyles, activeProperty, event);\n              }\n            });\n        return propertyElement;\n      }\n      if (data.tag === 'traceElement') {\n        const isPropertyOverloaded =\n            matchedStyles.propertyState(data.property) === SDK.CSSMatchedStyles.PropertyState.Overloaded;\n        const traceElement =\n            createTraceElement(domNode, data.property, isPropertyOverloaded, matchedStyles, this.linkifier);\n        traceElement.addEventListener(\n            'contextmenu', this.handleContextMenuEvent.bind(this, matchedStyles, data.property));\n        return LitHtml.html`${traceElement}`;\n      }\n      return LitHtml.html`<span style=\"cursor: text; color: var(--sys-color-token-subtle);\">${data.name}</span>`;\n    };\n  }\n\n  private buildTreeNode(\n      propertyTraces: Map<string, SDK.CSSProperty.CSSProperty[]>, propertyName: string, propertyValue: string,\n      isInherited: boolean): TreeOutline.TreeOutlineUtils.TreeNode<ComputedStyleData> {\n    const treeNodeData: ComputedStyleData = {\n      tag: 'property',\n      propertyName,\n      propertyValue,\n      inherited: isInherited,\n    };\n    const trace = propertyTraces.get(propertyName);\n    if (!trace) {\n      return {\n        treeNodeData,\n        jslogContext: propertyName,\n        id: propertyName,\n      };\n    }\n    return {\n      treeNodeData,\n      jslogContext: propertyName,\n      id: propertyName,\n      children: async () => trace.map(this.buildTraceNode),\n    };\n  }\n\n  private handleContextMenuEvent(\n      matchedStyles: SDK.CSSMatchedStyles.CSSMatchedStyles, property: SDK.CSSProperty.CSSProperty, event: Event): void {\n    const contextMenu = new UI.ContextMenu.ContextMenu(event);\n    const rule = property.ownerStyle.parentRule;\n\n    if (rule) {\n      const header = rule.styleSheetId ? matchedStyles.cssModel().styleSheetHeaderForId(rule.styleSheetId) : null;\n      if (header && !header.isAnonymousInlineStyleSheet()) {\n        contextMenu.defaultSection().appendItem(i18nString(UIStrings.navigateToSelectorSource), () => {\n          StylePropertiesSection.tryNavigateToRuleLocation(matchedStyles, rule);\n        }, {jslogContext: 'navigate-to-selector-source'});\n      }\n    }\n\n    contextMenu.defaultSection().appendItem(\n        i18nString(UIStrings.navigateToStyle), () => Common.Revealer.reveal(property),\n        {jslogContext: 'navigate-to-style'});\n    void contextMenu.show();\n  }\n\n  private computePropertyTraces(matchedStyles: SDK.CSSMatchedStyles.CSSMatchedStyles):\n      Map<string, SDK.CSSProperty.CSSProperty[]> {\n    const result = new Map<string, SDK.CSSProperty.CSSProperty[]>();\n    for (const style of matchedStyles.nodeStyles()) {\n      const allProperties = style.allProperties();\n      for (const property of allProperties) {\n        if (!property.activeInStyle() || !matchedStyles.propertyState(property)) {\n          continue;\n        }\n        if (!result.has(property.name)) {\n          result.set(property.name, []);\n        }\n        // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n        // @ts-expect-error\n        result.get(property.name).push(property);\n      }\n    }\n    return result;\n  }\n\n  private computeNonInheritedProperties(matchedStyles: SDK.CSSMatchedStyles.CSSMatchedStyles): Set<string> {\n    const result = new Set<string>();\n    for (const style of matchedStyles.nodeStyles()) {\n      for (const property of style.allProperties()) {\n        if (!matchedStyles.propertyState(property)) {\n          continue;\n        }\n        result.add(SDK.CSSMetadata.cssMetadata().canonicalPropertyName(property.name));\n      }\n    }\n    return result;\n  }\n\n  private onFilterChanged(event: Common.EventTarget.EventTargetEvent<string>): void {\n    void this.filterComputedStyles(\n        event.data ? new RegExp(Platform.StringUtilities.escapeForRegExp(event.data), 'i') : null);\n  }\n\n  async filterComputedStyles(regex: RegExp|null): Promise<void> {\n    this.filterRegex = regex;\n    if (this.groupComputedStylesSetting.get()) {\n      return this.filterGroupLists();\n    }\n    return this.filterAlphabeticalList();\n  }\n\n  private nodeFilter(node: TreeOutline.TreeOutlineUtils.TreeNode<ComputedStyleData>): boolean {\n    const regex = this.filterRegex;\n    const data = node.treeNodeData;\n    if (data.tag === 'property') {\n      const matched = !regex || regex.test(data.propertyName) || regex.test(data.propertyValue);\n      return matched;\n    }\n    return true;\n  }\n\n  private filterAlphabeticalList(): void {\n    if (!this.#treeData) {\n      return;\n    }\n    const tree = this.#treeData.tree.filter(this.nodeFilter.bind(this));\n    this.#computedStylesTree.data = {\n      tree,\n      defaultRenderer: this.#treeData.defaultRenderer,\n      compact: this.#treeData.compact,\n    };\n    this.noMatchesElement.classList.toggle('hidden', Boolean(tree.length));\n  }\n\n  private async filterGroupLists(): Promise<void> {\n    if (!this.#treeData) {\n      return;\n    }\n    const tree: TreeOutline.TreeOutlineUtils.TreeNode<ComputedStyleData>[] = [];\n    for (const group of this.#treeData.tree) {\n      const data = group.treeNodeData;\n      if (data.tag !== 'category' || !group.children) {\n        continue;\n      }\n      const properties = await group.children();\n      const filteredChildren = properties.filter(this.nodeFilter.bind(this));\n      if (filteredChildren.length) {\n        tree.push(\n            {id: data.name, treeNodeData: {tag: 'category', name: data.name}, children: async () => filteredChildren});\n      }\n    }\n\n    this.#computedStylesTree.data = {\n      tree,\n      defaultRenderer: this.#treeData.defaultRenderer,\n      compact: this.#treeData.compact,\n    };\n    await this.#computedStylesTree.expandRecursively(0);\n    this.noMatchesElement.classList.toggle('hidden', Boolean(tree.length));\n  }\n}\n\nconst maxLinkLength = 30;\nconst alwaysShownComputedProperties = new Set<string>(['display', 'height', 'width']);\n"]}