{"version":3,"file":"StylePropertyHighlighter.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/elements/StylePropertyHighlighter.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as SDK from '../../core/sdk/sdk.js';\nimport {createTarget} from '../../testing/EnvironmentHelpers.js';\nimport {describeWithMockConnection} from '../../testing/MockConnection.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as PanelUtils from '../utils/utils.js';\n\nimport * as Elements from './elements.js';\n\ndescribeWithMockConnection('StylePropertyHighlighter', () => {\n  async function setupStylesPane(): Promise<{\n    stylesSidebarPane: Elements.StylesSidebarPane.StylesSidebarPane,\n    matchedStyles: SDK.CSSMatchedStyles.CSSMatchedStyles,\n  }> {\n    const target = createTarget();\n    UI.Context.Context.instance().setFlavor(SDK.DOMModel.DOMNode, sinon.createStubInstance(SDK.DOMModel.DOMNode));\n    const stylesSidebarPane = Elements.StylesSidebarPane.StylesSidebarPane.instance({forceNew: true});\n    const matchedStyles = await SDK.CSSMatchedStyles.CSSMatchedStyles.create({\n      cssModel: target.model(SDK.CSSModel.CSSModel)!,\n      node: stylesSidebarPane.node() as SDK.DOMModel.DOMNode,\n      inlinePayload: null,\n      attributesPayload: null,\n      matchedPayload: [],\n      pseudoPayload: [],\n      inheritedPayload: [],\n      inheritedPseudoPayload: [],\n      animationsPayload: [],\n      parentLayoutNodeId: undefined,\n      positionFallbackRules: [],\n      positionTryRules: [],\n      propertyRules: [],\n      cssPropertyRegistrations: [],\n      fontPaletteValuesRule: undefined,\n    });\n    return {\n      stylesSidebarPane,\n      matchedStyles,\n    };\n  }\n\n  function createSection(\n      stylesSidebarPane: Elements.StylesSidebarPane.StylesSidebarPane,\n      matchedStyles: SDK.CSSMatchedStyles.CSSMatchedStyles, sectionName?: string, propertyName?: string) {\n    const style = sinon.createStubInstance(SDK.CSSStyleDeclaration.CSSStyleDeclaration);\n    if (propertyName) {\n      const property =\n          new SDK.CSSProperty.CSSProperty(style, 0, propertyName, 'value', true, false, true, false, '', undefined);\n      style.leadingProperties.returns([property]);\n      style.hasActiveProperty.callsFake(name => name === propertyName);\n    } else {\n      style.leadingProperties.returns([]);\n    }\n    return new Elements.StylePropertiesSection.StylePropertiesSection(\n        stylesSidebarPane, matchedStyles, style,\n        /* sectionIdx */ 0, /* computedStyles */ null,\n        /* parentsComputedStyles */ null, sectionName);\n  }\n\n  function createBlockAndSection(\n      stylesSidebarPane: Elements.StylesSidebarPane.StylesSidebarPane,\n      matchedStyles: SDK.CSSMatchedStyles.CSSMatchedStyles, sectionName?: string, propertyName?: string) {\n    const titleElement = sinon.createStubInstance(Element);\n    const block = new Elements.StylesSidebarPane.SectionBlock(titleElement, true);\n    block.sections = [createSection(stylesSidebarPane, matchedStyles, sectionName, propertyName)];\n\n    return block;\n  }\n\n  it('highlights layers', async () => {\n    const {stylesSidebarPane, matchedStyles} = await setupStylesPane();\n    const getSectionBlockByName = sinon.stub(stylesSidebarPane, 'getSectionBlockByName');\n\n    const block = createBlockAndSection(stylesSidebarPane, matchedStyles);\n    getSectionBlockByName.returns(block);\n    const [section] = block.sections;\n\n    const style = section.style() as sinon.SinonStubbedInstance<SDK.CSSStyleDeclaration.CSSStyleDeclaration>;\n    // Attach a property late, in order to verify that highlighting the layer repopulates the tree view.\n    const property = new SDK.CSSProperty.CSSProperty(style, 0, '', '', true, false, true, false, '', undefined);\n    style.leadingProperties.returns([property]);\n    assert.isUndefined(section.propertiesTreeOutline.firstChild());\n\n    const highlighter = new Elements.StylePropertyHighlighter.StylePropertyHighlighter(stylesSidebarPane);\n    const highlightSpy = sinon.spy(PanelUtils.PanelUtils, 'highlightElement');\n    highlighter.findAndHighlightSectionBlock('dontcare');\n\n    const firstChild = section.propertiesTreeOutline.firstChild();\n    assert.exists(firstChild);\n    assert.deepEqual((firstChild as Elements.StylePropertyTreeElement.StylePropertyTreeElement).property, property);\n\n    assert.isTrue(highlightSpy.calledOnceWithExactly(block.titleElement() as HTMLElement));\n  });\n\n  it('highlights sections', async () => {\n    const {stylesSidebarPane, matchedStyles} = await setupStylesPane();\n    const getSectionBlockByName = sinon.stub(stylesSidebarPane, 'getSectionBlockByName');\n\n    const block = createBlockAndSection(stylesSidebarPane, matchedStyles, 'sectionname');\n    const blockExpandSpy = sinon.spy(block, 'expand');\n\n    getSectionBlockByName.callsFake(name => name === 'blockname' ? block : undefined);\n\n    const highlighter = new Elements.StylePropertyHighlighter.StylePropertyHighlighter(stylesSidebarPane);\n    const highlightSpy = sinon.stub(PanelUtils.PanelUtils, 'highlightElement');\n    highlighter.findAndHighlightSection('sectionname', 'blockname');\n\n    assert.isTrue(blockExpandSpy.called);\n    assert.isTrue(highlightSpy.calledOnceWithExactly(block.sections[0].element));\n  });\n\n  it('highlights properties in sections in blocks', async () => {\n    const {stylesSidebarPane, matchedStyles} = await setupStylesPane();\n    const getSectionBlockByName = sinon.stub(stylesSidebarPane, 'getSectionBlockByName');\n\n    const block1 = createBlockAndSection(stylesSidebarPane, matchedStyles, 'section1', 'property');\n    const block1ExpandSpy = sinon.spy(block1, 'expand');\n    const block2 = createBlockAndSection(stylesSidebarPane, matchedStyles, 'section2', 'property');\n    block2.sections.unshift(createSection(stylesSidebarPane, matchedStyles, 'extrasection'));\n    const block2ExpandSpy = sinon.spy(block2, 'expand');\n\n    getSectionBlockByName.callsFake(name => {\n      if (name === 'block1') {\n        return block1;\n      }\n      if (name === 'block2') {\n        return block2;\n      }\n      return undefined;\n    });\n\n    const highlighter = new Elements.StylePropertyHighlighter.StylePropertyHighlighter(stylesSidebarPane);\n    const highlightSpy = sinon.stub(PanelUtils.PanelUtils, 'highlightElement');\n    highlighter.findAndHighlightPropertyName('property', 'section2', 'block2');\n\n    assert.isFalse(block1ExpandSpy.called);\n    assert.isTrue(block2ExpandSpy.called);\n    const element = block2.sections[1].propertiesTreeOutline.firstChild()?.listItemElement;\n    assert.exists(element);\n    assert.isTrue(highlightSpy.calledOnceWithExactly(element));\n  });\n});\n"]}