{"version":3,"file":"ColorSwatchPopoverIcon.js","sourceRoot":"","sources":["../../../../../../front_end/panels/elements/ColorSwatchPopoverIcon.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) 2015 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Bindings from '../../models/bindings/bindings.js';\nimport * as ColorPicker from '../../ui/legacy/components/color_picker/color_picker.js';\nimport * as InlineEditor from '../../ui/legacy/components/inline_editor/inline_editor.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport {type StylePropertiesSection} from './StylePropertiesSection.js';\nimport {type StylePropertyTreeElement} from './StylePropertyTreeElement.js';\nimport {type StylesSidebarPane} from './StylesSidebarPane.js';\n\nconst UIStrings = {\n  /**\n   * @description Tooltip text for an icon that opens the cubic bezier editor, which is a tool that\n   * allows the user to edit cubic-bezier CSS properties directly.\n   */\n  openCubicBezierEditor: 'Open cubic bezier editor',\n  /**\n   * @description Tooltip text for an icon that opens shadow editor. The shadow editor is a tool\n   * which allows the user to edit CSS shadow properties.\n   */\n  openShadowEditor: 'Open shadow editor',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/elements/ColorSwatchPopoverIcon.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\ninterface BezierPopoverIconParams {\n  treeElement: StylePropertyTreeElement;\n  swatchPopoverHelper: InlineEditor.SwatchPopoverHelper.SwatchPopoverHelper;\n  swatch: InlineEditor.Swatches.BezierSwatch;\n}\n\nexport class BezierPopoverIcon {\n  private treeElement: StylePropertyTreeElement;\n  private readonly swatchPopoverHelper: InlineEditor.SwatchPopoverHelper.SwatchPopoverHelper;\n  private swatch: InlineEditor.Swatches.BezierSwatch;\n  private readonly boundBezierChanged: (event: Common.EventTarget.EventTargetEvent<string>) => void;\n  private readonly boundOnScroll: (event: Event) => void;\n  private bezierEditor?: InlineEditor.BezierEditor.BezierEditor;\n  private scrollerElement?: Element;\n  private originalPropertyText?: string|null;\n\n  constructor({\n    treeElement,\n    swatchPopoverHelper,\n    swatch,\n  }: BezierPopoverIconParams) {\n    this.treeElement = treeElement;\n    this.swatchPopoverHelper = swatchPopoverHelper;\n    this.swatch = swatch;\n\n    UI.Tooltip.Tooltip.install(this.swatch.iconElement(), i18nString(UIStrings.openCubicBezierEditor));\n    this.swatch.iconElement().addEventListener('click', this.iconClick.bind(this), false);\n    this.swatch.iconElement().addEventListener('mousedown', (event: Event) => event.consume(), false);\n\n    this.boundBezierChanged = this.bezierChanged.bind(this);\n    this.boundOnScroll = this.onScroll.bind(this);\n  }\n\n  private iconClick(event: Event): void {\n    event.consume(true);\n    if (this.swatchPopoverHelper.isShowing()) {\n      this.swatchPopoverHelper.hide(true);\n      return;\n    }\n\n    const model = InlineEditor.AnimationTimingModel.AnimationTimingModel.parse(this.swatch.bezierText()) ||\n        InlineEditor.AnimationTimingModel.LINEAR_BEZIER;\n    this.bezierEditor = new InlineEditor.BezierEditor.BezierEditor(model);\n    this.bezierEditor.addEventListener(InlineEditor.BezierEditor.Events.BezierChanged, this.boundBezierChanged);\n    this.swatchPopoverHelper.show(this.bezierEditor, this.swatch.iconElement(), this.onPopoverHidden.bind(this));\n    this.scrollerElement = this.swatch.enclosingNodeOrSelfWithClass('style-panes-wrapper');\n    if (this.scrollerElement) {\n      this.scrollerElement.addEventListener('scroll', this.boundOnScroll, false);\n    }\n\n    this.originalPropertyText = this.treeElement.property.propertyText;\n    this.treeElement.parentPane().setEditingStyle(true);\n    const uiLocation = Bindings.CSSWorkspaceBinding.CSSWorkspaceBinding.instance().propertyUILocation(\n        this.treeElement.property, false /* forName */);\n    if (uiLocation) {\n      void Common.Revealer.reveal(uiLocation, true /* omitFocus */);\n    }\n  }\n\n  private bezierChanged(event: Common.EventTarget.EventTargetEvent<string>): void {\n    this.swatch.setBezierText(event.data);\n    void this.treeElement.applyStyleText(this.treeElement.renderedPropertyText(), false);\n  }\n\n  private onScroll(_event: Event): void {\n    this.swatchPopoverHelper.hide(true);\n  }\n\n  private onPopoverHidden(commitEdit: boolean): void {\n    if (this.scrollerElement) {\n      this.scrollerElement.removeEventListener('scroll', this.boundOnScroll, false);\n    }\n\n    if (this.bezierEditor) {\n      this.bezierEditor.removeEventListener(InlineEditor.BezierEditor.Events.BezierChanged, this.boundBezierChanged);\n    }\n    this.bezierEditor = undefined;\n\n    const propertyText = commitEdit ? this.treeElement.renderedPropertyText() : this.originalPropertyText || '';\n    void this.treeElement.applyStyleText(propertyText, true);\n    this.treeElement.parentPane().setEditingStyle(false);\n    delete this.originalPropertyText;\n  }\n}\n\nexport const enum ColorSwatchPopoverIconEvents {\n  ColorChanged = 'colorchanged',\n}\n\nexport type ColorSwatchPopoverIconEventTypes = {\n  [ColorSwatchPopoverIconEvents.ColorChanged]: string,\n};\n\nexport class ColorSwatchPopoverIcon extends Common.ObjectWrapper.ObjectWrapper<ColorSwatchPopoverIconEventTypes> {\n  private treeElement: StylePropertyTreeElement;\n  private readonly swatchPopoverHelper: InlineEditor.SwatchPopoverHelper.SwatchPopoverHelper;\n  private swatch: InlineEditor.ColorSwatch.ColorSwatch;\n  private contrastInfo: ColorPicker.ContrastInfo.ContrastInfo|null;\n  private readonly boundSpectrumChanged: (event: Common.EventTarget.EventTargetEvent<string>) => void;\n  private readonly boundOnScroll: (event: Event) => void;\n  private spectrum?: ColorPicker.Spectrum.Spectrum;\n  private scrollerElement?: Element;\n  private originalPropertyText?: string|null;\n\n  constructor(\n      treeElement: StylePropertyTreeElement, swatchPopoverHelper: InlineEditor.SwatchPopoverHelper.SwatchPopoverHelper,\n      swatch: InlineEditor.ColorSwatch.ColorSwatch) {\n    super();\n\n    this.treeElement = treeElement;\n    this.swatchPopoverHelper = swatchPopoverHelper;\n    this.swatch = swatch;\n    this.swatch.addEventListener(InlineEditor.ColorSwatch.ClickEvent.eventName, this.iconClick.bind(this));\n    this.contrastInfo = null;\n\n    this.boundSpectrumChanged = this.spectrumChanged.bind(this);\n    this.boundOnScroll = this.onScroll.bind(this);\n  }\n\n  private generateCSSVariablesPalette(): ColorPicker.Spectrum.Palette {\n    const matchedStyles = this.treeElement.matchedStyles();\n    const style = this.treeElement.property.ownerStyle;\n    const cssVariables = matchedStyles.availableCSSVariables(style);\n    const colors = [];\n    const colorNames = [];\n    for (const cssVariable of cssVariables) {\n      if (cssVariable === this.treeElement.property.name) {\n        continue;\n      }\n      const value = matchedStyles.computeCSSVariable(style, cssVariable);\n      if (!value) {\n        continue;\n      }\n      const color = Common.Color.parse(value.value);\n      if (!color) {\n        continue;\n      }\n      colors.push(value.value);\n      colorNames.push(cssVariable);\n    }\n    return {title: 'CSS Variables', mutable: false, matchUserFormat: true, colors: colors, colorNames: colorNames};\n  }\n\n  setContrastInfo(contrastInfo: ColorPicker.ContrastInfo.ContrastInfo): void {\n    this.contrastInfo = contrastInfo;\n  }\n\n  private iconClick(event: Event): void {\n    event.consume(true);\n    this.showPopover();\n  }\n\n  async toggleEyeDropper(): Promise<void> {\n    await this.spectrum?.toggleColorPicker();\n  }\n\n  showPopover(): void {\n    if (this.swatchPopoverHelper.isShowing()) {\n      this.swatchPopoverHelper.hide(true);\n      return;\n    }\n\n    const color = this.swatch.getColor();\n    const format = this.swatch.getFormat();\n    if (!color || !format) {\n      return;\n    }\n\n    this.spectrum = new ColorPicker.Spectrum.Spectrum(this.contrastInfo);\n    this.spectrum.setColor(color, format);\n    this.spectrum.addPalette(this.generateCSSVariablesPalette());\n\n    this.spectrum.addEventListener(ColorPicker.Spectrum.Events.SizeChanged, this.spectrumResized, this);\n    this.spectrum.addEventListener(ColorPicker.Spectrum.Events.ColorChanged, this.boundSpectrumChanged);\n    this.swatchPopoverHelper.show(this.spectrum, this.swatch, this.onPopoverHidden.bind(this));\n    this.scrollerElement = this.swatch.enclosingNodeOrSelfWithClass('style-panes-wrapper');\n    if (this.scrollerElement) {\n      this.scrollerElement.addEventListener('scroll', this.boundOnScroll, false);\n    }\n\n    this.originalPropertyText = this.treeElement.property.propertyText;\n    this.treeElement.parentPane().setEditingStyle(true);\n    const uiLocation = Bindings.CSSWorkspaceBinding.CSSWorkspaceBinding.instance().propertyUILocation(\n        this.treeElement.property, false /* forName */);\n    if (uiLocation) {\n      void Common.Revealer.reveal(uiLocation, true /* omitFocus */);\n    }\n\n    UI.Context.Context.instance().setFlavor(ColorSwatchPopoverIcon, this);\n    Host.userMetrics.colorPickerOpenedFrom(Host.UserMetrics.ColorPickerOpenedFrom.StylesPane);\n  }\n\n  private spectrumResized(): void {\n    this.swatchPopoverHelper.reposition();\n  }\n\n  private async spectrumChanged(event: Common.EventTarget.EventTargetEvent<string>): Promise<void> {\n    const color = Common.Color.parse(event.data);\n    if (!color) {\n      return;\n    }\n\n    const colorName = this.spectrum ? this.spectrum.colorName() : undefined;\n    const text =\n        colorName && colorName.startsWith('--') ? `var(${colorName})` : (color.getAuthoredText() ?? color.asString());\n\n    this.swatch.renderColor(color);\n    const value = this.swatch.firstElementChild;\n    if (value) {\n      value.remove();\n      this.swatch.createChild('span').textContent = text;\n    }\n\n    // `asString` somehow can return null.\n    if (text) {\n      this.dispatchEventToListeners(ColorSwatchPopoverIconEvents.ColorChanged, text);\n    }\n  }\n\n  private onScroll(_event: Event): void {\n    this.swatchPopoverHelper.hide(true);\n  }\n\n  private onPopoverHidden(commitEdit: boolean): void {\n    if (this.scrollerElement) {\n      this.scrollerElement.removeEventListener('scroll', this.boundOnScroll, false);\n    }\n\n    if (this.spectrum) {\n      this.spectrum.removeEventListener(ColorPicker.Spectrum.Events.ColorChanged, this.boundSpectrumChanged);\n    }\n    this.spectrum = undefined;\n\n    const propertyText = commitEdit ? this.treeElement.renderedPropertyText() : this.originalPropertyText || '';\n    void this.treeElement.applyStyleText(propertyText, true);\n    this.treeElement.parentPane().setEditingStyle(false);\n    delete this.originalPropertyText;\n\n    UI.Context.Context.instance().setFlavor(ColorSwatchPopoverIcon, null);\n  }\n}\n\nexport const enum ShadowEvents {\n  ShadowChanged = 'shadowChanged',\n}\n\nexport interface ShadowEventTypes {\n  [ShadowEvents.ShadowChanged]: InlineEditor.CSSShadowEditor.CSSShadowModel;\n}\n\nexport class ShadowSwatchPopoverHelper extends Common.ObjectWrapper.ObjectWrapper<ShadowEventTypes> {\n  private treeElement: StylePropertyTreeElement;\n  private readonly swatchPopoverHelper: InlineEditor.SwatchPopoverHelper.SwatchPopoverHelper;\n  private readonly shadowSwatch: InlineEditor.Swatches.CSSShadowSwatch;\n  private iconElement: HTMLSpanElement;\n  private readonly boundShadowChanged:\n      (event: Common.EventTarget.EventTargetEvent<InlineEditor.CSSShadowEditor.CSSShadowModel>) => void;\n  private readonly boundOnScroll: (event: Event) => void;\n  private cssShadowEditor?: InlineEditor.CSSShadowEditor.CSSShadowEditor;\n  private scrollerElement?: Element;\n  private originalPropertyText?: string|null;\n  constructor(\n      treeElement: StylePropertyTreeElement, swatchPopoverHelper: InlineEditor.SwatchPopoverHelper.SwatchPopoverHelper,\n      shadowSwatch: InlineEditor.Swatches.CSSShadowSwatch) {\n    super();\n    this.treeElement = treeElement;\n    this.swatchPopoverHelper = swatchPopoverHelper;\n    this.shadowSwatch = shadowSwatch;\n    this.iconElement = shadowSwatch.iconElement();\n\n    UI.Tooltip.Tooltip.install(this.iconElement, i18nString(UIStrings.openShadowEditor));\n    this.iconElement.addEventListener('click', this.iconClick.bind(this), false);\n    this.iconElement.addEventListener('mousedown', event => event.consume(), false);\n\n    this.boundShadowChanged = this.shadowChanged.bind(this);\n    this.boundOnScroll = this.onScroll.bind(this);\n  }\n\n  private iconClick(event: Event): void {\n    event.consume(true);\n    this.showPopover();\n  }\n\n  showPopover(): void {\n    if (this.swatchPopoverHelper.isShowing()) {\n      this.swatchPopoverHelper.hide(true);\n      return;\n    }\n\n    this.cssShadowEditor = new InlineEditor.CSSShadowEditor.CSSShadowEditor();\n    this.cssShadowEditor.setModel(this.shadowSwatch.model());\n    this.cssShadowEditor.addEventListener(InlineEditor.CSSShadowEditor.Events.ShadowChanged, this.boundShadowChanged);\n    this.swatchPopoverHelper.show(this.cssShadowEditor, this.iconElement, this.onPopoverHidden.bind(this));\n    this.scrollerElement = this.iconElement.enclosingNodeOrSelfWithClass('style-panes-wrapper');\n    if (this.scrollerElement) {\n      this.scrollerElement.addEventListener('scroll', this.boundOnScroll, false);\n    }\n\n    this.originalPropertyText = this.treeElement.property.propertyText;\n    this.treeElement.parentPane().setEditingStyle(true);\n    const uiLocation = Bindings.CSSWorkspaceBinding.CSSWorkspaceBinding.instance().propertyUILocation(\n        this.treeElement.property, false /* forName */);\n    if (uiLocation) {\n      void Common.Revealer.reveal(uiLocation, true /* omitFocus */);\n    }\n  }\n\n  private shadowChanged(event: Common.EventTarget.EventTargetEvent<InlineEditor.CSSShadowEditor.CSSShadowModel>): void {\n    this.dispatchEventToListeners(ShadowEvents.ShadowChanged, event.data);\n  }\n\n  private onScroll(_event: Event): void {\n    this.swatchPopoverHelper.hide(true);\n  }\n\n  private onPopoverHidden(commitEdit: boolean): void {\n    if (this.scrollerElement) {\n      this.scrollerElement.removeEventListener('scroll', this.boundOnScroll, false);\n    }\n\n    if (this.cssShadowEditor) {\n      this.cssShadowEditor.removeEventListener(\n          InlineEditor.CSSShadowEditor.Events.ShadowChanged, this.boundShadowChanged);\n    }\n    this.cssShadowEditor = undefined;\n\n    const propertyText = commitEdit ? this.treeElement.renderedPropertyText() : this.originalPropertyText || '';\n    void this.treeElement.applyStyleText(propertyText, true);\n    this.treeElement.parentPane().setEditingStyle(false);\n    delete this.originalPropertyText;\n  }\n}\n\nexport class FontEditorSectionManager {\n  private readonly treeElementMap: Map<string, StylePropertyTreeElement>;\n  private readonly swatchPopoverHelper: InlineEditor.SwatchPopoverHelper.SwatchPopoverHelper;\n  private readonly section: StylePropertiesSection;\n  private parentPane: StylesSidebarPane|null;\n  private fontEditor: InlineEditor.FontEditor.FontEditor|null;\n  private scrollerElement: Element|null;\n  private readonly boundFontChanged:\n      (event: Common.EventTarget.EventTargetEvent<InlineEditor.FontEditor.FontChangedEvent>) => void;\n  private readonly boundOnScroll: () => void;\n  private readonly boundResized: () => void;\n  constructor(\n      swatchPopoverHelper: InlineEditor.SwatchPopoverHelper.SwatchPopoverHelper, section: StylePropertiesSection) {\n    this.treeElementMap = new Map();\n\n    this.swatchPopoverHelper = swatchPopoverHelper;\n\n    this.section = section;\n\n    this.parentPane = null;\n\n    this.fontEditor = null;\n\n    this.scrollerElement = null;\n\n    this.boundFontChanged = this.fontChanged.bind(this);\n    this.boundOnScroll = this.onScroll.bind(this);\n    this.boundResized = this.fontEditorResized.bind(this);\n  }\n\n  private fontChanged(event: Common.EventTarget.EventTargetEvent<InlineEditor.FontEditor.FontChangedEvent>): void {\n    const {propertyName, value} = event.data;\n    const treeElement = this.treeElementMap.get(propertyName);\n    void this.updateFontProperty(propertyName, value, treeElement);\n  }\n\n  private async updateFontProperty(propertyName: string, value: string, treeElement?: StylePropertyTreeElement):\n      Promise<void> {\n    if (treeElement && treeElement.treeOutline && treeElement.valueElement && treeElement.property.parsedOk &&\n        treeElement.property.range) {\n      let elementRemoved = false;\n      treeElement.valueElement.textContent = value;\n      treeElement.property.value = value;\n      let styleText;\n      const propertyName = treeElement.property.name;\n      if (value.length) {\n        styleText = treeElement.renderedPropertyText();\n      } else {\n        styleText = '';\n        elementRemoved = true;\n        this.fixIndex(treeElement.property.index);\n      }\n      this.treeElementMap.set(propertyName, treeElement);\n      await treeElement.applyStyleText(styleText, true);\n      if (elementRemoved) {\n        this.treeElementMap.delete(propertyName);\n      }\n    } else if (value.length) {\n      const newProperty = this.section.addNewBlankProperty();\n      if (newProperty) {\n        newProperty.property.name = propertyName;\n        newProperty.property.value = value;\n        newProperty.updateTitle();\n        await newProperty.applyStyleText(newProperty.renderedPropertyText(), true);\n        this.treeElementMap.set(newProperty.property.name, newProperty);\n      }\n    }\n    this.section.onpopulate();\n    this.swatchPopoverHelper.reposition();\n    return;\n  }\n\n  private fontEditorResized(): void {\n    this.swatchPopoverHelper.reposition();\n  }\n\n  private fixIndex(removedIndex: number): void {\n    for (const treeElement of this.treeElementMap.values()) {\n      if (treeElement.property.index > removedIndex) {\n        treeElement.property.index -= 1;\n      }\n    }\n  }\n\n  private createPropertyValueMap(): Map<string, string> {\n    const propertyMap = new Map<string, string>();\n    for (const fontProperty of this.treeElementMap) {\n      const propertyName = (fontProperty[0] as string);\n      const treeElement = fontProperty[1];\n      if (treeElement.property.value.length) {\n        propertyMap.set(propertyName, treeElement.property.value);\n      } else {\n        this.treeElementMap.delete(propertyName);\n      }\n    }\n    return propertyMap;\n  }\n\n  registerFontProperty(treeElement: StylePropertyTreeElement): void {\n    const propertyName = treeElement.property.name;\n    if (this.treeElementMap.has(propertyName)) {\n      const treeElementFromMap = this.treeElementMap.get(propertyName);\n      if (!treeElement.overloaded() || (treeElementFromMap && treeElementFromMap.overloaded())) {\n        this.treeElementMap.set(propertyName, treeElement);\n      }\n    } else {\n      this.treeElementMap.set(propertyName, treeElement);\n    }\n  }\n\n  async showPopover(iconElement: Element, parentPane: StylesSidebarPane): Promise<void> {\n    if (this.swatchPopoverHelper.isShowing()) {\n      this.swatchPopoverHelper.hide(true);\n      return;\n    }\n    this.parentPane = parentPane;\n    const propertyValueMap = this.createPropertyValueMap();\n    this.fontEditor = new InlineEditor.FontEditor.FontEditor(propertyValueMap);\n    this.fontEditor.addEventListener(InlineEditor.FontEditor.Events.FontChanged, this.boundFontChanged);\n    this.fontEditor.addEventListener(InlineEditor.FontEditor.Events.FontEditorResized, this.boundResized);\n    this.swatchPopoverHelper.show(this.fontEditor, iconElement, this.onPopoverHidden.bind(this));\n    this.scrollerElement = iconElement.enclosingNodeOrSelfWithClass('style-panes-wrapper');\n    if (this.scrollerElement) {\n      this.scrollerElement.addEventListener('scroll', this.boundOnScroll, false);\n    }\n\n    this.parentPane.setEditingStyle(true);\n  }\n\n  private onScroll(): void {\n    this.swatchPopoverHelper.hide(true);\n  }\n\n  private onPopoverHidden(): void {\n    if (this.scrollerElement) {\n      this.scrollerElement.removeEventListener('scroll', this.boundOnScroll, false);\n    }\n    this.section.onpopulate();\n    if (this.fontEditor) {\n      this.fontEditor.removeEventListener(InlineEditor.FontEditor.Events.FontChanged, this.boundFontChanged);\n    }\n    this.fontEditor = null;\n    if (this.parentPane) {\n      this.parentPane.setEditingStyle(false);\n    }\n    this.section.resetToolbars();\n    this.section.onpopulate();\n  }\n}\n"]}