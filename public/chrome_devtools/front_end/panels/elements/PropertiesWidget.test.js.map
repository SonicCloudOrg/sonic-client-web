{"version":3,"file":"PropertiesWidget.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/elements/PropertiesWidget.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as Common from '../../core/common/common.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport {createTarget, stubNoopSettings} from '../../testing/EnvironmentHelpers.js';\nimport {\n  describeWithMockConnection,\n  setMockConnectionResponseHandler,\n} from '../../testing/MockConnection.js';\nimport * as ObjectUI from '../../ui/legacy/components/object_ui/object_ui.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport * as Elements from './elements.js';\n\nconst NODE_ID = 1 as Protocol.DOM.NodeId;\n\ndescribeWithMockConnection('PropertiesWidget', () => {\n  let target: SDK.Target.Target;\n  let view: Elements.PropertiesWidget.PropertiesWidget;\n\n  beforeEach(() => {\n    stubNoopSettings();\n    target = createTarget();\n    setMockConnectionResponseHandler('DOM.getDocument', () => ({root: {nodeId: NODE_ID}}));\n    setMockConnectionResponseHandler('DOM.getNodesForSubtreeByStyle', () => ({nodeIds: []}));\n  });\n\n  afterEach(() => {\n    view.detach();\n  });\n\n  const updatesUiOnEvent = <T extends keyof SDK.DOMModel.EventTypes>(\n      event: Platform.TypeScriptUtilities.NoUnion<T>, inScope: boolean) => async () => {\n    SDK.TargetManager.TargetManager.instance().setScopeTarget(inScope ? target : null);\n    const model = target.model(SDK.DOMModel.DOMModel);\n    assert.exists(model);\n\n    const node = new SDK.DOMModel.DOMNode(model);\n    sinon.stub(node, 'resolveToObject').withArgs('properties-sidebar-pane').resolves({\n      getAllProperties: () => ({}),\n      getOwnProperties: () => ({}),\n    } as unknown as SDK.RemoteObject.RemoteObject);\n    UI.Context.Context.instance().setFlavor(SDK.DOMModel.DOMNode, node);\n\n    view = new Elements.PropertiesWidget.PropertiesWidget(0);\n    view.markAsRoot();\n    view.show(document.body);\n    await new Promise<void>(resolve => setTimeout(resolve, 0));\n\n    const populateWithProperties =\n        sinon.spy(ObjectUI.ObjectPropertiesSection.ObjectPropertyTreeElement, 'populateWithProperties');\n    model.dispatchEventToListeners(\n        event, ...[node] as unknown as Common.EventTarget.EventPayloadToRestParameters<SDK.DOMModel.EventTypes, T>);\n    await new Promise<void>(resolve => setTimeout(resolve, 0));\n    assert.strictEqual(populateWithProperties.called, inScope);\n  };\n\n  it('updates UI on in scope attribute modified event', updatesUiOnEvent(SDK.DOMModel.Events.AttrModified, true));\n  it('does not update UI on out of scope attribute modified event',\n     updatesUiOnEvent(SDK.DOMModel.Events.AttrModified, false));\n  it('updates UI on in scope attribute removed event', updatesUiOnEvent(SDK.DOMModel.Events.AttrRemoved, true));\n  it('does not update UI on out of scope attribute removed event',\n     updatesUiOnEvent(SDK.DOMModel.Events.AttrModified, false));\n  it('updates UI on in scope charachter data modified event',\n     updatesUiOnEvent(SDK.DOMModel.Events.CharacterDataModified, true));\n  it('does not update UI on out of scope charachter data modified event',\n     updatesUiOnEvent(SDK.DOMModel.Events.CharacterDataModified, false));\n  it('updates UI on in scope child node count updated event',\n     updatesUiOnEvent(SDK.DOMModel.Events.ChildNodeCountUpdated, true));\n  it('does not update UI on out of scope child node count updated event',\n     updatesUiOnEvent(SDK.DOMModel.Events.ChildNodeCountUpdated, false));\n});\n"]}