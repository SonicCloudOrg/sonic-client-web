{"version":3,"file":"DOMLinkifier.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/elements/DOMLinkifier.test.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,GAAG,MAAM,uBAAuB,CAAC;AAG7C,OAAO,KAAK,QAAQ,MAAM,eAAe,CAAC;AAE1C,QAAQ,CAAC,cAAc,EAAE,GAAG,EAAE;IAC5B,QAAQ,CAAC,sCAAsC,EAAE,GAAG,EAAE;QACpD,IAAI,kBAAoE,CAAC;QACzE,UAAU,CAAC,GAAG,EAAE;YACd,kBAAkB,GAAG,KAAK,CAAC,kBAAkB,CAAC,GAAG,CAAC,QAAQ,CAAC,OAAO,EAAE;gBAClE,QAAQ,EAAE,IAAI,CAAC,YAAY;gBAC3B,UAAU,2EAA6C;gBACvD,SAAS,EAAE,yBAAyB;gBACpC,QAAQ,EAAE,yBAAyB;gBACnC,gBAAgB,EAAE,MAAM;gBACxB,cAAc,EAAE,IAAI;gBACpB,qBAAqB,EAAE,yBAAyB;aACjD,CAAC,CAAC;YACH,kBAAkB,CAAC,0BAA0B,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAC9D,CAAC,CAAC,CAAC;QACH,EAAE,CAAC,yCAAyC,EAAE,GAAG,EAAE;YACjD,MAAM,YAAY,GAAG,QAAQ,CAAC,YAAY,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAC,QAAQ,EAAE,IAAI,EAAC,CAAC,CAAC;YAChF,MAAM,EAAE,GAAG,YAAY,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC;YACpD,MAAM,WAAW,GAAI,EAAkB,CAAC,UAAU,EAAE,aAAa,CAAC,oBAAoB,CAAC,EAAE,WAAW,CAAC;YACrG,MAAM,CAAC,WAAW,CAAC,WAAW,EAAE,+BAA+B,CAAC,CAAC;QACnE,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,6DAA6D,EAAE,GAAG,EAAE;YACrE,MAAM,YAAY,GAAG,QAAQ,CAAC,YAAY,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAC,QAAQ,EAAE,IAAI,EAAC,CAAC,CAAC;YAEhF,MAAM,EAAE,GAAG,YAAY,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC;YACpD,MAAM,SAAS,GAAI,EAAkB,CAAC,UAAU,EAAE,aAAa,CAAC,kBAAkB,CAAC,CAAC;YACpF,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;QAC3B,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,kDAAkD,EAAE,GAAG,EAAE;QAC1D,MAAM,YAAY,GAAG,QAAQ,CAAC,YAAY,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAC,QAAQ,EAAE,IAAI,EAAC,CAAC,CAAC;QAChF,MAAM,IAAI,GAAG,KAAK,CAAC,kBAAkB,CAAC,GAAG,CAAC,QAAQ,CAAC,OAAO,EAAE;YAC1D,QAAQ,EAAE,IAAI,CAAC,YAAY;SAC5B,CAAC,CAAC;QAEH,MAAM,EAAE,GAAG,YAAY,CAAC,OAAO,CAAC,IAAI,EAAE;YACpC,WAAW,EAAE,gBAAgB;SAC9B,CAAY,CAAC;QACd,MAAM,CAAC,WAAW,CAAC,EAAE,CAAC,UAAU,EAAE,aAAa,CAAC,QAAQ,CAAC,EAAE,WAAW,EAAE,gBAAgB,CAAC,CAAC;IAC5F,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\n\nimport * as Elements from './elements.js';\n\ndescribe('DOMLinkifier', () => {\n  describe('linking view transition pseudo nodes', () => {\n    let viewTransitionNode: sinon.SinonStubbedInstance<SDK.DOMModel.DOMNode>;\n    beforeEach(() => {\n      viewTransitionNode = sinon.createStubInstance(SDK.DOMModel.DOMNode, {\n        nodeType: Node.ELEMENT_NODE,\n        pseudoType: Protocol.DOM.PseudoType.ViewTransitionGroup,\n        localName: '::view-transition-group',\n        nodeName: '::view-transition-group',\n        pseudoIdentifier: 'root',\n        shadowRootType: null,\n        nodeNameInCorrectCase: '::view-transition-group',\n      });\n      viewTransitionNode.isViewTransitionPseudoNode.returns(true);\n    });\n    it('includes pseudo identifier in the label', () => {\n      const domLinkifier = Elements.DOMLinkifier.Linkifier.instance({forceNew: true});\n      const el = domLinkifier.linkify(viewTransitionNode);\n      const pseudoLabel = (el as HTMLElement).shadowRoot?.querySelector('.node-label-pseudo')?.textContent;\n      assert.strictEqual(pseudoLabel, '::view-transition-group(root)');\n    });\n\n    it('does not include ancestor name for a view transition pseudo', () => {\n      const domLinkifier = Elements.DOMLinkifier.Linkifier.instance({forceNew: true});\n\n      const el = domLinkifier.linkify(viewTransitionNode);\n      const nodeLabel = (el as HTMLElement).shadowRoot?.querySelector('.node-label-name');\n      assert.isNull(nodeLabel);\n    });\n  });\n\n  it('can linkify DOM node with text content correctly', () => {\n    const domLinkifier = Elements.DOMLinkifier.Linkifier.instance({forceNew: true});\n    const node = sinon.createStubInstance(SDK.DOMModel.DOMNode, {\n      nodeType: Node.ELEMENT_NODE,\n    });\n\n    const el = domLinkifier.linkify(node, {\n      textContent: 'sample content',\n    }) as Element;\n    assert.strictEqual(el.shadowRoot?.querySelector('button')?.textContent, 'sample content');\n  });\n});\n"]}