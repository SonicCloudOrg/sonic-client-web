{"version":3,"file":"TopLayerContainer.js","sourceRoot":"","sources":["../../../../../../front_end/panels/elements/TopLayerContainer.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as IconButton from '../../ui/components/icon_button/icon_button.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport * as ElementsComponents from './components/components.js';\nimport * as ElementsTreeOutline from './ElementsTreeOutline.js';\n\nimport {type ElementsTreeElement} from './ElementsTreeElement.js';\n\nconst UIStrings = {\n  /**\n   *@description Link text content in Elements Tree Outline of the Elements panel. When clicked, it \"reveals\" the true location of an element.\n   */\n  reveal: 'reveal',\n};\n\nconst str_ = i18n.i18n.registerUIStrings('panels/elements/TopLayerContainer.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class TopLayerContainer extends UI.TreeOutline.TreeElement {\n  tree: ElementsTreeOutline.ElementsTreeOutline;\n  document: SDK.DOMModel.DOMDocument;\n  currentTopLayerDOMNodes: Set<SDK.DOMModel.DOMNode> = new Set();\n  topLayerUpdateThrottler: Common.Throttler.Throttler;\n\n  constructor(tree: ElementsTreeOutline.ElementsTreeOutline, document: SDK.DOMModel.DOMDocument) {\n    super('#top-layer');\n    this.tree = tree;\n    this.document = document;\n    this.topLayerUpdateThrottler = new Common.Throttler.Throttler(1);\n  }\n\n  async throttledUpdateTopLayerElements(): Promise<void> {\n    await this.topLayerUpdateThrottler.schedule(() => this.updateTopLayerElements());\n  }\n\n  async updateTopLayerElements(): Promise<void> {\n    this.removeChildren();\n    this.removeCurrentTopLayerElementsAdorners();\n    this.currentTopLayerDOMNodes = new Set();\n    const domModel = this.document.domModel();\n    const newTopLayerElementsIDs = await domModel.getTopLayerElements();\n    if (!newTopLayerElementsIDs || newTopLayerElementsIDs.length === 0) {\n      return;\n    }\n\n    let topLayerElementIndex = 0;\n    for (let i = 0; i < newTopLayerElementsIDs.length; i++) {\n      const topLayerDOMNode = domModel.idToDOMNode.get(newTopLayerElementsIDs[i]);\n      if (!topLayerDOMNode || topLayerDOMNode.ownerDocument !== this.document) {\n        continue;\n      }\n\n      if (topLayerDOMNode.nodeName() !== '::backdrop') {\n        const topLayerElementShortcut = new SDK.DOMModel.DOMNodeShortcut(\n            domModel.target(), topLayerDOMNode.backendNodeId(), 0, topLayerDOMNode.nodeName());\n        const topLayerElementRepresentation = new ElementsTreeOutline.ShortcutTreeElement(topLayerElementShortcut);\n        this.appendChild(topLayerElementRepresentation);\n        this.currentTopLayerDOMNodes.add(topLayerDOMNode);\n\n        // Add the element's backdrop if previous top layer element is a backdrop.\n        const previousTopLayerDOMNode = (i > 0) ? domModel.idToDOMNode.get(newTopLayerElementsIDs[i - 1]) : undefined;\n        if (previousTopLayerDOMNode && previousTopLayerDOMNode.nodeName() === '::backdrop') {\n          const backdropElementShortcut = new SDK.DOMModel.DOMNodeShortcut(\n              domModel.target(), previousTopLayerDOMNode.backendNodeId(), 0, previousTopLayerDOMNode.nodeName());\n          const backdropElementRepresentation = new ElementsTreeOutline.ShortcutTreeElement(backdropElementShortcut);\n          topLayerElementRepresentation.appendChild(backdropElementRepresentation);\n        }\n\n        // TODO(changhaohan): store not-yet-inserted DOMNodes and adorn them when inserted.\n        const topLayerTreeElement = this.tree.treeElementByNode.get(topLayerDOMNode);\n        if (topLayerTreeElement) {\n          this.addTopLayerAdorner(topLayerTreeElement, topLayerElementRepresentation, ++topLayerElementIndex);\n        }\n      }\n    }\n  }\n\n  private removeCurrentTopLayerElementsAdorners(): void {\n    for (const node of this.currentTopLayerDOMNodes) {\n      const topLayerTreeElement = this.tree.treeElementByNode.get(node);\n      // TODO(changhaohan): remove only top layer adorner.\n      topLayerTreeElement?.removeAllAdorners();\n    }\n  }\n\n  private addTopLayerAdorner(\n      element: ElementsTreeElement, topLayerElementRepresentation: ElementsTreeOutline.ShortcutTreeElement,\n      topLayerElementIndex: number): void {\n    const config = ElementsComponents.AdornerManager.getRegisteredAdorner(\n        ElementsComponents.AdornerManager.RegisteredAdorners.TOP_LAYER);\n    const adornerContent = document.createElement('span');\n    adornerContent.classList.add('adorner-with-icon');\n    const linkIcon = new IconButton.Icon.Icon();\n    linkIcon.name = 'select-element';\n    const adornerText = document.createElement('span');\n    adornerText.textContent = `top-layer (${topLayerElementIndex})`;\n    adornerContent.append(linkIcon);\n    adornerContent.append(adornerText);\n    const adorner = element?.adorn(config, adornerContent);\n    if (adorner) {\n      const onClick = ((() => {\n                         topLayerElementRepresentation.revealAndSelect();\n                       }) as EventListener);\n      adorner.addInteraction(onClick, {\n        isToggle: false,\n        shouldPropagateOnKeydown: false,\n        ariaLabelDefault: i18nString(UIStrings.reveal),\n        ariaLabelActive: i18nString(UIStrings.reveal),\n      });\n      adorner.addEventListener('mousedown', e => e.consume(), false);\n    }\n  }\n}\n"]}