{"version":3,"file":"ElementsTreeExpandButton.test.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/elements/components/ElementsTreeExpandButton.test.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,EACL,kBAAkB,EAClB,oBAAoB,GACrB,MAAM,gCAAgC,CAAC;AACxC,OAAO,EAAC,kBAAkB,EAAC,MAAM,wCAAwC,CAAC;AAC1E,OAAO,KAAK,WAAW,MAAM,iEAAiE,CAAC;AAE/F,OAAO,KAAK,kBAAkB,MAAM,iBAAiB,CAAC;AAEtD,MAAM,WAAW,GAAG,WAAW,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,QAAQ,EAAE,CAAC;AAE/E,kBAAkB,CAAC,6BAA6B,EAAE,GAAG,EAAE;IACrD,EAAE,CAAC,4CAA4C,EAAE,KAAK,IAAI,EAAE;QAC1D,MAAM,SAAS,GAAG,IAAI,kBAAkB,CAAC,wBAAwB,CAAC,wBAAwB,EAAE,CAAC;QAE7F,IAAI,MAAM,GAAG,CAAC,CAAC;QACf,MAAM,YAAY,GAAG,GAAG,EAAE,CAAC,MAAM,EAAE,CAAC;QACpC,SAAS,CAAC,IAAI,GAAG;YACf,YAAY,EAAE,YAAY;SAC3B,CAAC;QAEF,oBAAoB,CAAC,SAAS,CAAC,CAAC;QAChC,MAAM,WAAW,CAAC,IAAI,EAAE,CAAC;QAEzB,MAAM,MAAM,GAAG,SAAS,CAAC,UAAW,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC;QACrE,MAAM,CAAC,UAAU,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;QAEvC,kBAAkB,CAAC,MAAM,CAAC,CAAC;QAC3B,MAAM,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,gEAAgE,EAAE,KAAK,IAAI,EAAE;QAC9E,MAAM,SAAS,GAAG,IAAI,kBAAkB,CAAC,wBAAwB,CAAC,wBAAwB,EAAE,CAAC;QAE7F,MAAM,IAAI,GAAG,GAAG,EAAE,GAAE,CAAC,CAAC;QACtB,SAAS,CAAC,IAAI,GAAG;YACf,YAAY,EAAE,IAAI;SACnB,CAAC;QAEF,oBAAoB,CAAC,SAAS,CAAC,CAAC;QAChC,MAAM,WAAW,CAAC,IAAI,EAAE,CAAC;QAEzB,MAAM,MAAM,GAAG,SAAS,CAAC,UAAW,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC;QACrE,MAAM,CAAC,UAAU,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;QAEvC,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;IAC3C,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {\n  dispatchClickEvent,\n  renderElementIntoDOM,\n} from '../../../testing/DOMHelpers.js';\nimport {describeWithLocale} from '../../../testing/EnvironmentHelpers.js';\nimport * as Coordinator from '../../../ui/components/render_coordinator/render_coordinator.js';\n\nimport * as ElementsComponents from './components.js';\n\nconst coordinator = Coordinator.RenderCoordinator.RenderCoordinator.instance();\n\ndescribeWithLocale('Elements tree expand button', () => {\n  it('render and click handler trigger correctly', async () => {\n    const component = new ElementsComponents.ElementsTreeExpandButton.ElementsTreeExpandButton();\n\n    let clicks = 0;\n    const clickHandler = () => clicks++;\n    component.data = {\n      clickHandler: clickHandler,\n    };\n\n    renderElementIntoDOM(component);\n    await coordinator.done();\n\n    const button = component.shadowRoot!.querySelector('.expand-button');\n    assert.instanceOf(button, HTMLElement);\n\n    dispatchClickEvent(button);\n    assert.strictEqual(clicks, 1);\n  });\n\n  it('it should only contains html tags, no other visible characters', async () => {\n    const component = new ElementsComponents.ElementsTreeExpandButton.ElementsTreeExpandButton();\n\n    const noop = () => {};\n    component.data = {\n      clickHandler: noop,\n    };\n\n    renderElementIntoDOM(component);\n    await coordinator.done();\n\n    const button = component.shadowRoot!.querySelector('.expand-button');\n    assert.instanceOf(button, HTMLElement);\n\n    assert.strictEqual(button.innerText, '');\n  });\n});\n"]}