{"version":3,"file":"CSSQuery.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/elements/components/CSSQuery.ts"],"names":[],"mappings":"AAAA,gEAAgE;AAChE,yEAAyE;AACzE,6BAA6B;AAE7B,sDAAsD;AACtD,OAAO,qBAAqB,MAAM,2CAA2C,CAAC;AAC9E,OAAO,KAAK,OAAO,MAAM,kCAAkC,CAAC;AAC5D,OAAO,KAAK,aAAa,MAAM,8CAA8C,CAAC;AAE9E,OAAO,cAAc,MAAM,mBAAmB,CAAC;AAE/C,MAAM,EAAC,MAAM,EAAE,IAAI,EAAC,GAAG,OAAO,CAAC;AAU/B,MAAM,OAAO,QAAS,SAAQ,WAAW;IACvC,MAAM,CAAU,UAAU,GAAG,OAAO,CAAC,OAAO,CAAA,oBAAoB,CAAC;IAExD,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC,CAAC;IACrD,YAAY,GAAW,EAAE,CAAC;IAC1B,UAAU,CAAU;IACpB,UAAU,GAAW,EAAE,CAAC;IACxB,iBAAiB,CAA0B;IAC3C,aAAa,CAAU;IAEvB,IAAI,IAAI,CAAC,IAAkB;QACzB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC;QACrC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC;QACjC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC;QACjC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,gBAAgB,CAAC;QAC/C,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC;QACvC,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,iBAAiB;QACf,IAAI,CAAC,OAAO,CAAC,kBAAkB,GAAG;YAChC,cAAc;YACd,qBAAqB;SACtB,CAAC;IACJ,CAAC;IAED,OAAO;QACL,MAAM,YAAY,GAAG,OAAO,CAAC,UAAU,CAAC,QAAQ,CAAC;YAC/C,KAAK,EAAE,IAAI;YACX,QAAQ,EAAE,OAAO,CAAC,IAAI,CAAC,iBAAiB,CAAC;SAC1C,CAAC,CAAC;QAEH,qDAAqD;QACrD,mBAAmB;QACnB,MAAM,SAAS,GAAG,IAAI,CAAA;wCACc,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,UAAU;KAC5E,CAAC;QAEF,MAAM,CAAC,IAAI,CAAA;mBACI,YAAY,UAAU,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC,EAAC,KAAK,EAAC,IAAI,EAAE,MAAM,EAAE,IAAI,EAAC,CAAC;qCACrF,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAA,SAAS,IAAI,CAAC,YAAY,GAAG,GAAG,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAA,SAAS,IAAI,CAAC,UAAU,GAAG,GAAG,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,GAAG,SAAS;;KAEjN,EAAE,IAAI,CAAC,OAAO,EAAE;YACf,IAAI,EAAE,IAAI;SACX,CAAC,CAAC;QACH,kBAAkB;IACpB,CAAC;;AAGH,cAAc,CAAC,MAAM,CAAC,oBAAoB,EAAE,QAAQ,CAAC,CAAC","sourcesContent":["// Copyright (c) 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n// eslint-disable-next-line rulesdir/es_modules_import\nimport inspectorCommonStyles from '../../../ui/legacy/inspectorCommon.css.js';\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\nimport * as VisualLogging from '../../../ui/visual_logging/visual_logging.js';\n\nimport cssQueryStyles from './cssQuery.css.js';\n\nconst {render, html} = LitHtml;\n\nexport interface CSSQueryData {\n  queryPrefix: string;\n  queryName?: string;\n  queryText: string;\n  onQueryTextClick?: (event: Event) => void;\n  jslogContext: string;\n}\n\nexport class CSSQuery extends HTMLElement {\n  static readonly litTagName = LitHtml.literal`devtools-css-query`;\n\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  #queryPrefix: string = '';\n  #queryName?: string;\n  #queryText: string = '';\n  #onQueryTextClick?: (event: Event) => void;\n  #jslogContext?: string;\n\n  set data(data: CSSQueryData) {\n    this.#queryPrefix = data.queryPrefix;\n    this.#queryName = data.queryName;\n    this.#queryText = data.queryText;\n    this.#onQueryTextClick = data.onQueryTextClick;\n    this.#jslogContext = data.jslogContext;\n    this.#render();\n  }\n\n  connectedCallback(): void {\n    this.#shadow.adoptedStyleSheets = [\n      cssQueryStyles,\n      inspectorCommonStyles,\n    ];\n  }\n\n  #render(): void {\n    const queryClasses = LitHtml.Directives.classMap({\n      query: true,\n      editable: Boolean(this.#onQueryTextClick),\n    });\n\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    const queryText = html`\n      <span class=\"query-text\" @click=${this.#onQueryTextClick}>${this.#queryText}</span>\n    `;\n\n    render(html`\n      <div class=${queryClasses} jslog=${VisualLogging.cssRuleHeader(this.#jslogContext).track({click:true, change: true})}>\n        <slot name=\"indent\"></slot>${this.#queryPrefix ? html`<span>${this.#queryPrefix + ' '}</span>` : LitHtml.nothing}${this.#queryName ? html`<span>${this.#queryName + ' '}</span>` : LitHtml.nothing}${queryText} {\n      </div>\n    `, this.#shadow, {\n      host: this,\n    });\n    // clang-format on\n  }\n}\n\ncustomElements.define('devtools-css-query', CSSQuery);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-css-query': CSSQuery;\n  }\n}\n"]}