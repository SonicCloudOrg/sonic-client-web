{"version":3,"file":"CSSHintDetailsView.test.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/elements/components/CSSHintDetailsView.test.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,EAAC,oBAAoB,EAAC,MAAM,gCAAgC,CAAC;AACpE,OAAO,EAAC,uBAAuB,EAAC,MAAM,wCAAwC,CAAC;AAC/E,OAAO,KAAK,QAAQ,MAAM,gBAAgB,CAAC;AAE3C,OAAO,KAAK,kBAAkB,MAAM,iBAAiB,CAAC;AAEtD,uBAAuB,CAAC,oBAAoB,EAAE,GAAG,EAAE;IACjD,EAAE,CAAC,uBAAuB,EAAE,KAAK,IAAI,EAAE;QACrC,MAAM,WAAW,GAAG,IAAI,QAAQ,CAAC,gBAAgB,CAAC,IAAI,CAClD,yNAAyN,EACzN,qJAAqJ,EACrJ,eAAe,CAClB,CAAC;QAEF,MAAM,cAAc,GAAG,IAAI,kBAAkB,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,WAAW,CAAC,CAAC;QACjG,oBAAoB,CAAC,cAAc,CAAC,CAAC;QAErC,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,UAAW,CAAC,aAAa,CAAC,oBAAoB,CAAC,CAAC,CAAC;QACjF,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,UAAW,CAAC,aAAa,CAAC,0BAA0B,CAAC,CAAC,CAAC;QACvF,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,UAAW,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC,CAAC;IAC5E,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,4BAA4B,EAAE,KAAK,IAAI,EAAE;QAC1C,MAAM,IAAI,GAAG,IAAI,QAAQ,CAAC,gBAAgB,CAAC,IAAI,CAC3C,yNAAyN,EACzN,qJAAqJ,CACxJ,CAAC;QAEF,MAAM,cAAc,GAAG,IAAI,kBAAkB,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;QAC1F,oBAAoB,CAAC,cAAc,CAAC,CAAC;QAErC,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,UAAW,CAAC,aAAa,CAAC,oBAAoB,CAAC,CAAC,CAAC;QACjF,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,UAAW,CAAC,aAAa,CAAC,0BAA0B,CAAC,CAAC,CAAC;QACvF,MAAM,CAAC,MAAM,CAAC,cAAc,CAAC,UAAW,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC,CAAC;IACzE,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {renderElementIntoDOM} from '../../../testing/DOMHelpers.js';\nimport {describeWithEnvironment} from '../../../testing/EnvironmentHelpers.js';\nimport * as Elements from '../elements.js';\n\nimport * as ElementsComponents from './components.js';\n\ndescribeWithEnvironment('CSSHintDetailsView', () => {\n  it('renders every section', async () => {\n    const hintMessage = new Elements.CSSRuleValidator.Hint(\n        'This element has <code class=\"unbreakable-text\"><span class=\"property\">flex-wrap</span>: nowrap</code> rule, therefore <code class=\"unbreakable-text\"><span class=\"property\">align-content</span></code> has no effect.',\n        'For this property to work, please remove or change the value of <code class=\"unbreakable-text\"><span class=\"property\">flex-wrap</span></code> rule.',\n        'align-content',\n    );\n\n    const popupComponent = new ElementsComponents.CSSHintDetailsView.CSSHintDetailsView(hintMessage);\n    renderElementIntoDOM(popupComponent);\n\n    assert.isNotNull(popupComponent.shadowRoot!.querySelector('.hint-popup-reason'));\n    assert.isNotNull(popupComponent.shadowRoot!.querySelector('.hint-popup-possible-fix'));\n    assert.isNotNull(popupComponent.shadowRoot!.querySelector('#learn-more'));\n  });\n\n  it('does not render learn more', async () => {\n    const hint = new Elements.CSSRuleValidator.Hint(\n        'This element has <code class=\"unbreakable-text\"><span class=\"property\">flex-wrap</span>: nowrap</code> rule, therefore <code class=\"unbreakable-text\"><span class=\"property\">align-content</span></code> has no effect.',\n        'For this property to work, please remove or change the value of <code class=\"unbreakable-text\"><span class=\"property\">flex-wrap</span></code> rule.',\n    );\n\n    const popupComponent = new ElementsComponents.CSSHintDetailsView.CSSHintDetailsView(hint);\n    renderElementIntoDOM(popupComponent);\n\n    assert.isNotNull(popupComponent.shadowRoot!.querySelector('.hint-popup-reason'));\n    assert.isNotNull(popupComponent.shadowRoot!.querySelector('.hint-popup-possible-fix'));\n    assert.isNull(popupComponent.shadowRoot!.querySelector('#learn-more'));\n  });\n});\n"]}