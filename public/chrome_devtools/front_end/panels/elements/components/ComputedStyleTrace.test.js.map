{"version":3,"file":"ComputedStyleTrace.test.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/elements/components/ComputedStyleTrace.test.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,EAAC,oBAAoB,EAAC,MAAM,gCAAgC,CAAC;AAEpE,OAAO,KAAK,kBAAkB,MAAM,iBAAiB,CAAC;AAEtD,QAAQ,CAAC,oBAAoB,EAAE,GAAG,EAAE;IAClC,EAAE,CAAC,+CAA+C,EAAE,GAAG,EAAE;QACvD,MAAM,SAAS,GAAG,IAAI,kBAAkB,CAAC,kBAAkB,CAAC,kBAAkB,EAAE,CAAC;QACjF,oBAAoB,CAAC,SAAS,CAAC,CAAC;QAChC,MAAM,QAAQ,GAAG,KAAK,CAAC;QACvB,MAAM,IAAI,GAAG;YACX,QAAQ;YACR,MAAM,EAAE,IAAI;YACZ,kBAAkB,EAAE,GAAG,EAAE,GAAE,CAAC;SAC7B,CAAC;QACF,SAAS,CAAC,IAAI,GAAG,IAAI,CAAC;QAEtB,MAAM,gBAAgB,GAAG,SAAS,CAAC,UAAW,CAAC,aAAa,CAAC,iBAAiB,CAAC,CAAC;QAChF,IAAI,CAAC,gBAAgB,EAAE,CAAC;YACtB,MAAM,CAAC,IAAI,CAAC,2BAA2B,CAAC,CAAC;YACzC,OAAO;QACT,CAAC;QACD,MAAM,CAAC,WAAW,CAAC,gBAAgB,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;IAC7D,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,2CAA2C,EAAE,GAAG,EAAE;QACnD,MAAM,SAAS,GAAG,IAAI,kBAAkB,CAAC,kBAAkB,CAAC,kBAAkB,EAAE,CAAC;QACjF,oBAAoB,CAAC,SAAS,CAAC,CAAC;QAChC,IAAI,YAAY,GAAG,CAAC,CAAC;QACrB,MAAM,IAAI,GAAG;YACX,QAAQ,EAAE,KAAK;YACf,MAAM,EAAE,IAAI;YACZ,kBAAkB,EAAE,GAAG,EAAE;gBACvB,YAAY,EAAE,CAAC;YACjB,CAAC;SACF,CAAC;QACF,SAAS,CAAC,IAAI,GAAG,IAAI,CAAC;QAEtB,MAAM,IAAI,GAAG,SAAS,CAAC,UAAW,CAAC,aAAa,CAAc,OAAO,CAAC,CAAC;QACvE,IAAI,CAAC,IAAI,EAAE,CAAC;YACV,MAAM,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;YAClC,OAAO;QACT,CAAC;QACD,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,MAAM,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC,EAAE,+BAA+B,CAAC,CAAC;QAErE,MAAM,UAAU,GAAG,SAAS,CAAC,UAAW,CAAC,aAAa,CAAc,0BAA0B,CAAC,CAAC;QAChG,IAAI,CAAC,UAAU,EAAE,CAAC;YAChB,MAAM,CAAC,IAAI,CAAC,mCAAmC,CAAC,CAAC;YACjD,OAAO;QACT,CAAC;QACD,UAAU,CAAC,KAAK,EAAE,CAAC;QACnB,MAAM,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC,EAAE,iCAAiC,CAAC,CAAC;IACzE,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {renderElementIntoDOM} from '../../../testing/DOMHelpers.js';\n\nimport * as ElementsComponents from './components.js';\n\ndescribe('ComputedStyleTrace', () => {\n  it('renders ComputedStyleTrace selector correctly', () => {\n    const component = new ElementsComponents.ComputedStyleTrace.ComputedStyleTrace();\n    renderElementIntoDOM(component);\n    const selector = '#id';\n    const data = {\n      selector,\n      active: true,\n      onNavigateToSource: () => {},\n    };\n    component.data = data;\n\n    const renderedSelector = component.shadowRoot!.querySelector('.trace-selector');\n    if (!renderedSelector) {\n      assert.fail('selector was not rendered');\n      return;\n    }\n    assert.strictEqual(renderedSelector.textContent, selector);\n  });\n\n  it('has a clickable goto icon and trace value', () => {\n    const component = new ElementsComponents.ComputedStyleTrace.ComputedStyleTrace();\n    renderElementIntoDOM(component);\n    let clickCounter = 0;\n    const data = {\n      selector: '#id',\n      active: true,\n      onNavigateToSource: () => {\n        clickCounter++;\n      },\n    };\n    component.data = data;\n\n    const goto = component.shadowRoot!.querySelector<HTMLElement>('.goto');\n    if (!goto) {\n      assert.fail('goto did not exist');\n      return;\n    }\n    goto.click();\n    assert.strictEqual(clickCounter, 1, 'goto icon should be clickable');\n\n    const traceValue = component.shadowRoot!.querySelector<HTMLElement>('slot[name=\"trace-value\"]');\n    if (!traceValue) {\n      assert.fail('trace value slot was not rendered');\n      return;\n    }\n    traceValue.click();\n    assert.strictEqual(clickCounter, 2, 'trace value should be clickable');\n  });\n});\n"]}