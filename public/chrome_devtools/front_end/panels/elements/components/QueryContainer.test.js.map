{"version":3,"file":"QueryContainer.test.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/elements/components/QueryContainer.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as SDK from '../../../core/sdk/sdk.js';\nimport {assertNodeTextContent, renderElementIntoDOM} from '../../../testing/DOMHelpers.js';\nimport * as NodeText from '../../../ui/components/node_text/node_text.js';\n\nimport * as ElementsComponents from './components.js';\n\nconst nodeAttributes = new Map([\n  ['id', 'container'],\n  ['class', 'class-1 class-2'],\n]);\n\nconst FAKE_LEGACY_SDK_DOM_NODE = {} as unknown as SDK.DOMModel.DOMNode;\nconst containerTemplate: ElementsComponents.Helper.DOMNode = {\n  parentNode: null,\n  nodeType: Node.ELEMENT_NODE,\n  id: 1,\n  pseudoType: '',\n  shadowRootType: '',\n  nodeName: 'body',\n  nodeNameNicelyCased: 'body',\n  legacyDomNode: FAKE_LEGACY_SDK_DOM_NODE,\n  highlightNode: () => {},\n  clearHighlight: () => {},\n  getAttribute: x => nodeAttributes.get(x) || '',\n};\n\nconst assertContainerContent = (container: HTMLElement, expectedContent: string) => {\n  const nodeText =\n      container.shadowRoot!.querySelector<NodeText.NodeText.NodeText>(`${NodeText.NodeText.NodeText.litTagName.value}`);\n  if (!nodeText || !nodeText.shadowRoot) {\n    assert.fail('node text element and its shadowRoot should exist');\n    return;\n  }\n\n  assertNodeTextContent(nodeText, expectedContent);\n};\n\ndescribe('QueryContainer', () => {\n  it('renders an unnamed query container correctly', () => {\n    const component = new ElementsComponents.QueryContainer.QueryContainer();\n    renderElementIntoDOM(component);\n\n    const clickListener = sinon.spy();\n    component.data = {\n      container: containerTemplate,\n      onContainerLinkClick: clickListener,\n    };\n\n    assertContainerContent(component, 'body#container.class-1.class-2');\n    component.shadowRoot?.querySelector('a')?.click();\n    assert.strictEqual(clickListener.callCount, 1, 'container link click listener should be triggered by clicking');\n  });\n\n  it('renders a named query container correctly', () => {\n    const component = new ElementsComponents.QueryContainer.QueryContainer();\n    renderElementIntoDOM(component);\n\n    const clickListener = sinon.spy();\n    const onHighlightNode = sinon.spy();\n    const onClearHighlight = sinon.spy();\n    component.data = {\n      container: {\n        ...containerTemplate,\n        highlightNode: onHighlightNode,\n        clearHighlight: onClearHighlight,\n      },\n      queryName: 'named-container',\n      onContainerLinkClick: clickListener,\n    };\n\n    assertContainerContent(component, 'named-container');\n    const containerLink = component.shadowRoot?.querySelector('a');\n    if (!containerLink) {\n      assert.fail('container link element should exist');\n      return;\n    }\n\n    containerLink.click();\n    assert.strictEqual(clickListener.callCount, 1, 'container link click listener should be triggered by clicking');\n\n    containerLink.dispatchEvent(new Event('mouseenter'));\n    assert.strictEqual(onHighlightNode.callCount, 1, 'onHighlightNode callback should be triggered by mouseenter');\n\n    containerLink.dispatchEvent(new Event('mouseleave'));\n    assert.strictEqual(onHighlightNode.callCount, 1, 'onClearHighlight callback should be triggered by mouseleave');\n  });\n\n  it('dispatches QueriedSizeRequestedEvent when hovered correctly', () => {\n    const component = new ElementsComponents.QueryContainer.QueryContainer();\n    renderElementIntoDOM(component);\n\n    const queriedSizeRequestedListener = sinon.spy();\n    component.data = {\n      container: containerTemplate,\n      onContainerLinkClick: () => {},\n    };\n    component.addEventListener('queriedsizerequested', queriedSizeRequestedListener);\n\n    component.shadowRoot!.querySelector('a')?.dispatchEvent(new Event('mouseenter'));\n    assert.strictEqual(\n        queriedSizeRequestedListener.callCount, 1, 'queried size requested listener should be triggered by hovering');\n  });\n\n  it('renders queried size details correctly', () => {\n    const component = new ElementsComponents.QueryContainer.QueryContainer();\n    renderElementIntoDOM(component);\n\n    component.data = {\n      container: containerTemplate,\n      onContainerLinkClick: () => {},\n    };\n\n    component.shadowRoot!.querySelector('a')?.dispatchEvent(new Event('mouseenter'));\n\n    component.updateContainerQueriedSizeDetails({\n      physicalAxis: SDK.CSSContainerQuery.PhysicalAxis.None,\n      queryAxis: SDK.CSSContainerQuery.QueryAxis.None,\n      width: '500px',\n      height: '300px',\n    });\n    const nonExistentDetailsElement = component.shadowRoot!.querySelector<HTMLElement>('.queried-size-details');\n    assert.strictEqual(nonExistentDetailsElement, null, 'query details without any axis should not be rendered');\n\n    component.updateContainerQueriedSizeDetails({\n      physicalAxis: SDK.CSSContainerQuery.PhysicalAxis.Horizontal,\n      queryAxis: SDK.CSSContainerQuery.QueryAxis.Inline,\n      width: '500px',\n    });\n    const detailsElement = component.shadowRoot!.querySelector<HTMLElement>('.queried-size-details');\n    assert.strictEqual(detailsElement?.innerText, '(inline-size) 500px', 'queried size details are not correct');\n\n    component.updateContainerQueriedSizeDetails({\n      physicalAxis: SDK.CSSContainerQuery.PhysicalAxis.Horizontal,\n      queryAxis: SDK.CSSContainerQuery.QueryAxis.Block,\n      width: '200px',\n    });\n    assert.strictEqual(detailsElement?.innerText, '(block-size) 200px', 'queried size details are not correct');\n\n    component.updateContainerQueriedSizeDetails({\n      physicalAxis: SDK.CSSContainerQuery.PhysicalAxis.Both,\n      queryAxis: SDK.CSSContainerQuery.QueryAxis.Both,\n      width: '500px',\n      height: '300px',\n    });\n    assert.strictEqual(\n        detailsElement?.innerText, '(size) width: 500px height: 300px', 'queried size details are not correct');\n  });\n});\n"]}