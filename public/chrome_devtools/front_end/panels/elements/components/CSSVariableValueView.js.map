{"version":3,"file":"CSSVariableValueView.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/elements/components/CSSVariableValueView.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2023 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport type * as SDK from '../../../core/sdk/sdk.js';\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\n\nimport cssVariableValueViewStyles from './cssVariableValueView.css.js';\n\nconst UIStrings = {\n  /**\n   *@description Text for a link from custom property to its defining registration\n   */\n  registeredPropertyLinkTitle: 'View registered property',\n  /**\n   *@description Error message for a property value that failed to parse because it had an incorrect type. The message\n   * is shown in a popover when hovering the property value. The `type` placeholder will be rendered as an HTML element\n   * to apply some styling (color and monospace font)\n   *@example {<color>} type\n   */\n  invalidPropertyValue: 'Invalid property value, expected type {type}',\n  /**\n   *@description Text displayed in a tooltip shown when hovering over a var() CSS function in the Styles pane when the custom property in this function does not exist. The parameter is the name of the property.\n   *@example {--my-custom-property-name} PH1\n   */\n  sIsNotDefined: '{PH1} is not defined',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/elements/components/CSSVariableValueView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nconst i18nTemplate = LitHtml.i18nTemplate.bind(undefined, str_);\n\nconst {render, html} = LitHtml;\n\nexport interface RegisteredPropertyDetails {\n  registration: SDK.CSSMatchedStyles.CSSRegisteredProperty;\n  goToDefinition: () => void;\n}\n\nfunction getLinkSection(details: RegisteredPropertyDetails): LitHtml.TemplateResult {\n  return html`<div class=\"registered-property-links\">\n            <span role=\"button\" @click=${details?.goToDefinition} class=\"clickable underlined unbreakable-text\"}>\n              ${i18nString(UIStrings.registeredPropertyLinkTitle)}\n            </span>\n          </div>`;\n}\n\nexport class CSSVariableParserError extends HTMLElement {\n  static readonly litTagName = LitHtml.literal`devtools-css-variable-parser-error`;\n  readonly #shadow = this.attachShadow({mode: 'open'});\n\n  constructor(details: RegisteredPropertyDetails) {\n    super();\n    this.#shadow.adoptedStyleSheets = [cssVariableValueViewStyles];\n    this.#render(details);\n  }\n\n  #render(details: RegisteredPropertyDetails): void {\n    const type = html`<span class=\"monospace css-property\">${details.registration.syntax()}</span>`;\n    render(\n        html`\n      <div class=\"variable-value-popup-wrapper\">\n        ${i18nTemplate(UIStrings.invalidPropertyValue, {type})}\n        ${getLinkSection(details)}\n      </div>`,\n        this.#shadow, {\n          host: this,\n        });\n  }\n}\n\nexport class CSSVariableValueView extends HTMLElement {\n  static readonly litTagName = LitHtml.literal`devtools-css-variable-value-view`;\n  readonly #shadow = this.attachShadow({mode: 'open'});\n  readonly variableName: string;\n  readonly value: string|undefined;\n  readonly details: RegisteredPropertyDetails|undefined;\n\n  constructor({\n    variableName,\n    value,\n    details,\n  }: {\n    variableName: string,\n    value: string|undefined,\n    details?: RegisteredPropertyDetails,\n  }) {\n    super();\n    this.#shadow.adoptedStyleSheets = [cssVariableValueViewStyles];\n    this.variableName = variableName;\n    this.value = value;\n    this.details = details;\n    this.#render();\n  }\n\n  #render(): void {\n    const initialValue = this.details?.registration.initialValue();\n    const registrationView = this.details ? html`\n        <hr class=divider />\n        <div class=registered-property-popup-wrapper>\n          <div class=\"monospace\">\n            <div><span class=\"css-property\">syntax:</span> ${this.details.registration.syntax()}</div>\n            <div><span class=\"css-property\">inherits:</span> ${this.details.registration.inherits()}</div>\n            ${initialValue ? html`<div><span class=\"css-property\">initial-value:</span> ${initialValue}</div>` : ''}\n          </div>\n          ${getLinkSection(this.details)}\n        </div>` :\n                                            '';\n\n    const valueText = this.value ?? i18nString(UIStrings.sIsNotDefined, {PH1: this.variableName});\n    render(\n        html`<div class=\"variable-value-popup-wrapper\">\n               ${valueText}\n             </div>\n             ${registrationView}\n             `,\n        this.#shadow, {\n          host: this,\n        });\n  }\n}\n\ncustomElements.define('devtools-css-variable-value-view', CSSVariableValueView);\ncustomElements.define('devtools-css-variable-parser-error', CSSVariableParserError);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'devtools-css-variable-value-view': CSSVariableValueView;\n    'devtools-css-variable-parser-error': CSSVariableParserError;\n  }\n}\n"]}