{"version":3,"file":"CSSPropertyIconResolver.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/elements/components/CSSPropertyIconResolver.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nconst writingModesAffectingFlexDirection = new Set([\n  'tb',\n  'tb-rl',\n  'vertical-lr',\n  'vertical-rl',\n]);\n\nexport const enum PhysicalDirection {\n  LEFT_TO_RIGHT = 'left-to-right',\n  RIGHT_TO_LEFT = 'right-to-left',\n  BOTTOM_TO_TOP = 'bottom-to-top',\n  TOP_TO_BOTTOM = 'top-to-bottom',\n}\n\ntype DirectionsDict = {\n  [key: string]: PhysicalDirection,\n};\n\nexport type IconInfo = {\n  iconName: string,\n  rotate: number,\n  scaleX: number,\n  scaleY: number,\n};\n\ntype ComputedStyles = Map<string, string>;\n\nexport function reverseDirection(direction: PhysicalDirection): PhysicalDirection {\n  if (direction === PhysicalDirection.LEFT_TO_RIGHT) {\n    return PhysicalDirection.RIGHT_TO_LEFT;\n  }\n  if (direction === PhysicalDirection.RIGHT_TO_LEFT) {\n    return PhysicalDirection.LEFT_TO_RIGHT;\n  }\n  if (direction === PhysicalDirection.TOP_TO_BOTTOM) {\n    return PhysicalDirection.BOTTOM_TO_TOP;\n  }\n  if (direction === PhysicalDirection.BOTTOM_TO_TOP) {\n    return PhysicalDirection.TOP_TO_BOTTOM;\n  }\n  throw new Error('Unknown PhysicalFlexDirection');\n}\n\nfunction extendWithReverseDirections(directions: DirectionsDict): DirectionsDict {\n  return {\n    ...directions,\n    'row-reverse': reverseDirection(directions.row),\n    'column-reverse': reverseDirection(directions.column),\n  };\n}\n\n/**\n * Returns absolute directions for rows, columns,\n * reverse rows and reverse column taking into account the direction and writing-mode attributes.\n */\nexport function getPhysicalDirections(computedStyles: ComputedStyles): DirectionsDict {\n  const isRtl = computedStyles.get('direction') === 'rtl';\n  const writingMode = computedStyles.get('writing-mode');\n  const isVertical = writingMode && writingModesAffectingFlexDirection.has(writingMode);\n\n  if (isVertical) {\n    return extendWithReverseDirections({\n      row: isRtl ? PhysicalDirection.BOTTOM_TO_TOP : PhysicalDirection.TOP_TO_BOTTOM,\n      column: writingMode === 'vertical-lr' ? PhysicalDirection.LEFT_TO_RIGHT : PhysicalDirection.RIGHT_TO_LEFT,\n    });\n  }\n\n  return extendWithReverseDirections({\n    row: isRtl ? PhysicalDirection.RIGHT_TO_LEFT : PhysicalDirection.LEFT_TO_RIGHT,\n    column: PhysicalDirection.TOP_TO_BOTTOM,\n  });\n}\n\n/**\n * Rotates the flex direction icon in such way that it indicates\n * the desired `direction` and the arrow in the icon is always at the bottom\n * or at the right.\n *\n * By default, the icon is pointing top-down with the arrow on the right-hand side.\n */\nexport function rotateFlexDirectionIcon(direction: PhysicalDirection): IconInfo {\n  // Default to LTR.\n  let flipX = true;\n  let flipY = false;\n  let rotate = -90;\n\n  if (direction === PhysicalDirection.RIGHT_TO_LEFT) {\n    rotate = 90;\n    flipY = false;\n    flipX = false;\n  } else if (direction === PhysicalDirection.TOP_TO_BOTTOM) {\n    rotate = 0;\n    flipX = false;\n    flipY = false;\n  } else if (direction === PhysicalDirection.BOTTOM_TO_TOP) {\n    rotate = 0;\n    flipX = false;\n    flipY = true;\n  }\n\n  return {\n    iconName: 'flex-direction',\n    rotate: rotate,\n    scaleX: flipX ? -1 : 1,\n    scaleY: flipY ? -1 : 1,\n  };\n}\n\nexport function rotateAlignContentIcon(iconName: string, direction: PhysicalDirection): IconInfo {\n  return {\n    iconName,\n    rotate: direction === PhysicalDirection.RIGHT_TO_LEFT ? 90 :\n                                                            (direction === PhysicalDirection.LEFT_TO_RIGHT ? -90 : 0),\n    scaleX: 1,\n    scaleY: 1,\n  };\n}\n\nexport function rotateJustifyContentIcon(iconName: string, direction: PhysicalDirection): IconInfo {\n  return {\n    iconName,\n    rotate: direction === PhysicalDirection.TOP_TO_BOTTOM ? 90 :\n                                                            (direction === PhysicalDirection.BOTTOM_TO_TOP ? -90 : 0),\n    scaleX: direction === PhysicalDirection.RIGHT_TO_LEFT ? -1 : 1,\n    scaleY: 1,\n  };\n}\n\nexport function rotateJustifyItemsIcon(iconName: string, direction: PhysicalDirection): IconInfo {\n  return {\n    iconName,\n    rotate: direction === PhysicalDirection.TOP_TO_BOTTOM ? 90 :\n                                                            (direction === PhysicalDirection.BOTTOM_TO_TOP ? -90 : 0),\n    scaleX: direction === PhysicalDirection.RIGHT_TO_LEFT ? -1 : 1,\n    scaleY: 1,\n  };\n}\n\nexport function rotateAlignItemsIcon(iconName: string, direction: PhysicalDirection): IconInfo {\n  return {\n    iconName,\n    rotate: direction === PhysicalDirection.RIGHT_TO_LEFT ? 90 :\n                                                            (direction === PhysicalDirection.LEFT_TO_RIGHT ? -90 : 0),\n    scaleX: 1,\n    scaleY: 1,\n  };\n}\n\nfunction flexDirectionIcon(value: string): (styles: ComputedStyles) => IconInfo {\n  function getIcon(computedStyles: ComputedStyles): IconInfo {\n    const directions = getPhysicalDirections(computedStyles);\n    return rotateFlexDirectionIcon(directions[value]);\n  }\n  return getIcon;\n}\n\nfunction flexAlignContentIcon(iconName: string): (styles: ComputedStyles) => IconInfo {\n  function getIcon(computedStyles: ComputedStyles): IconInfo {\n    const directions = getPhysicalDirections(computedStyles);\n    const flexDirectionToPhysicalDirection = new Map([\n      ['column', directions.row],\n      ['row', directions.column],\n      ['column-reverse', directions.row],\n      ['row-reverse', directions.column],\n    ]);\n    const computedFlexDirection = computedStyles.get('flex-direction') || 'row';\n    const iconDirection = flexDirectionToPhysicalDirection.get(computedFlexDirection);\n    if (!iconDirection) {\n      throw new Error('Unknown direction for flex-align icon');\n    }\n    return rotateAlignContentIcon(iconName, iconDirection);\n  }\n  return getIcon;\n}\n\nfunction gridAlignContentIcon(iconName: string): (styles: ComputedStyles) => IconInfo {\n  function getIcon(computedStyles: ComputedStyles): IconInfo {\n    const directions = getPhysicalDirections(computedStyles);\n    return rotateAlignContentIcon(iconName, directions.column);\n  }\n  return getIcon;\n}\n\nfunction flexJustifyContentIcon(iconName: string): (styles: ComputedStyles) => IconInfo {\n  function getIcon(computedStyles: ComputedStyles): IconInfo {\n    const directions = getPhysicalDirections(computedStyles);\n    return rotateJustifyContentIcon(iconName, directions[computedStyles.get('flex-direction') || 'row']);\n  }\n  return getIcon;\n}\n\nfunction gridJustifyContentIcon(iconName: string): (styles: ComputedStyles) => IconInfo {\n  function getIcon(computedStyles: ComputedStyles): IconInfo {\n    const directions = getPhysicalDirections(computedStyles);\n    return rotateJustifyContentIcon(iconName, directions.row);\n  }\n  return getIcon;\n}\n\nfunction gridJustifyItemsIcon(iconName: string): (styles: ComputedStyles) => IconInfo {\n  function getIcon(computedStyles: ComputedStyles): IconInfo {\n    const directions = getPhysicalDirections(computedStyles);\n    return rotateJustifyItemsIcon(iconName, directions.row);\n  }\n  return getIcon;\n}\n\nfunction flexAlignItemsIcon(iconName: string): (styles: ComputedStyles) => IconInfo {\n  function getIcon(computedStyles: ComputedStyles): IconInfo {\n    const directions = getPhysicalDirections(computedStyles);\n    const flexDirectionToPhysicalDirection = new Map([\n      ['column', directions.row],\n      ['row', directions.column],\n      ['column-reverse', directions.row],\n      ['row-reverse', directions.column],\n    ]);\n    const computedFlexDirection = computedStyles.get('flex-direction') || 'row';\n    const iconDirection = flexDirectionToPhysicalDirection.get(computedFlexDirection);\n    if (!iconDirection) {\n      throw new Error('Unknown direction for flex-align icon');\n    }\n    return rotateAlignItemsIcon(iconName, iconDirection);\n  }\n  return getIcon;\n}\n\nfunction gridAlignItemsIcon(iconName: string): (styles: ComputedStyles) => IconInfo {\n  function getIcon(computedStyles: ComputedStyles): IconInfo {\n    const directions = getPhysicalDirections(computedStyles);\n    return rotateAlignItemsIcon(iconName, directions.column);\n  }\n  return getIcon;\n}\n\n/**\n * The baseline icon contains the letter A to indicate that we're aligning based on where the text baseline is.\n * Therefore we're not rotating this icon like the others, as this would become confusing. Plus baseline alignment\n * is likely only really useful in horizontal flow cases.\n */\nfunction baselineIcon(): IconInfo {\n  return {\n    iconName: 'align-items-baseline',\n    rotate: 0,\n    scaleX: 1,\n    scaleY: 1,\n  };\n}\n\nfunction flexAlignSelfIcon(iconName: string): (styles: ComputedStyles, parentStyles: ComputedStyles) => IconInfo {\n  function getIcon(computedStyles: ComputedStyles, parentComputedStyles: ComputedStyles): IconInfo {\n    return flexAlignItemsIcon(iconName)(parentComputedStyles);\n  }\n  return getIcon;\n}\n\nfunction gridAlignSelfIcon(iconName: string): (styles: ComputedStyles, parentStyles: ComputedStyles) => IconInfo {\n  function getIcon(computedStyles: ComputedStyles, parentComputedStyles: ComputedStyles): IconInfo {\n    return gridAlignItemsIcon(iconName)(parentComputedStyles);\n  }\n  return getIcon;\n}\n\nexport function roateFlexWrapIcon(iconName: string, direction: PhysicalDirection): IconInfo {\n  return {\n    iconName,\n    rotate: direction === PhysicalDirection.BOTTOM_TO_TOP || direction === PhysicalDirection.TOP_TO_BOTTOM ? 90 : 0,\n    scaleX: 1,\n    scaleY: 1,\n  };\n}\n\nfunction flexWrapIcon(iconName: string): (styles: ComputedStyles) => IconInfo {\n  function getIcon(computedStyles: ComputedStyles): IconInfo {\n    const directions = getPhysicalDirections(computedStyles);\n    const computedFlexDirection = computedStyles.get('flex-direction') || 'row';\n    return roateFlexWrapIcon(iconName, directions[computedFlexDirection]);\n  }\n  return getIcon;\n}\n\nconst flexContainerIcons = new Map([\n  ['flex-direction: row', flexDirectionIcon('row')],\n  ['flex-direction: column', flexDirectionIcon('column')],\n  ['flex-direction: column-reverse', flexDirectionIcon('column-reverse')],\n  ['flex-direction: row-reverse', flexDirectionIcon('row-reverse')],\n  ['flex-direction: initial', flexDirectionIcon('row')],\n  ['flex-direction: unset', flexDirectionIcon('row')],\n  ['flex-direction: revert', flexDirectionIcon('row')],\n  ['align-content: center', flexAlignContentIcon('align-content-center')],\n  ['align-content: space-around', flexAlignContentIcon('align-content-space-around')],\n  ['align-content: space-between', flexAlignContentIcon('align-content-space-between')],\n  ['align-content: stretch', flexAlignContentIcon('align-content-stretch')],\n  ['align-content: space-evenly', flexAlignContentIcon('align-content-space-evenly')],\n  ['align-content: flex-end', flexAlignContentIcon('align-content-end')],\n  ['align-content: flex-start', flexAlignContentIcon('align-content-start')],\n  ['align-content: start', flexAlignContentIcon('align-content-start')],\n  ['align-content: end', flexAlignContentIcon('align-content-end')],\n  ['align-content: normal', flexAlignContentIcon('align-content-stretch')],\n  ['align-content: revert', flexAlignContentIcon('align-content-stretch')],\n  ['align-content: unset', flexAlignContentIcon('align-content-stretch')],\n  ['align-content: initial', flexAlignContentIcon('align-content-stretch')],\n  ['justify-content: center', flexJustifyContentIcon('justify-content-center')],\n  ['justify-content: space-around', flexJustifyContentIcon('justify-content-space-around')],\n  ['justify-content: space-between', flexJustifyContentIcon('justify-content-space-between')],\n  ['justify-content: space-evenly', flexJustifyContentIcon('justify-content-space-evenly')],\n  ['justify-content: flex-end', flexJustifyContentIcon('justify-content-end')],\n  ['justify-content: flex-start', flexJustifyContentIcon('justify-content-start')],\n  ['align-items: stretch', flexAlignItemsIcon('align-items-stretch')],\n  ['align-items: flex-end', flexAlignItemsIcon('align-items-end')],\n  ['align-items: flex-start', flexAlignItemsIcon('align-items-start')],\n  ['align-items: center', flexAlignItemsIcon('align-items-center')],\n  ['align-items: baseline', baselineIcon],\n  ['align-content: baseline', baselineIcon],\n  ['flex-wrap: wrap', flexWrapIcon('flex-wrap')],\n  ['flex-wrap: nowrap', flexWrapIcon('flex-no-wrap')],\n]);\n\nconst flexItemIcons = new Map([\n  ['align-self: baseline', baselineIcon],\n  ['align-self: center', flexAlignSelfIcon('align-self-center')],\n  ['align-self: flex-start', flexAlignSelfIcon('align-self-start')],\n  ['align-self: flex-end', flexAlignSelfIcon('align-self-end')],\n  ['align-self: stretch', flexAlignSelfIcon('align-self-stretch')],\n]);\n\nconst gridContainerIcons = new Map([\n  ['align-content: center', gridAlignContentIcon('align-content-center')],\n  ['align-content: space-around', gridAlignContentIcon('align-content-space-around')],\n  ['align-content: space-between', gridAlignContentIcon('align-content-space-between')],\n  ['align-content: stretch', gridAlignContentIcon('align-content-stretch')],\n  ['align-content: space-evenly', gridAlignContentIcon('align-content-space-evenly')],\n  ['align-content: end', gridAlignContentIcon('align-content-end')],\n  ['align-content: start', gridAlignContentIcon('align-content-start')],\n  ['align-content: baseline', baselineIcon],\n  ['justify-content: center', gridJustifyContentIcon('justify-content-center')],\n  ['justify-content: space-around', gridJustifyContentIcon('justify-content-space-around')],\n  ['justify-content: space-between', gridJustifyContentIcon('justify-content-space-between')],\n  ['justify-content: space-evenly', gridJustifyContentIcon('justify-content-space-evenly')],\n  ['justify-content: end', gridJustifyContentIcon('justify-content-end')],\n  ['justify-content: start', gridJustifyContentIcon('justify-content-start')],\n  ['align-items: stretch', gridAlignItemsIcon('align-items-stretch')],\n  ['align-items: end', gridAlignItemsIcon('align-items-end')],\n  ['align-items: start', gridAlignItemsIcon('align-items-start')],\n  ['align-items: center', gridAlignItemsIcon('align-items-center')],\n  ['align-items: baseline', baselineIcon],\n  ['justify-items: center', gridJustifyItemsIcon('justify-items-center')],\n  ['justify-items: stretch', gridJustifyItemsIcon('justify-items-stretch')],\n  ['justify-items: end', gridJustifyItemsIcon('justify-items-end')],\n  ['justify-items: start', gridJustifyItemsIcon('justify-items-start')],\n  ['justify-items: baseline', baselineIcon],\n]);\n\nconst gridItemIcons = new Map([\n  ['align-self: baseline', baselineIcon],\n  ['align-self: center', gridAlignSelfIcon('align-self-center')],\n  ['align-self: start', gridAlignSelfIcon('align-self-start')],\n  ['align-self: end', gridAlignSelfIcon('align-self-end')],\n  ['align-self: stretch', gridAlignSelfIcon('align-self-stretch')],\n]);\n\nconst isFlexContainer = (computedStyles?: ComputedStyles|null): boolean => {\n  const display = computedStyles?.get('display');\n  return display === 'flex' || display === 'inline-flex';\n};\n\nconst isGridContainer = (computedStyles?: ComputedStyles|null): boolean => {\n  const display = computedStyles?.get('display');\n  return display === 'grid' || display === 'inline-grid';\n};\n\nexport function findIcon(\n    text: string, computedStyles: ComputedStyles|null, parentComputedStyles?: ComputedStyles|null): IconInfo|null {\n  if (isFlexContainer(computedStyles)) {\n    const icon = findFlexContainerIcon(text, computedStyles);\n    if (icon) {\n      return icon;\n    }\n  }\n  if (isFlexContainer(parentComputedStyles)) {\n    const icon = findFlexItemIcon(text, computedStyles, parentComputedStyles);\n    if (icon) {\n      return icon;\n    }\n  }\n  if (isGridContainer(computedStyles)) {\n    const icon = findGridContainerIcon(text, computedStyles);\n    if (icon) {\n      return icon;\n    }\n  }\n  if (isGridContainer(parentComputedStyles)) {\n    const icon = findGridItemIcon(text, computedStyles, parentComputedStyles);\n    if (icon) {\n      return icon;\n    }\n  }\n  return null;\n}\n\nexport function findFlexContainerIcon(text: string, computedStyles: ComputedStyles|null): IconInfo|null {\n  const resolver = flexContainerIcons.get(text);\n  if (resolver) {\n    return resolver(computedStyles || new Map());\n  }\n  return null;\n}\n\nexport function findFlexItemIcon(\n    text: string, computedStyles: ComputedStyles|null, parentComputedStyles?: ComputedStyles|null): IconInfo|null {\n  const resolver = flexItemIcons.get(text);\n  if (resolver) {\n    return resolver(computedStyles || new Map(), parentComputedStyles || new Map());\n  }\n  return null;\n}\n\nexport function findGridContainerIcon(text: string, computedStyles: ComputedStyles|null): IconInfo|null {\n  const resolver = gridContainerIcons.get(text);\n  if (resolver) {\n    return resolver(computedStyles || new Map());\n  }\n  return null;\n}\n\nexport function findGridItemIcon(\n    text: string, computedStyles: ComputedStyles|null, parentComputedStyles?: ComputedStyles|null): IconInfo|null {\n  const resolver = gridItemIcons.get(text);\n  if (resolver) {\n    return resolver(computedStyles || new Map(), parentComputedStyles || new Map());\n  }\n  return null;\n}\n"]}