{"version":3,"file":"ElementsBreadcrumbs.test.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/elements/components/ElementsBreadcrumbs.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type * as SDK from '../../../core/sdk/sdk.js';\nimport {\n  assertElements,\n  dispatchClickEvent,\n  doubleRaf,\n  renderElementIntoDOM,\n  waitForScrollLeft,\n} from '../../../testing/DOMHelpers.js';\nimport {\n  deinitializeGlobalVars,\n  initializeGlobalVars,\n} from '../../../testing/EnvironmentHelpers.js';\nimport {withNoMutations} from '../../../testing/MutationHelpers.js';\nimport * as Coordinator from '../../../ui/components/render_coordinator/render_coordinator.js';\n\nimport * as ElementsComponents from './components.js';\n\nconst coordinator = Coordinator.RenderCoordinator.RenderCoordinator.instance();\n\ninterface MakeCrumbOptions extends Partial<ElementsComponents.Helper.DOMNode> {\n  attributes?: {[x: string]: string};\n}\n\n/*\n * This very clearly is not a real legacy SDK DOMNode, but for the purposes of\n * the test we just need something that presents as one, and doesn't need to\n * implement anything */\nconst FAKE_LEGACY_SDK_DOM_NODE = {} as unknown as SDK.DOMModel.DOMNode;\n\nconst makeCrumb = (overrides: MakeCrumbOptions = {}) => {\n  const attributes = overrides.attributes || {};\n  const newCrumb: ElementsComponents.Helper.DOMNode = {\n    parentNode: null,\n    nodeType: Node.ELEMENT_NODE,\n    id: 1,\n    pseudoType: '',\n    shadowRootType: '',\n    nodeName: 'body',\n    nodeNameNicelyCased: 'body',\n    legacyDomNode: FAKE_LEGACY_SDK_DOM_NODE,\n    highlightNode: () => {},\n    clearHighlight: () => {},\n    getAttribute: x => attributes[x] || '',\n    ...overrides,\n  };\n  return newCrumb;\n};\n\ndescribe('ElementsBreadcrumbs', () => {\n  before(async () => {\n    await initializeGlobalVars();\n  });\n  after(async () => {\n    await deinitializeGlobalVars();\n  });\n  describe('#determineElementTitle', () => {\n    it('returns (text) for text nodes', () => {\n      const node = makeCrumb({nodeType: Node.TEXT_NODE});\n      const title = ElementsComponents.ElementsBreadcrumbsUtils.determineElementTitle(node);\n      assert.deepEqual(title, {\n        main: '(text)',\n        extras: {},\n      });\n    });\n\n    it('returns <!--> for comments', () => {\n      const node = makeCrumb({nodeType: Node.COMMENT_NODE});\n      const title = ElementsComponents.ElementsBreadcrumbsUtils.determineElementTitle(node);\n      assert.deepEqual(title, {main: '<!-->', extras: {}});\n    });\n\n    it('returns <!doctype> for doctypes', () => {\n      const node = makeCrumb({nodeType: Node.DOCUMENT_TYPE_NODE});\n      const title = ElementsComponents.ElementsBreadcrumbsUtils.determineElementTitle(node);\n      assert.deepEqual(title, {main: '<!doctype>', extras: {}});\n    });\n\n    describe('for DOCUMENT_FRAGMENT_NODE types', () => {\n      it('shows the shadowRoot if the document is a shadowRootType', () => {\n        const node = makeCrumb({\n          nodeType: Node.DOCUMENT_FRAGMENT_NODE,\n          shadowRootType: 'shadowRoot',\n          nodeNameNicelyCased: 'test-elem',\n        });\n        const title = ElementsComponents.ElementsBreadcrumbsUtils.determineElementTitle(node);\n        assert.deepEqual(title, {main: '#shadow-root', extras: {}});\n      });\n\n      it('shows the nice name if there is not a shadow root', () => {\n        const node = makeCrumb({\n          nodeType: Node.DOCUMENT_FRAGMENT_NODE,\n          shadowRootType: undefined,\n          nodeNameNicelyCased: 'test-elem',\n        });\n        const title = ElementsComponents.ElementsBreadcrumbsUtils.determineElementTitle(node);\n        assert.deepEqual(title, {main: 'test-elem', extras: {}});\n      });\n    });\n\n    describe('for element nodes', () => {\n      it('takes the nicely cased node name by default', () => {\n        const node = makeCrumb({nodeType: Node.ELEMENT_NODE, nodeNameNicelyCased: 'div'});\n        const title = ElementsComponents.ElementsBreadcrumbsUtils.determineElementTitle(node);\n        assert.deepEqual(title, {main: 'div', extras: {}});\n      });\n\n      it('uses the pseudoType if that is passed', () => {\n        const node = makeCrumb({nodeType: Node.ELEMENT_NODE, pseudoType: 'test'});\n        const title = ElementsComponents.ElementsBreadcrumbsUtils.determineElementTitle(node);\n        assert.deepEqual(title, {main: '::test', extras: {}});\n      });\n\n      it('adds the ID as an extra if present', () => {\n        const node = makeCrumb({nodeType: Node.ELEMENT_NODE, nodeNameNicelyCased: 'div', attributes: {id: 'test'}});\n        const title = ElementsComponents.ElementsBreadcrumbsUtils.determineElementTitle(node);\n        assert.deepEqual(title, {\n          main: 'div',\n          extras: {\n            id: 'test',\n          },\n        });\n      });\n\n      it('adds classes as extras if present', () => {\n        const node = makeCrumb({\n          nodeType: Node.ELEMENT_NODE,\n          nodeNameNicelyCased: 'div',\n          attributes: {class: 'class1 class2'},\n        });\n        const title = ElementsComponents.ElementsBreadcrumbsUtils.determineElementTitle(node);\n        assert.deepEqual(title, {\n          main: 'div',\n          extras: {\n            classes: ['class1', 'class2'],\n          },\n        });\n      });\n    });\n\n    it('falls back to the nicely cased name if the node is any other type', () => {\n      const node = makeCrumb({\n        nodeType: Node.CDATA_SECTION_NODE,\n        nodeNameNicelyCased: 'not-special-cased-node-type',\n      });\n      const title = ElementsComponents.ElementsBreadcrumbsUtils.determineElementTitle(node);\n      assert.deepEqual(title, {\n        main: 'not-special-cased-node-type',\n        extras: {},\n      });\n    });\n  });\n\n  describe('crumbsToRender', () => {\n    it('returns an empty array when there is no selected node', () => {\n      const result = ElementsComponents.ElementsBreadcrumbsUtils.crumbsToRender([], null);\n      assert.deepEqual(result, []);\n    });\n\n    it('excludes the document node', () => {\n      const documentCrumb = makeCrumb({\n        nodeType: Node.DOCUMENT_NODE,\n        id: 1,\n        nodeName: 'document',\n        nodeNameNicelyCased: 'document',\n      });\n\n      const bodyCrumb = makeCrumb({\n        nodeType: Node.ELEMENT_NODE,\n        id: 2,\n        nodeName: 'body',\n        nodeNameNicelyCased: 'body',\n      });\n\n      const result = ElementsComponents.ElementsBreadcrumbsUtils.crumbsToRender([documentCrumb, bodyCrumb], bodyCrumb);\n\n      assert.deepEqual(result, [\n        {\n          title: {\n            main: 'body',\n            extras: {},\n          },\n          selected: true,\n          node: bodyCrumb,\n          originalNode: bodyCrumb.legacyDomNode,\n        },\n      ]);\n    });\n  });\n\n  describe('rendering breadcrumbs', () => {\n    async function renderBreadcrumbs(data: ElementsComponents.ElementsBreadcrumbs.ElementsBreadcrumbsData): Promise<{\n      component: ElementsComponents.ElementsBreadcrumbs.ElementsBreadcrumbs,\n      shadowRoot: ShadowRoot,\n    }> {\n      const component = new ElementsComponents.ElementsBreadcrumbs.ElementsBreadcrumbs();\n      renderElementIntoDOM(component);\n      component.data = data;\n\n      await coordinator.done();\n      assert.isNotNull(component.shadowRoot);\n      return {\n        component,\n        shadowRoot: component.shadowRoot,\n      };\n    }\n\n    const bodyCrumb = makeCrumb({\n      nodeType: Node.ELEMENT_NODE,\n      id: 2,\n      nodeName: 'body',\n      nodeNameNicelyCased: 'body',\n    });\n\n    const divCrumb = makeCrumb({\n      nodeType: Node.ELEMENT_NODE,\n      id: 3,\n      nodeName: 'div',\n      nodeNameNicelyCased: 'div',\n      attributes: {\n        id: 'test-id',\n      },\n    });\n\n    it('renders all the breadcrumbs provided', async () => {\n      const {shadowRoot} = await renderBreadcrumbs({\n        crumbs: [divCrumb, bodyCrumb],\n        selectedNode: bodyCrumb,\n      });\n\n      const crumbs = Array.from(shadowRoot.querySelectorAll('[data-crumb]'));\n      assert.lengthOf(crumbs, 2);\n    });\n\n    it('highlights the active breadcrumb', async () => {\n      const {shadowRoot} = await renderBreadcrumbs({\n        crumbs: [divCrumb, bodyCrumb],\n        selectedNode: bodyCrumb,\n      });\n      const activeCrumbs = shadowRoot.querySelectorAll('.crumb.selected');\n      assert.lengthOf(activeCrumbs, 1);\n    });\n\n    it('updates the text if a crumb\\'s title changes', async () => {\n      const {component, shadowRoot} = await renderBreadcrumbs({\n        crumbs: [divCrumb, bodyCrumb],\n        selectedNode: bodyCrumb,\n      });\n\n      await withNoMutations(shadowRoot, async shadowRoot => {\n        const newDiv: ElementsComponents.Helper.DOMNode = {...divCrumb, nodeName: 'span', nodeNameNicelyCased: 'span'};\n        component.data = {\n          crumbs: [newDiv, bodyCrumb],\n          selectedNode: bodyCrumb,\n        };\n\n        await coordinator.done();\n\n        const renderedTextForUpdatedCrumb = shadowRoot.querySelector('.crumb:last-child devtools-node-text');\n        assert.instanceOf(renderedTextForUpdatedCrumb, HTMLElement);\n        assert.strictEqual(renderedTextForUpdatedCrumb.dataset.nodeTitle, 'span');\n      });\n    });\n\n    describe('when the breadcrumbs overflow', () => {\n      const bodyCrumb = makeCrumb({\n        nodeType: Node.ELEMENT_NODE,\n        id: 2,\n        nodeName: 'body',\n        nodeNameNicelyCased: 'body',\n        attributes: {\n          class: 'test-class-1 test-class-2 test-class-3',\n        },\n      });\n\n      const divCrumb = makeCrumb({\n        nodeType: Node.ELEMENT_NODE,\n        id: 3,\n        nodeName: 'div',\n        nodeNameNicelyCased: 'div',\n        attributes: {\n          id: 'test-id-with-a-really-long-name',\n        },\n      });\n\n      it('shows the scrolling icons if the crumbs do not fit in their container', async () => {\n        const thinWrapper = document.createElement('div');\n        thinWrapper.style.width = '400px';\n\n        const component = new ElementsComponents.ElementsBreadcrumbs.ElementsBreadcrumbs();\n        thinWrapper.appendChild(component);\n        renderElementIntoDOM(thinWrapper);\n        component.data = {\n          crumbs: [divCrumb, bodyCrumb],\n          selectedNode: bodyCrumb,\n        };\n        await coordinator.done();\n        assert.isNotNull(component.shadowRoot);\n\n        const scrollButtons = component.shadowRoot.querySelectorAll('button.overflow');\n        assertElements(scrollButtons, HTMLButtonElement);\n\n        assert.strictEqual(scrollButtons.length, 2, 'there are two scroll buttons');\n        const leftButton = scrollButtons[0];\n        const rightButton = scrollButtons[1];\n\n        assert.isTrue(leftButton.disabled);\n        assert.isFalse(rightButton.disabled);\n      });\n\n      it('disables the right button once the user has scrolled to the end', async () => {\n        const thinWrapper = document.createElement('div');\n        thinWrapper.style.width = '400px';\n        const component = new ElementsComponents.ElementsBreadcrumbs.ElementsBreadcrumbs();\n        thinWrapper.appendChild(component);\n        renderElementIntoDOM(thinWrapper);\n        component.data = {\n          crumbs: [divCrumb, bodyCrumb],\n          selectedNode: bodyCrumb,\n        };\n        await coordinator.done();\n\n        assert.isNotNull(component.shadowRoot);\n\n        const rightButton = component.shadowRoot.querySelector('button.overflow.right');\n        assert.instanceOf(rightButton, HTMLButtonElement);\n        assert.isFalse(rightButton.disabled);\n\n        await withNoMutations(component.shadowRoot, async shadowRoot => {\n          dispatchClickEvent(rightButton);\n          const scrollWrapper = shadowRoot.querySelector('.crumbs-window');\n          assert.instanceOf(scrollWrapper, HTMLDivElement);\n          await waitForScrollLeft(scrollWrapper, 100);\n          await coordinator.done();\n          assert.isTrue(rightButton.disabled);\n        });\n      });\n\n      it('hides the overflow buttons should the user resize the window to be large enough', async () => {\n        const thinWrapper = document.createElement('div');\n        thinWrapper.style.width = '400px';\n        const component = new ElementsComponents.ElementsBreadcrumbs.ElementsBreadcrumbs();\n        thinWrapper.appendChild(component);\n        renderElementIntoDOM(thinWrapper);\n        component.data = {\n          crumbs: [divCrumb, bodyCrumb],\n          selectedNode: bodyCrumb,\n        };\n        await coordinator.done();\n\n        assert.isNotNull(component.shadowRoot);\n\n        const leftButton = component.shadowRoot.querySelector('button.overflow.left');\n        assert.instanceOf(leftButton, HTMLButtonElement);\n        const rightButton = component.shadowRoot.querySelector('button.overflow.right');\n        assert.instanceOf(rightButton, HTMLButtonElement);\n\n        assert.isFalse(leftButton.classList.contains('hidden'));\n        assert.isFalse(rightButton.classList.contains('hidden'));\n\n        thinWrapper.style.width = '800px';\n        // Changing the width should trigger the resize observer, so we need to wait for that to happen.\n        await doubleRaf();\n        await coordinator.done();\n\n        assert.isTrue(leftButton.classList.contains('hidden'));\n        assert.isTrue(rightButton.classList.contains('hidden'));\n      });\n\n      it('hides the overflow should the list of nodes change so the crumbs no longer overflow', async () => {\n        const thinWrapper = document.createElement('div');\n        thinWrapper.style.width = '400px';\n\n        const component = new ElementsComponents.ElementsBreadcrumbs.ElementsBreadcrumbs();\n        thinWrapper.appendChild(component);\n        renderElementIntoDOM(thinWrapper);\n        component.data = {\n          crumbs: [divCrumb, bodyCrumb],\n          selectedNode: bodyCrumb,\n        };\n        await coordinator.done();\n        assert.isNotNull(component.shadowRoot);\n        const leftButton = component.shadowRoot.querySelector('button.overflow.left');\n        assert.instanceOf(leftButton, HTMLButtonElement);\n        const rightButton = component.shadowRoot.querySelector('button.overflow.right');\n        assert.instanceOf(rightButton, HTMLButtonElement);\n\n        // Ensure the buttons are visible now\n        assert.isFalse(leftButton.classList.contains('hidden'));\n        assert.isFalse(rightButton.classList.contains('hidden'));\n\n        component.data = {\n          crumbs: [bodyCrumb],\n          selectedNode: bodyCrumb,\n        };\n        await coordinator.done();\n        // The buttons are hidden now the list is no longer overflowing\n        assert.isTrue(leftButton.classList.contains('hidden'));\n        assert.isTrue(rightButton.classList.contains('hidden'));\n      });\n\n      it('shows the overflow buttons should the user resize the window down to be small', async () => {\n        const thinWrapper = document.createElement('div');\n        thinWrapper.style.width = '800px';\n        const component = new ElementsComponents.ElementsBreadcrumbs.ElementsBreadcrumbs();\n        thinWrapper.appendChild(component);\n        renderElementIntoDOM(thinWrapper);\n\n        component.data = {\n          crumbs: [divCrumb, bodyCrumb],\n          selectedNode: bodyCrumb,\n        };\n        await coordinator.done();\n        assert.isNotNull(component.shadowRoot);\n\n        const leftButton = component.shadowRoot.querySelector('button.overflow.left');\n        assert.instanceOf(leftButton, HTMLButtonElement);\n        const rightButton = component.shadowRoot.querySelector('button.overflow.right');\n        assert.instanceOf(rightButton, HTMLButtonElement);\n\n        assert.isTrue(leftButton.classList.contains('hidden'));\n        assert.isTrue(rightButton.classList.contains('hidden'));\n\n        thinWrapper.style.width = '400px';\n        // Give the resize observer time to fire.\n        await doubleRaf();\n        await coordinator.done();\n\n        assert.isFalse(leftButton.classList.contains('hidden'));\n        assert.isFalse(rightButton.classList.contains('hidden'));\n      });\n    });\n  });\n});\n"]}