{"version":3,"file":"ElementsPanel.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/elements/ElementsPanel.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Root from '../../core/root/root.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport {createTarget, stubNoopSettings} from '../../testing/EnvironmentHelpers.js';\nimport {\n  describeWithMockConnection,\n  setMockConnectionResponseHandler,\n} from '../../testing/MockConnection.js';\nimport type * as UI from '../../ui/legacy/legacy.js';\n\nimport * as Elements from './elements.js';\n\ndescribeWithMockConnection('ElementsPanel', () => {\n  let target: SDK.Target.Target;\n\n  beforeEach(() => {\n    stubNoopSettings();\n    target = createTarget();\n    Root.Runtime.experiments.register('apca', '');\n    setMockConnectionResponseHandler('DOM.requestChildNodes', () => ({}));\n    setMockConnectionResponseHandler('DOM.getDocument', () => ({\n                                                          root: {\n                                                            nodeId: 1,\n                                                            backendNodeId: 2,\n                                                            nodeType: Node.DOCUMENT_NODE,\n                                                            nodeName: '#document',\n                                                            childNodeCount: 1,\n                                                            children: [{\n                                                              nodeId: 4,\n                                                              parentId: 1,\n                                                              backendNodeId: 5,\n                                                              nodeType: Node.ELEMENT_NODE,\n                                                              nodeName: 'HTML',\n                                                              childNodeCount: 1,\n                                                              children: [{\n                                                                nodeId: 6,\n                                                                parentId: 4,\n                                                                backendNodeId: 7,\n                                                                nodeType: Node.ELEMENT_NODE,\n                                                                nodeName: 'BODY',\n                                                                childNodeCount: 1,\n                                                              }],\n                                                            }],\n                                                          },\n                                                        }));\n  });\n\n  const createsTreeOutlines = (inScope: boolean) => () => {\n    SDK.TargetManager.TargetManager.instance().setScopeTarget(inScope ? target : null);\n    Elements.ElementsPanel.ElementsPanel.instance({forceNew: true});\n    const model = target.model(SDK.DOMModel.DOMModel);\n    assert.exists(model);\n    assert.strictEqual(Boolean(Elements.ElementsTreeOutline.ElementsTreeOutline.forDOMModel(model)), inScope);\n\n    const subtraget = createTarget({parentTarget: target});\n    const submodel = subtraget.model(SDK.DOMModel.DOMModel);\n    assert.exists(submodel);\n    assert.strictEqual(Boolean(Elements.ElementsTreeOutline.ElementsTreeOutline.forDOMModel(model)), inScope);\n\n    subtraget.dispose('');\n    assert.isNull(Elements.ElementsTreeOutline.ElementsTreeOutline.forDOMModel(submodel));\n  };\n\n  it('creates tree outlines for in scope models', createsTreeOutlines(true));\n  it('does not create tree outlines for out of scope models', createsTreeOutlines(false));\n\n  it('expands the tree even when target added later', async () => {\n    SDK.TargetManager.TargetManager.instance().setScopeTarget(null);\n    const model = target.model(SDK.DOMModel.DOMModel);\n    assert.exists(model);\n    await model.requestDocument();\n\n    const panel = Elements.ElementsPanel.ElementsPanel.instance({forceNew: true});\n    panel.markAsRoot();\n    panel.show(document.body);\n\n    SDK.TargetManager.TargetManager.instance().setScopeTarget(target);\n\n    const treeOutline = Elements.ElementsTreeOutline.ElementsTreeOutline.forDOMModel(model);\n    assert.exists(treeOutline);\n    const selectedNode = treeOutline.selectedDOMNode();\n    assert.exists(selectedNode);\n    const selectedTreeElement = treeOutline.findTreeElement(selectedNode);\n    assert.exists(selectedTreeElement);\n    assert.isTrue(selectedTreeElement.expanded);\n    panel.detach();\n  });\n\n  it('searches in in scope models', () => {\n    const anotherTarget = createTarget();\n    SDK.TargetManager.TargetManager.instance().setScopeTarget(target);\n    const inScopeModel = target.model(SDK.DOMModel.DOMModel);\n    assert.exists(inScopeModel);\n    const inScopeSearch = sinon.spy(inScopeModel, 'performSearch');\n    const outOfScopeModel = anotherTarget.model(SDK.DOMModel.DOMModel);\n    assert.exists(outOfScopeModel);\n    const outOfScopeSearch = sinon.spy(outOfScopeModel, 'performSearch');\n\n    const panel = Elements.ElementsPanel.ElementsPanel.instance({forceNew: true});\n    panel.performSearch({query: 'foo'} as UI.SearchableView.SearchConfig, false);\n\n    assert.isTrue(inScopeSearch.called);\n    assert.isFalse(outOfScopeSearch.called);\n  });\n});\n"]}