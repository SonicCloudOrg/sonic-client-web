{"version":3,"file":"CSSRuleValidator.test.js","sourceRoot":"","sources":["../../../../../../front_end/panels/elements/CSSRuleValidator.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as SDK from '../../core/sdk/sdk.js';\nimport {describeWithEnvironment} from '../../testing/EnvironmentHelpers.js';\n\nimport * as Elements from './elements.js';\n\ndescribeWithEnvironment('CSSRuleValidator', () => {\n  const tests = [\n    {\n      description:\n          'Reports a rule violation when element align-content is set on flex container whose flex-wrap property\\'s value is nowrap',\n      computedStyles: new Map<string, string>([\n        ['display', 'inline-flex'],\n        ['flex-wrap', 'nowrap'],\n        ['align-content', 'center'],\n      ]),\n      validator: () => new Elements.CSSRuleValidator.AlignContentValidator(),\n      hintExpected: true,\n    },\n    {\n      description: 'Passes the validation if flex-wrap is set to nowrap, but the element is not a flex container',\n      computedStyles: new Map<string, string>([\n        ['display', 'block'],\n        ['flex-wrap', 'nowrap'],\n        ['align-content', 'center'],\n      ]),\n      validator: () => new Elements.CSSRuleValidator.AlignContentValidator(),\n      hintExpected: false,\n    },\n    {\n      description: 'Test `align-content`, validation passes when the element is a grid container',\n      computedStyles: new Map<string, string>([\n        ['align-content', 'center'],\n        ['display', 'grid'],\n      ]),\n      validator: () => new Elements.CSSRuleValidator.AlignContentValidator(),\n      hintExpected: false,\n    },\n    {\n      description: 'Test `align-content`, validation passes when the element is a block container',\n      computedStyles: new Map<string, string>([\n        ['align-content', 'center'],\n        ['display', 'block'],\n      ]),\n      validator: () => new Elements.CSSRuleValidator.AlignContentValidator(),\n      hintExpected: false,\n    },\n    {\n      description: 'Test `align-content`, validation does not pass when the element is a math container',\n      computedStyles: new Map<string, string>([\n        ['align-content', 'center'],\n        ['display', 'block math'],\n      ]),\n      validator: () => new Elements.CSSRuleValidator.AlignContentValidator(),\n      hintExpected: true,\n    },\n    {\n      description: 'Test `justify-content`, validation passes when the element is flex containers',\n      computedStyles: new Map<string, string>([\n        ['display', 'flex'],\n        ['justify-content', 'flex-end'],\n      ]),\n      validator: () => new Elements.CSSRuleValidator.FlexGridValidator(),\n      hintExpected: false,\n    },\n    {\n      description: 'Test `justify-content`, validation passes when the element is grid containers',\n      computedStyles: new Map<string, string>([\n        ['display', 'grid'],\n        ['justify-content', 'center'],\n      ]),\n      validator: () => new Elements.CSSRuleValidator.FlexGridValidator(),\n      hintExpected: false,\n    },\n    {\n      description: 'Test `place-content`, validation passes when the element is grid containers',\n      computedStyles: new Map<string, string>([\n        ['display', 'grid'],\n        ['place-content', 'center'],\n      ]),\n      validator: () => new Elements.CSSRuleValidator.FlexGridValidator(),\n      hintExpected: false,\n    },\n    {\n      description:\n          'Test `align-items`, validation does not pass when the element is not flex containers or grid containers',\n      computedStyles: new Map<string, string>([\n        ['align-items', 'center'],\n        ['display', 'block'],\n      ]),\n      validator: () => new Elements.CSSRuleValidator.FlexGridValidator(),\n      hintExpected: true,\n    },\n    {\n      description:\n          'Test `place-content`, validation does not pass when the element is not flex containers or grid containers',\n      computedStyles: new Map<string, string>([\n        ['display', 'block'],\n        ['place-content', 'center'],\n      ]),\n      validator: () => new Elements.CSSRuleValidator.FlexGridValidator(),\n      hintExpected: true,\n    },\n    {\n      description: 'Reports a rule validation when flex properties are set to non-flex items',\n      computedStyles: new Map<string, string>([\n        ['flex', '1'],\n      ]),\n      parentsComputedStyles: new Map<string, string>([\n        ['display', 'table'],\n      ]),\n      validator: () => new Elements.CSSRuleValidator.FlexItemValidator(),\n      hintExpected: true,\n    },\n    {\n      description: 'Passes the validation when flex properties are set to flex items',\n      computedStyles: new Map<string, string>([\n        ['flex', '1'],\n      ]),\n      parentsComputedStyles: new Map<string, string>([\n        ['display', 'flex'],\n      ]),\n      validator: () => new Elements.CSSRuleValidator.FlexItemValidator(),\n      hintExpected: false,\n    },\n    {\n      description: 'Passes the validation when flex container properties are set to flex container',\n      computedStyles: new Map<string, string>([\n        ['display', 'flex'],\n        ['flex-direction', 'column'],\n      ]),\n      parentsComputedStyles: new Map<string, string>(),\n      validator: () => new Elements.CSSRuleValidator.FlexContainerValidator(),\n      hintExpected: false,\n    },\n    {\n      description: 'Reports a rule validation when flex container properties are set to non-flex container',\n      computedStyles: new Map<string, string>([\n        ['display', 'block'],\n        ['flex-direction', 'column'],\n      ]),\n      parentsComputedStyles: new Map<string, string>(),\n      validator: () => new Elements.CSSRuleValidator.FlexContainerValidator(),\n      hintExpected: true,\n    },\n    {\n      description: 'Passes the validation when grid container properties are set to grid container',\n      computedStyles: new Map<string, string>([\n        ['display', 'grid'],\n        ['grid', '100px / 200px'],\n      ]),\n      parentsComputedStyles: new Map<string, string>(),\n      validator: () => new Elements.CSSRuleValidator.GridContainerValidator(),\n      hintExpected: false,\n    },\n    {\n      description: 'Reports a rule validation when grid container properties are set to non-grid container',\n      computedStyles: new Map<string, string>([\n        ['display', 'flex'],\n        ['grid', '100px / 200px'],\n      ]),\n      parentsComputedStyles: new Map<string, string>(),\n      validator: () => new Elements.CSSRuleValidator.GridContainerValidator(),\n      hintExpected: true,\n    },\n    {\n      description: 'Passes the validation when grid item properties are set to grid items',\n      computedStyles: new Map<string, string>([\n        ['grid-area', 'auto / auto / auto / auto'],\n      ]),\n      parentsComputedStyles: new Map<string, string>([\n        ['display', 'grid'],\n      ]),\n      validator: () => new Elements.CSSRuleValidator.GridItemValidator(),\n      hintExpected: false,\n    },\n    {\n      description: 'Reports a rule validation when grid item properties are set to non-grid items',\n      computedStyles: new Map<string, string>([\n        ['grid-area', 'auto / auto / auto / auto'],\n      ]),\n      parentsComputedStyles: new Map<string, string>([\n        ['display', 'flex'],\n      ]),\n      validator: () => new Elements.CSSRuleValidator.GridItemValidator(),\n      hintExpected: true,\n    },\n    {\n      description: 'Reports a rule validation when flex or grid item properties are set to non-flex or non-grid items',\n      computedStyles: new Map<string, string>([\n        ['align-self', 'baseline'],\n      ]),\n      parentsComputedStyles: new Map<string, string>(),\n      validator: () => new Elements.CSSRuleValidator.FlexOrGridItemValidator(),\n      hintExpected: true,\n    },\n    {\n      description: 'Passes the validation when flex or grid item properties are set to flex or grid items',\n      computedStyles: new Map<string, string>([\n        ['align-self', 'baseline'],\n      ]),\n      parentsComputedStyles: new Map<string, string>([\n        ['display', 'flex'],\n      ]),\n      validator: () => new Elements.CSSRuleValidator.FlexOrGridItemValidator(),\n      hintExpected: false,\n    },\n    {\n      description: 'Passes the validation when flex or grid item properties are set to grid items',\n      computedStyles: new Map<string, string>([\n        ['align-self', 'baseline'],\n      ]),\n      parentsComputedStyles: new Map<string, string>([\n        ['display', 'grid'],\n      ]),\n      validator: () => new Elements.CSSRuleValidator.FlexOrGridItemValidator(),\n      hintExpected: false,\n    },\n    {\n      description: 'Passes the validation when padding is not set to table elements',\n      computedStyles: new Map<string, string>([\n        ['display', 'block'],\n        ['padding', '15px'],\n      ]),\n      parentsComputedStyles: new Map<string, string>(),\n      validator: () => new Elements.CSSRuleValidator.PaddingValidator(),\n      hintExpected: false,\n    },\n    {\n      description: 'Reports a rule validation when padding is set to table elements',\n      computedStyles: new Map<string, string>([\n        ['display', 'table-row'],\n        ['padding', '15px'],\n      ]),\n      parentsComputedStyles: new Map<string, string>(),\n      validator: () => new Elements.CSSRuleValidator.PaddingValidator(),\n      hintExpected: true,\n    },\n    {\n      description: 'Passes the validation when top is set to non-static positioned element',\n      computedStyles: new Map<string, string>([\n        ['position', 'absolute'],\n        ['top', '20px'],\n      ]),\n      parentsComputedStyles: new Map<string, string>(),\n      validator: () => new Elements.CSSRuleValidator.PositionValidator(),\n      hintExpected: false,\n    },\n    {\n      description: 'Reports a rule validation when top is set to static positioned elements',\n      computedStyles: new Map<string, string>([\n        ['position', 'static'],\n        ['top', '20px'],\n      ]),\n      parentsComputedStyles: new Map<string, string>(),\n      validator: () => new Elements.CSSRuleValidator.PositionValidator(),\n      hintExpected: true,\n    },\n    {\n      description: 'Passes the validation when z-index is set to non-static positioned element',\n      computedStyles: new Map<string, string>([\n        ['position', 'absolute'],\n        ['z-index', '5'],\n      ]),\n      parentsComputedStyles: new Map<string, string>(),\n      validator: () => new Elements.CSSRuleValidator.ZIndexValidator(),\n      hintExpected: false,\n    },\n    {\n      description: 'Reports a rule validation when z-index is set to static positioned elements',\n      computedStyles: new Map<string, string>([\n        ['position', 'static'],\n        ['z-index', '5'],\n      ]),\n      parentsComputedStyles: new Map<string, string>(),\n      validator: () => new Elements.CSSRuleValidator.ZIndexValidator(),\n      hintExpected: true,\n    },\n    {\n      description: 'Validates width on an inline element',\n      computedStyles: new Map<string, string>([\n        ['display', 'inline'],\n        ['width', '100px'],\n      ]),\n      nodeName: 'span',\n      parentsComputedStyles: new Map<string, string>(),\n      validator: () => new Elements.CSSRuleValidator.SizingValidator(),\n      hintExpected: true,\n    },\n    {\n      description: 'Validates height on an inline element',\n      computedStyles: new Map<string, string>([\n        ['display', 'inline'],\n        ['height', '100px'],\n      ]),\n      nodeName: 'span',\n      parentsComputedStyles: new Map<string, string>(),\n      validator: () => new Elements.CSSRuleValidator.SizingValidator(),\n      hintExpected: true,\n    },\n    {\n      description: 'Does not validate width on an inline element that could be replaced',\n      computedStyles: new Map<string, string>([\n        ['display', 'inline'],\n        ['width', '100px'],\n      ]),\n      nodeName: 'input',\n      parentsComputedStyles: new Map<string, string>(),\n      validator: () => new Elements.CSSRuleValidator.SizingValidator(),\n      hintExpected: false,\n    },\n    {\n      description: 'Shows a hint the order property on non-flex/grid items',\n      computedStyles: new Map<string, string>([\n        ['order', '1'],\n      ]),\n      nodeName: 'input',\n      parentsComputedStyles: new Map<string, string>([\n        ['display', 'block'],\n      ]),\n      validator: () => new Elements.CSSRuleValidator.FlexOrGridItemValidator(),\n      hintExpected: true,\n    },\n    {\n      description: 'Does not show a hint for the order property on a flex item',\n      computedStyles: new Map<string, string>([\n        ['order', '1'],\n      ]),\n      nodeName: 'input',\n      parentsComputedStyles: new Map<string, string>([\n        ['display', 'flex'],\n      ]),\n      validator: () => new Elements.CSSRuleValidator.FlexOrGridItemValidator(),\n      hintExpected: false,\n    },\n    {\n      description: 'Does not show a hint for the order property on a grid item',\n      computedStyles: new Map<string, string>([\n        ['order', '1'],\n      ]),\n      nodeName: 'input',\n      parentsComputedStyles: new Map<string, string>([\n        ['display', 'grid'],\n      ]),\n      validator: () => new Elements.CSSRuleValidator.FlexOrGridItemValidator(),\n      hintExpected: false,\n    },\n    {\n      description: 'Does not show a hint for a flex item without a parent',\n      computedStyles: new Map<string, string>([\n        ['flex', 'none'],\n      ]),\n      nodeName: 'input',\n      parentsComputedStyles: undefined,\n      validator: () => new Elements.CSSRuleValidator.FlexItemValidator(),\n      hintExpected: false,\n    },\n    {\n      description: 'Does not show a hint for a grid item with a z-index',\n      computedStyles: new Map<string, string>([\n        ['z-index', '1'],\n      ]),\n      nodeName: 'div',\n      parentsComputedStyles: new Map<string, string>([\n        ['display', 'grid'],\n      ]),\n      validator: () => new Elements.CSSRuleValidator.ZIndexValidator(),\n      hintExpected: false,\n    },\n    {\n      description: 'Reports a hint for invalid font variation settings',\n      computedStyles: new Map<string, string>([\n        ['font-variation-settings', '\"wght\" 251, \"wdth\" 59'],\n        ['font-family', 'Family'],\n      ]),\n      fontFaces: [new SDK.CSSFontFace.CSSFontFace({\n        fontFamily: 'Family',\n        fontStyle: 'string',\n        fontVariant: 'string',\n        fontWeight: 'string',\n        fontStretch: 'string',\n        fontDisplay: 'string',\n        unicodeRange: 'string',\n        src: 'string',\n        platformFontFamily: 'Family',\n        fontVariationAxes: [{\n          tag: 'wght',\n          name: 'Weight',\n          minValue: 10,\n          maxValue: 20,\n          defaultValue: 15,\n        }],\n      })],\n      nodeName: 'div',\n      validator: () => new Elements.CSSRuleValidator.FontVariationSettingsValidator(),\n      hintExpected: true,\n    },\n    {\n      description: 'Does not report a hint for valid font variation settings',\n      computedStyles: new Map<string, string>([\n        ['font-variation-settings', '\"wght\" 15, \"wdth\" 59'],\n        ['font-family', 'Family'],\n      ]),\n      fontFaces: [new SDK.CSSFontFace.CSSFontFace({\n        fontFamily: 'Family',\n        fontStyle: 'string',\n        fontVariant: 'string',\n        fontWeight: 'string',\n        fontStretch: 'string',\n        fontDisplay: 'string',\n        unicodeRange: 'string',\n        src: 'string',\n        platformFontFamily: 'Family',\n        fontVariationAxes: [{\n          tag: 'wght',\n          name: 'Weight',\n          minValue: 10,\n          maxValue: 20,\n          defaultValue: 15,\n        }],\n      })],\n      nodeName: 'div',\n      validator: () => new Elements.CSSRuleValidator.FontVariationSettingsValidator(),\n      hintExpected: false,\n    },\n  ];\n\n  for (const test of tests) {\n    it(test.description, () => {\n      const actualResult = test.validator().getHint(\n          test.validator().getApplicableProperties()[0], test.computedStyles, test.parentsComputedStyles, test.nodeName,\n          test.fontFaces);\n      if (test.hintExpected) {\n        assert.exists(actualResult);\n      } else {\n        assert.isUndefined(actualResult);\n      }\n    });\n  }\n});\n"]}