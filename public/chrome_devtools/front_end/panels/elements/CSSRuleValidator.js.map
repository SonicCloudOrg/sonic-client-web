{"version":3,"file":"CSSRuleValidator.js","sourceRoot":"","sources":["../../../../../../front_end/panels/elements/CSSRuleValidator.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\n\nimport {\n  buildPropertyDefinitionText,\n  buildPropertyName,\n  buildPropertyValue,\n  isBlockContainer,\n  isFlexContainer,\n  isGridContainer,\n  isInlineElement,\n  isMulticolContainer,\n  isPossiblyReplacedElement,\n} from './CSSRuleValidatorHelper.js';\n\nconst UIStrings = {\n  /**\n   *@description The message shown in the Style pane when the user hovers over a property that has no effect due to some other property.\n   *@example {flex-wrap: nowrap} REASON_PROPERTY_DECLARATION_CODE\n   *@example {align-content} AFFECTED_PROPERTY_DECLARATION_CODE\n   */\n  ruleViolatedBySameElementRuleReason:\n      'The {REASON_PROPERTY_DECLARATION_CODE} property prevents {AFFECTED_PROPERTY_DECLARATION_CODE} from having an effect.',\n  /**\n   *@description The message shown in the Style pane when the user hovers over a property declaration that has no effect due to some other property.\n   *@example {flex-wrap} PROPERTY_NAME\n    @example {nowrap} PROPERTY_VALUE\n   */\n  ruleViolatedBySameElementRuleFix: 'Try setting {PROPERTY_NAME} to something other than {PROPERTY_VALUE}.',\n  /**\n   *@description The message shown in the Style pane when the user hovers over a property declaration that has no effect due to not being a flex or grid container.\n   *@example {display: grid} DISPLAY_GRID_RULE\n   *@example {display: flex} DISPLAY_FLEX_RULE\n   */\n  ruleViolatedBySameElementRuleChangeFlexOrGrid:\n      'Try adding {DISPLAY_GRID_RULE} or {DISPLAY_FLEX_RULE} to make this element into a container.',\n  /**\n   *@description The message shown in the Style pane when the user hovers over a property declaration that has no effect due to the current property value.\n   *@example {display: block} EXISTING_PROPERTY_DECLARATION\n   *@example {display: flex} TARGET_PROPERTY_DECLARATION\n   */\n  ruleViolatedBySameElementRuleChangeSuggestion:\n      'Try setting the {EXISTING_PROPERTY_DECLARATION} property to {TARGET_PROPERTY_DECLARATION}.',\n  /**\n   *@description The message shown in the Style pane when the user hovers over a property declaration that has no effect due to properties of the parent element.\n   *@example {display: block} REASON_PROPERTY_DECLARATION_CODE\n   *@example {flex} AFFECTED_PROPERTY_DECLARATION_CODE\n   */\n  ruleViolatedByParentElementRuleReason:\n      'The {REASON_PROPERTY_DECLARATION_CODE} property on the parent element prevents {AFFECTED_PROPERTY_DECLARATION_CODE} from having an effect.',\n  /**\n   *@description The message shown in the Style pane when the user hovers over a property declaration that has no effect due to the properties of the parent element.\n   *@example {display: block} EXISTING_PARENT_ELEMENT_RULE\n   *@example {display: flex} TARGET_PARENT_ELEMENT_RULE\n   */\n  ruleViolatedByParentElementRuleFix:\n      'Try setting the {EXISTING_PARENT_ELEMENT_RULE} property on the parent to {TARGET_PARENT_ELEMENT_RULE}.',\n\n  /**\n   *@description The warning text shown in Elements panel when font-variation-settings don't match allowed values\n   *@example {wdth} PH1\n   *@example {100} PH2\n   *@example {10} PH3\n   *@example {20} PH4\n   *@example {Arial} PH5\n   */\n  fontVariationSettingsWarning:\n      'Value for setting “{PH1}” {PH2} is outside the supported range [{PH3}, {PH4}] for font-family “{PH5}”.',\n  /**\n   *@description The message shown in the Style pane when the user hovers over a property declaration that has no effect on flex or grid child items.\n   *@example {flex} CONTAINER_DISPLAY_NAME\n   *@example {align-contents} PROPERTY_NAME\n   */\n  flexGridContainerPropertyRuleReason:\n      'This element is a {CONTAINER_DISPLAY_NAME} item, i.e. a child of a {CONTAINER_DISPLAY_NAME} container, but {PROPERTY_NAME} only applies to containers.',\n  /**\n   *@description The message shown in the Style pane when the user hovers over a property declaration that has no effect on flex or grid child items.\n   *@example {align-contents} PROPERTY_NAME\n   *@example {align-self} ALTERNATIVE_PROPERTY_NAME\n   */\n  flexGridContainerPropertyRuleFix:\n      'Try setting the {PROPERTY_NAME} on the container element or use {ALTERNATIVE_PROPERTY_NAME} instead.',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/elements/CSSRuleValidator.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport const enum HintType {\n  INACTIVE_PROPERTY = 'ruleValidation',\n  DEPRECATED_PROPERTY = 'deprecatedProperty',\n}\n\nexport class Hint {\n  readonly #hintMessage: string;\n  readonly #possibleFixMessage: string|null;\n  readonly #learnMoreLink: string|undefined;\n\n  constructor(hintMessage: string, possibleFixMessage: string|null, learnMoreLink?: string) {\n    this.#hintMessage = hintMessage;\n    this.#possibleFixMessage = possibleFixMessage;\n    this.#learnMoreLink = learnMoreLink;\n  }\n\n  getMessage(): string {\n    return this.#hintMessage;\n  }\n\n  getPossibleFixMessage(): string|null {\n    return this.#possibleFixMessage;\n  }\n\n  getLearnMoreLink(): string|undefined {\n    return this.#learnMoreLink;\n  }\n}\n\nexport abstract class CSSRuleValidator {\n  getMetricType(): Host.UserMetrics.CSSHintType {\n    return Host.UserMetrics.CSSHintType.Other;\n  }\n\n  readonly #affectedProperties: string[];\n\n  constructor(affectedProperties: string[]) {\n    this.#affectedProperties = affectedProperties;\n  }\n\n  getApplicableProperties(): string[] {\n    return this.#affectedProperties;\n  }\n\n  abstract getHint(\n      propertyName: string, computedStyles?: Map<string, string>, parentComputedStyles?: Map<string, string>,\n      nodeName?: string, fontFaces?: Array<SDK.CSSFontFace.CSSFontFace>): Hint|undefined;\n}\n\nexport class AlignContentValidator extends CSSRuleValidator {\n  constructor() {\n    super(['align-content']);\n  }\n\n  override getMetricType(): Host.UserMetrics.CSSHintType {\n    return Host.UserMetrics.CSSHintType.AlignContent;\n  }\n\n  getHint(_propertyName: string, computedStyles?: Map<string, string>): Hint|undefined {\n    if (!computedStyles) {\n      return;\n    }\n    const isFlex = isFlexContainer(computedStyles);\n    if (!isFlex && !isBlockContainer(computedStyles) && !isGridContainer(computedStyles)) {\n      const reasonPropertyDeclaration = buildPropertyDefinitionText('display', computedStyles?.get('display'));\n      const affectedPropertyDeclarationCode = buildPropertyName('align-content');\n\n      return new Hint(\n          i18nString(UIStrings.ruleViolatedBySameElementRuleReason, {\n            'REASON_PROPERTY_DECLARATION_CODE': reasonPropertyDeclaration,\n            'AFFECTED_PROPERTY_DECLARATION_CODE': affectedPropertyDeclarationCode,\n          }),\n          i18nString(UIStrings.ruleViolatedBySameElementRuleFix, {\n            PROPERTY_NAME: buildPropertyName('display'),\n            PROPERTY_VALUE: buildPropertyValue(computedStyles?.get('display') as string),\n          }),\n      );\n    }\n\n    if (!isFlex) {\n      return;\n    }\n    if (computedStyles.get('flex-wrap') !== 'nowrap') {\n      return;\n    }\n\n    const reasonPropertyDeclaration = buildPropertyDefinitionText('flex-wrap', 'nowrap');\n    const affectedPropertyDeclarationCode = buildPropertyName('align-content');\n\n    return new Hint(\n        i18nString(UIStrings.ruleViolatedBySameElementRuleReason, {\n          'REASON_PROPERTY_DECLARATION_CODE': reasonPropertyDeclaration,\n          'AFFECTED_PROPERTY_DECLARATION_CODE': affectedPropertyDeclarationCode,\n        }),\n        i18nString(UIStrings.ruleViolatedBySameElementRuleFix, {\n          PROPERTY_NAME: buildPropertyName('flex-wrap'),\n          PROPERTY_VALUE: buildPropertyValue('nowrap'),\n        }),\n    );\n  }\n}\n\nexport class FlexItemValidator extends CSSRuleValidator {\n  constructor() {\n    super(['flex', 'flex-basis', 'flex-grow', 'flex-shrink']);\n  }\n\n  override getMetricType(): Host.UserMetrics.CSSHintType {\n    return Host.UserMetrics.CSSHintType.FlexItem;\n  }\n\n  getHint(propertyName: string, computedStyles?: Map<string, string>, parentComputedStyles?: Map<string, string>): Hint\n      |undefined {\n    if (!parentComputedStyles) {\n      return;\n    }\n    if (isFlexContainer(parentComputedStyles)) {\n      return;\n    }\n    const reasonPropertyDeclaration = buildPropertyDefinitionText('display', parentComputedStyles?.get('display'));\n    const affectedPropertyDeclarationCode = buildPropertyName(propertyName);\n    const targetParentPropertyDeclaration = buildPropertyDefinitionText('display', 'flex');\n    return new Hint(\n        i18nString(UIStrings.ruleViolatedByParentElementRuleReason, {\n          'REASON_PROPERTY_DECLARATION_CODE': reasonPropertyDeclaration,\n          'AFFECTED_PROPERTY_DECLARATION_CODE': affectedPropertyDeclarationCode,\n        }),\n        i18nString(UIStrings.ruleViolatedByParentElementRuleFix, {\n          'EXISTING_PARENT_ELEMENT_RULE': reasonPropertyDeclaration,\n          'TARGET_PARENT_ELEMENT_RULE': targetParentPropertyDeclaration,\n        }),\n    );\n  }\n}\n\nexport class FlexContainerValidator extends CSSRuleValidator {\n  constructor() {\n    super(['flex-direction', 'flex-flow', 'flex-wrap']);\n  }\n\n  override getMetricType(): Host.UserMetrics.CSSHintType {\n    return Host.UserMetrics.CSSHintType.FlexContainer;\n  }\n\n  getHint(propertyName: string, computedStyles?: Map<string, string>): Hint|undefined {\n    if (!computedStyles) {\n      return;\n    }\n    if (isFlexContainer(computedStyles)) {\n      return;\n    }\n    const reasonPropertyDeclaration = buildPropertyDefinitionText('display', computedStyles?.get('display'));\n    const targetRuleCode = buildPropertyDefinitionText('display', 'flex');\n    const affectedPropertyDeclarationCode = buildPropertyName(propertyName);\n\n    return new Hint(\n        i18nString(UIStrings.ruleViolatedBySameElementRuleReason, {\n          'REASON_PROPERTY_DECLARATION_CODE': reasonPropertyDeclaration,\n          'AFFECTED_PROPERTY_DECLARATION_CODE': affectedPropertyDeclarationCode,\n        }),\n        i18nString(UIStrings.ruleViolatedBySameElementRuleChangeSuggestion, {\n          'EXISTING_PROPERTY_DECLARATION': reasonPropertyDeclaration,\n          'TARGET_PROPERTY_DECLARATION': targetRuleCode,\n        }),\n    );\n  }\n}\n\nexport class GridContainerValidator extends CSSRuleValidator {\n  constructor() {\n    super([\n      'grid',\n      'grid-auto-columns',\n      'grid-auto-flow',\n      'grid-auto-rows',\n      'grid-template',\n      'grid-template-areas',\n      'grid-template-columns',\n      'grid-template-rows',\n    ]);\n  }\n\n  override getMetricType(): Host.UserMetrics.CSSHintType {\n    return Host.UserMetrics.CSSHintType.GridContainer;\n  }\n\n  getHint(propertyName: string, computedStyles?: Map<string, string>): Hint|undefined {\n    if (isGridContainer(computedStyles)) {\n      return;\n    }\n    const reasonPropertyDeclaration = buildPropertyDefinitionText('display', computedStyles?.get('display'));\n    const targetRuleCode = buildPropertyDefinitionText('display', 'grid');\n    const affectedPropertyDeclarationCode = buildPropertyName(propertyName);\n\n    return new Hint(\n        i18nString(UIStrings.ruleViolatedBySameElementRuleReason, {\n          'REASON_PROPERTY_DECLARATION_CODE': reasonPropertyDeclaration,\n          'AFFECTED_PROPERTY_DECLARATION_CODE': affectedPropertyDeclarationCode,\n        }),\n        i18nString(UIStrings.ruleViolatedBySameElementRuleChangeSuggestion, {\n          'EXISTING_PROPERTY_DECLARATION': reasonPropertyDeclaration,\n          'TARGET_PROPERTY_DECLARATION': targetRuleCode,\n        }),\n    );\n  }\n}\n\nexport class GridItemValidator extends CSSRuleValidator {\n  constructor() {\n    super([\n      'grid-area',\n      'grid-column',\n      'grid-row',\n      'grid-row-end',\n      'grid-row-start',\n      // At the time of writing (November 2022), `justify-self` is only in effect in grid layout.\n      // There are no other browsers that support `justify-self` in other layouts.\n      // https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Box_Alignment/Box_Alignment_In_Block_Abspos_Tables\n      // TODO: move `justify-self` to other validator or change pop-over text if Chrome supports CSS Align in other layouts.\n      'justify-self',\n    ]);\n  }\n\n  override getMetricType(): Host.UserMetrics.CSSHintType {\n    return Host.UserMetrics.CSSHintType.GridItem;\n  }\n\n  getHint(propertyName: string, computedStyles?: Map<string, string>, parentComputedStyles?: Map<string, string>): Hint\n      |undefined {\n    if (!parentComputedStyles) {\n      return;\n    }\n    if (isGridContainer(parentComputedStyles)) {\n      return;\n    }\n    const reasonPropertyDeclaration = buildPropertyDefinitionText('display', parentComputedStyles?.get('display'));\n    const targetParentPropertyDeclaration = buildPropertyDefinitionText('display', 'grid');\n    const affectedPropertyDeclarationCode = buildPropertyName(propertyName);\n\n    return new Hint(\n        i18nString(UIStrings.ruleViolatedByParentElementRuleReason, {\n          'REASON_PROPERTY_DECLARATION_CODE': reasonPropertyDeclaration,\n          'AFFECTED_PROPERTY_DECLARATION_CODE': affectedPropertyDeclarationCode,\n        }),\n        i18nString(UIStrings.ruleViolatedByParentElementRuleFix, {\n          'EXISTING_PARENT_ELEMENT_RULE': reasonPropertyDeclaration,\n          'TARGET_PARENT_ELEMENT_RULE': targetParentPropertyDeclaration,\n        }),\n    );\n  }\n}\n\nexport class FlexOrGridItemValidator extends CSSRuleValidator {\n  constructor() {\n    super([\n      'place-self',\n      'align-self',\n      'order',\n    ]);\n  }\n\n  override getMetricType(): Host.UserMetrics.CSSHintType {\n    return Host.UserMetrics.CSSHintType.FlexOrGridItem;\n  }\n\n  getHint(propertyName: string, computedStyles?: Map<string, string>, parentComputedStyles?: Map<string, string>): Hint\n      |undefined {\n    if (!parentComputedStyles) {\n      return;\n    }\n    if (isFlexContainer(parentComputedStyles) || isGridContainer(parentComputedStyles)) {\n      return;\n    }\n    const reasonPropertyDeclaration = buildPropertyDefinitionText('display', parentComputedStyles?.get('display'));\n    const targetParentPropertyDeclaration =\n        `${buildPropertyDefinitionText('display', 'flex')} or ${buildPropertyDefinitionText('display', 'grid')}`;\n    const affectedPropertyDeclarationCode = buildPropertyName(propertyName);\n\n    return new Hint(\n        i18nString(UIStrings.ruleViolatedByParentElementRuleReason, {\n          'REASON_PROPERTY_DECLARATION_CODE': reasonPropertyDeclaration,\n          'AFFECTED_PROPERTY_DECLARATION_CODE': affectedPropertyDeclarationCode,\n        }),\n        i18nString(UIStrings.ruleViolatedByParentElementRuleFix, {\n          'EXISTING_PARENT_ELEMENT_RULE': reasonPropertyDeclaration,\n          'TARGET_PARENT_ELEMENT_RULE': targetParentPropertyDeclaration,\n        }),\n    );\n  }\n}\n\nexport class FlexGridValidator extends CSSRuleValidator {\n  constructor() {\n    super([\n      'justify-content',\n      'place-content',  // Shorthand\t<'align-content'> <'justify-content'>?\n      'align-items',\n    ]);\n  }\n\n  override getMetricType(): Host.UserMetrics.CSSHintType {\n    return Host.UserMetrics.CSSHintType.FlexGrid;\n  }\n\n  getHint(propertyName: string, computedStyles?: Map<string, string>, parentComputedStyles?: Map<string, string>): Hint\n      |undefined {\n    if (!computedStyles) {\n      return;\n    }\n\n    if (isFlexContainer(computedStyles) || isGridContainer(computedStyles)) {\n      return;\n    }\n\n    if (parentComputedStyles && (isFlexContainer(parentComputedStyles) || isGridContainer(parentComputedStyles))) {\n      const reasonContainerDisplayName = buildPropertyValue(parentComputedStyles.get('display') as string);\n      const reasonPropertyName = buildPropertyName(propertyName);\n      const reasonAlternativePropertyName =\n          buildPropertyName(propertyName === 'justify-content' ? 'justify-self' : 'align-self');\n      return new Hint(\n          i18nString(UIStrings.flexGridContainerPropertyRuleReason, {\n            'CONTAINER_DISPLAY_NAME': reasonContainerDisplayName,\n            'PROPERTY_NAME': reasonPropertyName,\n          }),\n          i18nString(UIStrings.flexGridContainerPropertyRuleFix, {\n            'PROPERTY_NAME': reasonPropertyName,\n            'ALTERNATIVE_PROPERTY_NAME': reasonAlternativePropertyName,\n          }),\n      );\n    }\n\n    const reasonPropertyDeclaration = buildPropertyDefinitionText('display', computedStyles.get('display'));\n    const affectedPropertyDeclarationCode = buildPropertyName(propertyName);\n\n    return new Hint(\n        i18nString(UIStrings.ruleViolatedBySameElementRuleReason, {\n          'REASON_PROPERTY_DECLARATION_CODE': reasonPropertyDeclaration,\n          'AFFECTED_PROPERTY_DECLARATION_CODE': affectedPropertyDeclarationCode,\n        }),\n        i18nString(UIStrings.ruleViolatedBySameElementRuleChangeFlexOrGrid, {\n          'DISPLAY_GRID_RULE': buildPropertyDefinitionText('display', 'grid'),\n          'DISPLAY_FLEX_RULE': buildPropertyDefinitionText('display', 'flex'),\n        }),\n    );\n  }\n}\n\nexport class MulticolFlexGridValidator extends CSSRuleValidator {\n  constructor() {\n    super([\n      'gap',\n      'column-gap',\n      'row-gap',\n      'grid-gap',\n      'grid-column-gap',\n      'grid-column-end',\n      'grid-row-gap',\n    ]);\n  }\n\n  override getMetricType(): Host.UserMetrics.CSSHintType {\n    return Host.UserMetrics.CSSHintType.MulticolFlexGrid;\n  }\n\n  getHint(propertyName: string, computedStyles?: Map<string, string>): Hint|undefined {\n    if (!computedStyles) {\n      return;\n    }\n\n    if (isMulticolContainer(computedStyles) || isFlexContainer(computedStyles) || isGridContainer(computedStyles)) {\n      return;\n    }\n\n    const reasonPropertyDeclaration = buildPropertyDefinitionText('display', computedStyles?.get('display'));\n    const affectedPropertyDeclarationCode = buildPropertyName(propertyName);\n\n    return new Hint(\n        i18nString(UIStrings.ruleViolatedBySameElementRuleReason, {\n          'REASON_PROPERTY_DECLARATION_CODE': reasonPropertyDeclaration,\n          'AFFECTED_PROPERTY_DECLARATION_CODE': affectedPropertyDeclarationCode,\n        }),\n        i18nString(UIStrings.ruleViolatedBySameElementRuleFix, {\n          PROPERTY_NAME: buildPropertyName('display'),\n          PROPERTY_VALUE: buildPropertyValue(computedStyles?.get('display') as string),\n        }),\n    );\n  }\n}\n\nexport class PaddingValidator extends CSSRuleValidator {\n  constructor() {\n    super([\n      'padding',\n      'padding-top',\n      'padding-right',\n      'padding-bottom',\n      'padding-left',\n    ]);\n  }\n\n  override getMetricType(): Host.UserMetrics.CSSHintType {\n    return Host.UserMetrics.CSSHintType.Padding;\n  }\n\n  getHint(propertyName: string, computedStyles?: Map<string, string>): Hint|undefined {\n    const display = computedStyles?.get('display');\n    if (!display) {\n      return;\n    }\n    const tableAttributes = [\n      'table-row-group',\n      'table-header-group',\n      'table-footer-group',\n      'table-row',\n      'table-column-group',\n      'table-column',\n    ];\n    if (!tableAttributes.includes(display)) {\n      return;\n    }\n\n    const reasonPropertyDeclaration = buildPropertyDefinitionText('display', computedStyles?.get('display'));\n    const affectedPropertyDeclarationCode = buildPropertyName(propertyName);\n\n    return new Hint(\n        i18nString(UIStrings.ruleViolatedBySameElementRuleReason, {\n          'REASON_PROPERTY_DECLARATION_CODE': reasonPropertyDeclaration,\n          'AFFECTED_PROPERTY_DECLARATION_CODE': affectedPropertyDeclarationCode,\n        }),\n        i18nString(UIStrings.ruleViolatedBySameElementRuleFix, {\n          PROPERTY_NAME: buildPropertyName('display'),\n          PROPERTY_VALUE: buildPropertyValue(computedStyles?.get('display') as string),\n        }),\n    );\n  }\n}\n\nexport class PositionValidator extends CSSRuleValidator {\n  constructor() {\n    super([\n      'top',\n      'right',\n      'bottom',\n      'left',\n    ]);\n  }\n\n  override getMetricType(): Host.UserMetrics.CSSHintType {\n    return Host.UserMetrics.CSSHintType.Position;\n  }\n\n  getHint(propertyName: string, computedStyles?: Map<string, string>): Hint|undefined {\n    const position = computedStyles?.get('position');\n    if (!position) {\n      return;\n    }\n    if (position !== 'static') {\n      return;\n    }\n\n    const reasonPropertyDeclaration = buildPropertyDefinitionText('position', computedStyles?.get('position'));\n    const affectedPropertyDeclarationCode = buildPropertyName(propertyName);\n\n    return new Hint(\n        i18nString(UIStrings.ruleViolatedBySameElementRuleReason, {\n          'REASON_PROPERTY_DECLARATION_CODE': reasonPropertyDeclaration,\n          'AFFECTED_PROPERTY_DECLARATION_CODE': affectedPropertyDeclarationCode,\n        }),\n        i18nString(UIStrings.ruleViolatedBySameElementRuleFix, {\n          PROPERTY_NAME: buildPropertyName('position'),\n          PROPERTY_VALUE: buildPropertyValue(computedStyles?.get('position') as string),\n        }),\n    );\n  }\n}\n\nexport class ZIndexValidator extends CSSRuleValidator {\n  constructor() {\n    super([\n      'z-index',\n    ]);\n  }\n\n  override getMetricType(): Host.UserMetrics.CSSHintType {\n    return Host.UserMetrics.CSSHintType.ZIndex;\n  }\n\n  getHint(propertyName: string, computedStyles?: Map<string, string>, parentComputedStyles?: Map<string, string>): Hint\n      |undefined {\n    const position = computedStyles?.get('position');\n    if (!position) {\n      return;\n    }\n    if (['absolute', 'relative', 'fixed', 'sticky'].includes(position) || isFlexContainer(parentComputedStyles) ||\n        isGridContainer(parentComputedStyles)) {\n      return;\n    }\n\n    const reasonPropertyDeclaration = buildPropertyDefinitionText('position', computedStyles?.get('position'));\n    const affectedPropertyDeclarationCode = buildPropertyName(propertyName);\n\n    return new Hint(\n        i18nString(UIStrings.ruleViolatedBySameElementRuleReason, {\n          'REASON_PROPERTY_DECLARATION_CODE': reasonPropertyDeclaration,\n          'AFFECTED_PROPERTY_DECLARATION_CODE': affectedPropertyDeclarationCode,\n        }),\n        i18nString(UIStrings.ruleViolatedBySameElementRuleFix, {\n          PROPERTY_NAME: buildPropertyName('position'),\n          PROPERTY_VALUE: buildPropertyValue(computedStyles?.get('position') as string),\n        }),\n    );\n  }\n}\n\n/**\n * Validates if CSS width/height are having an effect on an element.\n * See \"Applies to\" in https://www.w3.org/TR/css-sizing-3/#propdef-width.\n * See \"Applies to\" in https://www.w3.org/TR/css-sizing-3/#propdef-height.\n */\nexport class SizingValidator extends CSSRuleValidator {\n  constructor() {\n    super([\n      'width',\n      'height',\n    ]);\n  }\n\n  override getMetricType(): Host.UserMetrics.CSSHintType {\n    return Host.UserMetrics.CSSHintType.Sizing;\n  }\n\n  getHint(\n      propertyName: string, computedStyles?: Map<string, string>, parentComputedStyles?: Map<string, string>,\n      nodeName?: string): Hint|undefined {\n    if (!computedStyles || !nodeName) {\n      return;\n    }\n    if (!isInlineElement(computedStyles)) {\n      return;\n    }\n    // See https://html.spec.whatwg.org/multipage/rendering.html#replaced-elements.\n    if (isPossiblyReplacedElement(nodeName)) {\n      return;\n    }\n\n    const reasonPropertyDeclaration = buildPropertyDefinitionText('display', computedStyles?.get('display'));\n    const affectedPropertyDeclarationCode = buildPropertyName(propertyName);\n\n    return new Hint(\n        i18nString(UIStrings.ruleViolatedBySameElementRuleReason, {\n          'REASON_PROPERTY_DECLARATION_CODE': reasonPropertyDeclaration,\n          'AFFECTED_PROPERTY_DECLARATION_CODE': affectedPropertyDeclarationCode,\n        }),\n        i18nString(UIStrings.ruleViolatedBySameElementRuleFix, {\n          PROPERTY_NAME: buildPropertyName('display'),\n          PROPERTY_VALUE: buildPropertyValue(computedStyles?.get('display') as string),\n        }),\n    );\n  }\n}\n\n/**\n * Checks that font variation settings are applicable to the actual font.\n */\nexport class FontVariationSettingsValidator extends CSSRuleValidator {\n  constructor() {\n    super([\n      'font-variation-settings',\n    ]);\n  }\n\n  override getMetricType(): Host.UserMetrics.CSSHintType {\n    return Host.UserMetrics.CSSHintType.FontVariationSettings;\n  }\n\n  getHint(\n      propertyName: string, computedStyles?: Map<string, string>, parentComputedStyles?: Map<string, string>,\n      nodeName?: string, fontFaces?: Array<SDK.CSSFontFace.CSSFontFace>): Hint|undefined {\n    if (!computedStyles) {\n      return;\n    }\n    const value = computedStyles.get('font-variation-settings');\n    if (!value) {\n      return;\n    }\n    const fontFamily = computedStyles.get('font-family');\n    if (!fontFamily) {\n      return;\n    }\n    const fontFamilies = new Set<string>(SDK.CSSPropertyParser.parseFontFamily(fontFamily));\n    const matchingFontFaces = (fontFaces || []).filter(f => fontFamilies.has(f.getFontFamily()));\n    const variationSettings = SDK.CSSPropertyParser.parseFontVariationSettings(value);\n    const warnings = [];\n    for (const elementSetting of variationSettings) {\n      for (const font of matchingFontFaces) {\n        const fontSetting = font.getVariationAxisByTag(elementSetting.tag);\n        if (!fontSetting) {\n          continue;\n        }\n        if (elementSetting.value < fontSetting.minValue || elementSetting.value > fontSetting.maxValue) {\n          warnings.push(i18nString(UIStrings.fontVariationSettingsWarning, {\n            PH1: elementSetting.tag,\n            PH2: elementSetting.value,\n            PH3: fontSetting.minValue,\n            PH4: fontSetting.maxValue,\n            PH5: font.getFontFamily(),\n          }));\n        }\n      }\n    }\n\n    if (!warnings.length) {\n      return;\n    }\n\n    return new Hint(\n        warnings.join(' '),\n        '',\n    );\n  }\n}\n\nconst CSS_RULE_VALIDATORS = [\n  AlignContentValidator,\n  FlexContainerValidator,\n  FlexGridValidator,\n  FlexItemValidator,\n  FlexOrGridItemValidator,\n  FontVariationSettingsValidator,\n  GridContainerValidator,\n  GridItemValidator,\n  MulticolFlexGridValidator,\n  PaddingValidator,\n  PositionValidator,\n  SizingValidator,\n  ZIndexValidator,\n];\n\nconst setupCSSRulesValidators = (): Map<string, CSSRuleValidator[]> => {\n  const validatorsMap = new Map<string, CSSRuleValidator[]>();\n  for (const validatorClass of CSS_RULE_VALIDATORS) {\n    const validator = new validatorClass();\n    const affectedProperties = validator.getApplicableProperties();\n\n    for (const affectedProperty of affectedProperties) {\n      let propertyValidators = validatorsMap.get(affectedProperty);\n      if (propertyValidators === undefined) {\n        propertyValidators = [];\n      }\n      propertyValidators.push(validator);\n\n      validatorsMap.set(affectedProperty, propertyValidators);\n    }\n  }\n  return validatorsMap;\n};\n\nexport const cssRuleValidatorsMap: Map<string, CSSRuleValidator[]> = setupCSSRulesValidators();\n"]}