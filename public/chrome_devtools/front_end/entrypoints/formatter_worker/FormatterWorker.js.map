{"version":3,"file":"FormatterWorker.js","sourceRoot":"","sources":["../../../../../../front_end/entrypoints/formatter_worker/FormatterWorker.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2011 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as Platform from '../../core/platform/platform.js';\nimport * as Root from '../../core/root/root.js';\nimport * as Acorn from '../../third_party/acorn/acorn.js';\n\n// This file is required to bring some types into scope, even though it\n// is not used.\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport type * as CodeMirrorModule from '../../third_party/codemirror/codemirror-legacy.js';\n\nimport {AcornTokenizer, ECMA_VERSION} from './AcornTokenizer.js';\nimport {CSSFormatter} from './CSSFormatter.js';\nimport {FormattedContentBuilder} from './FormattedContentBuilder.js';\nimport {FormattableMediaTypes, type FormatResult} from './FormatterActions.js';\nimport {HTMLFormatter} from './HTMLFormatter.js';\nimport {IdentityFormatter} from './IdentityFormatter.js';\nimport {JavaScriptFormatter} from './JavaScriptFormatter.js';\nimport {JSONFormatter} from './JSONFormatter.js';\nimport {substituteExpression} from './Substitute.js';\n\nexport interface Chunk {\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  chunk: any[];\n  isLastChunk: boolean;\n}\n\nexport type ChunkCallback = (arg0: Chunk) => void;\n\nexport function createTokenizer(mimeType: string): (\n    arg0: string, arg1: (arg0: string, arg1: string|null, arg2: number, arg3: number) => (Object | undefined | void)) =>\n    void {\n  const mode = CodeMirror.getMode({indentUnit: 2}, mimeType);\n  const state = CodeMirror.startState(mode);\n\n  if (!mode || mode.name === 'null') {\n    throw new Error(`Could not find CodeMirror mode for MimeType: ${mimeType}`);\n  }\n\n  if (!mode.token) {\n    throw new Error(`Could not find CodeMirror mode with token method: ${mimeType}`);\n  }\n\n  return (line: string,\n          callback: (arg0: string, arg1: string|null, arg2: number, arg3: number) => void|Object|undefined) => {\n    const stream = new CodeMirror.StringStream(line);\n    while (!stream.eol()) {\n      const style = mode.token(stream, state);\n      const value = stream.current();\n      if (callback(value, style, stream.start, stream.start + value.length) === AbortTokenization) {\n        return;\n      }\n      stream.start = stream.pos;\n    }\n  };\n}\n\nexport const AbortTokenization = {};\n\nexport function evaluatableJavaScriptSubstring(content: string): string {\n  try {\n    const tokenizer = Acorn.tokenizer(content, {ecmaVersion: ECMA_VERSION});\n    let token = tokenizer.getToken();\n    while (AcornTokenizer.punctuator(token)) {\n      token = tokenizer.getToken();\n    }\n\n    const startIndex = token.start;\n    let endIndex = token.end;\n    while (token.type !== Acorn.tokTypes.eof) {\n      const isIdentifier = token.type === Acorn.tokTypes.name || token.type === Acorn.tokTypes.privateId;\n      const isThis = AcornTokenizer.keyword(token, 'this');\n      const isString = token.type === Acorn.tokTypes.string;\n      if (!isThis && !isIdentifier && !isString) {\n        break;\n      }\n\n      endIndex = token.end;\n      token = tokenizer.getToken();\n\n      while (AcornTokenizer.punctuator(token, '[')) {\n        let openBracketCounter = 0;\n        do {\n          if (AcornTokenizer.punctuator(token, '[')) {\n            ++openBracketCounter;\n          }\n          token = tokenizer.getToken();\n          if (AcornTokenizer.punctuator(token, ']')) {\n            if (--openBracketCounter === 0) {\n              endIndex = token.end;\n              token = tokenizer.getToken();\n              break;\n            }\n          }\n        } while (token.type !== Acorn.tokTypes.eof);\n      }\n\n      if (!AcornTokenizer.punctuator(token, '.')) {\n        break;\n      }\n\n      token = tokenizer.getToken();\n    }\n    return content.substring(startIndex, endIndex);\n  } catch (e) {\n    console.error(e);\n    return '';\n  }\n}\n\nexport function format(mimeType: string, text: string, indentString?: string): FormatResult {\n  // Default to a 4-space indent.\n  indentString = indentString || '    ';\n\n  let result: FormatResult;\n  const builder = new FormattedContentBuilder(indentString);\n  const lineEndings = Platform.StringUtilities.findLineEndingIndexes(text);\n  try {\n    switch (mimeType) {\n      case FormattableMediaTypes.TEXT_HTML: {\n        const formatter = new HTMLFormatter(builder);\n        formatter.format(text, lineEndings);\n        break;\n      }\n      case FormattableMediaTypes.TEXT_CSS: {\n        const formatter = new CSSFormatter(builder);\n        formatter.format(text, lineEndings, 0, text.length);\n        break;\n      }\n      case FormattableMediaTypes.APPLICATION_JAVASCRIPT:\n      case FormattableMediaTypes.TEXT_JAVASCRIPT: {\n        const formatter = new JavaScriptFormatter(builder);\n        formatter.format(text, lineEndings, 0, text.length);\n        break;\n      }\n      case FormattableMediaTypes.APPLICATION_JSON:\n      case FormattableMediaTypes.APPLICATION_MANIFEST_JSON: {\n        const formatter = new JSONFormatter(builder);\n        formatter.format(text, lineEndings, 0, text.length);\n        break;\n      }\n      default: {\n        const formatter = new IdentityFormatter(builder);\n        formatter.format(text, lineEndings, 0, text.length);\n      }\n    }\n    result = {\n      mapping: builder.mapping,\n      content: builder.content(),\n    };\n  } catch (e) {\n    console.error(e);\n    result = {\n      mapping: {original: [0], formatted: [0]},\n      content: text,\n    };\n  }\n  return result;\n}\n\n(function disableLoggingForTest(): void {\n  if (Root.Runtime.Runtime.queryParam('test')) {\n    console.error = () => undefined;\n  }\n})();\n\nexport {substituteExpression};\n"]}