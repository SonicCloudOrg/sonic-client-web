{"version":3,"file":"TraceHelpers.js","sourceRoot":"","sources":["../../../../../front_end/testing/TraceHelpers.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nimport * as SDK from '../core/sdk/sdk.js';\nimport type * as Protocol from '../generated/protocol.js';\nimport * as Bindings from '../models/bindings/bindings.js';\nimport * as CPUProfile from '../models/cpu_profile/cpu_profile.js';\nimport * as TraceEngine from '../models/trace/trace.js';\nimport * as Workspace from '../models/workspace/workspace.js';\nimport * as Timeline from '../panels/timeline/timeline.js';\nimport * as PerfUI from '../ui/legacy/components/perf_ui/perf_ui.js';\n\nimport {initializeGlobalVars} from './EnvironmentHelpers.js';\nimport {TraceLoader} from './TraceLoader.js';\n\n// This mock class is used for instancing a flame chart in the helpers.\n// Its implementation is empty because the methods aren't used by the\n// helpers, only the mere definition.\nexport class MockFlameChartDelegate implements PerfUI.FlameChart.FlameChartDelegate {\n  windowChanged(_startTime: number, _endTime: number, _animate: boolean): void {\n  }\n  updateRangeSelection(_startTime: number, _endTime: number): void {\n  }\n  updateSelectedGroup(_flameChart: PerfUI.FlameChart.FlameChart, _group: PerfUI.FlameChart.Group|null): void {\n  }\n}\n\n/**\n * Draws a set of tracks track in the flame chart using the new system.\n * For this to work, every track that will be rendered must have a\n * corresponding track appender registered in the\n * CompatibilityTracksAppender.\n *\n * @param traceFileName The name of the trace file to be loaded into the\n * flame chart.\n * @param trackAppenderNames A Set with the names of the tracks to be\n * rendered. For example, Set(\"Timings\").\n * @param expanded whether the track should be expanded\n * @param trackName optional param to filter tracks by their name.\n * @returns a flame chart element and its corresponding data provider.\n */\nexport async function getMainFlameChartWithTracks(\n    traceFileName: string, trackAppenderNames: Set<Timeline.CompatibilityTracksAppender.TrackAppenderName>,\n    expanded: boolean, trackName?: string): Promise<{\n  flameChart: PerfUI.FlameChart.FlameChart,\n  dataProvider: Timeline.TimelineFlameChartDataProvider.TimelineFlameChartDataProvider,\n}> {\n  await initializeGlobalVars();\n\n  // This function is used to load a component example.\n  const traceParsedData = await TraceLoader.traceEngine(/* context= */ null, traceFileName);\n\n  const dataProvider = new Timeline.TimelineFlameChartDataProvider.TimelineFlameChartDataProvider();\n  // The data provider still needs a reference to the legacy model to\n  // work properly.\n  dataProvider.setModel(traceParsedData);\n  const tracksAppender = dataProvider.compatibilityTracksAppenderInstance();\n  tracksAppender.setVisibleTracks(trackAppenderNames);\n  dataProvider.buildFromTrackAppenders(\n      {filterThreadsByName: trackName, expandedTracks: expanded ? trackAppenderNames : undefined});\n  const delegate = new MockFlameChartDelegate();\n  const flameChart = new PerfUI.FlameChart.FlameChart(dataProvider, delegate);\n  const minTime = TraceEngine.Helpers.Timing.microSecondsToMilliseconds(traceParsedData.Meta.traceBounds.min);\n  const maxTime = TraceEngine.Helpers.Timing.microSecondsToMilliseconds(traceParsedData.Meta.traceBounds.max);\n  flameChart.setWindowTimes(minTime, maxTime);\n  flameChart.markAsRoot();\n  flameChart.update();\n  return {flameChart, dataProvider};\n}\n\n/**\n * Draws the network track in the flame chart using the legacy system.\n *\n * @param traceFileName The name of the trace file to be loaded to the flame\n * chart.\n * @param expanded if the track is expanded\n * @returns a flame chart element and its corresponding data provider.\n */\nexport async function getNetworkFlameChart(traceFileName: string, expanded: boolean): Promise<{\n  flameChart: PerfUI.FlameChart.FlameChart,\n  dataProvider: Timeline.TimelineFlameChartNetworkDataProvider.TimelineFlameChartNetworkDataProvider,\n}> {\n  await initializeGlobalVars();\n\n  const traceParsedData = await TraceLoader.traceEngine(/* context= */ null, traceFileName);\n  const minTime = TraceEngine.Helpers.Timing.microSecondsToMilliseconds(traceParsedData.Meta.traceBounds.min);\n  const maxTime = TraceEngine.Helpers.Timing.microSecondsToMilliseconds(traceParsedData.Meta.traceBounds.max);\n  const dataProvider = new Timeline.TimelineFlameChartNetworkDataProvider.TimelineFlameChartNetworkDataProvider();\n  dataProvider.setModel(traceParsedData);\n  dataProvider.setWindowTimes(minTime, maxTime);\n  dataProvider.timelineData().groups.forEach(group => {\n    group.expanded = expanded;\n  });\n\n  const delegate = new MockFlameChartDelegate();\n  const flameChart = new PerfUI.FlameChart.FlameChart(dataProvider, delegate);\n  flameChart.setWindowTimes(minTime, maxTime);\n  flameChart.markAsRoot();\n  flameChart.update();\n  return {flameChart, dataProvider};\n}\n\n// We create here a cross-test base trace event. It is assumed that each\n// test will import this default event and copy-override properties at will.\nexport const defaultTraceEvent: TraceEngine.Types.TraceEvents.TraceEventData = {\n  name: 'process_name',\n  tid: TraceEngine.Types.TraceEvents.ThreadID(0),\n  pid: TraceEngine.Types.TraceEvents.ProcessID(0),\n  ts: TraceEngine.Types.Timing.MicroSeconds(0),\n  cat: 'test',\n  ph: TraceEngine.Types.TraceEvents.Phase.METADATA,\n};\n\n/**\n * Gets the tree in a thread.\n * @see RendererHandler.ts\n */\nexport function getTree(thread: TraceEngine.Handlers.ModelHandlers.Renderer.RendererThread):\n    TraceEngine.Helpers.TreeHelpers.TraceEntryTree {\n  const tree = thread.tree;\n  if (!tree) {\n    assert(false, `Couldn't get tree in thread ${thread.name}`);\n  }\n  return tree;\n}\n\n/**\n * Gets the n-th root from a tree in a thread.\n * @see RendererHandler.ts\n */\nexport function getRootAt(thread: TraceEngine.Handlers.ModelHandlers.Renderer.RendererThread, index: number):\n    TraceEngine.Helpers.TreeHelpers.TraceEntryNode {\n  const tree = getTree(thread);\n  const node = [...tree.roots][index];\n  if (node === undefined) {\n    assert(false, `Couldn't get the id of the root at index ${index} in thread ${thread.name}`);\n  }\n  return node;\n}\n\n/**\n * Gets all nodes in a thread. To finish this task, we Walk through all the nodes, starting from the root node.\n */\nexport function getAllNodes(roots: Set<TraceEngine.Helpers.TreeHelpers.TraceEntryNode>):\n    TraceEngine.Helpers.TreeHelpers.TraceEntryNode[] {\n  const allNodes: TraceEngine.Helpers.TreeHelpers.TraceEntryNode[] = [];\n\n  const children: TraceEngine.Helpers.TreeHelpers.TraceEntryNode[] = Array.from(roots);\n  while (children.length > 0) {\n    const childNode = children.shift();\n    if (childNode) {\n      allNodes.push(childNode);\n      children.push(...childNode.children);\n    }\n  }\n  return allNodes;\n}\n\n/**\n * Gets the node with an id from a tree in a thread.\n * @see RendererHandler.ts\n */\nexport function getNodeFor(\n    thread: TraceEngine.Handlers.ModelHandlers.Renderer.RendererThread,\n    nodeId: TraceEngine.Helpers.TreeHelpers.TraceEntryNodeId): TraceEngine.Helpers.TreeHelpers.TraceEntryNode {\n  const tree = getTree(thread);\n\n  function findNode(\n      nodes: Set<TraceEngine.Helpers.TreeHelpers.TraceEntryNode>|TraceEngine.Helpers.TreeHelpers.TraceEntryNode[],\n      nodeId: TraceEngine.Helpers.TreeHelpers.TraceEntryNodeId): TraceEngine.Helpers.TreeHelpers.TraceEntryNode|\n      undefined {\n    for (const node of nodes) {\n      const event = node.entry;\n      if (TraceEngine.Types.TraceEvents.isProfileCall(event) && event.nodeId === nodeId) {\n        return node;\n      }\n      return findNode(node.children, nodeId);\n    }\n    return undefined;\n  }\n  const node = findNode(tree.roots, nodeId);\n  if (!node) {\n    assert(false, `Couldn't get the node with id ${nodeId} in thread ${thread.name}`);\n  }\n  return node;\n}\n\n/**\n * Gets all the `events` for the `nodes`.\n */\nexport function getEventsIn(nodes: IterableIterator<TraceEngine.Helpers.TreeHelpers.TraceEntryNode>):\n    TraceEngine.Types.TraceEvents.TraceEventData[] {\n  return [...nodes].flatMap(node => node ? node.entry : []);\n}\n/**\n * Pretty-prints a tree.\n */\nexport function prettyPrint(\n    tree: TraceEngine.Helpers.TreeHelpers.TraceEntryTree,\n    predicate: (\n        node: TraceEngine.Helpers.TreeHelpers.TraceEntryNode,\n        event: TraceEngine.Types.TraceEvents.SyntheticTraceEntry) => boolean = () => true,\n    indentation: number = 2, delimiter: string = ' ', prefix: string = '-', newline: string = '\\n',\n    out: string = ''): string {\n  let skipped = false;\n  return printNodes(tree.roots);\n  function printNodes(nodes: Set<TraceEngine.Helpers.TreeHelpers.TraceEntryNode>|\n                      TraceEngine.Helpers.TreeHelpers.TraceEntryNode[]): string {\n    for (const node of nodes) {\n      const event = node.entry;\n      if (!predicate(node, event)) {\n        out += `${!skipped ? newline : ''}.`;\n        skipped = true;\n        continue;\n      }\n      skipped = false;\n      const spacing = new Array(node.depth * indentation).fill(delimiter).join('');\n      const eventType =\n          TraceEngine.Types.TraceEvents.isTraceEventDispatch(event) ? `(${event.args.data?.type})` : false;\n      const jsFunctionName = TraceEngine.Types.TraceEvents.isProfileCall(event) ?\n          `(${event.callFrame.functionName || 'anonymous'})` :\n          false;\n      const duration = `[${(event.dur || 0) / 1000}ms]`;\n      const info = [jsFunctionName, eventType, duration].filter(Boolean);\n      out += `${newline}${spacing}${prefix}${event.name} ${info.join(' ')}`;\n      out = printNodes(node.children);\n    }\n    return out;\n  }\n}\n\n/**\n * Builds a mock TraceEventComplete.\n */\nexport function makeCompleteEvent(\n    name: string, ts: number, dur: number, cat: string = '*', pid: number = 0,\n    tid: number = 0): TraceEngine.Types.TraceEvents.TraceEventComplete {\n  return {\n    args: {},\n    cat,\n    name,\n    ph: TraceEngine.Types.TraceEvents.Phase.COMPLETE,\n    pid: TraceEngine.Types.TraceEvents.ProcessID(pid),\n    tid: TraceEngine.Types.TraceEvents.ThreadID(tid),\n    ts: TraceEngine.Types.Timing.MicroSeconds(ts),\n    dur: TraceEngine.Types.Timing.MicroSeconds(dur),\n  };\n}\n\nexport function makeAsyncStartEvent(\n    name: string,\n    ts: number,\n    pid: number = 0,\n    tid: number = 0,\n    ): TraceEngine.Types.TraceEvents.TraceEventAsync {\n  return {\n    args: {},\n    cat: '*',\n    name,\n    ph: TraceEngine.Types.TraceEvents.Phase.ASYNC_NESTABLE_START,\n    pid: TraceEngine.Types.TraceEvents.ProcessID(pid),\n    tid: TraceEngine.Types.TraceEvents.ThreadID(tid),\n    ts: TraceEngine.Types.Timing.MicroSeconds(ts),\n  };\n}\nexport function makeAsyncEndEvent(\n    name: string,\n    ts: number,\n    pid: number = 0,\n    tid: number = 0,\n    ): TraceEngine.Types.TraceEvents.TraceEventAsync {\n  return {\n    args: {},\n    cat: '*',\n    name,\n    ph: TraceEngine.Types.TraceEvents.Phase.ASYNC_NESTABLE_END,\n    pid: TraceEngine.Types.TraceEvents.ProcessID(pid),\n    tid: TraceEngine.Types.TraceEvents.ThreadID(tid),\n    ts: TraceEngine.Types.Timing.MicroSeconds(ts),\n  };\n}\n\nexport function makeCompleteEventInMilliseconds(\n    name: string, tsMillis: number, durMillis: number, cat: string = '*', pid: number = 0,\n    tid: number = 0): TraceEngine.Types.TraceEvents.TraceEventComplete {\n  return makeCompleteEvent(\n      name, TraceEngine.Helpers.Timing.millisecondsToMicroseconds(TraceEngine.Types.Timing.MilliSeconds(tsMillis)),\n      TraceEngine.Helpers.Timing.millisecondsToMicroseconds(TraceEngine.Types.Timing.MilliSeconds(durMillis)), cat, pid,\n      tid);\n}\n\n/**\n * Builds a mock TraceEventInstant.\n */\nexport function makeInstantEvent(\n    name: string, tsMicroseconds: number, cat: string = '', pid: number = 0, tid: number = 0,\n    s: TraceEngine.Types.TraceEvents.TraceEventScope =\n        TraceEngine.Types.TraceEvents.TraceEventScope.THREAD): TraceEngine.Types.TraceEvents.TraceEventInstant {\n  return {\n    args: {},\n    cat,\n    name,\n    ph: TraceEngine.Types.TraceEvents.Phase.INSTANT,\n    pid: TraceEngine.Types.TraceEvents.ProcessID(pid),\n    tid: TraceEngine.Types.TraceEvents.ThreadID(tid),\n    ts: TraceEngine.Types.Timing.MicroSeconds(tsMicroseconds),\n    s,\n  };\n}\n\n/**\n * Builds a mock TraceEventBegin.\n */\nexport function makeBeginEvent(name: string, ts: number, cat: string = '*', pid: number = 0, tid: number = 0):\n    TraceEngine.Types.TraceEvents.TraceEventBegin {\n  return {\n    args: {},\n    cat,\n    name,\n    ph: TraceEngine.Types.TraceEvents.Phase.BEGIN,\n    pid: TraceEngine.Types.TraceEvents.ProcessID(pid),\n    tid: TraceEngine.Types.TraceEvents.ThreadID(tid),\n    ts: TraceEngine.Types.Timing.MicroSeconds(ts),\n  };\n}\n\n/**\n * Builds a mock TraceEventEnd.\n */\nexport function makeEndEvent(name: string, ts: number, cat: string = '*', pid: number = 0, tid: number = 0):\n    TraceEngine.Types.TraceEvents.TraceEventEnd {\n  return {\n    args: {},\n    cat,\n    name,\n    ph: TraceEngine.Types.TraceEvents.Phase.END,\n    pid: TraceEngine.Types.TraceEvents.ProcessID(pid),\n    tid: TraceEngine.Types.TraceEvents.ThreadID(tid),\n    ts: TraceEngine.Types.Timing.MicroSeconds(ts),\n  };\n}\n\nexport function makeProfileCall(\n    functionName: string, tsMs: number, durMs: number,\n    pid: TraceEngine.Types.TraceEvents.ProcessID = TraceEngine.Types.TraceEvents.ProcessID(0),\n    tid: TraceEngine.Types.TraceEvents.ThreadID = TraceEngine.Types.TraceEvents.ThreadID(0), nodeId: number = 0,\n    url: string = ''): TraceEngine.Types.TraceEvents.SyntheticProfileCall {\n  return {\n    cat: '',\n    name: 'ProfileCall',\n    nodeId,\n    sampleIndex: 0,\n    profileId: TraceEngine.Types.TraceEvents.ProfileID('fake-profile-id'),\n    ph: TraceEngine.Types.TraceEvents.Phase.COMPLETE,\n    pid,\n    tid,\n    ts: TraceEngine.Types.Timing.MicroSeconds(tsMs),\n    dur: TraceEngine.Types.Timing.MicroSeconds(durMs),\n    selfTime: TraceEngine.Types.Timing.MicroSeconds(0),\n    callFrame: {\n      functionName,\n      scriptId: '' as Protocol.Runtime.ScriptId,\n      url: url,\n      lineNumber: -1,\n      columnNumber: -1,\n    },\n    args: {},\n  };\n}\nexport const DevToolsTimelineCategory = 'disabled-by-default-devtools.timeline';\n\n/**\n * Mocks an object compatible with the return type of the\n * RendererHandler using only an array of ordered entries.\n */\nexport function makeMockRendererHandlerData(entries: TraceEngine.Types.TraceEvents.SyntheticTraceEntry[]):\n    TraceEngine.Handlers.ModelHandlers.Renderer.RendererHandlerData {\n  const {tree, entryToNode} = TraceEngine.Helpers.TreeHelpers.treify(entries, {filter: {has: () => true}});\n  const mockThread: TraceEngine.Handlers.ModelHandlers.Renderer.RendererThread = {\n    tree,\n    name: 'thread',\n    entries,\n    profileCalls: entries.filter(TraceEngine.Types.TraceEvents.isProfileCall),\n  };\n\n  const mockProcess: TraceEngine.Handlers.ModelHandlers.Renderer.RendererProcess = {\n    url: 'url',\n    isOnMainFrame: true,\n    threads: new Map([[1 as TraceEngine.Types.TraceEvents.ThreadID, mockThread]]),\n  };\n\n  const renderereEvents: TraceEngine.Types.TraceEvents.TraceEventRendererEvent[] = [];\n  for (const entry of entries) {\n    if (TraceEngine.Types.TraceEvents.isTraceEventRendererEvent(entry)) {\n      renderereEvents.push(entry);\n    }\n  }\n\n  return {\n    processes: new Map([[1 as TraceEngine.Types.TraceEvents.ProcessID, mockProcess]]),\n    compositorTileWorkers: new Map(),\n    entryToNode,\n    allTraceEntries: renderereEvents,\n  };\n}\n\n/**\n * Mocks an object compatible with the return type of the\n * SamplesHandler using only an array of ordered profile calls.\n */\nexport function makeMockSamplesHandlerData(profileCalls: TraceEngine.Types.TraceEvents.SyntheticProfileCall[]):\n    TraceEngine.Handlers.ModelHandlers.Samples.SamplesHandlerData {\n  const {tree, entryToNode} = TraceEngine.Helpers.TreeHelpers.treify(profileCalls, {filter: {has: () => true}});\n  const profile: Protocol.Profiler.Profile = {\n    nodes: [],\n    startTime: profileCalls.at(0)?.ts || TraceEngine.Types.Timing.MicroSeconds(0),\n    endTime: profileCalls.at(-1)?.ts || TraceEngine.Types.Timing.MicroSeconds(10e5),\n    samples: [],\n    timeDeltas: [],\n  };\n\n  const nodesIds = new Map<number, Protocol.Profiler.ProfileNode>();\n  const lastTimestamp = profile.startTime;\n  for (const profileCall of profileCalls) {\n    let node = nodesIds.get(profileCall.nodeId);\n    if (!node) {\n      node = {\n        id: profileCall.nodeId,\n        callFrame: profileCall.callFrame,\n      };\n      profile.nodes.push(node);\n      nodesIds.set(profileCall.nodeId, node);\n    }\n    profile.samples?.push(node.id);\n    const timeDelta = profileCall.ts - lastTimestamp;\n    profile.timeDeltas?.push(timeDelta);\n  }\n  const profileData = {\n    rawProfile: profile,\n    parsedProfile: new CPUProfile.CPUProfileDataModel.CPUProfileDataModel(profile),\n    profileCalls,\n    profileTree: tree,\n    profileId: TraceEngine.Types.TraceEvents.ProfileID('fake-profile-id'),\n  };\n  const profilesInThread = new Map([[1 as TraceEngine.Types.TraceEvents.ThreadID, profileData]]);\n  return {\n    profilesInProcess: new Map([[1 as TraceEngine.Types.TraceEvents.ProcessID, profilesInThread]]),\n    entryToNode,\n  };\n}\n\nexport class FakeFlameChartProvider implements PerfUI.FlameChart.FlameChartDataProvider {\n  minimumBoundary(): number {\n    return 0;\n  }\n\n  hasTrackConfigurationMode(): boolean {\n    return false;\n  }\n\n  totalTime(): number {\n    return 100;\n  }\n\n  formatValue(value: number): string {\n    return value.toString();\n  }\n\n  maxStackDepth(): number {\n    return 3;\n  }\n\n  prepareHighlightedEntryInfo(_entryIndex: number): Element|null {\n    return null;\n  }\n\n  canJumpToEntry(_entryIndex: number): boolean {\n    return false;\n  }\n\n  entryTitle(entryIndex: number): string|null {\n    return `Entry ${entryIndex}`;\n  }\n\n  entryFont(_entryIndex: number): string|null {\n    return null;\n  }\n\n  entryColor(entryIndex: number): string {\n    return [\n      'lightblue',\n      'lightpink',\n      'yellow',\n      'lightgray',\n      'lightgreen',\n      'lightsalmon',\n      'orange',\n      'pink',\n    ][entryIndex % 8];\n  }\n\n  decorateEntry(): boolean {\n    return false;\n  }\n\n  forceDecoration(_entryIndex: number): boolean {\n    return false;\n  }\n\n  textColor(_entryIndex: number): string {\n    return 'black';\n  }\n\n  timelineData(): PerfUI.FlameChart.FlameChartTimelineData|null {\n    return PerfUI.FlameChart.FlameChartTimelineData.createEmpty();\n  }\n}\n\nexport function getMainThread(data: TraceEngine.Handlers.ModelHandlers.Renderer.RendererHandlerData):\n    TraceEngine.Handlers.ModelHandlers.Renderer.RendererThread {\n  let mainThread: TraceEngine.Handlers.ModelHandlers.Renderer.RendererThread|null = null;\n  for (const [, process] of data.processes) {\n    for (const [, thread] of process.threads) {\n      if (thread.name === 'CrRendererMain') {\n        mainThread = thread;\n        break;\n      }\n    }\n  }\n  if (!mainThread) {\n    throw new Error('Could not find main thread.');\n  }\n  return mainThread;\n}\n\ntype TraceParseData = TraceEngine.Handlers.Types.TraceParseData;\n\nexport function getBaseTraceParseModelData(overrides: Partial<TraceParseData> = {}): TraceParseData {\n  return {\n    Animations: [],\n    LayoutShifts: {\n      clusters: [],\n      sessionMaxScore: 0,\n      clsWindowID: 0,\n      prePaintEvents: [],\n      layoutInvalidationEvents: [],\n      styleRecalcInvalidationEvents: [],\n      backendNodeIds: [],\n      scoreRecords: [],\n    },\n    Meta: {\n      traceBounds: {\n        min: TraceEngine.Types.Timing.MicroSeconds(0),\n        max: TraceEngine.Types.Timing.MicroSeconds(100),\n        range: TraceEngine.Types.Timing.MicroSeconds(100),\n      },\n      browserProcessId: TraceEngine.Types.TraceEvents.ProcessID(-1),\n      browserThreadId: TraceEngine.Types.TraceEvents.ThreadID(-1),\n      gpuProcessId: TraceEngine.Types.TraceEvents.ProcessID(-1),\n      gpuThreadId: TraceEngine.Types.TraceEvents.ThreadID(-1),\n      threadsInProcess: new Map(),\n      navigationsByFrameId: new Map(),\n      navigationsByNavigationId: new Map(),\n      mainFrameId: '',\n      mainFrameURL: '',\n      rendererProcessesByFrame: new Map(),\n      topLevelRendererIds: new Set(),\n      frameByProcessId: new Map(),\n      mainFrameNavigations: [],\n    },\n    Renderer: {\n      processes: new Map(),\n      compositorTileWorkers: new Map(),\n      entryToNode: new Map(),\n      allTraceEntries: [],\n    },\n    Screenshots: [],\n    Samples: {\n      profiles: new Map(),\n      processes: new Map(),\n    },\n    PageLoadMetrics: {metricScoresByFrameId: new Map(), lcpEventNodeIdToDOMNodeMap: new Map()},\n    UserInteractions: {allEvents: [], interactionEvents: []},\n    NetworkRequests: {\n      byOrigin: new Map(),\n      byTime: [],\n    },\n    GPU: {\n      mainGPUThreadTasks: [],\n      errorsByUseCase: new Map(),\n    },\n    UserTimings: {\n      timings: [],\n    },\n    LargestImagePaint: new Map(),\n    LargestTextPaint: new Map(),\n    ...overrides,\n  } as Partial<TraceParseData>as TraceParseData;\n}\n\n/**\n * A helper that will query the given array of events and find the first event\n * matching the predicate. It will also assert that a match is found, which\n * saves the need to do that for every test.\n */\nexport function getEventOfType<T extends TraceEngine.Types.TraceEvents.TraceEventData>(\n    events: TraceEngine.Types.TraceEvents.TraceEventData[],\n    predicate: (e: TraceEngine.Types.TraceEvents.TraceEventData) => e is T): T {\n  const match = events.find(predicate);\n  if (!match) {\n    throw new Error('Failed to find matching event of type.');\n  }\n  return match;\n}\n\n/**\n * The Performance Panel is integrated with the IgnoreListManager so in tests\n * that render a flame chart or a track appender, it needs to be setup to avoid\n * errors.\n */\nexport function setupIgnoreListManagerEnvironment(): {\n  ignoreListManager: Bindings.IgnoreListManager.IgnoreListManager,\n} {\n  const targetManager = SDK.TargetManager.TargetManager.instance({forceNew: true});\n  const workspace = Workspace.Workspace.WorkspaceImpl.instance({forceNew: true});\n  const resourceMapping = new Bindings.ResourceMapping.ResourceMapping(targetManager, workspace);\n\n  const debuggerWorkspaceBinding = Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.instance({\n    forceNew: true,\n    resourceMapping,\n    targetManager,\n  });\n\n  const ignoreListManager = Bindings.IgnoreListManager.IgnoreListManager.instance({\n    forceNew: true,\n    debuggerWorkspaceBinding,\n  });\n\n  return {ignoreListManager};\n}\n"]}