{"version":3,"file":"ResourceTreeHelpers.js","sourceRoot":"","sources":["../../../../../front_end/testing/ResourceTreeHelpers.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2024 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../core/common/common.js';\nimport type * as Platform from '../core/platform/platform.js';\nimport * as SDK from '../core/sdk/sdk.js';\nimport * as Protocol from '../generated/protocol.js';\n\nimport {\n  clearMockConnectionResponseHandler,\n  setMockConnectionResponseHandler,\n} from './MockConnection.js';\n\nexport const LOADER_ID = 'LOADER_ID' as Protocol.Network.LoaderId;\nexport const MAIN_FRAME_ID = 'main' as Protocol.Page.FrameId;\nexport const DOMAIN = 'example.com';\nexport const SECURITY_ORIGIN = `https://${DOMAIN}`;\nexport const FRAME_URL = `${SECURITY_ORIGIN}/` as Platform.DevToolsPath.UrlString;\nlet childFrameId = 0;\n\nconst FRAME = {\n  url: FRAME_URL,\n  loaderId: LOADER_ID,\n  domainAndRegistry: DOMAIN,\n  securityOrigin: SECURITY_ORIGIN,\n  mimeType: 'text/html',\n  secureContextType: Protocol.Page.SecureContextType.Secure,\n  crossOriginIsolatedContextType: Protocol.Page.CrossOriginIsolatedContextType.Isolated,\n  gatedAPIFeatures: [],\n};\n\nconst MAIN_FRAME = {\n  ...FRAME,\n  id: MAIN_FRAME_ID,\n};\n\nexport function setMockResourceTree(shouldMock: boolean) {\n  if (shouldMock) {\n    setMockConnectionResponseHandler('Page.getResourceTree', () => ({\n                                                               frameTree: {\n                                                                 frame: MAIN_FRAME,\n                                                                 resources: [],\n                                                               },\n                                                             }));\n  } else {\n    clearMockConnectionResponseHandler('Page.getResourceTree');\n  }\n}\n\nexport async function getInitializedResourceTreeModel(target: SDK.Target.Target):\n    Promise<SDK.ResourceTreeModel.ResourceTreeModel> {\n  const resourceTreeModel = target.model(SDK.ResourceTreeModel.ResourceTreeModel)!;\n  return resourceTreeModel.cachedResourcesLoaded() ?\n      resourceTreeModel :\n      resourceTreeModel.once(SDK.ResourceTreeModel.Events.CachedResourcesLoaded);\n}\n\nfunction getEffectivePayload(\n    id: Protocol.Page.FrameId, base: Omit<Protocol.Page.Frame, 'id'>,\n    framePayload?: Partial<Protocol.Page.Frame>): Protocol.Page.Frame {\n  const effectivePayload: Protocol.Page.Frame = {...base, id};\n  if (framePayload) {\n    if (framePayload.url) {\n      const url = new URL(framePayload.url);\n      framePayload.domainAndRegistry ??= url.hostname;\n      framePayload.securityOrigin ??= url.origin;\n    }\n    Object.assign(effectivePayload, framePayload);\n  }\n  return effectivePayload;\n}\n\nexport function getMainFrame(\n    target: SDK.Target.Target, framePayload?: Partial<Protocol.Page.Frame>): SDK.ResourceTreeModel.ResourceTreeFrame {\n  const resourceTreeModel = target.model(SDK.ResourceTreeModel.ResourceTreeModel)!;\n  if (resourceTreeModel.mainFrame) {\n    return resourceTreeModel.mainFrame;\n  }\n  resourceTreeModel.frameAttached(MAIN_FRAME_ID, null);\n  const mainFrame = resourceTreeModel.mainFrame as unknown as SDK.ResourceTreeModel.ResourceTreeFrame;\n  mainFrame.navigate(getEffectivePayload(MAIN_FRAME_ID, FRAME, framePayload));\n  return mainFrame;\n}\n\nexport async function addChildFrame(target: SDK.Target.Target, framePayload?: Partial<Protocol.Page.Frame>):\n    Promise<SDK.ResourceTreeModel.ResourceTreeFrame> {\n  const resourceTreeModel = await getInitializedResourceTreeModel(target);\n  getMainFrame(target);\n  const childFrame =\n      resourceTreeModel.frameAttached(`CHILD_FRAME_${++childFrameId}` as Protocol.Page.FrameId, MAIN_FRAME_ID);\n  assert.exists(childFrame);\n  if (framePayload) {\n    navigate(childFrame, {...FRAME, ...framePayload});\n  }\n  return childFrame;\n}\n\nexport function createResource(\n    frame: SDK.ResourceTreeModel.ResourceTreeFrame, networkScriptUrl: Platform.DevToolsPath.UrlString, mimeType: string,\n    content: string) {\n  const resource = new SDK.Resource.Resource(\n      frame.resourceTreeModel(), null, networkScriptUrl, networkScriptUrl, MAIN_FRAME_ID, null,\n      Common.ResourceType.ResourceType.fromMimeType(mimeType), mimeType, null, content.length);\n\n  frame.addResource(resource);\n  return resource;\n}\n\nexport function navigate(\n    frame: SDK.ResourceTreeModel.ResourceTreeFrame, framePayload?: Partial<Protocol.Page.Frame>,\n    type: Protocol.Page.NavigationType = Protocol.Page.NavigationType.Navigation) {\n  const effectivePayload = getEffectivePayload(frame.id, FRAME, framePayload);\n  frame.resourceTreeModel().frameNavigated(effectivePayload, type);\n}\n\nexport function activate(target: SDK.Target.Target): void {\n  const resourceTreeModel = target.model(SDK.ResourceTreeModel.ResourceTreeModel)!;\n  const frame = getMainFrame(target);\n  sinon.stub(frame, 'isPrimaryFrame').returns(true);\n  resourceTreeModel.dispatchEventToListeners(\n      SDK.ResourceTreeModel.Events.PrimaryPageChanged,\n      {frame, type: SDK.ResourceTreeModel.PrimaryPageChangeType.Activation});\n}\n"]}