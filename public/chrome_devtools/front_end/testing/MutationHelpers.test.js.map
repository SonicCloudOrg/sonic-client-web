{"version":3,"file":"MutationHelpers.test.js","sourceRoot":"","sources":["../../../../../front_end/testing/MutationHelpers.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as LitHtml from '../ui/lit-html/lit-html.js';\n\nimport {renderElementIntoDOM} from './DOMHelpers.js';\nimport {TEXT_NODE, withMutations, withNoMutations} from './MutationHelpers.js';\n\n/**\n * Needed because assert.throws from chai does not work async.\n */\nasync function assertThrowsAsync(fn: () => Promise<void>, errorMessage: string) {\n  let caught = false;\n  try {\n    await fn();\n  } catch (e) {\n    caught = true;\n    assert.strictEqual(e.message, errorMessage);\n  }\n\n  if (!caught) {\n    assert.fail('Expected error but got none.');\n  }\n}\n\nasync function assertNotThrowsAsync(fn: () => Promise<void>) {\n  let errorMessage = '';\n  try {\n    await fn();\n  } catch (e) {\n    errorMessage = e.message;\n  }\n\n  if (errorMessage) {\n    assert.fail(`Expected no error but got:\\n${errorMessage}`);\n  }\n}\n\ndescribe('MutationHelpers', () => {\n  describe('withMutations', () => {\n    it('fails if there are no mutations', async () => {\n      const div = document.createElement('div');\n      await assertThrowsAsync(async () => {\n        await withMutations(\n            [{\n              target: 'div',\n            }],\n            div, () => {});\n      }, 'Expected at least one mutation for ADD/REMOVE div, but got 0');\n    });\n\n    it('allows up to 10 mutations unless specified', async () => {\n      const div = document.createElement('div');\n      renderElementIntoDOM(div);\n      await assertNotThrowsAsync(async () => {\n        await withMutations(\n            [{\n              target: 'div',\n            }],\n            div, () => {\n              for (let i = 0; i < 10; i++) {\n                div.appendChild(document.createElement('div'));\n              }\n            });\n      });\n    });\n\n    it('errors if there are >10 mutations', async () => {\n      const div = document.createElement('div');\n      renderElementIntoDOM(div);\n      await assertThrowsAsync(async () => {\n        await withMutations(\n            [{\n              target: 'div',\n            }],\n            div, () => {\n              for (let i = 0; i < 11; i++) {\n                div.appendChild(document.createElement('div'));\n              }\n            });\n      }, 'Expected no more than 10 mutations for ADD/REMOVE div, but got 11');\n    });\n\n    it('lets the user provide the max', async () => {\n      const div = document.createElement('div');\n      renderElementIntoDOM(div);\n      await assertThrowsAsync(async () => {\n        await withMutations(\n            [{\n              target: 'div',\n              max: 5,\n            }],\n            div, () => {\n              for (let i = 0; i < 6; i++) {\n                div.appendChild(document.createElement('div'));\n              }\n            });\n      }, 'Expected no more than 5 mutations for ADD/REMOVE div, but got 6');\n    });\n\n    it('supports a max of 0', async () => {\n      const div = document.createElement('div');\n      renderElementIntoDOM(div);\n      await assertThrowsAsync(async () => {\n        await withMutations(\n            [{\n              target: 'div',\n              max: 0,\n            }],\n            div, () => {\n              div.appendChild(document.createElement('div'));\n            });\n      }, 'Expected no more than 0 mutations for ADD/REMOVE div, but got 1');\n    });\n\n    it('supports checking multiple expected mutations', async () => {\n      const div = document.createElement('div');\n      renderElementIntoDOM(div);\n      await assertThrowsAsync(async () => {\n        await withMutations(\n            [\n              {\n                target: 'div',\n                max: 1,\n              },\n              {target: 'span', max: 0},\n            ],\n            div, () => {\n              div.appendChild(document.createElement('div'));\n              div.appendChild(document.createElement('span'));\n            });\n      }, 'Expected no more than 0 mutations for ADD/REMOVE span, but got 1');\n    });\n\n    it('errors if other unexpected mutations occur', async () => {\n      const div = document.createElement('div');\n      renderElementIntoDOM(div);\n      await assertThrowsAsync(async () => {\n        await withMutations(\n            [{\n              target: 'div',\n              max: 1,\n            }],\n            div, () => {\n              // this is OK as we are expecting one div mutation\n              div.appendChild(document.createElement('div'));\n              // not OK - we have not declared any span mutations\n              div.appendChild(document.createElement('span'));\n            });\n      }, 'Additional unexpected mutations were detected:\\nspan: 1 addition');\n    });\n\n    it('lets you declare any expected text updates', async () => {\n      const div = document.createElement('div');\n      const renderList = (list: string[]) => {\n        const html = LitHtml.html`${list.map(l => LitHtml.html`<span>${l}</span>`)}`;\n        LitHtml.render(html, div, {host: this});\n      };\n\n      renderElementIntoDOM(div);\n      renderList(['a', 'b']);\n\n      await assertNotThrowsAsync(async () => {\n        await withMutations(\n            [\n              {\n                target: 'div',\n              },\n              {target: TEXT_NODE},\n            ],\n            div, div => {\n              renderList(['b', 'a']);\n              div.appendChild(document.createElement('div'));\n            });\n      });\n    });\n\n    it('fails if there are undeclared text updates', async () => {\n      const div = document.createElement('div');\n      const renderList = (list: string[]) => {\n        const html = LitHtml.html`${list.map(l => LitHtml.html`<span>${l}</span>`)}`;\n        LitHtml.render(html, div, {host: this});\n      };\n\n      renderElementIntoDOM(div);\n      renderList(['a', 'b']);\n\n      await assertThrowsAsync(async () => {\n        await withMutations(\n            [{\n              target: 'div',\n            }],\n            div, div => {\n              renderList(['b', 'a']);\n              div.appendChild(document.createElement('div'));\n            });\n      }, 'Additional unexpected mutations were detected:\\nTEXT_NODE: 2 updates');\n    });\n  });\n\n  describe('withNoMutations', () => {\n    it('fails if there are DOM additions', async () => {\n      const div = document.createElement('div');\n      renderElementIntoDOM(div);\n      await assertThrowsAsync(async () => {\n        await withNoMutations(div, element => {\n          const child = document.createElement('span');\n          element.appendChild(child);\n        });\n      }, 'Expected no mutations, but got 1: \\nspan: 1 addition');\n    });\n\n    it('fails if there are DOM removals', async () => {\n      const div = document.createElement('div');\n      const child = document.createElement('span');\n      div.appendChild(child);\n      renderElementIntoDOM(div);\n\n      await assertThrowsAsync(async () => {\n        await withNoMutations(div, element => {\n          element.removeChild(child);\n        });\n      }, 'Expected no mutations, but got 1: \\nspan: 1 removal');\n    });\n\n    it('correctly displays multiple unexpected mutations', async () => {\n      const div = document.createElement('div');\n      renderElementIntoDOM(div);\n      await assertThrowsAsync(async () => {\n        await withNoMutations(div, element => {\n          const child = document.createElement('span');\n          element.appendChild(child);\n          element.removeChild(child);\n          element.appendChild(document.createElement('p'));\n          element.appendChild(document.createElement('p'));\n          element.appendChild(document.createElement('p'));\n        });\n      }, 'Expected no mutations, but got 5: \\nspan: 1 addition, 1 removal\\np: 3 additions');\n    });\n\n    it('fails if there are text re-orderings', async () => {\n      const div = document.createElement('div');\n      const renderList = (list: string[]) => {\n        const html = LitHtml.html`${list.map(l => LitHtml.html`<span>${l}</span>`)}`;\n        LitHtml.render(html, div, {host: this});\n      };\n\n      renderElementIntoDOM(div);\n      renderList(['a', 'b']);\n\n      await assertThrowsAsync(async () => {\n        await withNoMutations(div, () => {\n          renderList(['b', 'a']);\n        });\n      }, 'Expected no mutations, but got 2: \\nTEXT_NODE: 2 updates');\n    });\n\n    it('fails if there are text re-orderings and DOM additions', async () => {\n      const div = document.createElement('div');\n      const renderList = (list: string[]) => {\n        const html = LitHtml.html`${list.map(l => LitHtml.html`<span>${l}</span>`)}`;\n        LitHtml.render(html, div, {host: this});\n      };\n\n      renderElementIntoDOM(div);\n      renderList(['a', 'b']);\n\n      await assertThrowsAsync(async () => {\n        await withNoMutations(div, div => {\n          renderList(['b', 'a']);\n          div.appendChild(document.createElement('ul'));\n        });\n      }, 'Expected no mutations, but got 3: \\nTEXT_NODE: 2 updates\\nul: 1 addition');\n    });\n  });\n});\n"]}