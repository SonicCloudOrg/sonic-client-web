{"version":3,"file":"LanguagePluginHelpers.js","sourceRoot":"","sources":["../../../../../front_end/testing/LanguagePluginHelpers.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAO7B,MAAM,OAAO,UAAU;IACrB,YAAY,IAAY;QACtB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACnB,CAAC;IAED,IAAI,CAAS;IACb,YAAY,CAAC,OAA0B;QACrC,OAAO,KAAK,CAAC;IACf,CAAC;IAED,+BAA+B;QAC7B,MAAM,WAAW,GAAG,qBAAqB,CAAC;QAC1C,OAAO;YACL,MAAM,EAAE,IAAI;YACZ,OAAO,EAAE,IAAI;YACb,WAAW;YACX,YAAY,EAAE,WAA8C;SAC7D,CAAC;IACJ,CAAC;IAED,KAAK,CAAC,QAAQ,CACV,WAAmB,EAAE,QAAqC,EAC1D,OAAgD;QAClD,OAAO,IAAI,CAAC;IACd,CAAC;IAED,KAAK,CAAC,aAAa,CAAC,SAAiB;QACnC,OAAO,EAAE,CAAC;IACZ,CAAC;IAED,KAAK,CAAC,aAAa,CAAC,SAAiB;IACrC,CAAC;IAED,KAAK,CAAC,YAAY,CAAC,YAAoB,EAAE,WAAmB,EAAE,UAAqC;QAEjG,OAAO,EAAE,CAAC;IACZ,CAAC;IAED,KAAK,CAAC,2BAA2B,CAAC,eAA+C;QAE/E,OAAO,EAAE,CAAC;IACZ,CAAC;IAED,KAAK,CAAC,2BAA2B,CAAC,YAAyC;QAEzE,OAAO,EAAE,CAAC;IACZ,CAAC;IAED,KAAK,CAAC,YAAY,CAAC,IAAY;QAC7B,OAAO,EAAC,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAC,CAAC;IAChC,CAAC;IAED,KAAK,CAAC,oBAAoB,CAAC,YAAyC;QAClE,OAAO,EAAE,CAAC;IACZ,CAAC;IAED,KAAK,CAAC,eAAe,CAAC,YAAoB;IAC1C,CAAC;IAED,KAAK,CAAC,eAAe,CAAC,YAAyC;QAI7D,OAAO,EAAC,MAAM,EAAE,EAAE,EAAC,CAAC;IACtB,CAAC;IAED,KAAK,CAAC,wBAAwB,CAAC,YAAyC;QAEtE,OAAO,EAAE,CAAC;IACZ,CAAC;IAED,KAAK,CAAC,uBAAuB,CAAC,YAAyC;QAErE,OAAO,EAAE,CAAC;IACZ,CAAC;IAED,KAAK,CAAC,cAAc,CAAC,YAAoB,EAAE,cAAsB;QAC/D,OAAO,SAAS,CAAC;IACnB,CAAC;CACF","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {type Chrome} from '../../extension-api/ExtensionAPI.js';\nimport type * as Platform from '../core/platform/platform.js';\nimport type * as SDK from '../core/sdk/sdk.js';\nimport type * as Bindings from '../models/bindings/bindings.js';\n\nexport class TestPlugin implements Bindings.DebuggerLanguagePlugins.DebuggerLanguagePlugin {\n  constructor(name: string) {\n    this.name = name;\n  }\n\n  name: string;\n  handleScript(_script: SDK.Script.Script): boolean {\n    return false;\n  }\n\n  createPageResourceLoadInitiator(): SDK.PageResourceLoader.PageResourceLoadInitiator {\n    const extensionId = 'chrome-extension-id';\n    return {\n      target: null,\n      frameId: null,\n      extensionId,\n      initiatorUrl: extensionId as Platform.DevToolsPath.UrlString,\n    };\n  }\n\n  async evaluate(\n      _expression: string, _context: Chrome.DevTools.RawLocation,\n      _stopId: Bindings.DebuggerLanguagePlugins.StopId): Promise<Chrome.DevTools.RemoteObject|null> {\n    return null;\n  }\n\n  async getProperties(_objectId: string): Promise<Chrome.DevTools.PropertyDescriptor[]> {\n    return [];\n  }\n\n  async releaseObject(_objectId: string): Promise<void> {\n  }\n\n  async addRawModule(_rawModuleId: string, _symbolsURL: string, _rawModule: Chrome.DevTools.RawModule):\n      Promise<string[]> {\n    return [];\n  }\n\n  async sourceLocationToRawLocation(_sourceLocation: Chrome.DevTools.SourceLocation):\n      Promise<Chrome.DevTools.RawLocationRange[]> {\n    return [];\n  }\n\n  async rawLocationToSourceLocation(_rawLocation: Chrome.DevTools.RawLocation):\n      Promise<Chrome.DevTools.SourceLocation[]> {\n    return [];\n  }\n\n  async getScopeInfo(type: string): Promise<Chrome.DevTools.ScopeInfo> {\n    return {type, typeName: type};\n  }\n\n  async listVariablesInScope(_rawLocation: Chrome.DevTools.RawLocation): Promise<Chrome.DevTools.Variable[]> {\n    return [];\n  }\n\n  async removeRawModule(_rawModuleId: string): Promise<void> {\n  }\n\n  async getFunctionInfo(_rawLocation: Chrome.DevTools.RawLocation): Promise<{\n    frames: Array<Chrome.DevTools.FunctionInfo>,\n    missingSymbolFiles: Array<string>,\n  }|{frames: Array<Chrome.DevTools.FunctionInfo>}|{missingSymbolFiles: Array<string>}> {\n    return {frames: []};\n  }\n\n  async getInlinedFunctionRanges(_rawLocation: Chrome.DevTools.RawLocation):\n      Promise<Chrome.DevTools.RawLocationRange[]> {\n    return [];\n  }\n\n  async getInlinedCalleesRanges(_rawLocation: Chrome.DevTools.RawLocation):\n      Promise<Chrome.DevTools.RawLocationRange[]> {\n    return [];\n  }\n\n  async getMappedLines(_rawModuleId: string, _sourceFileURL: string): Promise<number[]|undefined> {\n    return undefined;\n  }\n}\n"]}