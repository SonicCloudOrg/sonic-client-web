{"version":3,"file":"TrackAsyncOperations.js","sourceRoot":"","sources":["../../../../../front_end/testing/TrackAsyncOperations.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\ntype AsyncActivity = {\n  cancelDelayed?: () => void,\n  id?: string,\n  runImmediate?: () => void,\n  stack?: string,\n  promise?: Promise<unknown>, pending: boolean,\n};\n\nconst asyncActivity: AsyncActivity[] = [];\n\nexport function startTrackingAsyncActivity() {\n  // We are tracking all asynchronous activity but let it run normally during\n  // the test.\n  stub('requestAnimationFrame', trackingRequestAnimationFrame);\n  stub('setTimeout', trackingSetTimeout);\n  stub('setInterval', trackingSetInterval);\n  stub('requestIdleCallback', trackingRequestIdleCallback);\n  stub('cancelAnimationFrame', id => cancelTrackingActivity('a' + id));\n  stub('clearTimeout', id => cancelTrackingActivity('t' + id));\n  stub('clearInterval', id => cancelTrackingActivity('i' + id));\n  stub('cancelIdleCallback', id => cancelTrackingActivity('d' + id));\n  stub('Promise', TrackingPromise);\n}\n\nexport async function checkForPendingActivity() {\n  let stillPending: AsyncActivity[] = [];\n  const wait = 5;\n  let retries = 20;\n  // We will perform multiple iteration of waiting and forced completions to see\n  // if all promises are eventually resolved.\n  while (retries > 0) {\n    const pendingCount = asyncActivity.filter(a => a.pending).length;\n    const totalCount = asyncActivity.length;\n    try {\n      // First we wait for the pending async activity to finish normally\n      await original(Promise).all(asyncActivity.filter(a => a.pending).map(a => original(Promise).race([\n        a.promise,\n        new (original(Promise))(\n            (_, reject) => original(setTimeout)(\n                () => {\n                  if (!a.pending) {\n                    return;\n                  }\n                  // If something is still pending after some time, we try to\n                  // force the completion by running timeout and animation frame\n                  // handlers\n                  if (a.cancelDelayed && a.runImmediate) {\n                    a.cancelDelayed();\n                    a.runImmediate();\n                  } else {\n                    reject();\n                  }\n                },\n                wait)),\n      ])));\n\n      // If the above didn't throw, all the original pending activity has\n      // completed, but it could have triggered more\n      stillPending = asyncActivity.filter(a => a.pending);\n      if (!stillPending.length) {\n        break;\n      }\n      --retries;\n    } catch (e) {\n      stillPending = asyncActivity.filter(a => a.pending);\n      const newTotalCount = asyncActivity.length;\n      // Something is still pending. It might get resolved by force completion\n      // of new activity added during the iteration, so let's retry a couple of\n      // times.\n      if (newTotalCount === totalCount && stillPending.length === pendingCount) {\n        --retries;\n      }\n    }\n  }\n  if (stillPending.length) {\n    throw new Error(\n        'The test has completed, but there are still pending promises, created at: \\n' +\n        stillPending.map(a => a.stack).join('\\n\\n'));\n  }\n}\n\nexport function stopTrackingAsyncActivity() {\n  asyncActivity.length = 0;\n  restoreAll();\n}\n\nfunction trackingRequestAnimationFrame(fn: FrameRequestCallback) {\n  const activity: AsyncActivity = {pending: true};\n  let id = 0;\n  activity.promise = new (original(Promise<void>))(resolve => {\n    activity.runImmediate = () => {\n      fn(performance.now());\n      activity.pending = false;\n      resolve();\n    };\n    id = original(requestAnimationFrame)(activity.runImmediate);\n    activity.id = 'a' + id;\n    activity.cancelDelayed = () => {\n      original(cancelAnimationFrame)(id);\n      activity.pending = false;\n      resolve();\n    };\n  });\n  asyncActivity.push(activity);\n  return id;\n}\n\nfunction trackingRequestIdleCallback(fn: IdleRequestCallback, opts?: IdleRequestOptions): number {\n  const activity: AsyncActivity = {pending: true};\n  let id = 0;\n  activity.promise = new (original(Promise<void>))(resolve => {\n    activity.runImmediate = (idleDeadline?: IdleDeadline) => {\n      fn(idleDeadline ?? {didTimeout: true, timeRemaining: () => 0} as IdleDeadline);\n      activity.pending = false;\n      resolve();\n    };\n    id = original(requestIdleCallback)(activity.runImmediate, opts);\n    activity.id = 'd' + id;\n    activity.cancelDelayed = () => {\n      original(cancelIdleCallback)(id);\n      activity.pending = false;\n      resolve();\n    };\n  });\n  asyncActivity.push(activity);\n  return id;\n}\n\nfunction trackingSetTimeout(arg: TimerHandler, time?: number, ...params: unknown[]) {\n  const activity: AsyncActivity = {\n    pending: true,\n  };\n  let id = 0;\n  activity.promise = new (original(Promise<void>))(resolve => {\n    activity.runImmediate = () => {\n      if (typeof (arg) === 'function') {\n        arg(...params);\n      } else {\n        eval(arg);\n      }\n      activity.pending = false;\n      resolve();\n    };\n    id = original(setTimeout)(activity.runImmediate, time);\n    activity.id = 't' + id;\n    activity.cancelDelayed = () => {\n      original(clearTimeout)(id);\n      activity.pending = false;\n      resolve();\n    };\n  });\n  asyncActivity.push(activity);\n  return id;\n}\n\nfunction trackingSetInterval(arg: TimerHandler, time?: number, ...params: unknown[]) {\n  const activity: AsyncActivity = {\n    pending: true,\n  };\n  let id = 0;\n  activity.promise = new (original(Promise<void>))(resolve => {\n    id = original(setInterval)(arg, time, ...params);\n    activity.id = 'i' + id;\n    activity.cancelDelayed = () => {\n      original(clearInterval)(id);\n      activity.pending = false;\n      resolve();\n    };\n  });\n  asyncActivity.push(activity);\n  return id;\n}\n\nfunction cancelTrackingActivity(id: string) {\n  const activity = asyncActivity.find(a => a.id === id);\n  if (activity?.cancelDelayed) {\n    activity.cancelDelayed();\n  }\n}\n\n// We can't subclass native Promise here as this will cause all derived promises\n// (e.g. those returned by `then`) to also be subclass instances. This results\n// in a new asyncActivity entry on each iteration of checkForPendingActivity\n// which never settles.\nconst TrackingPromise: PromiseConstructor = Object.assign(\n    function<T>(arg: (resolve: (value: T|PromiseLike<T>) => void, reject: (reason?: unknown) => void) => void) {\n      const originalPromiseType = original(Promise);\n      const promise = new (originalPromiseType)(arg);\n      const activity: AsyncActivity = {\n        promise,\n        stack: getStack(new Error()),\n        pending: false,\n      };\n      promise.then = function<TResult1 = T, TResult2 = never>(\n          onFullfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>)|undefined|null,\n          onRejected?: ((reason: unknown) => TResult2 | PromiseLike<TResult2>)|undefined|\n          null): Promise<TResult1|TResult2> {\n        activity.pending = true;\n        return originalPromiseType.prototype.then.apply(this, [\n          result => {\n            if (!onFullfilled) {\n              return this;\n            }\n            activity.pending = false;\n            return onFullfilled(result);\n          },\n          result => {\n            if (!onRejected) {\n              return this;\n            }\n            activity.pending = false;\n            return onRejected(result);\n          },\n        ]) as Promise<TResult1|TResult2>;\n      };\n\n      asyncActivity.push(activity);\n      return promise;\n    },\n    {\n      all: Promise.all,\n      allSettled: Promise.allSettled,\n      any: Promise.any,\n      race: Promise.race,\n      reject: Promise.reject,\n      resolve: Promise.resolve,\n    } as PromiseConstructor);\n\nfunction getStack(error: Error): string {\n  return (error.stack ?? 'No stack').split('\\n').slice(2).join('\\n');\n}\n\n// We can't use Sinon for stubbing as 1) we need to double wrap somtimes and 2)\n// we need to access original values.\ntype Stub<TKey extends keyof typeof window> = {\n  name: TKey,\n  original: (typeof window)[TKey],\n  stubWith: (typeof window)[TKey],\n};\n\nconst stubs: Stub<keyof typeof window>[] = [];\n\nfunction stub<T extends keyof typeof window>(name: T, stubWith: (typeof window)[T]) {\n  const original = window[name];\n  window[name] = stubWith;\n  stubs.push({name, original, stubWith});\n}\n\nfunction original<T>(stubWith: T): T {\n  return stubs.find(s => s.stubWith === stubWith)?.original;\n}\n\nfunction restoreAll() {\n  for (const {name, original} of stubs) {\n    (window[name] as typeof original) = original;\n  }\n  stubs.length = 0;\n}\n"]}