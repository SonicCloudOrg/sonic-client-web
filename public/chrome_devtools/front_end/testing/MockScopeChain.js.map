{"version":3,"file":"MockScopeChain.js","sourceRoot":"","sources":["../../../../../front_end/testing/MockScopeChain.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,EAAC,wBAAwB,EAAC,MAAM,8BAA8B,CAAC;AACtE,OAAO,KAAK,GAAG,MAAM,oBAAoB,CAAC;AAG1C,OAAO,EACL,aAAa,EACb,gCAAgC,GACjC,MAAM,qBAAqB,CAAC;AAoB7B,MAAM,OAAO,mBAAmB;IAC9B,cAAc,GAAG,IAAI,GAAG,EAAkB,CAAC;IAC3C,kBAAkB,GAAG,IAAI,GAAG,EAAkB,CAAC;IAC/C,iBAAiB,GAAG,IAAI,GAAG,EAA4C,CAAC;IACxE,4BAA4B,GAAG,IAAI,GAAG,EAAsC,CAAC;IAC7E,0BAA0B,GAAG,IAAI,GAAG,EAA8C,CAAC;IACnF,gBAAgB,GAAG,CAAC,CAAC;IACrB,gBAAgB,GAAG,CAAC,CAAC;IAErB;QACE,2CAA2C;QAC3C,gCAAgC,CAAC,0BAA0B,EAAE,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QACtG,gCAAgC,CAAC,uBAAuB,EAAE,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QACjG,gCAAgC,CAAC,6BAA6B,EAAE,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAC5G,gCAAgC,CAAC,+BAA+B,EAAE,GAAG,EAAE,CAAC,CAAC,EAAC,UAAU,EAAE,UAAU,EAAC,CAAC,CAAC,CAAC;QACpG,gCAAgC,CAAC,2BAA2B,EAAE,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QACxG,gCAAgC,CAAC,iBAAiB,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAChE,gCAAgC,CAAC,iBAAiB,EAAE,GAAG,EAAE,CAAC,CAAC,EAAC,UAAU,EAAE,aAAa,EAAC,CAAC,CAAC,CAAC;QAEzF,GAAG,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,QAAQ,CAAC;YACjD,QAAQ,EAAE,IAAI;YACd,YAAY,EAAE,KAAK,EAAE,GAAW,EAAE,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC;YAC7D,kBAAkB,EAAE,CAAC;SACtB,CAAC,CAAC;IACL,CAAC;IAED,qBAAqB,CACjB,MAAyB,EAAE,MAA2C,EAAE,eAAuB,EAAE,EACjG,aAAwC,EAAE;QAC5C,MAAM,MAAM,GAAG,MAAM,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC;QAC7C,IAAI,MAAM,gFAAwD,EAAE,CAAC;YACnE,mGAAmG;YACnG,aAAa,CACT,MAAM,EACN,iBAAiB,EACjB;gBACE,UAAU,EAAE,EAAE;gBACd,MAAM;gBACN,IAAI,EAAE,EAAC,QAAQ,EAAE,MAAM,CAAC,QAAQ,EAAC;aAClC,CACJ,CAAC;QACJ,CAAC;aAAM,CAAC;YACN,MAAM,UAAU,GAAkC;gBAChD;oBACE,WAAW,EAAE,GAAoC;oBACjD,YAAY;oBACZ,GAAG,EAAE,MAAM,CAAC,SAAS;oBACrB,UAAU;oBACV,QAAQ,EAAE;wBACR,QAAQ,EAAE,MAAM,CAAC,QAAQ;wBACzB,UAAU,EAAE,CAAC;qBACd;oBACD,IAAI,EAAE,EAAC,IAAI,EAAE,QAAQ,EAAkC;iBACxD;aAEF,CAAC;YACF,aAAa,CACT,MAAM,EACN,iBAAiB,EACjB;gBACE,UAAU;gBACV,MAAM;aACP,CACJ,CAAC;QACJ,CAAC;IACH,CAAC;IAED,qCAAqC,CAAC,MAAyB,EAAE,MAA2C;QAC1G,aAAa,CACT,MAAM,EACN,iBAAiB,EACjB;YACE,UAAU,EAAE,EAAE;YACd,MAAM;SACP,CACJ,CAAC;IACJ,CAAC;IAED,KAAK,CAAC,SAAS,CAAC,MAAyB,EAAE,iBAAoC,EAAE,SAG3E;QACJ,MAAM,QAAQ,GAAG,WAAW,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACvD,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,QAAQ,EAAE,iBAAiB,CAAC,OAAO,CAAC,CAAC;QAC7D,MAAM,SAAS,GAAG,iBAAiB,CAAC,SAAS,IAAI,CAAC,CAAC;QACnD,MAAM,WAAW,GAAG,iBAAiB,CAAC,WAAW,IAAI,CAAC,CAAC;QACvD,MAAM,OAAO,GAAG,SAAS,GAAG,CAAC,iBAAiB,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,MAAM,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACtF,IAAI,SAAS,GAAG,iBAAiB,CAAC,OAAO,CAAC,MAAM,GAAG,iBAAiB,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACnG,IAAI,SAAS,KAAK,OAAO,EAAE,CAAC;YAC1B,SAAS,IAAI,WAAW,CAAC;QAC3B,CAAC;QAED,aAAa,CAAC,MAAM,EAAE,uBAAuB,EAAE;YAC7C,QAAQ;YACR,GAAG,EAAE,iBAAiB,CAAC,GAAG;YAC1B,SAAS;YACT,WAAW;YACX,OAAO;YACP,SAAS;YACT,kBAAkB,EAAE,iBAAiB,EAAE,kBAAkB,IAAI,CAAC;YAC9D,uBAAuB,EAAE,EAAC,SAAS,EAAE,CAAC,iBAAiB,CAAC,eAAe,EAAC;YACxE,IAAI,EAAE,EAAE;YACR,YAAY,EAAE,OAAO,CAAC,iBAAiB,CAAC,YAAY,CAAC;YACrD,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,EAAC,YAAY,EAAE,SAAS,CAAC,GAAG,EAAC,CAAC,CAAC,CAAC,IAAI,CAAC;YACrD,YAAY,EAAE,iBAAiB,CAAC,YAAY;SAC7C,CAAC,CAAC;QAEH,MAAM,aAAa,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,aAAa,CAAC,aAAa,CAAoC,CAAC;QACvG,MAAM,YAAY,GAAG,aAAa,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QACzD,wBAAwB,CAAC,YAAY,CAAC,CAAC;QACvC,IAAI,SAAS,EAAE,CAAC;YACd,IAAI,EAAC,OAAO,EAAC,GAAG,SAAS,CAAC;YAC1B,IAAI,OAAO,OAAO,KAAK,QAAQ,EAAE,CAAC;gBAChC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;YACpC,CAAC;YACD,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,SAAS,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;YAEpD,mCAAmC;YACnC,MAAM,eAAe,GAAG,MAAM,aAAa,CAAC,gBAAgB,EAAE,CAAC,yBAAyB,CAAC,YAAY,CAAC,CAAC;YACvG,MAAM,CAAC,WAAW,CAAC,eAAe,EAAE,GAAG,EAAY,EAAE,SAAS,CAAC,GAAG,CAAC,CAAC;QACtE,CAAC;QACD,OAAO,YAAY,CAAC;IACtB,CAAC;IAED,uBAAuB,CAAC,QAAgB,EAAE,UAAkB,EAAE,YAAoB;QAChF,OAAO,EAAC,QAAQ,EAAE,QAAqC,EAAE,UAAU,EAAE,YAAY,EAAC,CAAC;IACrF,CAAC;IAED,oBAAoB,CAChB,IAAiC,EAAE,MAAqC,EAAE,QAAgB,EAAE,SAAiB,EAC7G,WAAmB,EAAE,OAAe,EAAE,SAAiB;QACzD,OAAO;YACL,IAAI;YACJ,MAAM;YACN,aAAa,EAAE,IAAI,CAAC,uBAAuB,CAAC,QAAQ,EAAE,SAAS,EAAE,WAAW,CAAC;YAC7E,WAAW,EAAE,IAAI,CAAC,uBAAuB,CAAC,QAAQ,EAAE,OAAO,EAAE,SAAS,CAAC;SACxE,CAAC;IACJ,CAAC;IAED,wBAAwB,CAAC,UAA4C;QACnE,MAAM,QAAQ,GAAG,WAAW,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACvD,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;QAEjD,OAAO,EAAC,IAAI,yDAA0C,EAAE,QAAQ,EAAE,QAA2C,EAAC,CAAC;IACjH,CAAC;IAED,kFAAkF;IAClF,2EAA2E;IAC3E,uFAAuF;IACvF,2GAA2G;IAC3G,iDAAiD;IACjD,KAAK,CAAC,eAAe,CACjB,MAAyB,EAAE,MAAsC,EAAE,eAAuB,EAC1F,SAA8C,EAC9C,eAAgD,EAAE;QACpD,MAAM,aAAa,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,aAAa,CAAC,aAAa,CAAoC,CAAC;QACvG,MAAM,YAAY,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,MAAM,EAAE,SAAS,CAAC,CAAC;QAErE,MAAM,YAAY,GAAG,eAAe,CAAC,eAAe,CAAC,CAAC;QACtD,MAAM,UAAU,GAAG,YAAY,CAAC,GAAG,CAC/B,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,oBAAoB,CAC1B,CAAC,CAAC,IAAI,EAAE,EAAC,IAAI,yDAA0C,EAAC,EAAE,YAAY,CAAC,QAAQ,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,WAAW,EAC3G,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;QAEjC,MAAM,UAAU,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;QACjC,OAAO,CAAC,MAAM,CAAC,YAAY,CAAC,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC;QACxD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE,CAAC;YAC7C,UAAU,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;QACzC,CAAC;QAED,MAAM,OAAO,GAAgC;YAC3C,WAAW,EAAE,GAAoC;YACjD,YAAY,EAAE,MAAM;YACpB,gBAAgB,EAAE,SAAS;YAC3B,QAAQ,EAAE,UAAU,CAAC,aAAa;YAClC,GAAG,EAAE,YAAY,CAAC,SAAS;YAC3B,UAAU;YACV,IAAI,EAAE,EAAC,IAAI,EAAE,QAAQ,EAAkC;YACvD,WAAW,EAAE,SAAS;YACtB,cAAc,EAAE,KAAK;SACtB,CAAC;QAEF,OAAO,IAAI,GAAG,CAAC,aAAa,CAAC,SAAS,CAAC,aAAa,EAAE,YAAY,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC;IAClF,CAAC;IAED,iBAAiB,CAAC,GAAW,EAAE,UAAkB;QAC/C,OAAO,GAAG,GAAG,IAAI,GAAG,UAAU,CAAC;IACjC,CAAC;IAED,iCAAiC,CAAC,GAAW,EAAE,UAAkB;QAE/D,IAAI,eAAe,GAAe,GAAG,EAAE,GAAE,CAAC,CAAC;QAC3C,IAAI,gBAAoG,CAAC;QACzG,MAAM,eAAe,GAAG,IAAI,OAAO,CAAiE,OAAO,CAAC,EAAE;YAC5G,gBAAgB,GAAG,OAAO,CAAC;QAC7B,CAAC,CAAC,CAAC;QACH,MAAM,cAAc,GAAG,IAAI,OAAO,CAAO,OAAO,CAAC,EAAE;YACjD,eAAe,GAAG,OAAO,CAAC;QAC5B,CAAC,CAAC,CAAC;QACH,MAAM,GAAG,GAAG,IAAI,CAAC,iBAAiB,CAAC,GAAG,EAAE,UAAU,CAAC,CAAC;QACpD,IAAI,CAAC,4BAA4B,CAAC,GAAG,CAAC,GAAG,EAAE,EAAC,QAAQ,EAAE,eAAe,EAAE,QAAQ,EAAE,eAAe,EAAE,SAAS,EAAE,IAAI,EAAC,CAAC,CAAC;QACpH,OAAO,KAAK,EAAE,QAAwE,EAAE,EAAE;YACxF,gBAAgB,CAAC,QAAQ,CAAC,CAAC;YAC3B,MAAM,cAAc,CAAC;QACvB,CAAC,CAAC;IACJ,CAAC;IAED,wBAAwB,CAAC,GAAW,EAAE,UAAkB;QACtD,MAAM,GAAG,GAAG,IAAI,CAAC,iBAAiB,CAAC,GAAG,EAAE,UAAU,CAAC,CAAC;QACpD,MAAM,eAAe,GAAG,OAAO,CAAC,OAAO,CAAC;YACtC,QAAQ;gBACN,OAAO,kBAAkB,CAAC;YAC5B,CAAC;SACF,CAAC,CAAC;QACH,IAAI,CAAC,4BAA4B,CAAC,GAAG,CAAC,GAAG,EAAE,EAAC,QAAQ,EAAE,eAAe,EAAE,QAAQ,EAAE,GAAG,EAAE,GAAE,CAAC,EAAE,SAAS,EAAE,KAAK,EAAC,CAAC,CAAC;IAChH,CAAC;IAED,wBAAwB,CAAC,YAA4C;QACnE,OAAO,IAAI,OAAO,CAAO,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,0BAA0B,CAAC,GAAG,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC,CAAC;IAClG,CAAC;IAED,uBAAuB,CAAC,OAAiD;QAEvE,MAAM,YAAY,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QAC/D,IAAI,YAAY,EAAE,CAAC;YACjB,OAAO;gBACL,YAAY;gBACZ,QAAQ;oBACN,OAAO,SAAS,CAAC;gBACnB,CAAC;aACF,CAAC;QACJ,CAAC;QACD,OAAO;YACL,YAAY,EAAE,gBAAgB;YAC9B,QAAQ;gBACN,OAAO,gBAAgB,CAAC;YAC1B,CAAC;SACF,CAAC;IACJ,CAAC;IAED,0BAA0B,CAAC,OAAoD;QAE7E,MAAM,GAAG,GAAG,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,GAAG,IAAI,EAAE,EAAE,OAAO,CAAC,UAAU,CAAC,CAAC;QAC1E,MAAM,gBAAgB,GAAG,IAAI,CAAC,4BAA4B,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACpE,IAAI,gBAAgB,EAAE,CAAC;YACrB,IAAI,gBAAgB,CAAC,SAAS,EAAE,CAAC;gBAC/B,IAAI,CAAC,4BAA4B,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YAChD,CAAC;YACD,8DAA8D;YAC9D,gBAAgB,CAAC,QAAQ,EAAE,CAAC;YAC5B,+BAA+B;YAC/B,OAAO,gBAAgB,CAAC,QAAQ,CAAC;QACnC,CAAC;QACD,OAAO,CAAC,KAAK,CAAC,uCAAuC,EAAE,OAAO,CAAC,CAAC;QAChE,MAAM,QAAQ,GAAG;YACf,YAAY,EAAE,SAA2C;YACzD,SAAS,EAAE,EAAE;YACb,QAAQ;gBACN,OAAO,oBAAoB,CAAC;YAC9B,CAAC;SACF,CAAC;QACF,OAAO,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;IACnC,CAAC;IAED,wBAAwB,CAAC,OAAkD;QACzE,MAAM,QAAQ,GAAG,IAAI,CAAC,0BAA0B,CAAC,GAAG,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;QAC3E,IAAI,QAAQ,EAAE,CAAC;YACb,QAAQ,EAAE,CAAC;QACb,CAAC;QACD,OAAO,EAAE,CAAC;IACZ,CAAC;IAED,qBAAqB,CAAC,OAA8C;QAClE,MAAM,gBAAgB,GAAG,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,OAAO,CAAC,QAAkB,CAAC,CAAC;QAChF,IAAI,CAAC,gBAAgB,EAAE,CAAC;YACtB,OAAO;gBACL,MAAM,EAAE,EAAE;gBACV,QAAQ;oBACN,OAAO,gBAAgB,CAAC;gBAC1B,CAAC;aACF,CAAC;QACJ,CAAC;QAED,MAAM,MAAM,GAA0C,EAAE,CAAC;QACzD,KAAK,MAAM,QAAQ,IAAI,gBAAgB,EAAE,CAAC;YACxC,MAAM,CAAC,IAAI,CAAC;gBACV,IAAI,EAAE,QAAQ,CAAC,IAAI;gBACnB,KAAK,EAAE;oBACL,IAAI,yDAA0C;oBAC9C,KAAK,EAAE,QAAQ,CAAC,KAAK;oBACrB,WAAW,EAAE,GAAG,QAAQ,CAAC,KAAK,EAAE;iBACjC;gBACD,QAAQ,EAAE,IAAI;gBACd,YAAY,EAAE,IAAI;gBAClB,UAAU,EAAE,IAAI;gBAChB,KAAK,EAAE,IAAI;aACZ,CAAC,CAAC;QACL,CAAC;QACD,OAAO;YACL,MAAM;YACN,QAAQ;gBACN,OAAO,SAAS,CAAC;YACnB,CAAC;SACF,CAAC;IACJ,CAAC;IAED,cAAc,CAAC,GAAW;QACxB,MAAM,OAAO,GAAG,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACjD,IAAI,CAAC,OAAO,EAAE,CAAC;YACb,OAAO;gBACL,OAAO,EAAE,KAAK;gBACd,OAAO,EAAE,EAAE;gBACX,gBAAgB,EACZ,EAAC,OAAO,EAAE,sBAAsB,EAAE,UAAU,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,EAAE,YAAY,EAAE,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAC;aACtG,CAAC;QACJ,CAAC;QACD,OAAO;YACL,OAAO,EAAE,IAAI;YACb,OAAO;YACP,gBAAgB,EAAE,EAAC,OAAO,EAAE,EAAE,EAAE,UAAU,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,YAAY,EAAE,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAC;SAC9F,CAAC;IACJ,CAAC;CACF;AAUD,SAAS,wBAAwB,CAC7B,UAAkB,EAAE,IAAiC,EAAE,WAAmB,EAAE,SAAiB;IAC/F,OAAO;QACL,IAAI;QACJ,SAAS,EAAE,UAAU,CAAC,SAAS,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,MAAM;QAC5E,OAAO,EAAE,UAAU,CAAC,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,MAAM;QACxE,WAAW,EAAE,WAAW,GAAG,UAAU,CAAC,WAAW,CAAC,IAAI,EAAE,WAAW,GAAG,CAAC,CAAC,GAAG,CAAC;QAC5E,SAAS,EAAE,SAAS,GAAG,UAAU,CAAC,WAAW,CAAC,IAAI,EAAE,SAAS,GAAG,CAAC,CAAC,GAAG,CAAC;KACvE,CAAC;AACJ,CAAC;AAED,MAAM,UAAU,eAAe,CAAC,eAAuB;IACrD,2BAA2B;IAC3B,MAAM,aAAa,GAAG,eAAe,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IACnD,IAAI,aAAa,GAAG,CAAC,EAAE,CAAC;QACtB,MAAM,IAAI,KAAK,CAAC,kCAAkC,CAAC,CAAC;IACtD,CAAC;IACD,MAAM,WAAW,GAAG,eAAe,CAAC,OAAO,CAAC,GAAG,EAAE,aAAa,CAAC,CAAC;IAChE,IAAI,WAAW,GAAG,CAAC,EAAE,CAAC;QACpB,MAAM,IAAI,KAAK,CAAC,kCAAkC,CAAC,CAAC;IACtD,CAAC;IAED,MAAM,UAAU,GACZ,CAAC,wBAAwB,CAAC,eAAe,mDAAqC,aAAa,EAAE,WAAW,GAAG,CAAC,CAAC,CAAC,CAAC;IAEnH,wBAAwB;IACxB,MAAM,eAAe,GAAG,eAAe,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IACrD,IAAI,eAAe,IAAI,CAAC,EAAE,CAAC;QACzB,MAAM,aAAa,GAAG,eAAe,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QACnD,IAAI,aAAa,GAAG,CAAC,EAAE,CAAC;YACtB,MAAM,IAAI,KAAK,CAAC,mDAAmD,CAAC,CAAC;QACvE,CAAC;QACD,UAAU,CAAC,OAAO,CAAC,wBAAwB,CACvC,eAAe,mDAAqC,eAAe,EAAE,aAAa,GAAG,CAAC,CAAC,CAAC,CAAC;IAC/F,CAAC;IAED,OAAO,UAAU,CAAC;AACpB,CAAC","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {assertNotNullOrUndefined} from '../core/platform/platform.js';\nimport * as SDK from '../core/sdk/sdk.js';\nimport * as Protocol from '../generated/protocol.js';\n\nimport {\n  dispatchEvent,\n  setMockConnectionResponseHandler,\n} from './MockConnection.js';\nimport {type LoadResult} from './SourceMapHelpers.js';\n\ninterface ScriptDescription {\n  url: string;\n  content: string;\n  hasSourceURL?: boolean;\n  startLine?: number;\n  startColumn?: number;\n  isContentScript?: boolean;\n  embedderName?: string;\n  executionContextId?: number;\n}\n\ninterface SetBreakpointByUrlResponse {\n  response: Promise<Omit<Protocol.Debugger.SetBreakpointByUrlResponse, 'getError'>|{getError(): string}>;\n  callback: () => void;\n  isOneShot: boolean;\n}\n\nexport class MockProtocolBackend {\n  #scriptSources = new Map<string, string>();\n  #sourceMapContents = new Map<string, string>();\n  #objectProperties = new Map<string, {name: string, value?: number}[]>();\n  #setBreakpointByUrlResponses = new Map<string, SetBreakpointByUrlResponse>();\n  #removeBreakpointCallbacks = new Map<Protocol.Debugger.BreakpointId, () => void>();\n  #nextObjectIndex = 0;\n  #nextScriptIndex = 0;\n\n  constructor() {\n    // One time setup of the response handlers.\n    setMockConnectionResponseHandler('Debugger.getScriptSource', this.#getScriptSourceHandler.bind(this));\n    setMockConnectionResponseHandler('Runtime.getProperties', this.#getPropertiesHandler.bind(this));\n    setMockConnectionResponseHandler('Debugger.setBreakpointByUrl', this.#setBreakpointByUrlHandler.bind(this));\n    setMockConnectionResponseHandler('Storage.getStorageKeyForFrame', () => ({storageKey: 'test-key'}));\n    setMockConnectionResponseHandler('Debugger.removeBreakpoint', this.#removeBreakpointHandler.bind(this));\n    setMockConnectionResponseHandler('Debugger.resume', () => ({}));\n    setMockConnectionResponseHandler('Debugger.enable', () => ({debuggerId: 'DEBUGGER_ID'}));\n\n    SDK.PageResourceLoader.PageResourceLoader.instance({\n      forceNew: true,\n      loadOverride: async (url: string) => this.#loadSourceMap(url),\n      maxConcurrentLoads: 1,\n    });\n  }\n\n  dispatchDebuggerPause(\n      script: SDK.Script.Script, reason: Protocol.Debugger.PausedEventReason, functionName: string = '',\n      scopeChain: Protocol.Debugger.Scope[] = []): void {\n    const target = script.debuggerModel.target();\n    if (reason === Protocol.Debugger.PausedEventReason.Instrumentation) {\n      // Instrumentation pauses don't pass call frames, they only pass the script id in the 'data' field.\n      dispatchEvent(\n          target,\n          'Debugger.paused',\n          {\n            callFrames: [],\n            reason,\n            data: {scriptId: script.scriptId},\n          },\n      );\n    } else {\n      const callFrames: Protocol.Debugger.CallFrame[] = [\n        {\n          callFrameId: '1' as Protocol.Debugger.CallFrameId,\n          functionName,\n          url: script.sourceURL,\n          scopeChain,\n          location: {\n            scriptId: script.scriptId,\n            lineNumber: 0,\n          },\n          this: {type: 'object'} as Protocol.Runtime.RemoteObject,\n        },\n\n      ];\n      dispatchEvent(\n          target,\n          'Debugger.paused',\n          {\n            callFrames,\n            reason,\n          },\n      );\n    }\n  }\n\n  dispatchDebuggerPauseWithNoCallFrames(target: SDK.Target.Target, reason: Protocol.Debugger.PausedEventReason): void {\n    dispatchEvent(\n        target,\n        'Debugger.paused',\n        {\n          callFrames: [],\n          reason,\n        },\n    );\n  }\n\n  async addScript(target: SDK.Target.Target, scriptDescription: ScriptDescription, sourceMap: {\n    url: string,\n    content: string|SDK.SourceMap.SourceMapV3,\n  }|null): Promise<SDK.Script.Script> {\n    const scriptId = 'SCRIPTID.' + this.#nextScriptIndex++;\n    this.#scriptSources.set(scriptId, scriptDescription.content);\n    const startLine = scriptDescription.startLine ?? 0;\n    const startColumn = scriptDescription.startColumn ?? 0;\n    const endLine = startLine + (scriptDescription.content.match(/^/gm)?.length ?? 1) - 1;\n    let endColumn = scriptDescription.content.length - scriptDescription.content.lastIndexOf('\\n') - 1;\n    if (startLine === endLine) {\n      endColumn += startColumn;\n    }\n\n    dispatchEvent(target, 'Debugger.scriptParsed', {\n      scriptId,\n      url: scriptDescription.url,\n      startLine,\n      startColumn,\n      endLine,\n      endColumn,\n      executionContextId: scriptDescription?.executionContextId ?? 1,\n      executionContextAuxData: {isDefault: !scriptDescription.isContentScript},\n      hash: '',\n      hasSourceURL: Boolean(scriptDescription.hasSourceURL),\n      ...(sourceMap ? {sourceMapURL: sourceMap.url} : null),\n      embedderName: scriptDescription.embedderName,\n    });\n\n    const debuggerModel = target.model(SDK.DebuggerModel.DebuggerModel) as SDK.DebuggerModel.DebuggerModel;\n    const scriptObject = debuggerModel.scriptForId(scriptId);\n    assertNotNullOrUndefined(scriptObject);\n    if (sourceMap) {\n      let {content} = sourceMap;\n      if (typeof content !== 'string') {\n        content = JSON.stringify(content);\n      }\n      this.#sourceMapContents.set(sourceMap.url, content);\n\n      // Wait until the source map loads.\n      const loadedSourceMap = await debuggerModel.sourceMapManager().sourceMapForClientPromise(scriptObject);\n      assert.strictEqual(loadedSourceMap?.url() as string, sourceMap.url);\n    }\n    return scriptObject;\n  }\n\n  #createProtocolLocation(scriptId: string, lineNumber: number, columnNumber: number): Protocol.Debugger.Location {\n    return {scriptId: scriptId as Protocol.Runtime.ScriptId, lineNumber, columnNumber};\n  }\n\n  #createProtocolScope(\n      type: Protocol.Debugger.ScopeType, object: Protocol.Runtime.RemoteObject, scriptId: string, startLine: number,\n      startColumn: number, endLine: number, endColumn: number) {\n    return {\n      type,\n      object,\n      startLocation: this.#createProtocolLocation(scriptId, startLine, startColumn),\n      endLocation: this.#createProtocolLocation(scriptId, endLine, endColumn),\n    };\n  }\n\n  createSimpleRemoteObject(properties: {name: string, value?: number}[]): Protocol.Runtime.RemoteObject {\n    const objectId = 'OBJECTID.' + this.#nextObjectIndex++;\n    this.#objectProperties.set(objectId, properties);\n\n    return {type: Protocol.Runtime.RemoteObjectType.Object, objectId: objectId as Protocol.Runtime.RemoteObjectId};\n  }\n\n  // In the |scopeDescriptor|, '{' and '}' characters mark the positions of function\n  // offset start and end, '<' and '>' mark the positions of the nested scope\n  // start and end (if '<', '>' are missing then the nested scope is the function scope).\n  // Other characters in |scopeDescriptor| are not significant (so that tests can use the other characters in\n  // the descriptors to describe other assertions).\n  async createCallFrame(\n      target: SDK.Target.Target, script: {url: string, content: string}, scopeDescriptor: string,\n      sourceMap: {url: string, content: string}|null,\n      scopeObjects: Protocol.Runtime.RemoteObject[] = []): Promise<SDK.DebuggerModel.CallFrame> {\n    const debuggerModel = target.model(SDK.DebuggerModel.DebuggerModel) as SDK.DebuggerModel.DebuggerModel;\n    const scriptObject = await this.addScript(target, script, sourceMap);\n\n    const parsedScopes = parseScopeChain(scopeDescriptor);\n    const scopeChain = parsedScopes.map(\n        s => this.#createProtocolScope(\n            s.type, {type: Protocol.Runtime.RemoteObjectType.Object}, scriptObject.scriptId, s.startLine, s.startColumn,\n            s.endLine, s.endColumn));\n\n    const innerScope = scopeChain[0];\n    console.assert(scopeObjects.length < scopeChain.length);\n    for (let i = 0; i < scopeObjects.length; ++i) {\n      scopeChain[i].object = scopeObjects[i];\n    }\n\n    const payload: Protocol.Debugger.CallFrame = {\n      callFrameId: '0' as Protocol.Debugger.CallFrameId,\n      functionName: 'test',\n      functionLocation: undefined,\n      location: innerScope.startLocation,\n      url: scriptObject.sourceURL,\n      scopeChain,\n      this: {type: 'object'} as Protocol.Runtime.RemoteObject,\n      returnValue: undefined,\n      canBeRestarted: false,\n    };\n\n    return new SDK.DebuggerModel.CallFrame(debuggerModel, scriptObject, payload, 0);\n  }\n\n  #getBreakpointKey(url: string, lineNumber: number): string {\n    return url + '@:' + lineNumber;\n  }\n\n  responderToBreakpointByUrlRequest(url: string, lineNumber: number):\n      (response: Omit<Protocol.Debugger.SetBreakpointByUrlResponse, 'getError'>) => Promise<void> {\n    let requestCallback: () => void = () => {};\n    let responseCallback: (response: Omit<Protocol.Debugger.SetBreakpointByUrlResponse, 'getError'>) => void;\n    const responsePromise = new Promise<Omit<Protocol.Debugger.SetBreakpointByUrlResponse, 'getError'>>(resolve => {\n      responseCallback = resolve;\n    });\n    const requestPromise = new Promise<void>(resolve => {\n      requestCallback = resolve;\n    });\n    const key = this.#getBreakpointKey(url, lineNumber);\n    this.#setBreakpointByUrlResponses.set(key, {response: responsePromise, callback: requestCallback, isOneShot: true});\n    return async (response: Omit<Protocol.Debugger.SetBreakpointByUrlResponse, 'getError'>) => {\n      responseCallback(response);\n      await requestPromise;\n    };\n  }\n\n  setBreakpointByUrlToFail(url: string, lineNumber: number) {\n    const key = this.#getBreakpointKey(url, lineNumber);\n    const responsePromise = Promise.resolve({\n      getError() {\n        return 'Breakpoint error';\n      },\n    });\n    this.#setBreakpointByUrlResponses.set(key, {response: responsePromise, callback: () => {}, isOneShot: false});\n  }\n\n  breakpointRemovedPromise(breakpointId: Protocol.Debugger.BreakpointId): Promise<void> {\n    return new Promise<void>(resolve => this.#removeBreakpointCallbacks.set(breakpointId, resolve));\n  }\n\n  #getScriptSourceHandler(request: Protocol.Debugger.GetScriptSourceRequest):\n      Protocol.Debugger.GetScriptSourceResponse {\n    const scriptSource = this.#scriptSources.get(request.scriptId);\n    if (scriptSource) {\n      return {\n        scriptSource,\n        getError() {\n          return undefined;\n        },\n      };\n    }\n    return {\n      scriptSource: 'Unknown script',\n      getError() {\n        return 'Unknown script';\n      },\n    };\n  }\n\n  #setBreakpointByUrlHandler(request: Protocol.Debugger.SetBreakpointByUrlRequest):\n      Promise<Omit<Protocol.Debugger.SetBreakpointByUrlResponse, 'getError'>|{getError(): string}> {\n    const key = this.#getBreakpointKey(request.url ?? '', request.lineNumber);\n    const responseCallback = this.#setBreakpointByUrlResponses.get(key);\n    if (responseCallback) {\n      if (responseCallback.isOneShot) {\n        this.#setBreakpointByUrlResponses.delete(key);\n      }\n      // Announce to the client that the breakpoint request arrived.\n      responseCallback.callback();\n      // Return the response promise.\n      return responseCallback.response;\n    }\n    console.error('Unexpected setBreakpointByUrl request', request);\n    const response = {\n      breakpointId: 'INVALID' as Protocol.Debugger.BreakpointId,\n      locations: [],\n      getError() {\n        return 'Unknown breakpoint';\n      },\n    };\n    return Promise.resolve(response);\n  }\n\n  #removeBreakpointHandler(request: Protocol.Debugger.RemoveBreakpointRequest): {} {\n    const callback = this.#removeBreakpointCallbacks.get(request.breakpointId);\n    if (callback) {\n      callback();\n    }\n    return {};\n  }\n\n  #getPropertiesHandler(request: Protocol.Runtime.GetPropertiesRequest): Protocol.Runtime.GetPropertiesResponse {\n    const objectProperties = this.#objectProperties.get(request.objectId as string);\n    if (!objectProperties) {\n      return {\n        result: [],\n        getError() {\n          return 'Unknown object';\n        },\n      };\n    }\n\n    const result: Protocol.Runtime.PropertyDescriptor[] = [];\n    for (const property of objectProperties) {\n      result.push({\n        name: property.name,\n        value: {\n          type: Protocol.Runtime.RemoteObjectType.Number,\n          value: property.value,\n          description: `${property.value}`,\n        },\n        writable: true,\n        configurable: true,\n        enumerable: true,\n        isOwn: true,\n      });\n    }\n    return {\n      result,\n      getError() {\n        return undefined;\n      },\n    };\n  }\n\n  #loadSourceMap(url: string): LoadResult {\n    const content = this.#sourceMapContents.get(url);\n    if (!content) {\n      return {\n        success: false,\n        content: '',\n        errorDescription:\n            {message: 'source map not found', statusCode: 123, netError: 0, netErrorName: '', urlValid: true},\n      };\n    }\n    return {\n      success: true,\n      content,\n      errorDescription: {message: '', statusCode: 0, netError: 0, netErrorName: '', urlValid: true},\n    };\n  }\n}\n\ninterface ScopePosition {\n  type: Protocol.Debugger.ScopeType;\n  startLine: number;\n  startColumn: number;\n  endLine: number;\n  endColumn: number;\n}\n\nfunction scopePositionFromOffsets(\n    descriptor: string, type: Protocol.Debugger.ScopeType, startOffset: number, endOffset: number): ScopePosition {\n  return {\n    type,\n    startLine: descriptor.substring(0, startOffset).replace(/[^\\n]/g, '').length,\n    endLine: descriptor.substring(0, endOffset).replace(/[^\\n]/g, '').length,\n    startColumn: startOffset - descriptor.lastIndexOf('\\n', startOffset - 1) - 1,\n    endColumn: endOffset - descriptor.lastIndexOf('\\n', endOffset - 1) - 1,\n  };\n}\n\nexport function parseScopeChain(scopeDescriptor: string): ScopePosition[] {\n  // Identify function scope.\n  const functionStart = scopeDescriptor.indexOf('{');\n  if (functionStart < 0) {\n    throw new Error('Test descriptor must contain \"{\"');\n  }\n  const functionEnd = scopeDescriptor.indexOf('}', functionStart);\n  if (functionEnd < 0) {\n    throw new Error('Test descriptor must contain \"}\"');\n  }\n\n  const scopeChain =\n      [scopePositionFromOffsets(scopeDescriptor, Protocol.Debugger.ScopeType.Local, functionStart, functionEnd + 1)];\n\n  // Find the block scope.\n  const blockScopeStart = scopeDescriptor.indexOf('<');\n  if (blockScopeStart >= 0) {\n    const blockScopeEnd = scopeDescriptor.indexOf('>');\n    if (blockScopeEnd < 0) {\n      throw new Error('Test descriptor must contain matching \".\" for \"<\"');\n    }\n    scopeChain.unshift(scopePositionFromOffsets(\n        scopeDescriptor, Protocol.Debugger.ScopeType.Block, blockScopeStart, blockScopeEnd + 1));\n  }\n\n  return scopeChain;\n}\n"]}