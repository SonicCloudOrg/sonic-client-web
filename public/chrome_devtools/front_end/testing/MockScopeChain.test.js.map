{"version":3,"file":"MockScopeChain.test.js","sourceRoot":"","sources":["../../../../../front_end/testing/MockScopeChain.test.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,EAAC,eAAe,EAAC,MAAM,qBAAqB,CAAC;AAEpD,QAAQ,CAAC,0BAA0B,EAAE,GAAG,EAAE;IACxC,EAAE,CAAC,gDAAgD,EAAE,GAAG,EAAE;QACxD,+DAA+D;QAC/D,MAAM,MAAM,GAAG,+CAA+C,CAAC;QAC/D,MAAM,CAAC,KAAK,EAAE,aAAa,CAAC,GAAG,eAAe,CAAC,MAAM,CAAC,CAAC;QACvD,MAAM,CAAC,WAAW,CAAC,aAAa,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;QAClD,MAAM,CAAC,WAAW,CAAC,aAAa,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;QAChD,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;QAC1C,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;IAC1C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,wDAAwD,EAAE,GAAG,EAAE;QAChE,+DAA+D;QAC/D,MAAM,MAAM,GAAG,+CAA+C,CAAC;QAC/D,MAAM,CAAC,aAAa,CAAC,GAAG,eAAe,CAAC,MAAM,CAAC,CAAC;QAChD,MAAM,CAAC,WAAW,CAAC,aAAa,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;QAClD,MAAM,CAAC,WAAW,CAAC,aAAa,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;IAClD,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport {parseScopeChain} from './MockScopeChain.js';\n\ndescribe('Scope test string parser', () => {\n  it('test helper parses scopes from test descriptor', () => {\n    //    source = 'function f(x) { g(x); {let a = x, return a} }';\n    const scopes = '          {           <    B             B> }';\n    const [scope, functionScope] = parseScopeChain(scopes);\n    assert.strictEqual(functionScope.startColumn, 10);\n    assert.strictEqual(functionScope.endColumn, 45);\n    assert.strictEqual(scope.startColumn, 22);\n    assert.strictEqual(scope.endColumn, 43);\n  });\n\n  it('test helper parses function scope from test descriptor', () => {\n    //    source = 'function f(x) { g(x); {let a = x, return a} }';\n    const scopes = '          {B      B            B            }';\n    const [functionScope] = parseScopeChain(scopes);\n    assert.strictEqual(functionScope.startColumn, 10);\n    assert.strictEqual(functionScope.endColumn, 45);\n  });\n});\n"]}