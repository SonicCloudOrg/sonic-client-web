{"version":3,"file":"StubIssue.js","sourceRoot":"","sources":["../../../../../front_end/testing/StubIssue.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Protocol from '../generated/protocol.js';\n// eslint-disable-next-line rulesdir/es_modules_import\nimport {\n  Issue,\n  IssueCategory,\n  IssueKind,\n} from '../models/issues_manager/Issue.js';\n\nexport class StubIssue extends Issue {\n  private requestIds: string[];\n  private cookieNames: string[];\n  private issueKind: IssueKind;\n  private locations: Protocol.Audits.SourceCodeLocation[] = [];\n  private mockIssueId?: Protocol.Audits.IssueId;\n  private mockIssueCategory?: IssueCategory;\n\n  constructor(code: string, requestIds: string[], cookieNames: string[], issueKind = IssueKind.Improvement) {\n    super(code);\n    this.requestIds = requestIds;\n    this.cookieNames = cookieNames;\n    this.issueKind = issueKind;\n  }\n\n  getDescription() {\n    return {\n      file: '',\n      links: [],\n    };\n  }\n\n  primaryKey(): string {\n    return `${this.code()}-(${this.cookieNames.join(';')})-(${this.requestIds.join(';')})`;\n  }\n\n  override requests() {\n    return this.requestIds.map(id => {\n      return {requestId: id as Protocol.Network.RequestId, url: ''};\n    });\n  }\n\n  getCategory(): IssueCategory {\n    return this.mockIssueCategory ? this.mockIssueCategory as unknown as IssueCategory : IssueCategory.Other;\n  }\n\n  override sources() {\n    return this.locations;\n  }\n\n  getKind() {\n    return this.issueKind;\n  }\n\n  override cookies() {\n    return this.cookieNames.map(name => {\n      return {name, domain: '', path: ''};\n    });\n  }\n\n  override getIssueId() {\n    return this.mockIssueId;\n  }\n\n  static createFromRequestIds(requestIds: string[]) {\n    return new StubIssue('StubIssue', requestIds, []);\n  }\n\n  static createFromCookieNames(cookieNames: string[]) {\n    return new StubIssue('StubIssue', [], cookieNames);\n  }\n\n  static createFromIssueKinds(issueKinds: IssueKind[]) {\n    return issueKinds.map(k => new StubIssue('StubIssue', [], [], k));\n  }\n\n  static createFromAffectedLocations(locations: Protocol.Audits.SourceCodeLocation[]) {\n    const issue = new StubIssue('StubIssue', [], []);\n    issue.locations = locations;\n    return issue;\n  }\n\n  static createFromIssueId(issueId: Protocol.Audits.IssueId) {\n    const issue = new StubIssue('StubIssue', [], []);\n    issue.mockIssueId = issueId;\n    return issue;\n  }\n\n  static createCookieIssue(code: string) {\n    const issue = new StubIssue(code, [], []);\n    issue.mockIssueCategory = IssueCategory.Cookie;\n    return issue;\n  }\n}\n\nexport class ThirdPartyStubIssue extends StubIssue {\n  private isThirdParty: boolean;\n\n  constructor(code: string, isThirdParty: boolean) {\n    super(code, [], []);\n    this.isThirdParty = isThirdParty;\n  }\n\n  override isCausedByThirdParty() {\n    return this.isThirdParty;\n  }\n}\n\nexport function mkInspectorCspIssue(blockedURL: string): Protocol.Audits.InspectorIssue {\n  return {\n    code: Protocol.Audits.InspectorIssueCode.ContentSecurityPolicyIssue,\n    details: {\n      contentSecurityPolicyIssueDetails: {\n        isReportOnly: true,\n        violatedDirective: 'testdirective',\n        contentSecurityPolicyViolationType: Protocol.Audits.ContentSecurityPolicyViolationType.KURLViolation,\n        blockedURL,\n      },\n    },\n  };\n}\n"]}