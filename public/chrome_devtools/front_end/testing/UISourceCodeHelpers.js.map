{"version":3,"file":"UISourceCodeHelpers.js","sourceRoot":"","sources":["../../../../../front_end/testing/UISourceCodeHelpers.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2022 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../core/common/common.js';\nimport type * as Platform from '../core/platform/platform.js';\nimport * as SDK from '../core/sdk/sdk.js';\nimport type * as Protocol from '../generated/protocol.js';\nimport * as Bindings from '../models/bindings/bindings.js';\nimport * as Persistence from '../models/persistence/persistence.js';\nimport * as TextUtils from '../models/text_utils/text_utils.js';\nimport * as Workspace from '../models/workspace/workspace.js';\n\nexport function createContentProviderUISourceCodes(options: {\n  items: {\n    url: Platform.DevToolsPath.UrlString,\n    content?: string, mimeType: string,\n    resourceType?: Common.ResourceType.ResourceType,\n    metadata?: Workspace.UISourceCode.UISourceCodeMetadata,\n  }[],\n  projectType?: Workspace.Workspace.projectTypes,\n  projectId?: string,\n  target?: SDK.Target.Target,\n}): {\n  project: Bindings.ContentProviderBasedProject.ContentProviderBasedProject,\n  uiSourceCodes: Workspace.UISourceCode.UISourceCode[],\n} {\n  const workspace = Workspace.Workspace.WorkspaceImpl.instance();\n  const projectType = options.projectType || Workspace.Workspace.projectTypes.Formatter;\n  assert.notEqual(\n      projectType, Workspace.Workspace.projectTypes.FileSystem,\n      'For creating file system UISourceCodes use \\'createFileSystemUISourceCode\\' helper.');\n  const project = new Bindings.ContentProviderBasedProject.ContentProviderBasedProject(\n      workspace, options.projectId || 'PROJECT_ID', projectType, 'Test project', false /* isServiceProject*/);\n  if (options.target) {\n    Bindings.NetworkProject.NetworkProject.setTargetForProject(project, options.target);\n  }\n  const uiSourceCodes: Workspace.UISourceCode.UISourceCode[] = [];\n  for (const item of options.items) {\n    const resourceType = item.resourceType || Common.ResourceType.ResourceType.fromMimeType(item.mimeType);\n    const uiSourceCode = project.createUISourceCode(item.url, resourceType);\n    const contentProvider =\n        TextUtils.StaticContentProvider.StaticContentProvider.fromString(item.url, resourceType, item.content || '');\n    const metadata = item.metadata || new Workspace.UISourceCode.UISourceCodeMetadata(null, null);\n    project.addUISourceCodeWithProvider(uiSourceCode, contentProvider, metadata, item.mimeType);\n    uiSourceCodes.push(uiSourceCode);\n  }\n  return {project, uiSourceCodes};\n}\n\nexport function createContentProviderUISourceCode(options: {\n  url: Platform.DevToolsPath.UrlString,\n  content?: string, mimeType: string,\n  projectType?: Workspace.Workspace.projectTypes,\n  projectId?: string,\n  metadata?: Workspace.UISourceCode.UISourceCodeMetadata,\n  target?: SDK.Target.Target,\n}): {\n  project: Bindings.ContentProviderBasedProject.ContentProviderBasedProject,\n  uiSourceCode: Workspace.UISourceCode.UISourceCode,\n} {\n  const {url, content, mimeType, metadata, projectType, projectId, target} = options;\n  const {project, uiSourceCodes} =\n      createContentProviderUISourceCodes({items: [{url, content, mimeType, metadata}], projectType, projectId, target});\n  return {project, uiSourceCode: uiSourceCodes[0]};\n}\n\nclass TestPlatformFileSystem extends Persistence.PlatformFileSystem.PlatformFileSystem {\n  readonly #mimeType: string;\n  readonly #autoMapping: boolean;\n\n  constructor(path: Platform.DevToolsPath.UrlString, type: string, mimeType: string, autoMapping: boolean) {\n    super(path, type);\n    this.#mimeType = mimeType;\n    this.#autoMapping = autoMapping;\n  }\n  override supportsAutomapping(): boolean {\n    return this.#autoMapping;\n  }\n  override mimeFromPath(_path: Platform.DevToolsPath.UrlString): string {\n    return this.#mimeType;\n  }\n}\n\nclass TestFileSystem extends Persistence.FileSystemWorkspaceBinding.FileSystem {\n  readonly #content: string;\n  readonly #metadata: Workspace.UISourceCode.UISourceCodeMetadata;\n\n  constructor(options: {\n    fileSystemWorkspaceBinding: Persistence.FileSystemWorkspaceBinding.FileSystemWorkspaceBinding,\n    platformFileSystem: Persistence.PlatformFileSystem.PlatformFileSystem,\n    workspace: Workspace.Workspace.WorkspaceImpl,\n    content: string,\n    metadata: Workspace.UISourceCode.UISourceCodeMetadata,\n  }) {\n    super(options.fileSystemWorkspaceBinding, options.platformFileSystem, options.workspace);\n    this.#content = options.content;\n    this.#metadata = options.metadata;\n  }\n\n  override requestFileContent(_uiSourceCode: Workspace.UISourceCode.UISourceCode):\n      Promise<TextUtils.ContentData.ContentDataOrError> {\n    return Promise.resolve(new TextUtils.ContentData.ContentData(this.#content, /* isBase64 */ false, 'text/plain'));\n  }\n\n  override requestMetadata(_uiSourceCode: Workspace.UISourceCode.UISourceCode):\n      Promise<Workspace.UISourceCode.UISourceCodeMetadata|null> {\n    return Promise.resolve(this.#metadata);\n  }\n}\n\nexport function createFileSystemUISourceCode(options: {\n  url: Platform.DevToolsPath.UrlString,\n  mimeType: string,\n  content?: string,\n  fileSystemPath?: string,\n  autoMapping?: boolean,\n  type?: string,\n  metadata?: Workspace.UISourceCode.UISourceCodeMetadata,\n}): {uiSourceCode: Workspace.UISourceCode.UISourceCode, project: Persistence.FileSystemWorkspaceBinding.FileSystem} {\n  const workspace = Workspace.Workspace.WorkspaceImpl.instance();\n  const isolatedFileSystemManager = Persistence.IsolatedFileSystemManager.IsolatedFileSystemManager.instance();\n  const fileSystemWorkspaceBinding =\n      new Persistence.FileSystemWorkspaceBinding.FileSystemWorkspaceBinding(isolatedFileSystemManager, workspace);\n  const fileSystemPath = (options.fileSystemPath || '') as Platform.DevToolsPath.UrlString;\n  const type = options.type || '';\n  const content = options.content || '';\n  const platformFileSystem =\n      new TestPlatformFileSystem(fileSystemPath, type, options.mimeType, Boolean(options.autoMapping));\n  const metadata = options.metadata || new Workspace.UISourceCode.UISourceCodeMetadata(null, null);\n\n  const project = new TestFileSystem({fileSystemWorkspaceBinding, platformFileSystem, workspace, content, metadata});\n\n  const uiSourceCode =\n      project.createUISourceCode(options.url, Common.ResourceType.ResourceType.fromMimeType(options.mimeType));\n  project.addUISourceCode(uiSourceCode);\n  return {uiSourceCode, project};\n}\n\nexport function setupMockedUISourceCode(url: string = 'https://example.com/') {\n  const projectStub = sinon.createStubInstance(Bindings.ContentProviderBasedProject.ContentProviderBasedProject);\n  const urlStringTagExample = url as Platform.DevToolsPath.UrlString;\n  const contentTypeStub = sinon.createStubInstance(Common.ResourceType.ResourceType);\n\n  const uiSourceCode = new Workspace.UISourceCode.UISourceCode(projectStub, urlStringTagExample, contentTypeStub);\n\n  return {sut: uiSourceCode, projectStub: projectStub, contentTypeStub: contentTypeStub};\n}\n\nexport function createFakeScriptMapping(\n    debuggerModel: SDK.DebuggerModel.DebuggerModel, uiSourceCode: Workspace.UISourceCode.UISourceCode,\n    uiLineNumber: number,\n    scriptId: Protocol.Runtime.ScriptId): Bindings.DebuggerWorkspaceBinding.DebuggerSourceMapping {\n  const sdkLocation = new SDK.DebuggerModel.Location(debuggerModel, scriptId, 13);\n  const uiLocation = new Workspace.UISourceCode.UILocation(uiSourceCode, uiLineNumber);\n  const mapping: Bindings.DebuggerWorkspaceBinding.DebuggerSourceMapping = {\n    rawLocationToUILocation: (_: SDK.DebuggerModel.Location) => uiLocation,\n    uiLocationToRawLocations:\n        (_uiSourceCode: Workspace.UISourceCode.UISourceCode, _lineNumber: number,\n         _columnNumber?: number) => [sdkLocation],\n    uiLocationRangeToRawLocationRanges:\n        (_uiSourceCode: Workspace.UISourceCode.UISourceCode, _textRange: TextUtils.TextRange.TextRange) => {\n          throw new Error('Not implemented');\n        },\n  };\n  return mapping;\n}\n"]}